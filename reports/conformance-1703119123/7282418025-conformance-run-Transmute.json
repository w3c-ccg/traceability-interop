{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c7f8ac37-8802-4fa1-9a17-68f2d7d191a8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e1196e38-d53c-4e16-98aa-e380552dba24",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "659d308a-d0c1-4063-89ef-578557778786",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "84241534-83eb-44bf-9f00-b93eefc27e1c"
                }
              }
            ]
          },
          {
            "id": "7cc67b64-f3b7-4601-bcb6-fd8789a78447",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "736360fc-3a72-480d-853a-d1e234961770",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c8ab25ef-28b2-48fe-8508-a5b51fdee8f3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "43f3ece1-74f2-42bb-b6a4-1c39302f7b83",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e892ea0c-1461-4231-b212-f285a6b0cdbf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa50f207-9254-4002-b05e-1d088d6c5803",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a3b9f80-57c1-4467-9af0-9c32cd932e19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffc7736f-e823-4647-85c8-267713237204"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b308498-6348-4960-9f4b-69cfa0d2e0d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d1c00f3-b6b8-4780-a740-22db4e198230"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0dccfd77-b96e-4cab-980b-aaa45a274d68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15db1886-1e75-46bc-ae08-83879511173e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c649af7-621c-4d33-87fa-77564cc6811f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "abf7e82d-9f86-4da8-b087-48d6dba7f5d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5288882-cfb8-40b5-8f3f-e54c9ddc2960",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3ef22f8-cc0a-4763-be56-bb538744e654"
            }
          }
        ]
      },
      {
        "id": "e63c29b6-3bb9-4907-80f1-73b1539fa625",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a4509550-865b-4ed2-82f9-f95f0e863adb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d52e693e-b8a1-4ddc-b78a-e3fd2a56d7dd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a5f74b6-a034-4daa-98af-442d154538d2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fea9d5-2b23-4a38-8d66-917393a2ded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32dfb8a1-b191-44ca-b0e9-f5d35fad2366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace1e79d-da5b-401b-b308-69fa74abab5f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119b97c4-2260-49c0-8205-16b7026e0b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f21878d6-a50b-4e50-b8a3-2530a461f2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17125001-bced-43b6-96eb-5f8473154d97",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f07e82-f070-469a-9271-342a7b0f51ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e9dac81-284c-47d7-9e22-0802e5402b8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd645c2b-8577-4b77-9c72-51d0e19f9bb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7accc831-e86b-42c2-9a88-c89e56fb6410",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81efef70-249f-413e-b14b-fa3b4a7a25d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a798a43f-c66c-48a2-8c11-a33ef14aea52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67955abe-0309-4631-b320-439ff70c5939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b466d3b7-167c-4776-a8ba-321363b75f6e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ad581d60-1219-4cc4-a5c3-9fed4345764a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d8f3bda-aa22-48de-bf49-d2fa9c7a1f12",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c808116f-d460-4422-85d5-34e9a8a31ed1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0b1121fc-2ec5-40f8-a1a5-277e85731944"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb38638b-4c3b-47c4-be42-921c5b593047",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bf673fbe-bffb-406f-aaa3-303bcc0da3e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6fb2cab-e793-435b-8556-e333a6c5ae8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94acd66f-1eaf-4080-b5c3-1e5e04aee4d9"
            }
          }
        ]
      },
      {
        "id": "7c021ac3-eea4-4fa7-9595-60f4157ad341",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4395ff52-aad8-4877-a60e-34bfab596592",
            "name": "Negative Testing",
            "item": [
              {
                "id": "051df972-7204-418e-9cba-831120f2d4da",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d3308d72-f118-4973-83ca-63e987ccb1a3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bab084-7244-44bf-a460-d35fe09f4296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eea39cc-4ba9-4980-bc1e-0378564adebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbf6e3e-0c1c-4e50-bbe9-26a834625a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5c5f9c4-1dcc-44ad-9685-524f55082ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4c979f-aeda-4fb6-89ce-2a1eb3a70311",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a888960-b910-49e8-9a8b-7f4773c75713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b77501a-ddd7-434a-9b92-fb3715794425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed4d8f3-c17d-459e-96b3-17b4b9f81fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e252f3dc-483f-448d-abf8-902f9b0a4aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ba8386-082b-49fb-9550-e9574976e7dc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831f43f3-d539-440b-b304-e381ae32ad26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d45c928-009a-4a41-9435-ff8f6d2069cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253fd116-08f7-4534-83c4-d0f905fc656d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66b9e117-83b7-4d1e-951f-3359ddc12156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5020210d-43ff-4e14-8a61-335a6b1de45b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ec465e-ab79-4ec8-a4af-8b35aedfdf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cdec42-9ece-4db6-bed7-ed3aad86aae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2986c2c5-4663-47de-a31d-5e66c40b747c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbee930a-0397-4c44-8f16-de881097d090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625ba5b4-b09a-4e5e-9149-08a84c5b81ab",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2f2c39-f143-4f88-914f-c860cea691be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4df05e3-b88f-44b2-bc6e-8842c59d4353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dadd6e5-d260-4531-b7ea-1e89862c6852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f40ba2fd-59da-4c3f-95b1-536c7a30b9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc60c4b-aaf5-4169-82bf-69f027eb3805",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030fb865-f341-48e6-a1d3-259bf8f3c507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776f4276-4af9-47d2-a4cd-ad3a6bb93bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebe85b9-0f66-4d6e-b774-a12ff9c280a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "755ca54a-8e7b-4f54-aae7-912b44075188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf3db6c-dcd6-48d9-8ee8-d3c019cad80b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adfdb7c-17a7-4b2d-b053-3d0d02d988eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a21d56-66af-429e-a726-25cffa9384cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cc9c50-a36f-4ba8-81a5-502ab51bce6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7304f31-790b-4a2a-bc28-b495b1f0c886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4f5de2-e9c8-4ed0-ba17-4686c50b2ea1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cf9096-52e6-4e71-bee5-114d565769ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2372e409-1afe-4b65-abca-6a5e8c5db547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99d8829-e5e7-48f3-a65d-23b7684f67a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bca2ec5-78c0-46fd-8e7a-dc5ec6879c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bfe729-d1da-4b7f-b251-0a78da95c59d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e75cd9-73f4-410b-b211-b32f6def1e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46c8606-ed63-4ba4-9fc0-a2f9256cd703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b84cc70-869c-4de5-be4f-1dc9d7e78f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99b62ce4-b61a-406d-9ce2-25595f712683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a71067-ee25-4c2f-a48b-99365215e3aa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc0ab80-6dee-49de-938b-62802f9f885e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960f6bc7-7310-4a35-a2c7-caa6b3253e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235b70ee-f00a-43e0-831f-923ca6713484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f70e24e7-ce53-4658-a638-5bc24e2e882d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0126dd8-2011-4857-9d9f-2b0cac111926",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdf63b7-987c-4d0b-a847-413a7017af1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9753c81b-b62f-4a5d-bcb2-318f813e7a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6493987e-d1b7-4a85-9fb0-f3daa055518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e127d0f6-733f-426a-9339-2487da74f1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a302841-8d3f-462b-bf10-163dc17b3675",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7005cd58-f10b-48e2-8fba-91ad6b485f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678bc69c-34a2-4f60-8258-53bbae5f1348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4fec02-eed0-472e-a332-15595263a246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56af27f4-425f-46fe-8578-fb0c02598053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dbc7ef-ff71-4d12-bf67-79a39f7c0acd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59e6078-a284-4a73-903f-99075af4c1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5c288c-4a59-4960-963a-0d1ef68cc78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92caa04-1ed7-47c4-864f-09ebf73e5c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54c4cab5-250f-4da9-8ed5-271e8fbe317e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb1a722-319c-4c05-9587-b0d2b3fbfa80",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e53f0e0-6af1-4f34-b3d8-465d9f94400e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac336bad-c5bc-4c50-9581-8fef353ead29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701ff1d7-d4e2-46a5-ab32-12fa68f192a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7661bbc-7d73-455e-8c41-ab43ff2aec4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e89cc4-2763-40bf-bb4f-d55f17cd40f3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b7e67a-c4d3-42b0-b948-0b057df12440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d4f0c1-9378-453b-9096-b13f56417326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0375f01-77cf-4f0c-858b-3fb671490cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1427dcf-90d4-4660-9ee9-4d43953edce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7144daae-8273-44df-9c90-c1ec16ba9dd7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690a6d9a-450c-4810-a607-6edf004ca558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55c673c-58c8-4cee-a727-deb9e148b734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09708197-731d-4ad1-a51b-5b50442b3d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d10fd1d9-6a18-40a2-803c-d6a4061ebea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1c2e2d-7a54-4b43-9715-9bb8b57080be",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e205f57-7ed5-47be-bbc2-38759ad77a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747dae0e-b34d-4c69-a2df-9866c4c3ec83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39eb84d3-62d9-4827-a4bd-773a6f849435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "437b04e0-ec8e-4ee7-bb68-02f1c8bc5360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411cce4b-9a24-462f-bb0e-1ca6fc03c6ea",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722ac4f9-d467-47df-ac67-057cdb8081f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279be420-3500-4689-9dca-2a0a9f49548c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fc296a-f8c3-4060-8298-526a981d7339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "896e63b7-2b19-4ad0-8d61-b948bfbcd4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350520f8-5cb7-4352-94fe-add516aaf793",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c12a6e3-b4c5-476c-9fe9-ebf83469cab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6709becf-2a0e-44bd-86a3-758b83d7ca1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea2dd94-89b2-47dc-acbb-bc91c9e39911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92aa3d0-92e8-44b8-b739-49b0cddcb8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3be824-c1c0-41d5-b569-1a155b6d481b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b656fae4-fa3a-4a28-839c-3fee47d4cf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef30a45-a268-43c7-abaa-f45ad36fdc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f77faea-c724-4702-9c0f-cdac2c025930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad54484-d2fb-4313-a243-fd2154034a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1a7f9a-9afd-40e6-a5c3-04bd56cd1599",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e35edf-2265-4a89-b60f-4f101f090768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83011b75-a465-430f-bcdf-e1e4de33804d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2f07b0-dbe7-4ade-9947-fa4c01867462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5269962-dcc2-43ef-a371-087ab47eb8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00992ec-383e-4e19-8a35-1df453fba8aa",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842ba823-75e8-4e98-b7e9-96af01e09b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242adead-5d2d-49e7-bf4e-603654eb2898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba02edf-7f65-4585-91c1-ab1787b64261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38b83d66-2541-48a5-aaa1-99cddb676c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433f249b-6b3e-4289-ba31-6b932a81af53",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9603e95b-af2f-41c0-936a-fb34fe0dafd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82d8c3f-c9ed-481e-9675-fdbf62e4ad0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d843f49-1b85-4db6-a45f-2d01190b5332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0034b6-38fc-4470-976a-9d4dbf5afd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d4826d-471a-4c09-9dab-888d4266d629",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bf2599-e9e0-4b85-9587-48bc31f3e863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d388a2cc-3ef6-438c-9d8e-1b41d6661299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e359f0-5fdf-49b0-bc2f-9fd2e0a5cd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6929519a-7632-4693-a7f2-e7bf8c136a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5000cd3a-342d-477d-8066-245698e25373",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e76fa4-1541-41ae-bb2a-e6297a8784db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bbcc56-18b0-4380-824e-2a79f3a7c7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09704e4-11e5-45d0-bf53-812be7fe9eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86ea799e-6ca7-48e4-8525-de29f844eccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a825b7-d67b-4852-884f-20946e11f599",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac51215-fe9b-4a6d-9364-db601e253d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84587a0c-cd09-414f-bd3e-76d75ee32f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0600d71-963d-434b-9044-8e5fe0c34a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52436ab9-da9e-4238-98bc-d6689a1907d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b217192-e8c6-4ec9-9fb6-945a05071d63",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7a59f3-f23e-4248-8443-006d58a79116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8159f2-b99b-4368-bdd5-06d8a503600e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89bee71-1dce-4b36-a4bf-e297f7c612ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ab307a-4955-44cf-99c6-773a3b553a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fbbe16-b539-4faa-a14a-fab1d50eb74b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2717bad8-cb95-4971-94b4-066d151770b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9950dd-95ee-4fe9-b2a9-3e33ed4a4b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7200111-a63e-4b51-8297-47bf7f28b7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53e5c3bb-ddc2-4a2f-896c-a0d5fe1a3632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb92447-156a-4512-8117-aaa98ec49ea3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1d48d5-5e65-4d61-b5a0-eee1e0845041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662ef161-0dd4-442a-9d74-381da34ea684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffcaf32-1bdf-41d4-a29d-c06eb8114167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7cd1e1-e06f-475f-8e80-6bd4e227cf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f1b47f-af88-406a-b675-108ee462a90b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82faab66-2115-4daf-b63f-862ed845eb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df824614-e66c-44b1-a1ec-8cb70c8be9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c272a0ba-cd0a-42a2-b860-1fe2e7a21999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0727c571-56d0-4ec2-a05e-de5febcccc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a52359-1079-41af-910c-1fff4642d410",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd4bf3c-e706-45e1-a324-4b9af2fd1b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5052eadb-9e0b-4604-8bc8-36a56664e621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eeb20ea-2ed0-4819-9daf-d85f974bd68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f00ff18-ab30-44fc-8671-1edb43ba5ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a77049c-dd8d-405c-b3cf-264c3b8644ac",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f7a588-b59f-4110-8cbe-7a1a9b0f7ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a029bc-4709-48d7-8886-9baaf9138d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0d9a0a-b96f-477d-b4cc-a57d7ce73310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26716fb6-c62e-4cd1-873c-953e3bb595df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e188b1b-5f43-454a-9ba5-b46083fc34b4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fa0986-70fc-4c65-84e0-25bebcaae44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1fb40f-37fe-4b5d-8d17-baad5652f71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0bf5e5-42f4-4de8-a1bb-02b247a6b8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ced07b9-39b1-4566-b47f-3d767c2eebde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04daa39-6d79-480e-9283-28ba3f8dd406",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11ea0d9-658c-4c4d-8df6-f4f2a003627b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bcde7d-2b9b-43d9-befd-f4d1b265cf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed873c3e-7f75-45ba-9e8b-a086d8409298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f21c6166-5109-4e93-8792-4e13ddf15f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26a59eb-50ae-4210-a947-e043a5c4a863",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1d164e-8349-4a30-b3f1-6fd8d555b401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a3b2a8-de9f-4120-815d-bf5089facc01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a193a3ab-9acb-4972-a835-02225f1d7939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9d819a17-2e15-4b4e-aa5c-9acf8c0b78eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6081d0-7bba-4132-89a0-ae7e7ec134ac",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6fe5d3-63b5-4e44-9314-ab2b49e443b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e8b4454-87f0-42eb-9c1d-a1c330c40c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8850723f-2bc3-4122-9e2a-aaa0299ef6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db64beb5-8912-49e6-b36e-22549ee804b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5fc0ec-820b-4edf-b78c-b0600e7fd46a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a6c7fe-d8a5-45a4-9db7-74ac7e901e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0e3f69-be14-4706-b12f-0a411ae88193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3f14f9-2b4b-4e2d-861e-5cf68db9ed03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c41f11b-5aa1-48d9-b7ad-79f234e3048f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723946e1-6f93-4d44-8c49-b9233882599a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5143b844-1842-475f-9615-bfb038e8ab87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f3b0c5-7b00-4fd7-addd-0cd527314dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63ce459-0140-48a7-b13b-6311e8818266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "78394a16-c2c3-4977-b724-ef481017eb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794f225f-c402-4aad-aba8-6aff21ec2da3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5311d8b8-c2b9-4b43-9a3f-1bc98b3f71ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1071a8fd-e60c-4fc5-b36c-b9cac4a31902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c65070-a07e-4d63-b522-549bc2cae304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d00967c-c939-4e35-8f0d-970ba46249b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97cec9f-6882-417f-a3c0-cd89e85a5aa8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5246a7-bcba-49bc-afc5-b21f79051dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72327540-063b-4cde-803f-de47865e4148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bb0be6-d71a-44a6-bc75-cb18e93cb572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87cb24a2-6cb8-474d-b690-dcd0ff8cee8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ffbbae-1e98-4b52-8617-61f102009215",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9de8b5-bf68-43dc-9d7a-af6c01fd77ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a764ae-5024-4532-85bd-46ecfa3c2cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e969a0d4-4af4-47ad-ba15-db34fdbf34ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3417818f-a2f4-4120-8315-0b8efd95e3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd15b98f-56b1-43b1-ba9f-e04885b7b3d9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64069b33-1a40-49ef-a853-0b98e3e8caca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157dfa6c-f02e-4b71-96a5-fe4612e2cfb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a69df1-59ce-454d-89fe-6eaef7155b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "df5dc4be-1ccf-42a4-b826-26116c2d2739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57cbad7-31d4-4ea0-8376-316cbb7e3afa",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dde75d-7145-480d-94aa-5a9aaeb5c301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42af8d4-f815-4b6d-8d35-8c9789a8af5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a9c06c-9687-4cb9-ad6b-a15b6f081d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ffa7ff-22e4-40c2-b43a-aeeb7f34117c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49758f7f-8c4e-4312-a16c-9474a46b4bf1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496267d2-e4d6-454b-ade0-ea16fa18c5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51aff152-42c4-4d35-affe-4f784dfebe04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a6e893-aea9-4180-9481-bceffab30df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b40b500-af19-41b3-ba72-41a8a206da8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ffe223-5a2e-4665-b563-962ce19159f4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accb9cdb-afab-4871-884d-d92f1e0bc534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6e0ec0-7954-4f83-9691-62b503247b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505787e5-e2e6-475d-ae72-c9ff356f7737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b825149b-d30f-44f5-a19f-b9426edb4667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b4ae46-6e5e-41b7-b7b9-16154c9ea43a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954a43a2-ae84-4b72-8fa5-ffbdf596f161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19e8d61-586d-4ce1-b728-d813f22385e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581c73b-7ae8-455b-a487-57df068b8c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ce66c0-35d9-4d36-9028-6f659e8e1101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0259df0-e493-4448-8e95-ef947511b058",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d3c14e-ff25-49f4-8410-4190dc8b8feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00a7e84-e699-4c7b-9022-5f10036ad0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b109afba-dffe-4580-a8e6-8c2469866810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6f5ba8-02ed-438e-8d37-5d301c237808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de2332f-0b1a-4fd9-ad04-349038194152",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9b70ba-c08d-4faf-9f2b-e0baa89b29aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dd2fca-95c7-469c-a7f6-797e90a3b6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee95436-01c8-4ca8-afd6-def587a2dcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cc533c-b7dc-4865-a11c-a1f459f7d301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f85e146-84b4-43a4-99eb-357f75ff1b7f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6df6b80-bbca-4cfb-b3ca-73b3c609bba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1952aa67-bade-4e11-8b37-cbbe0bb56341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba04bbed-24ec-4a29-9b9a-4254d17d1c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b48992-f4c3-480b-b4db-031fa1b2f0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f13b550-76c4-4541-9ee1-bd0d488a9fe6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06709f3d-2204-4810-8f4f-0fee50852efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d1b7b0-8e65-4d10-83ee-b5187fcbe4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd31a19-dc01-403c-bc5b-e1b20e8f3edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b43f203-35e7-425d-8d10-23b03ad25134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461eae34-f0d7-4450-888d-47b5e0311522",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bf28bc-d51e-4a9d-a2da-33435333d081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5a9efc-81cc-4c66-9c06-f30a63d6a99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9fb3c2-261a-4850-94f9-c2b666b142ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e81233ab-f545-4a1f-86e0-76ba1ceada5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dae6f21-92df-4b91-8adc-17b4f68e91a1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525402da-7dd1-4371-87eb-6340eaadbc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cef0170-0bd7-409f-bf5e-4610a0f9aeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001ee09b-be46-4dc4-b9d0-a912f72e74ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5de8ef9d-12d1-4423-b631-c9099e82f6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a149c29-2d49-43db-ba31-6f3355ba1e71",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca834f61-347d-407d-b25b-80522a636156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca945cd-7d82-407f-a77b-a5a8d8777aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8664f821-8c7f-4349-ad75-ace8101ab708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a23ce8-85ce-4a13-a952-ad4fa4053238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ee6d68-8a09-47f7-aa43-aaa810e6238c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21de9c89-1345-42a1-9572-5d77fa216b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6092e76f-4e4f-4092-8593-72b736f3595b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfe81fb-50d3-4b51-8a37-c572249d2be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a986b908-83e7-4fff-a8ad-6c91563e8d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b789b5e-624d-4c08-8560-31c220790a74",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7622799-751a-4368-9d4c-b37ac99c0b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8edeacf-3da5-45b6-a7a6-24b34edb0f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd87af57-d3dc-46f1-826e-944ef3ec42fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "698a186b-ee61-49ed-8eeb-027b880b553d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2820cb-b892-4415-9996-08cb2e878c26",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14ee50c-13cf-4dde-b672-57990564144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352265fb-8751-404e-aa35-99eb49123dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbb2599-5bad-4093-bfad-ff9e8d8a74bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "66d02437-ab60-449f-9e45-750ec3683af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612caf46-0416-47dd-8d48-fdab14fdd65d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19051d80-2342-4037-95c3-55e2a7a5feb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e057671a-0101-477c-8aca-ca27275a5f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb96be12-ca1a-406a-bcaf-2e4b2aa3c2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9efc4d-73d6-43d9-a2c9-6a3ef4e4ccb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32992fe7-19ca-46b8-a02a-ed770319e2c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c6124d-5efa-4c52-986c-0202858bfeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edebe10-bd7e-42d6-ae00-32d3f3660e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf215e9b-8c7b-4a50-b4c3-80a0d373e6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0e5b41-5d17-43ee-822e-a42ad7eeffd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11206c1-888d-443e-8a1a-53b931936274",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6693b351-c4b0-4eae-830e-250bd4f41ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda96bd4-f0c7-498c-88fc-b6f2e5898997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe9ea86-3d63-47ff-8bd1-df1697049c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "616fc945-9726-4e3b-a9bc-b5c7a06de4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9e42b9-1153-4077-9cc3-e4520a81127d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f44280-3a08-4c9a-b7c0-e935c25bb153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee93f4d-e435-433b-ba88-6da8cfec6bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fa5cfc-c8cf-40f5-9361-ec3346965a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92b39db4-090a-44f8-a6c0-201b60af554f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a236ce6-d4a8-4a4f-bff4-7635b07651ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a29b029-33a7-4f77-8e33-0161163a609b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f96d4b-9872-40c0-9025-15b0589825e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11e2d61-fcfb-471b-a3e5-a166c32d91e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "40a326eb-c479-4ec1-a37d-d34f109b162c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8f7038-1a15-4bfd-a861-fa4663a29e24",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404d7325-0225-4369-8f7f-d7e86c79ccbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51eff864-48f1-4da7-9199-8ea2b619a1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ed2706-8519-4f52-9ff3-086c18c10a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "93a7fc39-b0eb-4253-bb0e-ff0f86f04c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78916ac-cd20-47f2-b662-100b130de9a3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af54a3cd-429b-4891-9409-baf6530c1ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b737675-5ad8-445e-8073-3813b44a70a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae87db3-4bf8-417a-ac5c-cc3ee7095f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fdd411-12bb-404b-b448-f2fd13361bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048db127-5d56-4f7f-80cb-161469c54358",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8921e3-fa07-46b2-af3d-d0b138d6b44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05cd3e6-43fc-41de-ba86-921b3c60ea20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4501b6-15e6-4613-b83b-2cc3f7a61334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf0c0b1-14f9-4ef0-82fd-7b604bb0dc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bbf7db-2ae7-4308-8360-3b2496957ea3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba0d5fd-be06-43fd-ac45-729e3e1624cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3561a1c4-36e3-43c6-bddd-dbc6961d5d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda3bc35-f62c-42ff-9526-5d6b3e961b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab94b439-06be-4b42-8837-cd41e482328b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a09c4f-60dc-455b-85ee-004395aff66d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21a77e0-df04-48b1-81ec-bc74bbaaf7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4687c596-1733-45fd-9f46-bfff0002e4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e5d9fd-9111-44b7-a42e-b4a001585558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1cebc26-5361-4146-962d-6ae644276b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b26f2f6-a92b-4839-bf75-2bf9fa79e03a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe8b61e-e8e3-416f-b6aa-6e141e1849a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfea1118-bc08-405e-a7a2-31590b7d9cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038dd625-252a-4bea-8c15-67cdeb393bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09064cd3-e3af-48b3-990f-aaea408a4944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bcb2e4-b6ba-4682-b832-bc116a491d3f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9517ecd-00a6-4577-ab4b-79a4a1408c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e0f877-f436-42cd-99cd-973cb38da286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8095a09e-7509-44d5-8f96-c48847fa6d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "16396972-03a8-47fd-a699-d235c2fcb016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ecc5a4-5e6f-44fb-b036-9799852e4e3e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b3585a-d308-4bda-976c-a7a72bbc9464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8adfc2-a12c-4922-af2b-a9e00b809214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50038d8f-a24e-482b-bb37-e8e735095b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92013b95-0fa4-4cb9-a1f4-01333f606ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee825f6-6908-47d5-9102-93c5ee22c7ab",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350cc1b1-286a-4d68-9f37-4cf55dd26736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38200fec-97e0-4492-b1fe-d58a308d50f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7eb6b97-15fd-450c-826d-c3e4226b427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b18cf59-fbdc-4e3d-90a4-e34ea34de4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378ccc2b-2fe2-4b11-aa43-0e394a468e90",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44751f8-6230-4717-8554-0c5d2f769081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a941e1fa-b401-4f71-bac0-f7f2b4e38b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d415bd-1456-4bde-98cf-169319f98260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d4880b-8c87-4ade-ae52-85b176fcd77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca466e6-722d-4b36-911f-49fc141c2133",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498c7079-3c06-4ded-a725-dfccb6c1fed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753dfeeb-8018-4895-a6cc-1156c38ed8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc2e5f2-fe0c-4b44-a45b-b5851278a938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9273c189-02e3-43ea-ab95-58ac76cc50ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1c732c-885a-4e09-9edf-14313968eb3a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2f4426-db0c-4540-ab28-7531b22eb90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec29593c-217b-4f43-9dc2-6e69bf349d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d573dd-3679-4dfb-99a9-1a760e008e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b9d02c-0f10-4e52-9a04-5ee8bf87e4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d363808-6dbd-42d4-ab6a-8525d6e48da7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01859e2a-87c4-4d72-b2cb-8d1be9581757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45b98cb-8b6e-461b-a81d-cf6637774365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c65aff-bfa7-442d-b513-691b9150ef76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99c3a397-8489-4a46-8020-4bea2c806a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b6dcec-300a-4f08-b4a8-244327bbafbd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a317a98-f8ce-4f88-b690-8d8fc5760194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac50689d-b0dc-48e9-9ba2-8f97fbc8ec7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1d06b3-9fa1-464c-9b2c-3bd6ef9e5b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a95622-e466-4dbc-a473-b351d28623fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5a8fdb-54e0-4caf-8bae-01f70c0a24d3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2497c0-e3b4-4ac2-acd7-0995a71d7d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4363470-84b4-48fa-801c-c1f584679358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a55387-7362-4137-80e5-5d3c3e73ea27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b08932f-82ec-4b84-93c8-deb482b643a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20a9bcf-aab7-4b4b-a69d-8d2f229a95c3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c58338c-6bc7-44b4-aa8b-54b76593a73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758e6ad9-fd0f-4606-9a32-38f82c86d188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1f5d25-4d7c-4fa0-a3e4-ce457190c457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cc81c1-f031-45de-b0ea-505e730c95a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f41e830-e58c-4190-922e-3e46c6895982",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49803f05-c2b5-427d-bac4-40cf823335e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57d39cd-6734-4417-ad9c-a16f3f191422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44be6342-4b62-43f2-b782-72d86836e95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b018380-7a73-4a84-9d21-d69f8272a49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924c1f4d-9535-466f-964f-564a8d9f8527",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b722bde-52d4-4405-b8ae-8d6619e8638d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4d93b2-7aab-4308-9b5a-c7f000d8daec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b1fc15-4f9a-4f2b-894f-f2a4749a8708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29659a34-79f4-4112-87f4-cc08068dcbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4e1a43-0695-4ea0-acce-013104e2eda6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d03f69a-5aa4-4ab1-a1e0-72788541fbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8365d4-13e5-476e-ad89-c85a7cdd1e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7a53b0-8bfe-49bd-8f1a-47828907793a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fda9536c-5ed2-47f1-8506-fa08cba28781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bb46ba-6b97-43f9-8014-78d37a24c776",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74b7eee-fd76-4704-9e05-1adbe8d7ac18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf038f0-4aa6-4080-be0d-5dc08732ba82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd6e866-ffb9-4db9-99b4-98d1f27af484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b80532b-1625-4058-bb07-699f228a288a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250f1028-0232-48d3-a95e-d0b45080d5e3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5e3805-c51f-4f68-a00b-c9f07fdc5031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139a65be-ae6c-46b8-b7f9-0fee9b3a757b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988c8a3b-70bb-465e-b76b-54dbfc9c5e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58fce71b-8923-4a76-be36-352ec05a6e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ee770c-a798-41bb-8668-8e60aca1e5de",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cbc680-cad4-4a70-9053-c591ee1bd72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3dfebe-58ca-4f7a-a3d0-d72127adbe12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2baae09f-6af6-4651-a881-a559375cc8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69a7c297-61f5-4eac-b55b-b026309e13b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21322d7b-b832-40c0-afb9-294827b0f97e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4152503-6098-4392-9b1d-2c5c3843da64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09fafb6-bd79-4f7e-bb4d-563cc66455f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210081f5-eb55-4c71-915d-76c9641d1a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9539eb57-0947-446e-a215-eb85a92b365e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11496fc-b0cf-49dd-a7d0-209b65064856",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03f7d99-8345-47f6-9ecd-0fb642bcbf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead59a03-9b31-409f-af18-79c020a41cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364bcf38-7284-422d-b6e3-cdbb09f514fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c84b73ff-8dc4-42f7-b128-920acfb63e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d25a73a-f7e5-4a99-a32a-a6a09e4e46e6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da83956-5ec5-4d3e-8a0a-104dbde390d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8269b838-b30e-4116-af22-982ee21a97e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973448af-d288-4d0c-8e05-c00821a6c17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "341437cd-fafe-4781-9250-be808666bd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8522f5-2ce8-40e7-873e-40ddc05da0f5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b5662f-9e51-4471-86cd-cab42b8709bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b499b3b6-1921-4878-81d8-ad87e3cab538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf99d8b-d119-480d-a66c-9ae9605c32dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e49babf2-cab1-4b75-8a5a-6d538d04409c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e24a87-990f-4215-bf01-45fc4f480ebe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598bb87e-cc29-4b3d-a7e8-379ed08a9ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd86433-fe21-4eb1-ad26-a692ecb0c70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc63c719-51fe-4da5-8f38-c8696ab3f103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f01e8b3b-1f67-40b4-8fef-92ece11d4279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad1f405-7e97-4065-b527-c5cbf9bcbbfe",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eec30d-4873-402b-915a-d06e82285c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc05cfea-8cbc-4856-93d8-e845ac10187d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c9bbeb-d5d1-437c-9317-7efafcd9bd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4aad0f-c13a-4388-9b9c-695ec2e55ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec28eafe-b979-4270-9e5e-771f02d30a8c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75e7f18-f2da-4a40-878b-ab7fe97e1e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaee4eb-70be-4abc-be32-69d32ad30f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdfb515-c0aa-4641-8111-a1a42a20f4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dde2263-86c8-49da-bccf-ddd8fe7e9f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c48b7c-74c1-41b3-b1f8-6bf30c94f492",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263921cc-a691-401a-9caa-28b8b71046ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcea419-dc2a-42cc-a5df-726997031445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93e755d-6307-4f75-ae2c-7b86e95fdb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d13af2ce-4195-4e76-9c05-1ea00043a987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac8faeb-3015-42f6-aa44-c1e24834f645",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1989901-6b35-40ac-9d59-cfc2ef3e2ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cffcfa11-258c-4950-aec8-67e9b4e653b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afef566e-0396-4cad-aa29-8dbd433f1c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "391eb882-8283-463d-a54b-6043b3995d6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9709275-43bc-44bf-a0cd-df365e2307a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed01da2c-d0a0-4484-b10e-e48ad362aeef",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b414c465-0ad3-4796-b8d6-3919d467d47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d89d4ba-d1fe-439e-8718-aee63dc00bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cceadc5d-6e74-4185-b898-227ac2c4ce1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dacc8b3f-e8d6-4dc5-ad6f-61695cbcbbd5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6adb780-0347-4376-8a76-05ac709faa03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba4bab2b-a86b-4784-a482-13050ebe7226"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a2646db-9e73-4db1-af0b-b809014fecab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "919070d9-b9c7-4888-b77e-7a5cf70b127d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86288a45-3950-413c-a241-93d136cf0716",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33746696-0c54-4361-bd5c-332017db2fc4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a22fa35e-c02a-49c2-ac67-13dbf5d4997e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c79ca1ee-9b79-44d8-9e4e-a744aa734285"
                }
              }
            ]
          },
          {
            "id": "7a1b1b35-16f4-47cb-b9a7-91aab6c96393",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f04122f9-3962-471d-b35f-7f1c96dc4f8a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2d08d91c-7636-43ce-a288-757cfe6b186a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712d2265-6945-4b81-83f7-a9380a3ca84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f0f32857-d7ed-4ab0-b610-aa282daffe00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c832598b-ad58-40fe-b2e6-98152749a610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f19210b-64a2-4fa0-814d-11c136422170"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca4d2b12-80f3-405d-9313-bd5a07578222",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e217d955-a6a8-4229-81ec-cb6c05e700c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2247e5e4-14b6-4d06-9870-a990f267ca24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6029f5eb-7843-4fa0-a3bc-9d33817f6acf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31532e85-b812-4ee2-b8b2-dcd788601794"
                    }
                  }
                ]
              },
              {
                "id": "71a3b800-5141-4994-bfdb-4d9496df4d72",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f3a07da-3478-4362-98a3-ee3043eaf80a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe3ff6c8-fade-443e-8caf-489af1f5ff27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c127acf7-c057-4498-991c-fbf6eb65a574",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5ebd3da-4030-455a-8220-330573eb9454"
                    }
                  }
                ]
              },
              {
                "id": "78036408-764a-470e-a722-e028a79a3693",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5ec06ee-7a12-4952-8b17-0e7212b7a94d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5badf981-e56a-4d6e-8c6b-500364e62d70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fefc121-4213-41f5-bcae-4fb0dc10db66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f256911c-340d-48b2-a469-9be873e08de3"
                    }
                  }
                ]
              },
              {
                "id": "aed0e3fe-7f57-4fd3-aede-25d4fb6e8f5f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51926f99-d6da-40fb-8468-de4b503864a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d93644c2-2dc4-4ecb-a406-507f862ed519"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d7a2609-6da7-4e4c-a1c4-a92883ea2d6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b26bbf71-59e9-4953-b55b-feaf9bb8ace5"
                    }
                  }
                ]
              },
              {
                "id": "8f6462be-dd03-4d92-893a-2087d3b97b39",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb1c75ac-8e0f-4491-b4e5-1a4e564b7bc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cac3a4a0-6b91-4ed8-b174-0a2ab6091fca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa603862-877c-443b-97ab-ed4dc2b9aa9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "eb9ad909-7cec-4720-9617-dea62230b3f9"
                    }
                  }
                ]
              },
              {
                "id": "38e0baf4-62ec-4839-99a7-cb9ff0599cf3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46dfdc15-5266-4da9-ac7e-c17d37e056c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "169b3f74-b2fc-4134-9675-2f57be955cf6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afbd3818-77fb-45a7-95da-d6da7128eacc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04be2fa4-3f4a-4590-bd41-160b2a6e3d4e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f82a8519-6c37-4c7f-acc5-1b97ecdaf4d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9fb59ca-1246-45df-8662-0d9a706a1455"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ced83c46-ec6e-42e2-a36e-c826242f2db2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61c1f120-391f-4927-9b8f-c2e821a95f02"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b005c2d3-e4bf-42f5-ac4a-e3edabd26e46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "26ab4378-6452-4598-981a-b2487916e426"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1f5183b-bc75-4c50-9353-37e8169e990c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "399668ab-ca68-4aa4-aadb-46c0b8d81141"
            }
          }
        ]
      },
      {
        "id": "9d57c642-1e6b-46c9-b5e2-07269412929b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0c38b5e8-bffc-494e-b438-189a4ba32269",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b208887-6ab3-4ca5-a5cd-6f49cc22cc99",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9067008d-2efc-4abd-bdc2-4a9918058227",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2facb0-f4a3-452c-a561-33b8345832ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f0349d-fcdb-4532-b520-d4598fefe9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a306565-a45c-42aa-ad1b-db6b2ca3c76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3744d8-9896-450c-acb7-4467647f0fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4990af-3e4b-4162-aa99-099d8e1881d4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07aa0b32-c1f0-4fca-9083-4a4bf7cfca47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a7e29b-d8de-436a-b303-fbb57a26d284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c67e4c-716d-464a-8dde-1706848ae053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eca40f2-2c9b-4684-a152-9b9765e4e95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe9fbdb-755e-43fd-a3f6-c33a265817f0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec973d5-a8c2-4940-8183-4d79a7c39d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1cdd2e-26e2-4b06-8d98-0156aece9166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391cb99c-d3b5-4b83-a03e-958099f24f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93f2f2ff-fe6a-4ceb-ad76-13bfbc31f051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535c4a99-0e0e-4790-8c66-625b2622d6c7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1a7f8e-d156-4226-96cd-4edaa84b29c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8682b725-e91a-4917-b0e9-52b9a1b14b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009ded2b-f0de-44dd-8307-721441f20528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e66596b-04cc-469f-9d7a-77aca6d4b872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a140f0b0-e2f4-4225-be89-0664c2d17aac",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cdd4ed-23ab-47c6-bf11-533060bf8854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f01dac-8619-404b-baa8-f8f69c01c847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c4cff3-1cd2-4432-b274-efa2ae2a54b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19c86e8f-cd2f-4d53-aa21-31eef2c896aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db00725-64df-4393-9b22-a2e67f9b3920",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1903e1f5-05ac-47c3-a9cf-d8467e98db23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2833f92-3a49-48ae-98a3-26a34cc8a82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08057d51-3251-4720-9e4b-56d3fa707eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b790766d-a98d-4c2f-a74b-33b1737cd725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19bbfbd-9cf8-4980-a14e-94bd30354ebe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c549a88e-d2da-4a85-b438-42ab8d1eec63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7633b621-8249-4dc5-933e-1832af6e31ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77d6ac9-805c-4705-81e5-ada929e03ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a182fd64-9a29-4ca0-a577-ee1bc5592ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df68ad4-497e-4d43-915f-b7bcf77fca8e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed33b198-4f4f-4c53-a83e-d65c6d0f4b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16905450-ada7-4f12-9167-f33574e3d7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3119f270-b7a7-4d71-a914-48029def5dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfe721a-995b-4ecb-ade9-b5a1bfbb2dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab80d6c0-951c-4796-ad3e-a4dbc46dab3c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5021a8c-3485-4d84-b82f-90ef79302335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce12700c-23ec-4e32-a45d-ed8da4bb6205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217716dd-0fa1-49e3-84e9-01274a38fe24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb428e52-8a62-4a86-bb47-0471746ba176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7733fd-c2d0-4a22-86b1-ec32f7a18fe1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe244bc-7b35-4f1d-9521-fd0707f165b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a780cdf-1d23-4c99-ac6f-d7e3bacc3188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09b9118-e9aa-4b22-b3f7-16ba6d5aba65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5796d92-1297-48d7-9cc0-451be5b15b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67b795b-43db-4125-a20b-f2ebfbf2aea1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ae0cb7-f766-487f-a318-3176e9a9b0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9612d5f-6bef-4b17-a985-fca17a10f901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b4b0de-196d-4f10-9b36-8cf563cfe01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa21cda-fa11-457b-8bec-f3738ec42ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfbbb21-5860-4eab-b442-a7bc3344537c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556c2361-f2ed-4025-9e7b-d454ff747282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c0d0c1-1dfa-4dfe-963b-c63efb3bc527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c989e05-3df8-48fd-ab0a-4321d23e6e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b3c669-1be7-4d26-9a57-31838c5d50d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a60d958-9375-4033-a558-4f782af0a6b8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656bce35-a6bd-4be9-a1bf-6d08f78a72c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c972a036-c5b0-4a01-9236-3c97f56c3185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf28bb7-aa80-4abd-bc1b-7fc0cbc075c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f24d045c-7ff6-44d9-85e1-89bfcfc33167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca086d7-86d4-4f96-badd-0a7a129ba5c0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d6b47a-de20-4dc0-9a53-2b2ee863ffad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e5142d-e03a-4424-bfb3-6057a2c5f470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cb872a-604a-44c0-8f8b-2f0b49ba3920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c97bddda-28ba-4665-ad87-d2e561048ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b0c81c-11c3-4223-b750-97e44b8be27b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac2f4ac-cbb5-43be-8cfc-279daaab16e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b6b679-33e4-4924-9b8a-5cf9b72c31fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed4425f-5025-4cb4-8b68-bdfde980824c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6ea535-35fd-4300-b0bb-25c97d07e6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fbce4a-d0f2-4d72-8710-331adfb169f3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e895e8-ee13-4eec-a0e0-773a61c7ed1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abad470b-bcfb-4fdb-8992-2c102886aa1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9722af4e-6a47-446a-8a62-41d8f597b977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e128300-26fe-43a1-911c-b0627374c125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9a071e-7933-4ca3-ab91-f6ff1eaec547",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae20c14-161e-43e9-a941-1efdc3b4da17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9327a91-6d35-4c0a-ae90-abd7f32f32a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c709ef3-9d28-4c87-bdae-52e432f0bb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e993c6-e0f4-4caa-bba5-145826a82b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a42cfb-6094-4651-a849-2ae904f0652a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7298f6c-5fb7-453c-b51d-84d40bb520c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0758197-140e-4dee-a700-f3d8a964e438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05261aa2-f128-40e2-a190-b50a56763fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72cc5138-c74c-4310-b954-166edbdc7d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f05e1b-2e91-4590-a9f4-2539a451bf2d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e847a4d8-5731-4f64-b4fc-26cd41ce089c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efc981d-2e2f-41be-ab48-ddad07931a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aeb113c-e1c9-4612-b9b3-e44a364364af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd783f61-171f-4d69-a449-df54e88f8671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5a251a-cb25-4edf-8b92-62463547dbdf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bce3c87-e477-4192-9be4-452a97b0dc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f02cfd-9f6a-4e9a-9503-f91431933943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af30159d-f237-491c-a3d7-480d3512aee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a4ec80-7089-4ef4-84b5-98fed6173618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4aa1ba-40bc-4e59-92ef-dde62570e244",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d108604-c68d-4182-84b1-affc2c5ea276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9550c37-3ed6-48ab-9f4c-34c0aa24332f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcadff0d-c76a-4797-a419-6cdcce29b27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bb9ffd-4fa9-4d54-a942-d4f39ad1c2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9722806-e108-4818-98fc-13de43846c20",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fb880f-fc75-4782-847d-4f03c348922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1892f4-7e03-484a-9d4e-cc937c191444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50570b7-1c87-416b-b0f5-34d3c03ebc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb4e8a5-1a3b-46a0-8337-d6d12968e803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6c509e-f9a4-4add-b424-4c864c381729",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3332cc9c-6768-48e9-b5e5-2c76559cab9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0e85fb-e456-4055-9f2f-ed8be1eeb370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1e579b-b8a1-46bd-99fc-7608687d5632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd032b40-5416-4d8f-8315-387dca09daa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efe39a8-5eeb-44e3-9714-c5f07e3d3245",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8644a857-9067-4cfd-ac10-18a35b68c11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83eb158d-3f7b-4584-924a-536c783a125b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa78a2cd-aa50-45ec-bd6c-ac841068057a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8bf082-4b67-4d4f-b065-a3e7e7c35d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ff9bdc-da4a-4706-a4ef-8f029a06fc9c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695ab87c-be8e-4eb7-9637-e5ea7f6d5be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad2732c-f840-43c9-9012-09ee2c16a783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f7e507-a4e4-43dc-bb18-8c0a462cbea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28bdb8cf-9264-4be2-b853-df800eca3ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e2e05f-ee07-4805-8a3e-973410c916b4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcab8996-3c88-4662-af12-209e22f400de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf8b4f6-6d06-4d8a-af89-d013f0bb48b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814f2884-05e8-4d00-836b-8ab5af959799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db5f2fb-e010-4450-9346-458d6cb68870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7095ba9c-5d0a-4193-a5b0-d9dfd656369a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb87d88-71be-42d3-9ef0-48a9c8fbe388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b4d377-8147-4eb4-8c99-5b220bc5a35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbe7eca-e994-4cfc-bdfc-9d28ed127079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0504a5f6-86d8-4889-9f23-009c258d221d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f6056c-f405-4796-a938-3a75c243acd1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebecc3a5-64fe-45fc-8f98-aabd3d7ffaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04132bcb-22bb-4d45-93f9-915393864c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5961b83-1feb-49c8-a8be-7568033f05c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2ab167-009f-4e6a-a64e-7b32dff8cd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174eba44-b4c5-4dee-abfe-86fa7c67cb94",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c72800a-a7f6-40c7-a411-359d8c0a2ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636dc653-7408-4ff6-9c0b-65d4400847b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5983c3-7c48-4c2e-aaef-7cbd0a631ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2284d07f-d282-4b20-a7bd-f9d703a4ac0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a164fe-0990-41d9-bc6a-bbb030c8c89d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1309147d-8de1-4f72-9b6a-ba0668bbd5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4895a06-01c3-44b9-a296-67598f91b65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8046fc-b3ec-4607-bfb7-a816d8b1f6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "637bfe29-b76e-4121-9608-a3d8acfbefb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f809c4-ca3e-4340-8114-19ea0ac8589f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0b96fd-4690-492e-bdb5-c040d551d85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb69e18d-6c36-4ce6-916f-7ae1229e24d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110c2b84-cd03-4aee-b392-591b95930321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1c1333-1e0d-44c1-8bde-a8fd0dfaeac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96104049-e67d-45ea-853d-a096f74b0c24",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f77e83f-7d36-4a14-b355-4cde44461e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec5f999-5c3d-4bc3-9fd8-2162cd4609cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081d3c02-0eb0-4627-bd10-9b532de3bae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5359a0-19a2-4752-911a-99e1459f69df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec744d03-f2fd-4305-826c-0f5df5165daf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50584a9f-5c99-4b04-9d8b-30509a1edefb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18577e9c-eb72-4688-b685-52c23b57a10e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d2899e4d-54da-4d9d-ab39-31e04396e056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6217ad48-80b1-433d-848c-4a4efb211ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "787b6084-7efb-40db-acc5-3a50c4b9804c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "102b207f-008e-4622-afa1-5d532492c77c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f2f5912-6669-475b-b437-fc73afc8d2a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86174688-b44c-4023-be17-1020b0ddfe14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1706cae1-e5ca-44b1-a8df-39715c2c8195"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0aecd8a4-3528-4ad8-bc6f-a526ccceb7f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f44b0938-9a78-4afd-aaea-74d22275d400"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e5d0713-b458-4a0a-bc39-18bd8632d814",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0402a360-7884-41e0-ba7b-1cd6d2b5fe0f"
            }
          }
        ]
      },
      {
        "id": "589d941b-7641-45e4-8af8-407a38b96bf6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "15e031d5-960c-43fc-b1ef-a6a1d17d6d73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4571382-9d76-4dfb-b63c-30acad9d98ca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f6be9a72-3d99-402a-b269-dad8d0b6016c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7947b8a-aef7-49bc-b88e-f6ce40534e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c31a07-838a-45c7-af82-3626e2be02c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a81265f-3005-4995-8f45-c8a48587d9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2017ca2e-782f-41d8-9cc5-b78e0210e35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b783b142-d3bb-49fc-bab5-a8caa4975bdf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3c6da5-92aa-4d29-8291-1d2475f04351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1f3dd1-acc3-40b5-ac65-d95d7a2c1a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62f941c-bdb2-4cdc-a3cc-8b33492ba991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d393b7-4718-4314-b03b-5df60f235032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42ec096-1de1-4c19-8df3-b8630b5e0bc8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3f694a-50f3-43e4-b19f-9317f078f29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c123552-b4a1-4915-ae7f-81208568d7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db29567-a4de-4201-8b3b-f5d2e289917e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b7073c-1ff8-4776-aa47-971a4711e470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4be9e3-c11b-4fe5-895d-3611315d18d2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b919b5-4795-48ea-8b69-830ac53036c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b224605a-ea53-41c1-a8d2-f87ace64984f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a3605e-6a5c-464e-b0fc-a6998cfe7e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab02d9ac-4561-45c3-a289-45c22df7cb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0b5b34-5fdd-485e-8b17-2842d3a1f825",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febd0f3b-9f75-47e0-b092-0b2a8e146ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc0e4ff-5253-4514-a705-7308dd40e6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984713ce-dd3f-4cde-bf31-16f72a7bb1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b053cf20-3ab8-44ed-ae2d-0ad79251e448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f628a0f5-a267-430f-bd0e-b98980ea43b6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f939c3-6bcd-4750-830f-c1e5ecee9ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d9fdbf-3abf-44cc-83bd-71454115d3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c305f9-5ab3-46d9-ad9e-477066d55811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7344c4e7-7f35-4682-a0c4-7fb6a1f0df90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a82d50f-cff0-4e0b-bf69-64201273f027",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f46f7aa-b3fa-4b0a-9f2d-dc32a9dabc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4b439d-fb3e-4f7e-9d8c-b3842b7c4529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5abab6c-1827-463c-ac28-7a2c6d183211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd98555-581f-4cbe-ad98-0f28bdfc739a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82479ece-8953-4ecb-a95f-889f1f06a000",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb50c626-fc87-409c-84b5-748ea7ff950c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef1ebb6-3436-4fd8-b01d-b855c1cd34d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab02ecaa-0cbc-4c74-b4c4-8bbfec48fcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f28f7372-f777-4ed0-8ef1-a4707fe2901d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcea137d-a3f1-4c38-8f15-e1cb122df2db",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f508e701-9888-47b0-a942-771cf1b29f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1e4e51-642d-431a-8244-b6f1f87d31a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f76ca0-2116-4817-a0bc-4e1fb8162922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29701bab-5729-498c-b906-8c3629fae875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b827cefc-aad9-4ed2-92af-81be01c7e661",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1af8f2-57f5-4651-b16a-7262c2f6a2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bbdb21-c9b7-42ec-af9d-8e470c4b8eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7722a1d-4365-4316-8ccf-d5b58558dbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c99fa66-7e2b-4ec2-906e-6b5e1a61baa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22addbb7-1471-4749-bea7-4082352079ee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a677e44-8fd9-43d5-bbd3-e862eaaec2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc92267-03f0-45f1-a872-dca851429da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23c7697-31fd-40dc-8d69-3477438eaa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "85da823f-0612-4683-8738-0a16a98c0a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df448807-3c11-497f-9c8c-90abf5418ead",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c47b003-b68a-4d1b-92f6-2837b959120f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b496068-d442-4776-8188-0e5d4d48be9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a09b9d-d6a2-4c2a-9a73-c0136a56b417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29db4ee7-e2fa-4801-84cb-445ff6d1fa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2834f249-c97c-4d5b-aa54-a054ba86c7ee",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50b4d66-d65a-4dfa-83de-842f04135310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fecd43-e642-4624-924c-dc6083200284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d32eb2b-508a-4c68-8db1-0bce6977e9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9c96d4-a900-49e2-b0de-a5712fd6d956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1613ed58-3fc7-4713-866d-4525b4975884",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6e2829-cefc-43ef-8a24-0e63bf8b4b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c38686-6822-438b-a0d7-9ae792f6093f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfbca0d-e176-4f83-9ca9-1c6a90120e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b4fff0-97af-4cf4-8d27-09a4599d2fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bd19b3-2c53-486f-8928-5f432d758d5b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab77616-679a-4c09-8b95-734e8f0209f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0618ba2-d04b-41fd-9802-852cc7d3bca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316a3fc9-84f7-4c6c-a605-66db36b1ec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ab7325-1466-46a3-86c9-e442109f06c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068fe1be-cfa5-45da-ad41-bcc5b96e8a44",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19395ce6-6a52-4aee-aa69-b34377b967fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe72e71-867b-46c6-beaf-34aeb99e1088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092544ee-3af2-4358-90eb-41540e3038c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab8be60-6e5e-44ac-90f5-635cfd11c76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd863a0-549d-4b8d-bf15-f16cb8c50b52",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220a54cf-828f-4509-b128-80d2dbcc22c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a40f3bc-344b-408e-93f5-a946cfb3cc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705d94eb-03cf-4062-83f6-e18dd16a461a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1c21da-a51e-4261-b4d4-545ad49deab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8843c4fe-6f95-45c6-9a00-5dfcb8876916",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccb458f-b594-4c1b-b5a8-0d8bb6aff5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51072de-76b6-47aa-aeaf-961cc4454084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026b9928-4c9b-4494-9d93-6b9f65d47280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "968d8602-eb8a-4207-ae95-1356467a9def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9045eb0-86a0-462a-8f96-b9104eb8f203",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c513dae3-6a48-486e-a92e-c039d2f06053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179e6dc1-513c-47dc-af8c-74771329c232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745537e9-390b-4494-8d48-2d2c575a13e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1519464-cf1a-411b-b86b-df44e50f35a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac662bcd-70ba-4224-96cf-3e56d3e3d6eb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933cb74e-2593-44ba-b193-2b7f5a80cfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9a9f86-8713-400e-bc97-919aa31015de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9b58f2-9b71-44d1-bdc0-d7c761c19b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd0aa27-0e10-4398-99f5-7a8d6ea98954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23771e19-4b7e-4c26-853f-c6a0a3664460",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d35772-3a5e-45f0-b4ba-3d65180cb0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cb733d-dcf4-49c4-bf49-0dff3ef62794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44fe01d-595a-4e82-a9e6-ad54122e144b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7558fbd-1d55-42a5-ac2a-d75c3d76ae4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c229712b-4a51-4ba2-8552-c816f95ee68e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9163ba36-e869-4c13-8575-fcb30c31d979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31132569-0262-4a39-9b13-750afc811a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51c23a0-4fb0-4f21-a8ff-67eb9051f3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81785d94-7d2f-4328-a05f-5f5f68986926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43c5c7f-bf0b-4067-80ae-7cd084608fd1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3914aed1-4006-4648-8f3d-c5c7087939e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3297433d-9994-43e8-935a-eab03982923c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc4d9d9-5216-4ac1-b85b-dbf87d0400f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0db1ca-bd92-4bde-a9f3-b81d950b6050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4324d9-829f-4ccd-9f8e-3a009650fcac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342ec482-b5d7-430c-abed-6f0b6d176059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd41df6-f0c1-4b03-a885-d8713fb1a223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebde6136-2898-4516-b7d6-6da7c3020b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81f960cb-b66f-41ad-966a-9e57a97579d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e81cb2-a139-49e8-ba46-8ee0781e8895",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289ef204-a460-443a-bba4-31d6c79e40d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f30161a-b5b5-4cf8-88a6-552c0193479a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1f565c-3046-4919-8cd9-8dbfa2799e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1796b0c-a8eb-4a1c-8b38-775b1ca8af77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85762e7b-0493-499b-9d22-b3d92a2b8b85",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f058162-76a4-4d3f-8f98-50506fd3a6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132eed51-8b66-4bd6-b0fe-f1842b92ebaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e72b053-2d63-46a1-b686-58c635a96818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8dcf55d-b66a-4c13-993f-3d2066a8aa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c7d044-9f1b-4f53-91b0-237037d821b6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8255f5ef-6a74-41da-b643-0443e828a1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab44df6-8729-4b2a-a749-57fb5752d84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38805be-c97d-4367-8f64-a943cb4a573a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c915388-4a01-4c2b-bd42-46599e1f0f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b8d993-4f7a-44c0-b58c-da9d81847091",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef040be0-4eaf-4b89-8ae2-abd5f231da70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406f05f8-3646-49c3-970b-638985d3f7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b712488-89b0-4ee6-9e1b-6af287c91a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1869f6e1-8250-4b44-b121-018a5761eb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf250226-81e1-4028-896e-d4c092b8932e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed86d2ef-dc8f-4845-96c0-5ad7e40bc525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956e8e71-471c-4f00-9852-a76ef5eb424e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c660dd6-8450-484e-9020-671ef3329a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9140e4-3b5f-4f64-8385-96da92412c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd6d2bf-96de-43a3-a550-318e4a39a68d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabaecc6-3291-429d-b423-d4f07e917ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a10e37d-a4c3-48b4-91c1-731bbf7db912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da93c87e-34be-443d-8e47-cc4dc39697c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec9b0a1-3dc5-4421-9209-de1068866374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aad5a4e-bc90-4793-a702-771e24fc5f2a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c8aa1d-6058-4d14-b1a8-a4f43179ebdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d4c7fb-196e-4340-a521-11801599d160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e22baeb-ed85-4954-960d-b739be1603d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8c5dc5-69c3-4108-a09f-8cab8539d699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ea279e-6536-46d3-a198-80072be6a537",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b10eaf-ddf7-45d8-8355-e719f4682bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18359431-210e-4414-86ee-847ee3047f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2698d5b8-b6cc-492f-812c-f91835747f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4aa69c4-f647-40ad-9524-2b8a19f3a9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d80e3e6-98eb-4a04-8d09-1fff0d2dad45",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccdf2c7-3f7d-4bfb-864c-c9221b0957d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44b45c0-9227-4c7c-a9db-eaaab1c3cb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cb3bc1-8e4f-4dc8-9fb2-58ab5da7405d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5126a76-374d-47b6-8ab1-ced855ef6e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e8fff4-8074-40ff-9605-e0744aed7785",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ffa8ea-6386-48eb-83e0-068496da2526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebc81fd-b632-4be7-b5ff-d24576e843a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c81a38-3714-4279-baa7-1e5d23412eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "648151e1-111b-49d7-8d37-d2a62a180221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41a47aa-2fd7-411e-97db-a62084929250",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449abb49-8605-42d4-bc60-14ad357a42b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85345a4a-f19a-4ca8-a086-43237f1a36ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adef48a3-6ef9-4710-9495-32b156a061ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d95e61-b33a-4af6-bbca-3e1afbc9e5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e066f7-2e60-4859-871f-dfc30af2324f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269df4b2-b387-4295-9033-2af09a514f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7820fc-47c5-4e1e-ac82-4865ab7b0d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe503bef-be52-4a81-94f0-ed717825d9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae448bd-28b2-401b-a1de-f713f6dc44f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad33b2f-527d-45fc-8e4f-ccb856153910",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952b5d9a-6123-4d08-9ea0-a7885aa3778b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a53c7f9-66e8-446d-98a3-f4724e0f1262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5597ac03-14d2-4532-9f83-f685629690d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e22e3c-343c-4648-b66b-5ce0aa337891"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51f94998-5bcf-4c26-85e3-30c0ae5a0478",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d02c0171-1c66-443b-88b8-2483e3dc6b53",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a542ceba-c177-4624-ad55-ebd21f364b25",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a80648-8f56-4eae-b3bf-e9b439fe4a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bf670c-cff4-4291-8d63-b1f7ba38eae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aad3f2f-d23a-4aa7-b7aa-b0f74fee15a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab0288d0-0be0-4bfe-8bfa-17f2745b9973",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb2e5747-a548-418f-b38d-952ce1e452f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c1a4692-0c29-408c-9b55-cb1f584d9226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9ab8e1e-0a27-4614-8269-0107eb10ec7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7dbae4e8-2ac4-49c4-93be-40f9716a4030",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d7f94249-f6af-454d-bbaa-b5abe86b6f09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a380fdfa-2e91-4cca-b004-c0207607e5d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "311a950d-ee64-4aa6-991c-65b3c05a12ff"
            }
          }
        ]
      },
      {
        "id": "c201af74-ad3d-4b16-8717-e310fc3dd0c1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d55753d2-0261-4524-9d65-7c161eadc0ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66649717-b878-41c9-833c-8715d8f66c9f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05081f2e-decb-4d9c-887f-fc465f95e567",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e119b4-2334-4a7b-a96f-e8a746bf4dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd81a71f-5d25-4664-9603-7f575563e03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f524af5-196a-4749-9ca9-d128acf1b85c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cb5c42-ee1f-4276-acc5-e96d38a4fa96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f082152d-2133-4102-af91-93ef3305e430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8588e5-c954-4aa8-abb7-4e3817fe016a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6ffbb5-12f5-4c25-8c31-9b35f600740e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06dbbf9-da77-45c2-aa58-05ec31830d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ef6a89-8e77-48c4-b52a-ebc0658c4cb8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444d4242-870f-4d10-9ea0-b41d269963c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b9d776-8323-4e1e-b3d7-19675e08e3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819afba1-6be7-4801-97c9-fc456c4a54b9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40448886-053e-458f-8ac5-96c8ada4bb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d39d64-8533-4a11-8296-a480f173212e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2573ec9e-4d28-46e4-a5db-aad5ad68f7f5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b55ca7-39d6-49f0-813c-1cb641479d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f507c13f-c063-4c96-8cb3-cc65c134bb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c491cfc3-84e7-4675-9cd3-dd97a14bb240",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4953539f-faaf-4e9b-9bcf-994191f2b6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdf97a5-c6e5-4533-9b2a-65fa2121da8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a276a1-c247-435d-b43f-52c2b3d734dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0463a77-456e-48cf-85bd-be0130f1100c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52f0b12-1933-4bb8-a46a-868540fe77f4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c78055-fa54-4988-9ba8-9a016da7f8ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3768749-b323-4337-83e8-6768de056519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d088f75-b5bb-4a78-a156-2782bd37e429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c02548-1043-47ce-a83d-9720f733969a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac15fc31-1e76-46bc-97aa-c0b37ddb09c6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cb3486-56cf-4277-9bc2-c96bab169099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b1bea51-a06e-4e97-ab6b-48f93141f770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0f04ba-236b-41de-b939-927671229480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4f05da-ab9e-4c65-a2a6-8e22caa6b18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a4070a-1797-4646-a00d-9f450fba0186",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad815ac7-32f3-4325-86b7-6cc5c2828b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "082263a5-99e8-463b-a141-e871b844b3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e4a830-f368-4dd1-90e9-8af4f62ec1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07a5ae9-d457-4004-b16d-5c7e85efa40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670fb175-4d78-4a68-8c46-45b628ad8b2e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4d007f-7c0b-4061-a557-dce947d27b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80be583c-8b84-4a2b-a25e-0cfc89a816c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a997bb-c61c-4b43-82d9-8382e4e7875d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2998c235-3144-426c-b7cd-99a99b0cc913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856d2012-ea00-46b9-8c05-836b395a48ed",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b072c6-ee3d-4be5-943b-1e37015f1b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923e7b73-b4e3-4492-8c5f-6337c1e8453c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4fa8b1-ce31-46d8-b2db-951198539d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccd90fb-a4a4-4ff4-a5ee-8e2bf4fd5332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ae208a-4cfd-430b-ae78-b4f47e3da2cd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f0c0cc-0cb7-4ea4-83d3-733c544361b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18654d51-d94c-44c5-862b-951cce7b884f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bacf64-1390-4322-882b-39cef196c90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610abdf3-c626-47c1-81ea-1896b3b326d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5efaca3-e2db-4cdf-9a2d-21c26cfbded9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8b827b-0a73-47d5-b809-11633a1ee762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30753a70-729e-4a0c-860f-c62404a50e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cf38e0-aac5-4957-8c01-f295973e3be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90f71a2-ae47-4966-8bf2-c411ab78c280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a98dd46-8506-4244-9ad7-a65fc6ae299d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea582888-c763-40ca-b16e-1360df4f3abc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "226df288-d22d-476f-bd72-1d78be5762d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d20fe4-0531-47e7-b8c1-2b55f77baf99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7383baf-2dfc-4950-8f8c-b225152fa7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d98820-9014-4aea-9f69-64d74ef25f02",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad0dff6-b8bf-4cf9-8daf-9cbfefad2755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f20c2c5-0445-4ef0-9882-41aad33fd72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d73b43-ada4-4daa-961b-e4abce200081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d96765-a9cf-4af9-8453-67d56bde0172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ad3fcf-e321-43ad-8525-5fc43cd0528d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a84a077-0feb-418e-8c5d-249dd4c32e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef2a59d-ec95-4e03-8d30-5eb046c3e006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433012dd-ce7d-4642-a13d-b0b6a283317d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd982d6d-facc-4c2c-a729-09ffadbe635e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15298e8b-d0dc-466e-851e-1e67312c9dd9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e3b0cc-b447-4a55-b364-4f89d8ac4ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f82e4f-93c6-456c-b450-04d1bd2ad818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff76bcd-15f5-4f07-8fb0-70b7f057cb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc638e4-8185-4524-ac58-6b4accb6f4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5088fa13-dee0-422a-8089-88233f4d2f03",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a9a5cf-2d21-4d07-9114-ebb18ad1af80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c658c1e-08f9-4140-a000-700128c62949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0f1885-5309-4d32-bdb8-105589161412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a22f3c4-aff6-4672-8501-b351a09863c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac231ef-27eb-42f3-9525-fff0b6956b34",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b39c8e-69f7-42d0-b5b5-2c8519cc24ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657c67cb-b919-45f4-b0ef-9b43c83922f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ee7dae-bd96-411c-800e-7a7590efb2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b52047-166e-4651-a604-25bba066a607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298cda59-249f-4fcd-9643-dd22a29ee55c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3fbc0e-255b-446b-b334-0f6cbc0c2ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c53da1-7d1a-4aa1-962a-6d18b3406143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e2467e-d006-46f4-8894-5adefc804cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1ef1f4-b2b0-4e48-8704-b89bfda355d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb120488-4b6c-4c33-8621-5ab4964e2dfe",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cb8dd3-a19d-424e-9e5e-ab1cc784c71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4c3f4a-075c-4185-8710-edd4717ebbd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7399025c-c5c0-4b4c-92a3-6e3001fe918e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e2af61-aa05-48db-9581-6c8bca31af2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91908361-48ab-4353-8b42-9d31811ce24e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f775c4a6-2019-4a44-b8b0-50a03ab60b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9279f4a-3500-42cd-907c-83d1cd8c25dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a200bf-5457-4321-ad2a-d2a170babac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a5aff9-1f3f-4ac2-847f-6642564c4da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87317c6-2bf7-4425-80b0-5bad6d2a0836",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f46807-fa5b-441c-a011-83e7fed8cc58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "493b6a64-0bc9-4365-b036-b669beb84d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727ce36b-a232-455b-816a-b0412e78c5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c118d80c-03dc-4c15-9e5d-9088dd80d026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131ce571-3b5f-4a20-a05d-f0028b6eb407",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e16cbc-50d2-4383-a543-f3ad06905ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1c50ee-6149-4c83-9e18-ea71477e42e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a4d7a3-0a92-4a35-8c8a-6ee7408e8b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a614b51-eb5f-42a8-a8e8-4a42291f1e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85afd1a9-ca00-469b-9c60-91b38dc60f04",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e9e389-a263-49de-9a35-f4f87b2d8719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f9ed99-db12-44cc-b92d-d79c7cd4376f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c10e83e-a507-420a-8b7f-1370f26cbe5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079d8e8d-7314-401c-9ecd-e9efb55d73d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deaa49d-e35f-496e-87be-2cb2b855c4c3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1fc015-17a3-4f30-a086-5984fdd613fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344fe8c1-0ab5-41e2-8468-ecf666cd0291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfab4bbd-ddce-4cb2-9649-a618286850f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7916c7-9277-4ec5-aad9-8be7be833045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0178c417-8461-4c23-af2a-62d62685722e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbecab8c-af07-48ce-a6ab-f2da289a29df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001cba0b-81e5-4912-b027-b98d77b58583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5887bec9-c101-46a7-98fc-7a81cbb73212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05656137-8c48-44a5-9ef3-da67b403491f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7648a98-4eeb-432f-97b2-7e96b89fa01b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2f9274-afa7-41b9-b1f6-a501d8c6390d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deff3aa9-6015-432a-aa8d-a894527a7136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbda9f7-b3a3-4ee8-b2df-8e62d70e846b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e572696c-51b9-42eb-8a39-db9a635bfa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a995ceb6-c643-49ae-bb00-c09b609ef368",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f320bd-4e4f-41bf-95d7-6e58f339163b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab383fb9-289b-49c5-a8da-0df21253ade3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec2b50d-c4f6-4fec-ab6c-cab2bfca410e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a257dfa0-d305-4704-80e8-0fa688049424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149a7d35-29bb-440b-a23a-8f940e529f9f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61764972-cdca-4eeb-87a7-15025b5599d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66e107c-66cc-47a3-9e4a-ba9187d775b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5c78b0-23b7-45b8-8cb0-5327a9d309e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c326c0bd-b6fd-44a0-b00d-7f068631dbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef15130-a886-44e6-83c4-5f332bf49f1b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afb5f3c-0fa1-47e4-adac-3fa71475bd70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9dec352-e6fc-48a0-a1fa-35ed84879f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9d817a-1101-4842-9651-b2526d144bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79b55a0-322d-433c-8d0a-a8205cb38f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccd97d0-a35f-4e63-bbb1-ead9f49bb0dc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2ae066-01d7-4958-b508-6178f9823b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74783741-af37-4e90-abb0-109c6eebef82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6ec64f-4500-4306-adfc-bd9a7f6e2002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128954ad-f1cc-4a6f-8e3e-2e1616927820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98940ca7-b8eb-4850-92a6-8689947e2855",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb057b2-65a3-41e1-8797-a7a783499de0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f939669-d190-41c4-ad4e-f9ee96485ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e26306-f52d-426a-b606-2f0eef67950c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060b4f94-6615-40d0-a091-ec302be945f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a800ded-5465-4059-8e5f-2782a3507dad",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfb9765-1cc0-4c7c-8396-63dd652b61f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3123fc-e293-45a1-8256-686272612a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6511c375-d05d-4a6d-8acc-0eedeb6db688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af416b7-caa2-4c86-9078-e544c64f06d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f501aa-1b95-49d2-8926-c49d65197e86",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b2706d-7c70-4150-96bb-3426537c2637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d8982f-2c77-4742-bfd2-41fc6a14d101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c9c72b-4d03-43f3-978a-4b4060986480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b56dbd0-66d3-4846-91ab-2737cf545f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01297d5-1a48-4122-8b67-f788b7694438",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c366b5-742e-4602-92ce-3546fe64e86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2394811e-6380-43f0-910d-d0f2400b8d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176018ee-8b44-45bc-b718-8a5b60a149f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d10ba1-d0e6-4e24-a093-410e5e6823c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f6ba2a-90bd-4c79-b6c7-f3468c67dfcb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2e1169-b744-4f66-9a62-bae34acadd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf7496b-0c37-4535-a1db-f87fe8663dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daa339f-ff29-4634-9697-d73541cfa3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc212c5-873e-4c00-b4f3-f70a20169c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11496098-307f-49c2-944e-aff25c9f2b3d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8192d693-3eea-4735-82a2-eea484a30fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc08201-cf83-4f03-b034-4febd7dae1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af73410-b0a5-40df-8874-f6440c18f43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71f82e7-6c52-434a-88d6-14fec7c1cad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e95a4b-6ddf-4d18-a9a7-aeab7c6eaac1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf7f4ec-31eb-4568-a36d-367f97bcb28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b2c51f-040a-4dc3-a30a-275bca21e783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22660587-68a7-432d-89bd-1a03a7e51d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11d6799-bc20-453a-b21b-821706c7ef42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19824962-19ce-4c72-80e5-ef8942a68c00",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44185cbd-8f1d-425c-9230-3a3f4dd12f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e708d81f-1a61-47c2-b9c1-3ffd36a2c83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14b25ce-e8c5-4355-810b-883ab70b79be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37d2fdf-c4cd-4661-9d78-b0dba368cb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a617eec4-d254-4f86-8cb5-4cf6890cc0fb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f98692a-fd78-4494-9f95-ba94d9bcf7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c93c4a-7531-4270-bf00-cc00f9485f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3b6593-9f6e-40b5-99ab-6a2630e8db1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f796340-af4b-42d7-b020-2f018f024f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e38c77-07a0-4359-bc8c-8b10f09f63c3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79343c38-350a-4bed-8de8-08302cc3a47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e94daf9-fe1c-42d2-b0af-d1ba2bd3425f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c838031a-600a-47a1-80e0-52f3f17f8b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bce13b-e89e-4b4e-84f8-7971d1a79556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3452e86-4733-4a90-9211-335f7857287c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c8cc03-2f05-4d44-833b-71d6a9c32290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd106a3d-6f4e-4e37-8db2-1d256df9f3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ede2cb-1e66-4d00-8c28-9df7ee0f1c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77e8668-b2e9-4992-992e-d1e542381653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed1d661-0706-4e57-a320-546db0fa899b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d27805-5297-4368-b658-9cd45cfdb64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c633f9a-7562-4494-8fcf-8e1f926d9467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32018e86-6643-4cbd-941d-499b7672587b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed53fb4-d690-4ef0-9e4c-7f9ac959a484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caf11e8-a70e-4b0b-b2b4-b63e8fcf5769",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dc2826-3940-4f72-843a-91d040e162b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3038c7-e31c-47fc-8b09-b7197713dd53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcffc2b8-594d-433f-b4d3-b1636f8638d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb239ec-abda-458c-981f-7c0e8d1f8363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ad0a9b-ad61-4ffd-b367-cebe059bd737",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012111e6-e75a-4f65-b2d6-4016d63fd03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094c8cc9-e0d6-43af-85fb-db5661015b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327797b6-b2e1-4a19-aa9f-fe58c627b587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afff368-3cc5-4fbf-8f05-07b23cc92361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1c1c9a-8524-445f-bdd9-bffeeec87422",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174acee5-5b23-4501-a530-7ce34c565ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fecfb89-124a-48e9-8318-46c8aa45d6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592a5e77-ff5c-474b-81fb-ae5fb08b6ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d34554-133f-43af-a18d-adb5fb2daa45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a88b931-5e54-4c38-9a48-b33bb3830349",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74dc005-b49e-4b95-b89c-6400ff3e6efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3342ad-a256-4c79-b8d8-7242b4dce238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ff7a58-7e99-4a56-93e3-439714a30d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea220d19-d087-43ca-84be-f71b73def770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96435bbd-c082-4d18-bb0d-03a49c6a213a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2384be4d-a4e7-4f11-876d-9e8d9d7aa47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2043a234-9998-4981-be74-c111c9706552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51795616-c538-4e6a-a087-9f20516f7fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec739fa4-2e37-451f-ab1e-ee505f1a142b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f7ff30-a84f-459e-ba3b-25aaedd151c8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2b15cb-b826-4459-946c-00b066761781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaff1fb-cffb-4009-873d-fad5d3e275c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5daf224-2815-41fd-83e4-e99d9f804290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b0f14d-a6a3-464d-860b-b77cd8dc0d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fc6300-64c2-4f49-879b-57f4e0c4cde2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ae1e03-74e0-474c-9ea8-6b565d517f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d306b71d-1ca7-41fc-a75e-36b04787cd9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ded668-3fea-4521-815b-843e07a486b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658f0ff1-bae0-4278-8239-6bc138413087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297a189d-8403-41bb-8d27-b802d7fd416a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c09877b-1cb2-440c-ba6e-3c10509bcf85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e711b856-c9a2-43e5-8868-28d6d7ca7104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dc9b7e-aff9-4de5-8e9e-e754698a134b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71db7994-8673-4a52-9ee8-f03e97e00eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65502a5b-bed7-482d-8db9-310a72687f07",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9548e5d0-09dd-4c6a-b387-77b74206f795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4a4d27-5379-4ca5-b38a-c2a36bc73ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2236ae-11d9-4c48-b43c-a192bb04662d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537d09ac-be23-4271-9c8a-0da7f37df9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306a300b-9efa-4b3e-9456-ef260e27383d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f937f17-4d8f-448f-9b90-88115ca9639b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7371ec-dcc7-4269-982d-21a80c3e0b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bdd311-0558-4d66-893d-340da7361e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5877428-6aa3-4127-ad33-240c2224c7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1335a6-1d74-4fa4-bfdf-4ae0f2efb6c1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ed9291-f85e-4553-b465-d455fada54b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3973818-b176-499d-a020-508156144de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9e763c-cf77-4095-8776-56564d1adc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a9c6a2-ec36-4304-9603-6b24dac986cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74adb47-0327-4894-8437-a77697cdd4aa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8643b16b-6c70-4199-91a9-4cea7663d217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef71784-a793-42d0-8c4b-942dd3e7e2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f2ae31-527d-455c-88a9-52d29a3c530d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d73caec-98f9-4e99-85ae-4056e537e5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93585b35-17b2-4e07-b137-0477656323f9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c00656-8f56-4309-8a80-5920da966cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3b7f31-aad8-413f-9dda-9526c8b142c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6235e4-e7bd-449c-a2d3-85dc46468626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d1c16c-1c7d-48a0-b207-0848483f5964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd8c99c-4d01-4262-a159-e98d6d39ab81",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04f46c7-9deb-4bc3-8cb9-727dac61de65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4943a39-a9aa-4d7b-8401-120415656558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e55effc-66e2-48f9-99b5-579c75726ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd86e96c-9e49-44cf-bc49-d5a2130d3ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee497fe2-17a7-4c3f-8c7b-75908b4c3365",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39eaf76c-c1a8-4c07-bde2-284ce0a7c233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cddac1-a397-47a7-bc17-1821fdb8c5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fff1ac4-f99b-49f6-8b59-f56ae6b06f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd0edf4-f9b4-4371-a115-36e58e40f514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5ab7da-45b0-4c8a-8ce9-0a4846f725f6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b05c8b8-27ac-4c93-958b-1d71a91e46a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce27b1f3-bc9a-4a8e-b77d-d1906179c23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1afb67f-6166-4646-9b04-ac50bcd26db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fa5f7e-f8e4-4082-8146-a55466800ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbfde4a-5377-4e39-8535-591a34571969",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cf13a9-00c2-4033-b991-24e9d0887106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f521e7ae-37bd-4c0d-8e04-09ef5661f1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1ffd48-67e5-436b-828b-ca64d2359d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2175e10-313e-4f6f-90fa-e31aa19d3989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebb9b27-475b-4dde-9136-3685d62f425b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800d3928-da68-407b-af7e-a4fed1dfc3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a6d36c-5ba4-4354-9080-febd9a692122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69497255-f683-4328-b9bb-8cfc3f30f5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cbf818-cda5-4065-930c-51012ee87b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cb4174-709c-401f-8dd0-96c112787730",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25824424-cd81-4fda-be20-2af321d1f004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33eab197-d463-4474-a70a-e0428bd757d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2c93c8-f73e-44d8-9df2-9d77f8a4e5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7866edc4-091b-4b08-9a49-b108199cfcc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd245016-0be1-401e-ad4c-bbf15f5a014d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489141e6-4157-439a-a045-da73601ae30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b49fc88e-f572-414b-a5e2-988d31577ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cba14c-df6e-43bc-b644-e213828eeb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49297b6d-a248-475b-8fce-db9681a690aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be25e84-aa37-4b58-8d2b-ce1b5380411a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afceabef-5a02-49f0-b883-ed02142e6e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10038460-dbf6-471d-af2c-a8df637d80b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2313ce-11b8-4309-8d0b-0e32059c0060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639182db-fddc-4dc7-8916-2f2c04d4d07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61fd1e4-4aee-4e65-83fd-e9a06edb032a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603dcc0a-0e4f-467a-97b4-bfe5cbc5009c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2d59ca-4545-46d6-bf25-db1354ebd627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849a17b0-0ec2-47dd-aad2-6eb4d8088876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb609136-4e7e-40ea-b4e5-9dd8e3a15a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18490796-371a-426b-986e-9a9723ba7e5c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c33a89-3a34-420f-b8e4-80a4cf27a630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03deef17-ef4a-4835-8fcb-0c0ac9aeedc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee428cf-e7c2-4bf8-a2dd-2715bb39bdee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536bc182-5e2f-4d7b-97fa-4806f143d83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbad1073-2372-45db-bdf0-6da18961754e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c954e675-0f70-429f-a015-c6457551b994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0feeab70-584a-4702-b574-58ff83bbdedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71840c4d-a151-43d2-afd1-3093378d1476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f0b9f8-5bf8-40ce-8d19-47d04925df44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c717f57-521e-4855-8523-c5398264d71c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7b680b-bc6b-4d8a-8793-23eac9f10e55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b5555b9-84ca-4eee-985b-c5bb2c89d2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9029be1d-cd82-4819-b971-c7fe4d9c3bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ec5402-815c-4f4a-afe2-0802b8418ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985834b0-a1c9-4895-8fd5-a065995f2254",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e53a93b-ecdc-40e7-938e-d9c1a2300c7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f539026f-7ecd-44db-9874-5f285c7d3130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6935934c-5214-4b5e-87d0-3f5b9140e8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ab5f4d-3f85-4af5-9238-4ed8fa64cf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c036cd9b-5c3a-463d-af13-2dfe160fdb9b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f538dd-75bd-474f-9379-5a88101a9558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf3f3c5-2d95-4e3d-9e6a-c458c20068c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c817381-2fa9-4bc4-82eb-146ac6aead63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b55f907-cda2-41fe-8520-59d4366cb754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2363538-7c53-463f-b6ef-a272f3541b85",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510dcdb2-0da9-46f5-be93-963614b1dbea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e70d7f07-f0e4-4332-993d-843f024a33df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9dd539-c7f7-4641-807b-e4458a2f8c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a827bf95-8c44-4741-b77f-8b8e5daf0a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5da38e-165a-4f31-9800-71768f66d064",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e5fff7-c4ac-43ec-bb5b-969b19c256da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8393b996-47c2-4d19-a2b3-cc40d5d94cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37afc3ce-0ffb-4a7d-9b28-27d379fb50e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33618a83-27bb-439c-8ecf-d4682c6511d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905d278e-edb3-4bf1-9f90-b5be6d1d88c3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab80cb7-150c-441f-8414-b82c871afcb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77ea5d6b-1dbb-4f68-95b6-e6cc5ca5f238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50061c2-c765-47e4-bf8f-2a8730a401ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b23c86-478a-41b8-8879-bffeac69c130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec45d55-4a71-44c1-b61d-206062368c32",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38895789-95cb-4b4e-bc96-c72596433ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e915e0-7e07-4ad9-8cc6-cf9ea24b4df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbba583f-2a2b-4c4d-a7d4-bc2b5d10237d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201298fb-6956-40be-a4dd-fd5b3df69bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb0bd59-d77d-43f4-9fcc-77ab7587c91c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0103669f-f94f-4830-a3ca-0afc72731d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4c5d0e-8301-4165-9cf0-75443e4c4cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9268ef1a-7d27-4140-885e-3f59d431943c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fda7e2-7aad-4096-ae3c-0572adeebdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3839b312-fc7d-4511-a220-9bb0380bd2e0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd73688-144a-4617-92fd-a6a72b09790e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7746107d-6040-4227-bea0-70cba95ee377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48c4ae0-9f41-45bc-af12-479043590e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46922f3e-be60-46da-b29b-02462cd19453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7795bb-ff5d-4928-9c11-c4631ee3197f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b9c612-9000-43e1-937d-b21683f417ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e02a8fe1-97c5-46d5-b770-c22c2a3697ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63702164-0adf-4303-8f6f-3eb0ad9d61ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029c65ee-53dc-41ac-b19b-d08430b14f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc929249-ed57-4a83-8d94-09d15386be20",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039abece-6080-47cd-b06b-6120386b1b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4483f02-eb57-43ee-a5c8-ab252dd5ae64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64193a44-e2cc-47e0-8ed1-adb480cabd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebf8e08-b816-487e-8da5-d2c7777bee9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8f23fd-7732-4d0f-8cac-8363323904da",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126b5f0c-4969-41e7-8ce0-ba8dbb171e16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1199e801-a176-4371-9d1d-6a8653b9ed66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5551ec-fdfb-4a87-ae2d-1ddc93a89610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e219d4-3baa-4ab1-9d8f-a8d379737df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0a2bfd-e9ed-447c-a1fa-8d19a015e2d8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6aaa252-70a5-44f1-84db-91925f1db3fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28233ff5-0594-4eb8-aeb9-1a32cb29c3ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b938ec-7735-44ef-b09c-193bffc91b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15b32e1-4b82-4e49-abb0-ce4d400d576b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ab2bda-51f5-47a5-ae05-189589dd17f1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749d04e7-49f6-49d2-8463-ae7ad76b86bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "293510e1-5063-4653-9498-77c02a9e82b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1510f3-0c3f-40f4-b06f-dea6d211f1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3edf75-5d39-4bdf-a520-c0327dc0b8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6155d320-d9a0-42a3-8d78-2214519ebce9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb4f873-f312-43f3-9571-b4347e64fc00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f690bd9-8db9-4c81-8d51-d21859e48aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be5a361-7774-460a-9f9f-ed23a9f0e3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3843e37e-efbd-487d-a632-516302fed767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b51d584-9c1d-4d2c-8631-6175bd4194b7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2722f9d-6a22-4fea-b850-2f2dc30e10c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c226673-ea70-4e8c-ad4c-cc07485aa6e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f24f041-74a8-451a-91ce-ace2f96c35ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6f9ba2-2192-411d-a30f-be78b9e6e82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2affaef-dcf6-47bb-a7e0-4e6d068306fd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77267902-f197-4223-b86d-d8e50e372ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7615b20-0dca-4b2b-8e7f-dc3ad2617f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4aa630c-575f-4e7b-a621-510d084d1c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801dc739-5a5d-412e-a328-3f1b6ace62e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88018ad-9a2c-46f2-8b23-070b1043f693",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0af4614-e713-4f52-b8bd-9b5908f8acea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd54c0e-4598-4c21-ade3-596b015a9acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbd65de-5865-4e11-93f3-fb55130ee326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1712cca-e909-424d-b032-aeb5eb7c9292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7c99d6-9f0c-4065-be99-878ffc5a3515",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2e8127-4300-4dff-8b15-5937e6745cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd5ffdeb-c3f4-4bbc-a96f-15908ace602a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa3d13c-ff5b-4a27-81b3-2a7c09d3d707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d374da-0f4d-4815-b14c-c61ecb609873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ea9bfc-3bb3-458d-9c36-cc5c395b88c0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713dbc61-01cd-40e2-913f-c9b5cf3db0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a454272-9391-43f7-8e78-ea5a5d25703f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6582ad75-e87e-4d57-ad20-8e6b4b1906ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397b46ce-ad7c-4f09-a1ce-6f2a22311dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dfb0e8-5378-4838-a849-33eaf4b04d6a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a455ee-0690-4021-b54a-d89feda49441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b747024-d5ff-4fb8-ade7-af70ffc44a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb568773-c49b-4f6f-a779-5557077e6e1d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7f3d6d-63cf-4df3-b2b6-639527818668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9b9d23-777c-48eb-8cb5-21153bff1216",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458e55b2-0295-4b1d-b3ff-1cfbdb7b5efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa50e8cf-6783-457a-9ade-1c0e80f541fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea0b93d-d03a-4f78-ad63-5660526d4d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f232b1-d4b0-4782-98fe-c843985bc01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d38c7a9-27e1-4091-b131-910f717715c7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf848aa-ff96-46ce-8a42-55a7dc923851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1472106-d964-40ea-9ac7-495f56abcd32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d613e7f-3f48-448c-92e3-3d7d5648951d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5dcf4b-1e80-4e6e-a73f-7c2801d84123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d741892-2050-4687-907b-e66f2ea569c7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c165d60f-032b-4843-8225-8fa669236147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372f94ac-4202-45fb-a6e0-f39018431fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bcbb23-ea30-4c9c-9ead-c1f0e1da7fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcddc64-ade7-478f-8197-e6af9631f883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5a81eb-19be-4162-9f24-5841027c0d4c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cadc6a-3a98-4dc6-b79e-2b2ff7dddb7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6197a154-f9dc-43d3-9ae9-275ebaf68d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa835c4-37f3-4fcb-8579-8d4b13d361ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ec857d-3920-446b-b8c1-c400ac56885c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf513eb-dbcd-41ab-aab9-d5a340d0b131",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac61c8a-d46b-4172-9f4f-3a2cec3c2f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d18a0cb-ec04-43a2-8cc6-a98152c20697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4582f58f-d65c-4d1c-89bc-b62a0243c426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5167ff62-849d-4fc4-ae6b-6392855276e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74167aed-bb80-4edc-bcce-2722e17425f8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff3c1d5-d893-4e1a-82f4-f1bbd3fb3853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f0c0f07-034e-4a4b-ab44-946cb5e59a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75c307a-813f-44e0-8276-ed074fbed363",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab51aad-7d68-4ce1-b7b5-d4939f8bcae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00452fb-5e6f-42dd-a562-309d5a996a6e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47660f0-b1e0-482e-9f64-5ae01299c13c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a74f7a38-6592-4b9d-8138-28f63da8599b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d30798-9992-4115-85cc-ee5025661046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2447b8e-7049-4ebf-b49a-ea063dd4028a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60f09826-c195-491c-b326-303cba342c64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a078c6ce-2c2a-4700-8a8e-b7312d1e6769"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75030e18-bc0f-4499-830e-7042b17d34eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbac34aa-c1b9-4219-8134-4c6e6654aa29"
                    }
                  }
                ]
              },
              {
                "id": "24efa82d-ac6b-41e1-91ce-d529fc527705",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37ecb971-f229-4356-915a-faf93536ac29",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794a121c-25e7-404a-806d-458bca79991d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1d22db30-a7b7-4d89-be06-9a374be3a231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1671eaf5-ca50-477a-a0f3-ed75a89d8646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da93a727-bfa3-4ddf-b37a-93fa4c234b0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adcdd6d9-abed-4037-b9ab-ce3cf4d66f12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66147841-fe5f-40ba-9d9b-df4cbab4dd09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d533fe75-ae05-466e-9e3f-9cdd4953c47a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cef8eb0-37f0-4d43-a25a-49c08344a863"
                    }
                  }
                ]
              },
              {
                "id": "16dd1bba-edef-4b4f-8885-98cfe54a9a11",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "629932ba-2d15-456e-8903-6223e1e62891",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1926f0-81c4-40bb-9262-f4e529954fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "70a7809c-dd44-45a9-a33b-81221bc41e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156dbb7a-5fc8-4d99-988c-eebcd4a78e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b49978f-38c4-4f7d-8213-fce9303c3846"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fe3eb7f4-23c5-4e03-bdaa-5073677ba711",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b48d316b-f326-48a0-9849-d171fde485a1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed55a3d2-1512-4b43-aed3-afcf0564673a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7f0f6f3c-18eb-4262-9d9e-3c6919e5c899"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f06e79f-9d85-4468-ab69-859f368d308e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bf165be-efbe-4872-97d6-a7bee1e5a29d"
                    }
                  }
                ]
              },
              {
                "id": "6f902c27-355d-469a-b254-163fcceb9aa7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a7502f0-8887-493b-8cbc-ed77d0a79a63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a65623f7-09a5-473d-a048-ca2d4d21e8cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "401e9734-1ab5-40cf-b475-bd2c9859d8e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bc8a73e-3101-4af1-b5bc-413db260392d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39861595-743b-4625-b32c-75030920bac1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "261acf33-442c-4da6-85da-783ee3357422"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc687c6b-20b0-49f9-9c89-64bd158ba38d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8f6f636-51bd-43cd-a02b-8bd68666a8cc"
            }
          }
        ]
      },
      {
        "id": "10644fef-0750-4180-a466-68de8f89b8f3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3f01b95e-5679-4762-9af3-ea6f0d70badc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db6f01a4-331c-4f14-b751-1593afa87077",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ffb5208-76b5-4523-8e94-191ee8122f0f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7156002-1572-4aad-a537-866ff9be4f81",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fad73ccd-c531-4d2d-93da-1eb5f394e9d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3935eceb-d3aa-4e9a-904d-8fcdef412b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f47c2640-c30d-474a-822d-902f2bd4511a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcd3d1db-aaac-4690-89ac-348549896d0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f879b830-aaa2-452c-b5c8-9ce1f234855a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "956f5773-9c4a-4066-98a4-80808770de02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77855b40-2687-4266-810d-cf2ac04f4cec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fcc8bd5-7adb-4477-a0ef-76e38e15af9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "280d6d77-75dd-4f31-94e1-20f97faec96b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a05b77f-0a32-4d0f-b79e-1699eac318bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "614b9132-4aa9-49c7-aaac-92462fa9d647"
            }
          }
        ]
      },
      {
        "id": "8135d06e-9700-4887-99da-d9da27356443",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "aa1fbc6f-c93d-4b96-87d0-8168b967e1f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3c8e6fe-c8f2-4d64-b233-f68f46dfcf28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ff12427-6fda-4060-b128-8513cc4e8421",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacf0dd7-10dd-45b3-8e0e-e8aa8c0ffbea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d79111b4-960e-487f-a3c9-a083c28a79ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc23031-66c2-4ca2-8a42-859c8431e264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11373912-0e3b-4d35-9181-ea7906aee0b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0c3f9c1-150e-4524-8f96-fa144a442e92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e84cb4a7-6f0a-4c74-9599-4fd2e361a7da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58964479-8748-47b4-a809-9ecbc071097e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "900f1cdc-5749-4b81-99fd-661a12fdce02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82ff5e57-8678-4abc-96f1-123aaf3ba557",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e1e3e4d3-1c80-41e1-bac5-be68af8d10ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6a53368-93e9-4191-aec3-fdfafbe0c428",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bd75dd1-2fc3-4449-a4da-bf8670031238"
            }
          }
        ]
      },
      {
        "id": "fd1a729a-8f96-483b-8fd0-451f1d6ebe6d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6cda6ded-000a-468d-8060-10828835a9a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc6d519f-a04c-4448-92ba-e4f030d70fad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c81481e-f61f-449e-a540-59a7429b5b60",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9a65a9-1c01-4393-9c9e-5063a1abd5f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0d567fd-2ba9-4b01-8c8e-765a3f2d3de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66a6959-03f7-4d81-866f-0c75055cae65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59a65441-aaef-42e0-84eb-0932b1d904ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3e01bfc-09d3-4533-9cf1-5227d92234db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e253528-ebcc-4556-bbc9-8d6fb4dc72cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e42bf464-e7ef-4199-8e58-8b750e74515c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07ba3ed4-3b9b-4da6-ba04-5857fb993aa6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb1d398f-9f27-4b41-ac84-f2435f380def",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "10a4a7c7-5dc0-43af-986e-7d0a90c0b95c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00d07ffe-4b8a-4c40-9b9e-dd05ae41c09f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "731cecfe-fd02-451d-a95f-351579853c68"
            }
          }
        ]
      },
      {
        "id": "1d12835b-9aba-40fe-b2ac-ee57ec90c518",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6ebfc0e-5016-471f-9768-7eb7b0c1fa1b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d28583e3-4062-42ef-af6b-eef1a9a549d2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "56cbd169-2182-4024-8452-95c135b9446f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8573f244-735d-48b5-bf2b-c8743481e301",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "671ba3b6-da79-47ce-bcc8-cfd3412626a6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.31929824561401,
      "responseMin": 6,
      "responseMax": 2774,
      "responseSd": 330.5051314401632,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703118927219,
      "completed": 1703118968795
    },
    "executions": [
      {
        "id": "e1196e38-d53c-4e16-98aa-e380552dba24",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a622e018-7a73-4f6d-88ac-2dc9c8f7885e",
          "httpRequestId": "dd5c55c7-6e3e-402c-9efe-e0b959291079"
        },
        "item": {
          "id": "e1196e38-d53c-4e16-98aa-e380552dba24",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0f0234ac-97d1-4d76-a66f-b5d198380612",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "7cc67b64-f3b7-4601-bcb6-fd8789a78447",
        "cursor": {
          "ref": "a3899c9c-e157-4283-b601-25927d46f36d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ff296f9d-5c7a-45d9-85db-753b3403d41a"
        },
        "item": {
          "id": "7cc67b64-f3b7-4601-bcb6-fd8789a78447",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ea35bab6-452d-49cb-9c67-a88650dea998",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "fa50f207-9254-4002-b05e-1d088d6c5803",
        "cursor": {
          "ref": "1941f93f-b666-45af-ae5e-9b7663d747d4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f71c1fcc-dc5d-49e9-8a2c-8d494325ea7a"
        },
        "item": {
          "id": "fa50f207-9254-4002-b05e-1d088d6c5803",
          "name": "did_json"
        },
        "response": {
          "id": "b6ec0d40-b1ca-4349-b453-51dc4b27ec57",
          "status": "OK",
          "code": 200,
          "responseTime": 532,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5f74b6-a034-4daa-98af-442d154538d2",
        "cursor": {
          "ref": "9ecff55a-9e1f-42f5-ba6f-3d869f584f28",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d308d217-75c0-4a5e-971e-7444d268ff42"
        },
        "item": {
          "id": "1a5f74b6-a034-4daa-98af-442d154538d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "98cf0963-482b-4f47-a4fa-0b2fa75d176f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5f74b6-a034-4daa-98af-442d154538d2",
        "cursor": {
          "ref": "9ecff55a-9e1f-42f5-ba6f-3d869f584f28",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d308d217-75c0-4a5e-971e-7444d268ff42"
        },
        "item": {
          "id": "1a5f74b6-a034-4daa-98af-442d154538d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "98cf0963-482b-4f47-a4fa-0b2fa75d176f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace1e79d-da5b-401b-b308-69fa74abab5f",
        "cursor": {
          "ref": "31b7f390-c275-49cc-b81c-f4ff4fdf2ff9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a1d6a252-5af6-46a1-8e24-0dfe955f9261"
        },
        "item": {
          "id": "ace1e79d-da5b-401b-b308-69fa74abab5f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "41a2d9e3-9cea-4339-bf80-8a9ab5460bf8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 152,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17125001-bced-43b6-96eb-5f8473154d97",
        "cursor": {
          "ref": "6cfdd047-606c-406f-a740-ba8b0e9a2574",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c5465d4b-204c-4802-b902-0e592c92bb1a"
        },
        "item": {
          "id": "17125001-bced-43b6-96eb-5f8473154d97",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8b355e1a-a596-4b1c-9e1a-55f1980b7f50",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7accc831-e86b-42c2-9a88-c89e56fb6410",
        "cursor": {
          "ref": "f50b4a23-667e-49da-afe1-f1946844fa7b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5e3492b6-8c5c-4551-8258-253b2bfdcac4"
        },
        "item": {
          "id": "7accc831-e86b-42c2-9a88-c89e56fb6410",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cfbaadb6-7a53-4b59-95e3-8f253ad51793",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8f3bda-aa22-48de-bf49-d2fa9c7a1f12",
        "cursor": {
          "ref": "9cf57e00-1c5d-41a3-8369-952f3d36477a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "463cad27-ea52-472c-8645-23d0e4e9cb66"
        },
        "item": {
          "id": "5d8f3bda-aa22-48de-bf49-d2fa9c7a1f12",
          "name": "identifiers"
        },
        "response": {
          "id": "f98687e4-0da0-4e0b-8247-2820579f85f7",
          "status": "OK",
          "code": 200,
          "responseTime": 300,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3308d72-f118-4973-83ca-63e987ccb1a3",
        "cursor": {
          "ref": "fa1185fe-419c-4318-8dc1-edd6bf461dbf",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ec26e328-b020-45b3-8079-39378ee08fb7"
        },
        "item": {
          "id": "d3308d72-f118-4973-83ca-63e987ccb1a3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7b32f0af-aaff-44b7-b94d-9005c733fab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4c979f-aeda-4fb6-89ce-2a1eb3a70311",
        "cursor": {
          "ref": "6c4954e0-c2db-44eb-af07-813519ba4f39",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0b0f0ca3-05c1-4917-8a8c-da93a2075dac"
        },
        "item": {
          "id": "fe4c979f-aeda-4fb6-89ce-2a1eb3a70311",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "71661b90-8155-4e55-a621-f2ca7453efad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ba8386-082b-49fb-9550-e9574976e7dc",
        "cursor": {
          "ref": "6609f857-a7be-44ff-a116-1138ba240ed0",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e598361d-cc82-42f4-8ddf-719d9dc5701c"
        },
        "item": {
          "id": "c4ba8386-082b-49fb-9550-e9574976e7dc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f80b5c97-26c4-484d-9574-bf9faea1fb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5020210d-43ff-4e14-8a61-335a6b1de45b",
        "cursor": {
          "ref": "ddf8c2e2-c63b-4b60-a751-e32374a22e7e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "001eb508-c2f0-47ef-a6a7-c01d3f181efd"
        },
        "item": {
          "id": "5020210d-43ff-4e14-8a61-335a6b1de45b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bc999560-8b6b-49bb-9007-c30c16e66a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625ba5b4-b09a-4e5e-9149-08a84c5b81ab",
        "cursor": {
          "ref": "f7f5273f-f496-47a7-803f-d7c3addb472a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c52981ca-32a3-4ef3-a423-37106df65b34"
        },
        "item": {
          "id": "625ba5b4-b09a-4e5e-9149-08a84c5b81ab",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cb4c8384-372b-4fb5-8a9a-7cf5b437e899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc60c4b-aaf5-4169-82bf-69f027eb3805",
        "cursor": {
          "ref": "624f89b6-8f84-417d-94f3-f0515708c19d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ac4de748-12c0-41f5-984f-a6319c9608ca"
        },
        "item": {
          "id": "ebc60c4b-aaf5-4169-82bf-69f027eb3805",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1f59df68-a79f-40e4-90e4-2b503cd794ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf3db6c-dcd6-48d9-8ee8-d3c019cad80b",
        "cursor": {
          "ref": "d92883b2-3813-4788-8a17-1952fc99540d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "07c99d88-aa1f-4cfe-96e5-31d07061308c"
        },
        "item": {
          "id": "ddf3db6c-dcd6-48d9-8ee8-d3c019cad80b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "13ce2205-5505-41eb-b05e-0ff2ce5341fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4f5de2-e9c8-4ed0-ba17-4686c50b2ea1",
        "cursor": {
          "ref": "ebe8b9a2-85ac-4967-bcce-3c008b1b4db2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "af7b9083-bbc6-4985-88e7-4d4194754702"
        },
        "item": {
          "id": "2d4f5de2-e9c8-4ed0-ba17-4686c50b2ea1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cbb5fb63-72c2-4497-b27f-01e87911e40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bfe729-d1da-4b7f-b251-0a78da95c59d",
        "cursor": {
          "ref": "a30b782e-ef7b-4904-88b4-5dac9d4f3ac7",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "567ee179-ad21-4994-94c3-4c3df722b53c"
        },
        "item": {
          "id": "84bfe729-d1da-4b7f-b251-0a78da95c59d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ffcadf79-c1d3-453d-87c7-c81dadb9a5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a71067-ee25-4c2f-a48b-99365215e3aa",
        "cursor": {
          "ref": "8eb44216-26a4-42f6-acbc-6b6b54e315bd",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "18a6e007-d6a6-43ed-a0c9-6b19051af27d"
        },
        "item": {
          "id": "09a71067-ee25-4c2f-a48b-99365215e3aa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "69ccf12f-4678-4fb2-987e-886fbd58b436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0126dd8-2011-4857-9d9f-2b0cac111926",
        "cursor": {
          "ref": "641e047b-99f4-440d-9880-d8799c7baaef",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0fe24f3a-4833-419e-a704-4d498bc1c69a"
        },
        "item": {
          "id": "b0126dd8-2011-4857-9d9f-2b0cac111926",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "06f7c42a-f3d7-431c-b867-40f2ecd49c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a302841-8d3f-462b-bf10-163dc17b3675",
        "cursor": {
          "ref": "71075291-84ab-46b6-8197-c3e311eb89ec",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "991f55da-b29a-4bf3-9774-f6f29b4bfd1e"
        },
        "item": {
          "id": "8a302841-8d3f-462b-bf10-163dc17b3675",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f84f6b99-35e8-44fa-ac30-1af2bcfb6622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dbc7ef-ff71-4d12-bf67-79a39f7c0acd",
        "cursor": {
          "ref": "4cd1bbad-fe5e-4173-9c61-20340ab774a0",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b35cc5bd-653b-44f0-b36c-ac87be259247"
        },
        "item": {
          "id": "99dbc7ef-ff71-4d12-bf67-79a39f7c0acd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9eecd75e-b3a2-435d-a352-566760321094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb1a722-319c-4c05-9587-b0d2b3fbfa80",
        "cursor": {
          "ref": "23d00717-7b69-4973-b087-d77fa2225585",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b47cf153-1f5b-447c-91cd-f87214ebcb42"
        },
        "item": {
          "id": "8eb1a722-319c-4c05-9587-b0d2b3fbfa80",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e136e9e7-a8c3-4b02-b363-a031869fa1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e89cc4-2763-40bf-bb4f-d55f17cd40f3",
        "cursor": {
          "ref": "7060bc59-71ec-4ef7-b41a-8f7c8e836b07",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6e1913d5-6042-4059-bfac-86e98456baec"
        },
        "item": {
          "id": "b5e89cc4-2763-40bf-bb4f-d55f17cd40f3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5a8d92cd-3cfe-4a33-ba29-f25ed5c76e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7144daae-8273-44df-9c90-c1ec16ba9dd7",
        "cursor": {
          "ref": "a3697972-5733-4572-bae7-09ffd399cb0b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "db923a0c-f46f-4c9d-a7a7-155a81895482"
        },
        "item": {
          "id": "7144daae-8273-44df-9c90-c1ec16ba9dd7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6e792671-4432-43ac-8c2d-76302e176fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1c2e2d-7a54-4b43-9715-9bb8b57080be",
        "cursor": {
          "ref": "e342382b-90dc-4770-b8bf-a832670b26ac",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a3d3c228-a997-4440-af8c-8e84cbbed4b3"
        },
        "item": {
          "id": "5a1c2e2d-7a54-4b43-9715-9bb8b57080be",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bb783821-3f3f-4f35-9f8d-57359c72926e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411cce4b-9a24-462f-bb0e-1ca6fc03c6ea",
        "cursor": {
          "ref": "f22cb468-a91a-47bb-8ee6-4a0af8ee392a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b01856fd-a3bf-4074-8dff-137770c1c123"
        },
        "item": {
          "id": "411cce4b-9a24-462f-bb0e-1ca6fc03c6ea",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2d553d54-2467-4189-bd4a-6d54be079c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350520f8-5cb7-4352-94fe-add516aaf793",
        "cursor": {
          "ref": "06b72aa2-d302-4a97-9451-2340d1b5f669",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cba3bd1b-2487-4d93-932c-d9e1783af9ee"
        },
        "item": {
          "id": "350520f8-5cb7-4352-94fe-add516aaf793",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f9ca87c8-7d5d-4f24-bef4-69387928e7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3be824-c1c0-41d5-b569-1a155b6d481b",
        "cursor": {
          "ref": "41b9e07a-d212-4458-8b4c-ea53c635646e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c8ae53cc-f615-4cfc-ba6c-72ffcaaa2edf"
        },
        "item": {
          "id": "3c3be824-c1c0-41d5-b569-1a155b6d481b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9e86efd5-0d80-412c-9022-73d7e41db9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1a7f9a-9afd-40e6-a5c3-04bd56cd1599",
        "cursor": {
          "ref": "5d33b364-684d-487a-ab26-c0f5d9469db2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cef02ea8-eae9-4b0d-bd57-c6ed71800c9b"
        },
        "item": {
          "id": "fa1a7f9a-9afd-40e6-a5c3-04bd56cd1599",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c9a863ec-87c8-4e4e-9bf3-a6ee9f05b9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00992ec-383e-4e19-8a35-1df453fba8aa",
        "cursor": {
          "ref": "054da2f0-cf56-4a82-b3be-2b338e358823",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4afe245a-0267-4da7-a3fc-0d585a99092c"
        },
        "item": {
          "id": "e00992ec-383e-4e19-8a35-1df453fba8aa",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "eddb1971-4597-45dc-9e17-41bb03598cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433f249b-6b3e-4289-ba31-6b932a81af53",
        "cursor": {
          "ref": "0680bd98-38f5-4d92-9860-fdd9fc20ff03",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "92950a1d-65e3-475e-8355-77e3b91668c3"
        },
        "item": {
          "id": "433f249b-6b3e-4289-ba31-6b932a81af53",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ca115cc7-50f6-47a7-8d7f-b246a837bc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d4826d-471a-4c09-9dab-888d4266d629",
        "cursor": {
          "ref": "645bb255-0a18-486c-bccf-f14cdc9111ea",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f740c324-ce4e-469e-8ff2-ccab8aa0ea84"
        },
        "item": {
          "id": "29d4826d-471a-4c09-9dab-888d4266d629",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "11a3fca5-34f4-4529-8a93-a65870e3e66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5000cd3a-342d-477d-8066-245698e25373",
        "cursor": {
          "ref": "2b398da5-3aa3-4e76-93ab-98c919e9e88b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2e9e557e-39db-41f8-a42a-42b47acb74c7"
        },
        "item": {
          "id": "5000cd3a-342d-477d-8066-245698e25373",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "60f60cdc-7032-4280-88cd-ba042e47d762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a825b7-d67b-4852-884f-20946e11f599",
        "cursor": {
          "ref": "6b8346e2-74ef-435a-a38d-f9f577d2e5e0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "80731f70-5dd7-4cdc-ad5d-1c628e7bd147"
        },
        "item": {
          "id": "e4a825b7-d67b-4852-884f-20946e11f599",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4ee1b89c-85e5-42b2-a01e-a281c53885b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b217192-e8c6-4ec9-9fb6-945a05071d63",
        "cursor": {
          "ref": "d8a47a77-e6e9-423a-9c24-496c4874f32b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f603bbd6-5cbb-421f-854a-06c5d0824f07"
        },
        "item": {
          "id": "4b217192-e8c6-4ec9-9fb6-945a05071d63",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "07be34fb-dd23-4472-86e7-5fbae441b379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fbbe16-b539-4faa-a14a-fab1d50eb74b",
        "cursor": {
          "ref": "5cec7bfb-f3d5-4450-9631-55844b21945c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "31b4cb58-30dd-4380-a46a-190a119a47c0"
        },
        "item": {
          "id": "f2fbbe16-b539-4faa-a14a-fab1d50eb74b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "69f66dea-9202-4396-aeb6-86ce68fd6107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb92447-156a-4512-8117-aaa98ec49ea3",
        "cursor": {
          "ref": "28a6a559-2287-4aad-bd6c-831dc5530cd4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8e27b19f-b85a-405f-b5f0-1684ae04c54b"
        },
        "item": {
          "id": "7eb92447-156a-4512-8117-aaa98ec49ea3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3bc75114-d58d-482d-909a-3d60261ef98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f1b47f-af88-406a-b675-108ee462a90b",
        "cursor": {
          "ref": "5a8519ef-302d-48f1-a1fd-2428e580814b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6971a4b8-15c0-45ab-8d76-e4eb99409505"
        },
        "item": {
          "id": "f0f1b47f-af88-406a-b675-108ee462a90b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b4861f17-2141-479d-a33f-e380b50e5779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a52359-1079-41af-910c-1fff4642d410",
        "cursor": {
          "ref": "090fa5c1-150f-428d-92c1-d420e5c60cbc",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "691f4ba9-3cd1-4295-a6f4-a2ea460bb673"
        },
        "item": {
          "id": "c5a52359-1079-41af-910c-1fff4642d410",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "27eb0cc7-3125-4cd7-b7be-5e81184e8a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a77049c-dd8d-405c-b3cf-264c3b8644ac",
        "cursor": {
          "ref": "8aab72ec-6928-4d8f-847f-d5e750a27582",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8a1407d5-dcbd-4822-a3bd-7a48c6556cdb"
        },
        "item": {
          "id": "9a77049c-dd8d-405c-b3cf-264c3b8644ac",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8d214d6a-bcdb-4dcb-93e4-d59160000370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e188b1b-5f43-454a-9ba5-b46083fc34b4",
        "cursor": {
          "ref": "9ddc2cc3-f2df-4741-9aad-97dadbec7d5c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1b2a911e-96b3-420c-8c09-80ef4503db3f"
        },
        "item": {
          "id": "9e188b1b-5f43-454a-9ba5-b46083fc34b4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "78cf5ae9-d680-4392-9cb9-7e25514f582a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04daa39-6d79-480e-9283-28ba3f8dd406",
        "cursor": {
          "ref": "2901013d-f62e-49c2-8cad-af2fc796ccd6",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "78f0dc06-27e3-46ff-8c17-6572a1bdbe4f"
        },
        "item": {
          "id": "e04daa39-6d79-480e-9283-28ba3f8dd406",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "93cf7122-8592-4e6b-a1f2-a423085e5ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26a59eb-50ae-4210-a947-e043a5c4a863",
        "cursor": {
          "ref": "959916c3-7e6a-45dc-947d-f8f60c574e51",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fc030ce2-afa8-440b-9885-6315ac5a95ba"
        },
        "item": {
          "id": "c26a59eb-50ae-4210-a947-e043a5c4a863",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b32f7407-3070-4844-84e3-db7df0bde524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6081d0-7bba-4132-89a0-ae7e7ec134ac",
        "cursor": {
          "ref": "5e35f398-6913-4173-a13a-4d135d714372",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f55bea82-9d93-433b-91b2-3854ffa11239"
        },
        "item": {
          "id": "ca6081d0-7bba-4132-89a0-ae7e7ec134ac",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "efa91673-9e9f-4a78-831b-f313fd367ed9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 324,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5fc0ec-820b-4edf-b78c-b0600e7fd46a",
        "cursor": {
          "ref": "0514c40c-7f7f-4e5d-b4db-01ed4a00dfe1",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c6f672e4-d6cb-4fc4-9655-3d0edc13b17b"
        },
        "item": {
          "id": "fe5fc0ec-820b-4edf-b78c-b0600e7fd46a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "287a5965-603f-4a62-a7de-29b0b20bd643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723946e1-6f93-4d44-8c49-b9233882599a",
        "cursor": {
          "ref": "723bffd9-b882-4a29-b24a-4886b1be1270",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7fc45914-b4d8-420a-9fa4-f72579f744f8"
        },
        "item": {
          "id": "723946e1-6f93-4d44-8c49-b9233882599a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "76031815-efbb-41ab-8aac-6874604691e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794f225f-c402-4aad-aba8-6aff21ec2da3",
        "cursor": {
          "ref": "4681dfe9-0e7e-4f62-9fa0-f72fb8735680",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "20a19dee-7da7-4710-b07f-7b4ecc667f9c"
        },
        "item": {
          "id": "794f225f-c402-4aad-aba8-6aff21ec2da3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ede41279-dc42-4450-8da5-5e65652f06bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97cec9f-6882-417f-a3c0-cd89e85a5aa8",
        "cursor": {
          "ref": "852b38af-3757-4bc8-a335-89845d8a12ff",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0234e247-ef08-4948-a0e1-73dcd8ecefff"
        },
        "item": {
          "id": "a97cec9f-6882-417f-a3c0-cd89e85a5aa8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3c450939-ab7f-4540-93ff-626b24aaacae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ffbbae-1e98-4b52-8617-61f102009215",
        "cursor": {
          "ref": "8df5b7f5-6dda-48d0-b3a7-517e76472bee",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9a73aa6c-0b81-46fc-a45f-83672af6d895"
        },
        "item": {
          "id": "12ffbbae-1e98-4b52-8617-61f102009215",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1d9c0d36-d53b-4b07-801f-92523071994e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd15b98f-56b1-43b1-ba9f-e04885b7b3d9",
        "cursor": {
          "ref": "9f6186f4-678e-4863-a8c5-53446037f714",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ca80d2c2-9500-4ce7-bae1-50025c063488"
        },
        "item": {
          "id": "dd15b98f-56b1-43b1-ba9f-e04885b7b3d9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f43a6be0-c75b-425b-bc29-6324c351c4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57cbad7-31d4-4ea0-8376-316cbb7e3afa",
        "cursor": {
          "ref": "684c741c-bc00-4add-bee4-340752935828",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7dd46db6-5f4b-4f35-a491-586856c0982d"
        },
        "item": {
          "id": "c57cbad7-31d4-4ea0-8376-316cbb7e3afa",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a0bf1a33-9a30-4feb-9df7-51decdab5aaa",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 322,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49758f7f-8c4e-4312-a16c-9474a46b4bf1",
        "cursor": {
          "ref": "d3dc11e9-08b6-45f6-91d4-5f42e69e3685",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "67237a0b-81cb-430e-a0c9-e6a732e1efab"
        },
        "item": {
          "id": "49758f7f-8c4e-4312-a16c-9474a46b4bf1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1d325bc9-ba0b-4714-a961-d81bb53db221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ffe223-5a2e-4665-b563-962ce19159f4",
        "cursor": {
          "ref": "87b0f1ed-d2ac-4d28-ac78-20315840d31a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2bb9fe10-1696-4bdc-8bea-76683a0db99e"
        },
        "item": {
          "id": "84ffe223-5a2e-4665-b563-962ce19159f4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "78db2b4a-8397-442d-a5d3-3c4ab336a546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b4ae46-6e5e-41b7-b7b9-16154c9ea43a",
        "cursor": {
          "ref": "e940c509-007d-4c00-be99-7950442505cc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bbedf189-42e1-4a61-9294-313f1fa9997c"
        },
        "item": {
          "id": "66b4ae46-6e5e-41b7-b7b9-16154c9ea43a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0a5f725a-d999-4d8a-b9bd-a420f3797f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0259df0-e493-4448-8e95-ef947511b058",
        "cursor": {
          "ref": "097d30f7-30b1-45f6-90cb-6667a563c4ee",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "73b40043-7c20-441c-abc1-84e5ea82e615"
        },
        "item": {
          "id": "b0259df0-e493-4448-8e95-ef947511b058",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3c17d79d-3139-44de-aede-d21141f768f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de2332f-0b1a-4fd9-ad04-349038194152",
        "cursor": {
          "ref": "693b90b1-f23f-4dfe-95e7-4a20996a7f5a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "df55a66e-a472-4e69-a6f2-acbe9dd4e57f"
        },
        "item": {
          "id": "3de2332f-0b1a-4fd9-ad04-349038194152",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a62768cb-903f-403a-84fd-a50acd10965f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f85e146-84b4-43a4-99eb-357f75ff1b7f",
        "cursor": {
          "ref": "0bbf0899-c93a-44c8-b797-11d132462140",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7ad1330f-6f8e-4a70-9b77-f0fcdc25315e"
        },
        "item": {
          "id": "0f85e146-84b4-43a4-99eb-357f75ff1b7f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3175c980-f19a-4bcd-9606-b38f84f6a540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f13b550-76c4-4541-9ee1-bd0d488a9fe6",
        "cursor": {
          "ref": "20f142a3-f416-43f9-a0d0-9feea78005db",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ba52687b-b95f-4a8d-a50f-c4ec36f92cdb"
        },
        "item": {
          "id": "6f13b550-76c4-4541-9ee1-bd0d488a9fe6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fa06b3b8-e03a-4eb5-84e8-24abc0b9201b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461eae34-f0d7-4450-888d-47b5e0311522",
        "cursor": {
          "ref": "b71742c4-409b-4294-a3cb-4aa4b7b0705b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3b982d9c-a4eb-40cd-a2f3-1ed48c52a317"
        },
        "item": {
          "id": "461eae34-f0d7-4450-888d-47b5e0311522",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "57640b2f-7019-40e6-9c3b-153213c66cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dae6f21-92df-4b91-8adc-17b4f68e91a1",
        "cursor": {
          "ref": "03a21916-1180-4a97-90ff-0d6ba20b3fc2",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "22239e94-f936-4f02-a455-1359ed0e1ff2"
        },
        "item": {
          "id": "1dae6f21-92df-4b91-8adc-17b4f68e91a1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "851f6322-f156-422b-8367-e1239a66ba9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a149c29-2d49-43db-ba31-6f3355ba1e71",
        "cursor": {
          "ref": "218876cc-e7a4-47a0-b0ad-0e67e8a537e9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4a049872-0105-40d1-a5c2-bb2ed0be02c0"
        },
        "item": {
          "id": "6a149c29-2d49-43db-ba31-6f3355ba1e71",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e85b9c57-05a6-45a8-819e-99d6cdeb3a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ee6d68-8a09-47f7-aa43-aaa810e6238c",
        "cursor": {
          "ref": "58d2a74e-22f8-47fe-bd94-b9afb30d651c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cc821742-961f-4d8f-bace-ae592a132424"
        },
        "item": {
          "id": "05ee6d68-8a09-47f7-aa43-aaa810e6238c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d72f8a52-f08e-4d9b-8fff-a6fd16f7118c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b789b5e-624d-4c08-8560-31c220790a74",
        "cursor": {
          "ref": "8ca8958c-3fc3-46c7-bb1f-2d5692c7f91e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "498b7395-f6c8-4733-8d4b-d4c1a09ab15a"
        },
        "item": {
          "id": "0b789b5e-624d-4c08-8560-31c220790a74",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "be07c217-a6b2-4daf-9aff-4efca8b05889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2820cb-b892-4415-9996-08cb2e878c26",
        "cursor": {
          "ref": "96a54f74-b2c1-4e71-91b7-47f1faf4b9e1",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8ab2502e-ed88-476a-bce1-e16d6f5444b9"
        },
        "item": {
          "id": "7b2820cb-b892-4415-9996-08cb2e878c26",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "aae06ab3-2cae-4667-a667-3dc3048d2b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612caf46-0416-47dd-8d48-fdab14fdd65d",
        "cursor": {
          "ref": "4fb2108c-fe52-47fd-a7ad-fa00921740b8",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "08533eee-f1cb-407a-b896-b2b63e28e79e"
        },
        "item": {
          "id": "612caf46-0416-47dd-8d48-fdab14fdd65d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "55fe0dc7-f3fd-497e-8c17-bc0c00c32b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32992fe7-19ca-46b8-a02a-ed770319e2c5",
        "cursor": {
          "ref": "030eb211-a36f-4bb3-ad04-a1c0206950bf",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c6e820f8-793d-4727-beab-478fcf57d494"
        },
        "item": {
          "id": "32992fe7-19ca-46b8-a02a-ed770319e2c5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b033c140-f249-4b69-9bab-43bcb462a673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11206c1-888d-443e-8a1a-53b931936274",
        "cursor": {
          "ref": "4818bf42-8cd2-44c3-9283-fafbadae26e8",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "53bc55f7-c0e8-48ee-8b7b-16467251ac6b"
        },
        "item": {
          "id": "b11206c1-888d-443e-8a1a-53b931936274",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d719523b-d266-471a-998e-aae452992b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9e42b9-1153-4077-9cc3-e4520a81127d",
        "cursor": {
          "ref": "d2cbb277-7f86-42e8-be88-f181b2285a71",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6510ffc6-a6be-4905-a67b-a4858a66ea85"
        },
        "item": {
          "id": "fe9e42b9-1153-4077-9cc3-e4520a81127d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c22e09da-dbf3-4c10-b50f-d2541421706a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a236ce6-d4a8-4a4f-bff4-7635b07651ea",
        "cursor": {
          "ref": "83ef35c4-fdd5-4d46-bea2-a53931a06756",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d606308c-7c23-42cc-8bd1-b8a717c8d5db"
        },
        "item": {
          "id": "6a236ce6-d4a8-4a4f-bff4-7635b07651ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "75bdba1f-3ca1-4127-9829-c5da1b408b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8f7038-1a15-4bfd-a861-fa4663a29e24",
        "cursor": {
          "ref": "fcda0b96-c086-4ac3-9bdb-8284b2d47b17",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bfeace4b-4c09-45d5-b122-a7870e6b8f2a"
        },
        "item": {
          "id": "7e8f7038-1a15-4bfd-a861-fa4663a29e24",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cff2a77f-a164-481e-a1ec-5737411aad48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78916ac-cd20-47f2-b662-100b130de9a3",
        "cursor": {
          "ref": "eeaf210c-e4c4-4639-8133-31e32c5e77b9",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "20a2510f-f1e0-483a-b51d-8522058d0598"
        },
        "item": {
          "id": "d78916ac-cd20-47f2-b662-100b130de9a3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4a442a12-1956-44af-8fd1-ce74a7525242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048db127-5d56-4f7f-80cb-161469c54358",
        "cursor": {
          "ref": "89cd329c-a6e2-4e2f-82b6-1f7077d89ab3",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "aa0618dc-7266-4850-9d14-d337b575b669"
        },
        "item": {
          "id": "048db127-5d56-4f7f-80cb-161469c54358",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6eedbce1-6de0-4d95-914c-e23b7cb23853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bbf7db-2ae7-4308-8360-3b2496957ea3",
        "cursor": {
          "ref": "bfc6ec94-abd4-47b5-83fd-1651fa1748d6",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0407abf7-686e-4c78-822b-41d104602299"
        },
        "item": {
          "id": "c1bbf7db-2ae7-4308-8360-3b2496957ea3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7f4e4657-dbce-4f90-b4b6-48ad35a497ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a09c4f-60dc-455b-85ee-004395aff66d",
        "cursor": {
          "ref": "7b165288-4d04-4dfc-8535-afaae8b4ef90",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1be33fba-5a11-47ff-8ea4-f3358174f7da"
        },
        "item": {
          "id": "e0a09c4f-60dc-455b-85ee-004395aff66d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9cd75c0e-239b-44f3-8c12-6a400ae3deb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b26f2f6-a92b-4839-bf75-2bf9fa79e03a",
        "cursor": {
          "ref": "b79a6543-fe3d-47e0-af37-20ddddec3c22",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3c1ab4e9-c204-4df8-aad0-79766dd5f641"
        },
        "item": {
          "id": "8b26f2f6-a92b-4839-bf75-2bf9fa79e03a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d83a27f7-44f0-4920-a272-5252ce5b1408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bcb2e4-b6ba-4682-b832-bc116a491d3f",
        "cursor": {
          "ref": "e86fec87-04c9-44dd-90ae-f1e16af0be5f",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5d8fe6e0-89ba-44c7-bd27-ce8cc9250d73"
        },
        "item": {
          "id": "e4bcb2e4-b6ba-4682-b832-bc116a491d3f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "11473703-79c6-4940-8bed-12ffaff1f2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ecc5a4-5e6f-44fb-b036-9799852e4e3e",
        "cursor": {
          "ref": "d00b6e3e-e4ab-460d-8006-38de5083f636",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "063bbcdd-1919-4f05-a8c6-c1fd1b502006"
        },
        "item": {
          "id": "f0ecc5a4-5e6f-44fb-b036-9799852e4e3e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "751872a4-519b-48a9-8267-c05cdd8555af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee825f6-6908-47d5-9102-93c5ee22c7ab",
        "cursor": {
          "ref": "1030788c-ed8c-4d69-b56c-8b375be4e84d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "414e8976-9603-4b63-9e1a-00c66e7fbd1b"
        },
        "item": {
          "id": "bee825f6-6908-47d5-9102-93c5ee22c7ab",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cc6c0a14-adf8-48a2-9cf5-642f01341dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378ccc2b-2fe2-4b11-aa43-0e394a468e90",
        "cursor": {
          "ref": "5497deab-d2db-4888-b4de-5c9eabe4fd7a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "55b7a1cc-e0ac-473f-88bd-c3a400099191"
        },
        "item": {
          "id": "378ccc2b-2fe2-4b11-aa43-0e394a468e90",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "42de86f9-a3bc-4bcf-b1d3-47d750878c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca466e6-722d-4b36-911f-49fc141c2133",
        "cursor": {
          "ref": "669b38e6-ba10-4f16-ad9b-5f0b56e9e162",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7512bf86-9789-4041-97b8-ac4150377384"
        },
        "item": {
          "id": "8ca466e6-722d-4b36-911f-49fc141c2133",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d87313a3-ca45-4708-b8a5-188439702b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1c732c-885a-4e09-9edf-14313968eb3a",
        "cursor": {
          "ref": "f2e3d392-ce38-48b0-8890-980a0614bbec",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f3daff58-60fc-409a-a677-1378175b29e1"
        },
        "item": {
          "id": "ec1c732c-885a-4e09-9edf-14313968eb3a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eeb12b89-96a8-4d20-ba1e-cb1a8d85695e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d363808-6dbd-42d4-ab6a-8525d6e48da7",
        "cursor": {
          "ref": "ca4d8a0e-995e-4352-8973-09b2231395da",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "96422609-b312-45be-a293-b8ddda4e77be"
        },
        "item": {
          "id": "7d363808-6dbd-42d4-ab6a-8525d6e48da7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6914c970-8b90-4143-8f97-4c2b507392a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b6dcec-300a-4f08-b4a8-244327bbafbd",
        "cursor": {
          "ref": "7dbacd24-e19c-4ee4-bd2c-7ea080e762bc",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5b16f678-fb48-4889-b892-acd961ac8735"
        },
        "item": {
          "id": "d5b6dcec-300a-4f08-b4a8-244327bbafbd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ef14cdbd-cbce-4d0e-bb73-0f0b744b4a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5a8fdb-54e0-4caf-8bae-01f70c0a24d3",
        "cursor": {
          "ref": "edb56fb7-e29d-403a-b3e6-b2564235de19",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "463d7b28-beb2-4e69-a5b2-06029d33f582"
        },
        "item": {
          "id": "5c5a8fdb-54e0-4caf-8bae-01f70c0a24d3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4958f476-049c-4811-a237-a35d95ffb7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20a9bcf-aab7-4b4b-a69d-8d2f229a95c3",
        "cursor": {
          "ref": "74ef84f9-2107-4733-9ec9-12323715487b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5075180d-f6c1-4359-8c5d-8dce275918e0"
        },
        "item": {
          "id": "c20a9bcf-aab7-4b4b-a69d-8d2f229a95c3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "123a9328-71c9-43d7-a900-e05dc2c00c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f41e830-e58c-4190-922e-3e46c6895982",
        "cursor": {
          "ref": "f6bf80bb-2d1f-4237-bfda-ee1899a7061c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "765a4836-462f-4769-8e17-8433be31e842"
        },
        "item": {
          "id": "4f41e830-e58c-4190-922e-3e46c6895982",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "df8c45b6-7ac9-435b-a03c-ba73aac35935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924c1f4d-9535-466f-964f-564a8d9f8527",
        "cursor": {
          "ref": "de666132-24ca-46c2-98a4-38355467d23f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7d287e63-ddc9-4d60-b385-365b6a50317e"
        },
        "item": {
          "id": "924c1f4d-9535-466f-964f-564a8d9f8527",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a270a3a4-9f6b-437d-bc0b-fcbccbcc837f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4e1a43-0695-4ea0-acce-013104e2eda6",
        "cursor": {
          "ref": "fd068e0c-0f2a-4898-94d2-27fd4106afe1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "551099f0-ae6a-4253-94b4-c44e33e43535"
        },
        "item": {
          "id": "3e4e1a43-0695-4ea0-acce-013104e2eda6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ffaa35ea-acab-4266-a5d3-0df147c93912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bb46ba-6b97-43f9-8014-78d37a24c776",
        "cursor": {
          "ref": "392f16c7-a2ad-4a92-a0a2-106e8abe4c12",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cd8ff1a7-7163-4e51-86ea-6957b8a3c120"
        },
        "item": {
          "id": "62bb46ba-6b97-43f9-8014-78d37a24c776",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6d83b1d0-b12e-406d-b39a-7471e9239550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250f1028-0232-48d3-a95e-d0b45080d5e3",
        "cursor": {
          "ref": "890fddaf-c4f8-4d93-8f1d-2dada909ffd5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "271dfbfd-a860-4703-96e1-b1bc8e34a573"
        },
        "item": {
          "id": "250f1028-0232-48d3-a95e-d0b45080d5e3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1829eb50-2f70-4f44-918d-b8800a0cb3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ee770c-a798-41bb-8668-8e60aca1e5de",
        "cursor": {
          "ref": "12f6997c-329d-4e4e-82ec-3233cece7205",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fa9e2d19-a6bb-4293-87fc-6e1b8e345a6c"
        },
        "item": {
          "id": "03ee770c-a798-41bb-8668-8e60aca1e5de",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fb2b04dc-01a0-44ef-9eff-72df291d031f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21322d7b-b832-40c0-afb9-294827b0f97e",
        "cursor": {
          "ref": "a8815849-9def-45c4-bea2-876e2d25481f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e1541b20-ed4c-489e-882c-7c3cdbf903fc"
        },
        "item": {
          "id": "21322d7b-b832-40c0-afb9-294827b0f97e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2bfda493-84d0-4803-acb6-f97f048b9aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11496fc-b0cf-49dd-a7d0-209b65064856",
        "cursor": {
          "ref": "11f3b5c5-51b6-4a26-a7af-b80ba6c9acc4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2e67d016-7011-4411-b433-2fea04525bc7"
        },
        "item": {
          "id": "f11496fc-b0cf-49dd-a7d0-209b65064856",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1c6908df-a807-48ec-9481-3f6d01d46dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d25a73a-f7e5-4a99-a32a-a6a09e4e46e6",
        "cursor": {
          "ref": "92a8f3b4-97a5-41c6-a1cd-400eadbd8d24",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ea803577-86cf-40c6-9b91-6a7bc777d8c2"
        },
        "item": {
          "id": "7d25a73a-f7e5-4a99-a32a-a6a09e4e46e6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d9b79f23-1850-4854-b162-4f209d64497c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8522f5-2ce8-40e7-873e-40ddc05da0f5",
        "cursor": {
          "ref": "009ecc43-7136-4948-a6a3-5a99d2d94c03",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "95606b13-fee1-456f-94a9-ed0ce1c40c41"
        },
        "item": {
          "id": "5e8522f5-2ce8-40e7-873e-40ddc05da0f5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1a72ef1f-e074-4a10-bf02-c65e62877234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e24a87-990f-4215-bf01-45fc4f480ebe",
        "cursor": {
          "ref": "195efe93-df7b-44b4-aa58-9d3fb87a5bc3",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "22119f10-39d4-431e-a4c3-4a86968982c7"
        },
        "item": {
          "id": "19e24a87-990f-4215-bf01-45fc4f480ebe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "28d527cd-cc71-441c-96cf-6b772de868ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad1f405-7e97-4065-b527-c5cbf9bcbbfe",
        "cursor": {
          "ref": "eef726a5-e33a-4fa9-a54f-7c0dd4310da5",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b15abbd8-40bd-44eb-ba90-ee2868cb8d80"
        },
        "item": {
          "id": "6ad1f405-7e97-4065-b527-c5cbf9bcbbfe",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0f72ac86-efcc-4138-9eec-dc3510ba5864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec28eafe-b979-4270-9e5e-771f02d30a8c",
        "cursor": {
          "ref": "c526ec67-afb0-44cd-9c70-1e72f86de8e3",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2458f2f7-cafa-438e-aa69-b09807913795"
        },
        "item": {
          "id": "ec28eafe-b979-4270-9e5e-771f02d30a8c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "303dd239-b577-4b74-a642-bf9c64896373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c48b7c-74c1-41b3-b1f8-6bf30c94f492",
        "cursor": {
          "ref": "59eaa0d3-e6ff-49e4-9696-e5fba064712d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "77fe3478-f3db-4415-aa58-bce88c4fa883"
        },
        "item": {
          "id": "12c48b7c-74c1-41b3-b1f8-6bf30c94f492",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eaf37692-310f-4f28-9819-c6b9eeb19139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac8faeb-3015-42f6-aa44-c1e24834f645",
        "cursor": {
          "ref": "c7d6ffcf-821a-4e7d-b4f3-dadc389dae9b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6d4c5764-6be0-4276-9d6c-a0bdd183571a"
        },
        "item": {
          "id": "1ac8faeb-3015-42f6-aa44-c1e24834f645",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c48492f0-b05c-4465-b3bd-3cde550ec9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed01da2c-d0a0-4484-b10e-e48ad362aeef",
        "cursor": {
          "ref": "a59b7ad9-4390-4d7a-ac00-7318346fcf4a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9baeccc4-b425-4cee-8834-1bf74a288522"
        },
        "item": {
          "id": "ed01da2c-d0a0-4484-b10e-e48ad362aeef",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c001c302-1b87-486e-9cc8-20c560a02b2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d08d91c-7636-43ce-a288-757cfe6b186a",
        "cursor": {
          "ref": "5efb965c-3fe6-4269-8526-7bdc120260ad",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "40c19f2f-8d21-448c-bf11-6a2ee39bfd54"
        },
        "item": {
          "id": "2d08d91c-7636-43ce-a288-757cfe6b186a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a26823a0-4d19-4d1a-8649-6298aef2a6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ca4d2b12-80f3-405d-9313-bd5a07578222",
        "cursor": {
          "ref": "c7f4161f-9efb-4e91-bfc7-77ea227224d5",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3c2a540e-9145-4cd1-b752-8828a7a0bead"
        },
        "item": {
          "id": "ca4d2b12-80f3-405d-9313-bd5a07578222",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a43aa2cf-1011-4f15-b077-1175f3468454",
          "status": "Created",
          "code": 201,
          "responseTime": 2774,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a3b800-5141-4994-bfdb-4d9496df4d72",
        "cursor": {
          "ref": "e34ee98e-1bd9-4703-bad4-85ba238d85cb",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5de41ff3-9024-436f-90ef-61ff7ef6a8ea"
        },
        "item": {
          "id": "71a3b800-5141-4994-bfdb-4d9496df4d72",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "519abd75-1672-4860-94ca-aa458f4ea518",
          "status": "Created",
          "code": 201,
          "responseTime": 2726,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "78036408-764a-470e-a722-e028a79a3693",
        "cursor": {
          "ref": "f1e6c456-9891-4feb-87ee-4a2c01d84787",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b62ec6e2-bb9e-43b7-b772-c25d99c5157c"
        },
        "item": {
          "id": "78036408-764a-470e-a722-e028a79a3693",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ad1796ba-d8bd-4572-baa6-2ab35b9d8623",
          "status": "Created",
          "code": 201,
          "responseTime": 1968,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed0e3fe-7f57-4fd3-aede-25d4fb6e8f5f",
        "cursor": {
          "ref": "8c654bb3-2aa4-48cb-9471-e09323aefb31",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dcc34687-5fc7-4779-b5fe-ebbb5e2903b8"
        },
        "item": {
          "id": "aed0e3fe-7f57-4fd3-aede-25d4fb6e8f5f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ded674bf-571b-4d99-95fd-aac1ef081208",
          "status": "Created",
          "code": 201,
          "responseTime": 2129,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6462be-dd03-4d92-893a-2087d3b97b39",
        "cursor": {
          "ref": "5a1d5060-a6ff-446b-b4cb-67a00705ed34",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6343a059-7de7-4e6a-b61d-d55b31f9f26a"
        },
        "item": {
          "id": "8f6462be-dd03-4d92-893a-2087d3b97b39",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7b2fcf5e-0e82-48e3-a3f8-21d5730e9e1d",
          "status": "Created",
          "code": 201,
          "responseTime": 2201,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e0baf4-62ec-4839-99a7-cb9ff0599cf3",
        "cursor": {
          "ref": "fe8501de-4061-42f1-ba95-f225537e9649",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "29c4a9a8-65e2-4527-9807-f07f20bb5d17"
        },
        "item": {
          "id": "38e0baf4-62ec-4839-99a7-cb9ff0599cf3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dfcf6543-54d1-4b13-b9e8-cca8e94d6647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9067008d-2efc-4abd-bdc2-4a9918058227",
        "cursor": {
          "ref": "c76e2275-cb42-40b7-b131-49a9288be0a9",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a9d4f608-ed95-45f0-a69d-028bf6a4f246"
        },
        "item": {
          "id": "9067008d-2efc-4abd-bdc2-4a9918058227",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1b67574a-27d5-4d54-8ec7-fa533ae39c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4990af-3e4b-4162-aa99-099d8e1881d4",
        "cursor": {
          "ref": "ee6c9d0e-88c2-4b04-83d8-e6b10fcb97dd",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c0adfcbb-3bce-42d3-b090-80aecc8aaca4"
        },
        "item": {
          "id": "bb4990af-3e4b-4162-aa99-099d8e1881d4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "664b6a65-abf0-472b-8fdc-f4bd602360ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe9fbdb-755e-43fd-a3f6-c33a265817f0",
        "cursor": {
          "ref": "d89ddf13-b83b-4313-bc15-04e498b4f391",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "15018771-f24c-46e5-a7c7-7fd14e2f90c4"
        },
        "item": {
          "id": "cfe9fbdb-755e-43fd-a3f6-c33a265817f0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b8abfaf3-f7d1-4673-a54a-aa9d8cc7f843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535c4a99-0e0e-4790-8c66-625b2622d6c7",
        "cursor": {
          "ref": "d0d43def-a208-4d44-b493-522891675f13",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "02dedf01-ea5b-413e-bbf7-6bf7a6a957d0"
        },
        "item": {
          "id": "535c4a99-0e0e-4790-8c66-625b2622d6c7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bb2d9c27-37a7-40eb-b430-58362c3c3ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a140f0b0-e2f4-4225-be89-0664c2d17aac",
        "cursor": {
          "ref": "615b7a87-131a-4890-b5d0-e2b5e3d94408",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "100d2385-8ce6-4803-8c1f-1a1c47049cdc"
        },
        "item": {
          "id": "a140f0b0-e2f4-4225-be89-0664c2d17aac",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f8074729-451d-4a66-9b61-14c79d63c869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db00725-64df-4393-9b22-a2e67f9b3920",
        "cursor": {
          "ref": "1fd22f78-e40a-48a0-bc0d-d681ab40a080",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1294d6fb-4443-4a49-9329-f67960dc7d7f"
        },
        "item": {
          "id": "1db00725-64df-4393-9b22-a2e67f9b3920",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "381d01af-1999-464e-9454-54c6173a9a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19bbfbd-9cf8-4980-a14e-94bd30354ebe",
        "cursor": {
          "ref": "d8a82a1d-7750-4bda-99e3-af4231d5a32e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "766f078a-84c5-4b4e-b498-7f783f1b061a"
        },
        "item": {
          "id": "e19bbfbd-9cf8-4980-a14e-94bd30354ebe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "09103b87-72f4-4386-90fc-b70769620d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df68ad4-497e-4d43-915f-b7bcf77fca8e",
        "cursor": {
          "ref": "26c6b238-53dc-4144-9dff-09f89131e24e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0be5c6f3-c8eb-482a-8ffe-df784ed26ef3"
        },
        "item": {
          "id": "5df68ad4-497e-4d43-915f-b7bcf77fca8e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "275fc452-8e08-44cf-98d9-7a46ab0b2915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab80d6c0-951c-4796-ad3e-a4dbc46dab3c",
        "cursor": {
          "ref": "197b0855-2189-4237-bb1c-e59758085f70",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "97794ddd-d5ae-4e85-bf5a-9798de7a00af"
        },
        "item": {
          "id": "ab80d6c0-951c-4796-ad3e-a4dbc46dab3c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0b2dfc12-97eb-4c8c-82a2-487fbbc9fdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7733fd-c2d0-4a22-86b1-ec32f7a18fe1",
        "cursor": {
          "ref": "8595f6f3-b783-454f-844d-ecf977d310f4",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "74d20880-6ab9-4e48-ab17-96986afa9c02"
        },
        "item": {
          "id": "9d7733fd-c2d0-4a22-86b1-ec32f7a18fe1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9c211326-ffe1-4e07-bdb7-d4421d076e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67b795b-43db-4125-a20b-f2ebfbf2aea1",
        "cursor": {
          "ref": "8be837d4-2970-4f4e-9b29-713bebe61b7e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9308d9ee-7d02-4c79-a188-5e95cd21a9c8"
        },
        "item": {
          "id": "a67b795b-43db-4125-a20b-f2ebfbf2aea1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "07392fa3-8723-4496-9f89-356def4d668e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfbbb21-5860-4eab-b442-a7bc3344537c",
        "cursor": {
          "ref": "27467402-464a-4d9a-b2de-1f08ee9b28b0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1f427fbf-882d-443c-a423-6e492e73a065"
        },
        "item": {
          "id": "fbfbbb21-5860-4eab-b442-a7bc3344537c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e924c2ff-efeb-44fc-abe2-bf2d0bc87265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a60d958-9375-4033-a558-4f782af0a6b8",
        "cursor": {
          "ref": "150180d6-9caa-4922-b8a1-523e85fd9e53",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "60c9e816-aba9-43a7-9309-571a72fb9043"
        },
        "item": {
          "id": "5a60d958-9375-4033-a558-4f782af0a6b8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1f15ac0a-8d8a-43f1-b052-53635e0f3ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca086d7-86d4-4f96-badd-0a7a129ba5c0",
        "cursor": {
          "ref": "8019b57a-0896-4a87-8be5-812142c1df04",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a653b8e3-90cd-4e50-9483-9066cac53f7e"
        },
        "item": {
          "id": "3ca086d7-86d4-4f96-badd-0a7a129ba5c0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1c6823a2-56dd-448d-911e-9121b134151d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b0c81c-11c3-4223-b750-97e44b8be27b",
        "cursor": {
          "ref": "b289ca03-b2a7-4fd8-a829-dba678eb6f75",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1006879a-9d35-4cad-a321-4310415b769c"
        },
        "item": {
          "id": "86b0c81c-11c3-4223-b750-97e44b8be27b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0e342f86-a256-47f4-ada4-2b15d85a1bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fbce4a-d0f2-4d72-8710-331adfb169f3",
        "cursor": {
          "ref": "180ff46f-ddca-4acc-a689-860e0eebb771",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "317c8312-01ce-4512-b065-2f519e6ee15a"
        },
        "item": {
          "id": "00fbce4a-d0f2-4d72-8710-331adfb169f3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7fb0d530-402d-4748-8060-9b95dc5ee53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9a071e-7933-4ca3-ab91-f6ff1eaec547",
        "cursor": {
          "ref": "2380aca5-4cdd-4eea-a165-988adcef5399",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1b26f6c4-49bc-4a18-bb17-39c35eca6f89"
        },
        "item": {
          "id": "3f9a071e-7933-4ca3-ab91-f6ff1eaec547",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8c6519a4-479d-468c-8da5-05865f6d1ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a42cfb-6094-4651-a849-2ae904f0652a",
        "cursor": {
          "ref": "e27b3c7f-d847-45ee-b8af-4b46f3fe912b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "17ba4b56-934d-4629-a07b-c10c7939553d"
        },
        "item": {
          "id": "e1a42cfb-6094-4651-a849-2ae904f0652a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ae52d589-d069-490e-9c27-e87153504282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f05e1b-2e91-4590-a9f4-2539a451bf2d",
        "cursor": {
          "ref": "f06e64ad-9b93-4aef-95f8-1cc40e29825c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "892ddaab-694e-47bd-88df-3fe82bbdb4ef"
        },
        "item": {
          "id": "81f05e1b-2e91-4590-a9f4-2539a451bf2d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "447624e1-383e-4dac-a6b2-92b4806f216e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5a251a-cb25-4edf-8b92-62463547dbdf",
        "cursor": {
          "ref": "659947a5-57a9-49b0-98a4-05651cde50ea",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bc4cd564-af95-4da5-937b-1e18580b3569"
        },
        "item": {
          "id": "6e5a251a-cb25-4edf-8b92-62463547dbdf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4f2b3e22-74ac-4231-9915-21d7a7df6c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4aa1ba-40bc-4e59-92ef-dde62570e244",
        "cursor": {
          "ref": "c0da8c88-f865-4178-a543-a92e6267e6ff",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dda4e7b6-85a7-496f-8fee-4e34e598bf1c"
        },
        "item": {
          "id": "2c4aa1ba-40bc-4e59-92ef-dde62570e244",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "42c5abc9-bb17-4f6b-a05a-7c14b7977029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9722806-e108-4818-98fc-13de43846c20",
        "cursor": {
          "ref": "ae74f6a8-57b6-4c11-8cd3-96654a600b98",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dc9296ce-3400-4775-be58-abf3f74d02a2"
        },
        "item": {
          "id": "e9722806-e108-4818-98fc-13de43846c20",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a64857c0-db7c-4120-b3da-a176d94214a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6c509e-f9a4-4add-b424-4c864c381729",
        "cursor": {
          "ref": "c35bde7f-9ef1-413f-863c-3a7351488eaf",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6cafb19b-0c77-4f12-be45-196c204aa085"
        },
        "item": {
          "id": "3d6c509e-f9a4-4add-b424-4c864c381729",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "69e834bd-ddbc-43cb-81c4-8d7a1dbafe77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efe39a8-5eeb-44e3-9714-c5f07e3d3245",
        "cursor": {
          "ref": "63c41b54-4f87-4fb1-8b4f-91d87ef7e227",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2581766d-7cc1-4be3-a93f-8bee95ff1771"
        },
        "item": {
          "id": "3efe39a8-5eeb-44e3-9714-c5f07e3d3245",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2a2d435a-a6d0-48d9-8ba3-8fc905191582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ff9bdc-da4a-4706-a4ef-8f029a06fc9c",
        "cursor": {
          "ref": "b3ad5b17-1870-425c-81af-aece3977a779",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ee00a895-e864-4d93-ba0f-09e5ccee09d4"
        },
        "item": {
          "id": "75ff9bdc-da4a-4706-a4ef-8f029a06fc9c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8982ad21-3910-4639-9616-95e8a79dc31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e2e05f-ee07-4805-8a3e-973410c916b4",
        "cursor": {
          "ref": "5ec0424e-f472-4196-aeee-122b80797d4f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bb09c625-ca7f-427a-ba3b-fc1b0201d7f5"
        },
        "item": {
          "id": "87e2e05f-ee07-4805-8a3e-973410c916b4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ee46f249-31ea-4f5a-ab84-5091d2a3c048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7095ba9c-5d0a-4193-a5b0-d9dfd656369a",
        "cursor": {
          "ref": "5cd0cfd2-987f-442a-861f-22a76b5f1591",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6b86d12a-72bb-4145-81ce-16ecc594fc0c"
        },
        "item": {
          "id": "7095ba9c-5d0a-4193-a5b0-d9dfd656369a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aff10306-5225-4528-8cf4-8463c6f7a106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f6056c-f405-4796-a938-3a75c243acd1",
        "cursor": {
          "ref": "8c34e4db-7ee6-4643-ba8d-c79c41fb6470",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f91afce3-b582-4629-8d58-b3094ccd2fca"
        },
        "item": {
          "id": "04f6056c-f405-4796-a938-3a75c243acd1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cc8062b3-0db1-44c8-9732-36245ebc3a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174eba44-b4c5-4dee-abfe-86fa7c67cb94",
        "cursor": {
          "ref": "7ee3b2ae-bc7d-4ee4-8c8e-99f6412aac16",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "95cdc7d8-fb62-4069-b065-8280d231428a"
        },
        "item": {
          "id": "174eba44-b4c5-4dee-abfe-86fa7c67cb94",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f1c9c590-4a22-4bcb-a294-c71539d45b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a164fe-0990-41d9-bc6a-bbb030c8c89d",
        "cursor": {
          "ref": "67e92d2f-c071-4166-88f7-a957dc89e2b1",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1f21f0b2-7f2c-40cc-9659-b159d35c3b88"
        },
        "item": {
          "id": "d1a164fe-0990-41d9-bc6a-bbb030c8c89d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "87aaf1ab-a906-490f-b6f1-8753d98ccf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f809c4-ca3e-4340-8114-19ea0ac8589f",
        "cursor": {
          "ref": "2855af3e-6c95-4026-868d-8e89c1830465",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dc9ea942-e292-4c2e-849a-2f164c0425a5"
        },
        "item": {
          "id": "d2f809c4-ca3e-4340-8114-19ea0ac8589f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "23a7ac6f-5be7-4268-9996-9105742de5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96104049-e67d-45ea-853d-a096f74b0c24",
        "cursor": {
          "ref": "03cd59e4-faf7-434e-99db-a2e0a1600e0b",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5aa413cd-1e91-4404-938d-c5c46ac9a1a2"
        },
        "item": {
          "id": "96104049-e67d-45ea-853d-a096f74b0c24",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7d5d345d-6ac0-4c1c-8f3f-4a141790efaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50584a9f-5c99-4b04-9d8b-30509a1edefb",
        "cursor": {
          "ref": "83d9a47e-3967-4d68-96a7-a495257ab150",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "991a4d38-db1f-4bb2-8bfe-8ab61f834076"
        },
        "item": {
          "id": "50584a9f-5c99-4b04-9d8b-30509a1edefb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5c112041-375c-48c6-ae04-d55bacee10b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6be9a72-3d99-402a-b269-dad8d0b6016c",
        "cursor": {
          "ref": "4d192e2e-bcc7-4463-ae98-d020cc2c4b36",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1824d53b-7308-4d36-becd-97fdcae3310f"
        },
        "item": {
          "id": "f6be9a72-3d99-402a-b269-dad8d0b6016c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8a08ac7a-66e5-4017-8e4c-6e632371d715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b783b142-d3bb-49fc-bab5-a8caa4975bdf",
        "cursor": {
          "ref": "40e1e334-5af6-4277-9a2f-e0a59da7ac6a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b1ad57d4-1b01-4a3e-94e7-c112729462e4"
        },
        "item": {
          "id": "b783b142-d3bb-49fc-bab5-a8caa4975bdf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b76ef7ae-737f-4d93-8717-ab37aaf6012c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42ec096-1de1-4c19-8df3-b8630b5e0bc8",
        "cursor": {
          "ref": "de92064c-c8f6-4c1a-ae35-613705f8beb9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4b707914-f05d-47c7-b9b8-984e05223534"
        },
        "item": {
          "id": "f42ec096-1de1-4c19-8df3-b8630b5e0bc8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0309eda8-25f2-4fac-b424-59a67837370a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4be9e3-c11b-4fe5-895d-3611315d18d2",
        "cursor": {
          "ref": "a8d7fa46-8fd6-4b94-a93c-518089d81c7c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "68d9118d-0a1f-430c-84c1-9349ed7d9bbb"
        },
        "item": {
          "id": "ab4be9e3-c11b-4fe5-895d-3611315d18d2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9b184df6-0b7f-465a-87c9-349cfdf82389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0b5b34-5fdd-485e-8b17-2842d3a1f825",
        "cursor": {
          "ref": "e643892b-047d-4cc5-a076-2de308dfed8c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1bebc9a6-b7f2-4323-841e-c8b9fd41ee80"
        },
        "item": {
          "id": "2e0b5b34-5fdd-485e-8b17-2842d3a1f825",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2ed0bb84-ca47-4cc9-af77-84c6b86412c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f628a0f5-a267-430f-bd0e-b98980ea43b6",
        "cursor": {
          "ref": "8fd04436-d0cd-46c7-8bf7-2161980f15db",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "66b821cf-1871-4c86-85d1-a90ee226e594"
        },
        "item": {
          "id": "f628a0f5-a267-430f-bd0e-b98980ea43b6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3a130ba2-ed44-4eba-ae54-f07da1e5ffd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a82d50f-cff0-4e0b-bf69-64201273f027",
        "cursor": {
          "ref": "ebe37548-a8a1-494e-b1dd-4d897d61df42",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "108dba04-94b3-40fe-8aca-9bede391d290"
        },
        "item": {
          "id": "4a82d50f-cff0-4e0b-bf69-64201273f027",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "43f24599-fbbf-44a8-9127-32593b2df393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82479ece-8953-4ecb-a95f-889f1f06a000",
        "cursor": {
          "ref": "72104453-9cb5-411b-b34a-475c797d2207",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ab2736e0-867e-4402-bbae-81cac4330111"
        },
        "item": {
          "id": "82479ece-8953-4ecb-a95f-889f1f06a000",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0179abdc-07cc-4965-96ad-b9bca35f41c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcea137d-a3f1-4c38-8f15-e1cb122df2db",
        "cursor": {
          "ref": "e8330e49-9fb3-4194-bf75-400e3fe0499a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e48e26a5-7437-4c12-a982-ac622ccc9835"
        },
        "item": {
          "id": "dcea137d-a3f1-4c38-8f15-e1cb122df2db",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "28f00a63-bfe2-465f-8e17-dbad52f331ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b827cefc-aad9-4ed2-92af-81be01c7e661",
        "cursor": {
          "ref": "f9c66958-9ea5-4891-a6a2-224a386d1650",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cad08e50-4c62-4d94-a56e-f9b01387b586"
        },
        "item": {
          "id": "b827cefc-aad9-4ed2-92af-81be01c7e661",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "035faad5-6de9-4d98-ba0d-3104dcf284a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22addbb7-1471-4749-bea7-4082352079ee",
        "cursor": {
          "ref": "08e03460-14e1-4d33-b7df-a3cebc342947",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fe5345d5-605e-4a1b-8a88-2bbd060a2391"
        },
        "item": {
          "id": "22addbb7-1471-4749-bea7-4082352079ee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6da9ecdd-7cba-4445-a389-a55f3dc09112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df448807-3c11-497f-9c8c-90abf5418ead",
        "cursor": {
          "ref": "b3ae9478-9e2d-48eb-a7f2-afee61d16c91",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5318b756-94fe-4e02-9e7c-111f09a5b873"
        },
        "item": {
          "id": "df448807-3c11-497f-9c8c-90abf5418ead",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e38bbb52-02d7-4770-8d18-e8f0d97d3265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2834f249-c97c-4d5b-aa54-a054ba86c7ee",
        "cursor": {
          "ref": "fed44da4-b209-4b5a-9e63-09dbebfa6d49",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9f9aaf09-1a96-4a15-999b-39ad075dcda8"
        },
        "item": {
          "id": "2834f249-c97c-4d5b-aa54-a054ba86c7ee",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "50503f36-ca93-4a04-876e-eec84b1accb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1613ed58-3fc7-4713-866d-4525b4975884",
        "cursor": {
          "ref": "a47e1c9b-e887-44e8-9727-a282aeec4537",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4f7bfc28-83b6-4cf2-b922-a3440b8c1122"
        },
        "item": {
          "id": "1613ed58-3fc7-4713-866d-4525b4975884",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aaf3ca92-0f9f-4cce-8e84-0a2cc44c6cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bd19b3-2c53-486f-8928-5f432d758d5b",
        "cursor": {
          "ref": "d336f4b8-9b46-4fe9-8821-3ace3b83ed64",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d0037fae-2cbe-4589-8338-dbf72aa7c57c"
        },
        "item": {
          "id": "d0bd19b3-2c53-486f-8928-5f432d758d5b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3db17bba-9b45-439d-ac34-13c9c84d23ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068fe1be-cfa5-45da-ad41-bcc5b96e8a44",
        "cursor": {
          "ref": "010f10dd-43dc-4dbc-9c5f-aea7c45ab8aa",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "21956a7b-354a-48d3-ba98-bc27f2b904b4"
        },
        "item": {
          "id": "068fe1be-cfa5-45da-ad41-bcc5b96e8a44",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "505f1f71-748b-4d24-a117-dd5fb4643a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd863a0-549d-4b8d-bf15-f16cb8c50b52",
        "cursor": {
          "ref": "63f8c1a8-1b96-4bc7-b359-f92576ed4a8e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b1c724ce-8986-4635-9a9c-c06b975c22c0"
        },
        "item": {
          "id": "7cd863a0-549d-4b8d-bf15-f16cb8c50b52",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "47685842-e566-450b-89ee-f2398ab921c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8843c4fe-6f95-45c6-9a00-5dfcb8876916",
        "cursor": {
          "ref": "65778d4a-384b-453f-8f1b-247d027c23d3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a38de6e2-7d90-48f5-b2ce-b4d1c9ae4f54"
        },
        "item": {
          "id": "8843c4fe-6f95-45c6-9a00-5dfcb8876916",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "510f2e70-3fd9-4703-9f9f-12a18f9af57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9045eb0-86a0-462a-8f96-b9104eb8f203",
        "cursor": {
          "ref": "09d49ad6-2a1e-4c11-a700-c09809349ad9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "52f0d7d8-fd22-44ac-95f9-b7d54113dda6"
        },
        "item": {
          "id": "d9045eb0-86a0-462a-8f96-b9104eb8f203",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "71685756-fc69-4246-b055-a94599cbb148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac662bcd-70ba-4224-96cf-3e56d3e3d6eb",
        "cursor": {
          "ref": "9c285b9e-3912-4e27-8f30-7cd356cb0dba",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "07c9d7f4-321b-4d4d-a8ec-d42f3267733a"
        },
        "item": {
          "id": "ac662bcd-70ba-4224-96cf-3e56d3e3d6eb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a29faec3-6010-4948-b978-a4baa9b9a286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23771e19-4b7e-4c26-853f-c6a0a3664460",
        "cursor": {
          "ref": "759628c3-e86e-464f-b9c1-73940890d140",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d03ee030-0ee8-4216-b2ee-4c2f545c5b84"
        },
        "item": {
          "id": "23771e19-4b7e-4c26-853f-c6a0a3664460",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c66c45b1-b945-43bf-9f4b-c1b2393fd75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c229712b-4a51-4ba2-8552-c816f95ee68e",
        "cursor": {
          "ref": "3925e673-ef8c-4706-83be-7bee654a311a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6bf421bf-e5db-47a4-8882-003803ce2331"
        },
        "item": {
          "id": "c229712b-4a51-4ba2-8552-c816f95ee68e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c9d901ef-7bd7-46a9-9c34-dc07768a81ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43c5c7f-bf0b-4067-80ae-7cd084608fd1",
        "cursor": {
          "ref": "fe459cd8-124d-455e-a1c1-b29e7e31b5ec",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7683f69a-96ab-4c6c-ba82-75e8460a9e52"
        },
        "item": {
          "id": "e43c5c7f-bf0b-4067-80ae-7cd084608fd1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2dce6a8a-dd1f-4cfb-8105-386fcd9a0336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4324d9-829f-4ccd-9f8e-3a009650fcac",
        "cursor": {
          "ref": "9a315b61-0826-49a4-a202-aa1e099e2598",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b8ff364a-6d1b-45d0-a14a-92307764ae15"
        },
        "item": {
          "id": "8c4324d9-829f-4ccd-9f8e-3a009650fcac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "02b444f6-1eeb-4dfd-858d-581fbce91e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e81cb2-a139-49e8-ba46-8ee0781e8895",
        "cursor": {
          "ref": "15895e05-9a96-481f-9770-ae354ce5e553",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1b251459-168a-4717-9aa9-4e5e2f301905"
        },
        "item": {
          "id": "26e81cb2-a139-49e8-ba46-8ee0781e8895",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "807ae43d-b6a7-4972-975d-cfea3e05efa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85762e7b-0493-499b-9d22-b3d92a2b8b85",
        "cursor": {
          "ref": "e7b96ba0-af42-4d50-a0a6-d01f47e76362",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a89b8506-09ed-4d25-b1d2-a0cab6f9d033"
        },
        "item": {
          "id": "85762e7b-0493-499b-9d22-b3d92a2b8b85",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "36cdb8cb-6bd5-418c-bdf6-fe84e6c64ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c7d044-9f1b-4f53-91b0-237037d821b6",
        "cursor": {
          "ref": "5e13ec64-e6e6-4f7e-b92c-7227fcfa2251",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "55705d91-33f8-44fa-b7e6-24065fab9c61"
        },
        "item": {
          "id": "28c7d044-9f1b-4f53-91b0-237037d821b6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "815e2066-e439-4ccf-8659-c7da7ac48f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b8d993-4f7a-44c0-b58c-da9d81847091",
        "cursor": {
          "ref": "5b7e415a-ee51-4054-8e93-c95c830c9fb0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ca94a11c-94a9-42ea-b090-6b5b68678a52"
        },
        "item": {
          "id": "f6b8d993-4f7a-44c0-b58c-da9d81847091",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8bb1c15c-af63-4b35-8c79-29b10dfbcf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf250226-81e1-4028-896e-d4c092b8932e",
        "cursor": {
          "ref": "b8b4df95-cac4-461d-90fd-e2cd17972f84",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "433b8c4e-e347-4deb-ac23-5dfb659844aa"
        },
        "item": {
          "id": "bf250226-81e1-4028-896e-d4c092b8932e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fab7ab95-6c1e-4e10-b7d7-b30776078c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd6d2bf-96de-43a3-a550-318e4a39a68d",
        "cursor": {
          "ref": "e1c0714e-7606-41e7-8656-ffea31844a2d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "aef9f5aa-18a8-463b-9411-3c758f99284a"
        },
        "item": {
          "id": "4fd6d2bf-96de-43a3-a550-318e4a39a68d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "67d2b244-6588-4dd6-b702-e1007ec3028e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aad5a4e-bc90-4793-a702-771e24fc5f2a",
        "cursor": {
          "ref": "469b8bc4-6d04-447e-9180-f9c4e137ee1e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0c4bd25d-4dde-4c2c-b558-364f95f32c31"
        },
        "item": {
          "id": "8aad5a4e-bc90-4793-a702-771e24fc5f2a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "de0639b0-0dcb-46f3-acdd-20f3041dd78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ea279e-6536-46d3-a198-80072be6a537",
        "cursor": {
          "ref": "24c1f98f-66b2-4cfc-af27-4850ee2e1e38",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "871386d8-2b56-4978-9fd4-0945d296e79d"
        },
        "item": {
          "id": "39ea279e-6536-46d3-a198-80072be6a537",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1c210130-3008-4505-9692-12c5d79a568c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d80e3e6-98eb-4a04-8d09-1fff0d2dad45",
        "cursor": {
          "ref": "39319e5f-ea1e-4541-b6fd-8af5055f1442",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f618190d-a4d6-4f74-ae55-3e846919ea77"
        },
        "item": {
          "id": "9d80e3e6-98eb-4a04-8d09-1fff0d2dad45",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d68c9774-4521-4774-9bee-153f4048e1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e8fff4-8074-40ff-9605-e0744aed7785",
        "cursor": {
          "ref": "3c74229a-0ab7-444d-8e1f-b4d7e9df5c45",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2a97e1ac-5796-4fa2-8e80-795260de6eb7"
        },
        "item": {
          "id": "c0e8fff4-8074-40ff-9605-e0744aed7785",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5005a1af-9ba1-4d8b-8301-653b4c479784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41a47aa-2fd7-411e-97db-a62084929250",
        "cursor": {
          "ref": "52619884-bed8-400d-b347-1052fcb9ad6d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a37a3790-86ae-4ece-8d08-51a1ef5e6602"
        },
        "item": {
          "id": "e41a47aa-2fd7-411e-97db-a62084929250",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f0f99381-dc13-4361-a0c9-4927bf2e827b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e066f7-2e60-4859-871f-dfc30af2324f",
        "cursor": {
          "ref": "6297a72c-2bfe-43bb-afed-cbc3153c63aa",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "245f8c03-2892-4123-8053-a861cda3a180"
        },
        "item": {
          "id": "24e066f7-2e60-4859-871f-dfc30af2324f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "696e3c04-595e-42aa-a23d-1666ab592b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad33b2f-527d-45fc-8e4f-ccb856153910",
        "cursor": {
          "ref": "ea6e3e4d-c313-4efa-8f5c-6c247c5ccd56",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b422ecf4-f00d-4788-a796-ed2c05d088c1"
        },
        "item": {
          "id": "1ad33b2f-527d-45fc-8e4f-ccb856153910",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e26722bc-b5cb-4134-9787-627f7255bea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02c0171-1c66-443b-88b8-2483e3dc6b53",
        "cursor": {
          "ref": "c34c84a9-bb35-4721-98e2-0ac0aeb2be9c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "912da957-a101-4424-9ad2-a0e560d0ef84"
        },
        "item": {
          "id": "d02c0171-1c66-443b-88b8-2483e3dc6b53",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7d598003-cd2a-4271-9cbd-f38c20ac7526",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05081f2e-decb-4d9c-887f-fc465f95e567",
        "cursor": {
          "ref": "907dc19f-438b-4f39-a8e7-bb5079a57155",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3e6a1113-76ec-4c35-9ff7-e98c1e15f5d9"
        },
        "item": {
          "id": "05081f2e-decb-4d9c-887f-fc465f95e567",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e604c693-7371-42b0-8ded-cfda144b7540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f524af5-196a-4749-9ca9-d128acf1b85c",
        "cursor": {
          "ref": "f38a0d5d-0840-4d9c-b051-981e3ef610e2",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0c2e4604-5323-473e-8bae-90d6aa13a007"
        },
        "item": {
          "id": "9f524af5-196a-4749-9ca9-d128acf1b85c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "47fc6ec5-094d-4b3c-8e15-c5751d724c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8588e5-c954-4aa8-abb7-4e3817fe016a",
        "cursor": {
          "ref": "a43abd29-010f-482e-b913-6b72c6ac6573",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "295d8dea-8023-4d6a-80cb-4bb9619b3cae"
        },
        "item": {
          "id": "5c8588e5-c954-4aa8-abb7-4e3817fe016a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1f9115ec-2a5d-416e-a2c1-a44c3a64e9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ef6a89-8e77-48c4-b52a-ebc0658c4cb8",
        "cursor": {
          "ref": "f78b01db-1aa9-43bf-a4f4-2083a9130e2f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "43bbbe3d-e0f4-4b69-a507-9e36a02ae9f9"
        },
        "item": {
          "id": "88ef6a89-8e77-48c4-b52a-ebc0658c4cb8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e7605e9a-7b29-43f7-9d9b-f217dc12abcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819afba1-6be7-4801-97c9-fc456c4a54b9",
        "cursor": {
          "ref": "cb49219b-598d-431b-81b4-28b89abbe6f2",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6f3456bc-d0a5-4d7e-a3e4-7abcb2b26d22"
        },
        "item": {
          "id": "819afba1-6be7-4801-97c9-fc456c4a54b9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "45b2582b-713d-4ff2-b945-11050f16f01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2573ec9e-4d28-46e4-a5db-aad5ad68f7f5",
        "cursor": {
          "ref": "7da1df23-2760-47a6-93ba-7e5d7ef40b54",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "415f3b01-3df8-4dcd-b7ac-69588e88ba34"
        },
        "item": {
          "id": "2573ec9e-4d28-46e4-a5db-aad5ad68f7f5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7e169e9b-ccca-4971-a162-7d5f8079e02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c491cfc3-84e7-4675-9cd3-dd97a14bb240",
        "cursor": {
          "ref": "1d48c56c-7236-4965-90dc-5171e9d252ca",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0db11ea1-419c-4420-8b49-af6598f4a79a"
        },
        "item": {
          "id": "c491cfc3-84e7-4675-9cd3-dd97a14bb240",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a0bfce3b-61a8-4c31-a95d-25c467536ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52f0b12-1933-4bb8-a46a-868540fe77f4",
        "cursor": {
          "ref": "9f3c6081-b639-4b1b-a94c-48aa3444a695",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "187b506e-a05d-4d5b-83b3-5b42ed5c27c3"
        },
        "item": {
          "id": "f52f0b12-1933-4bb8-a46a-868540fe77f4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "10870570-bef1-477a-b020-0309d2480779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac15fc31-1e76-46bc-97aa-c0b37ddb09c6",
        "cursor": {
          "ref": "67f9658a-df38-4c7a-80c8-0dc727f1758f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8c077312-ffa3-4dc6-a88a-fb0cd77d9dfa"
        },
        "item": {
          "id": "ac15fc31-1e76-46bc-97aa-c0b37ddb09c6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fe74123a-2908-4b68-b902-131314a65b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a4070a-1797-4646-a00d-9f450fba0186",
        "cursor": {
          "ref": "25872c80-daa0-47e0-8eb9-08e69a32f81e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "38aa3e2f-8659-4823-bd67-1894a3ec5921"
        },
        "item": {
          "id": "74a4070a-1797-4646-a00d-9f450fba0186",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "adacf2c2-8138-4fbe-8f51-efa914733b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670fb175-4d78-4a68-8c46-45b628ad8b2e",
        "cursor": {
          "ref": "4a73f6b0-c48c-452d-9eb7-f7c33c2035ee",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d5e8a983-68e7-4b51-809d-c37fab12eca3"
        },
        "item": {
          "id": "670fb175-4d78-4a68-8c46-45b628ad8b2e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6a860c06-2ccb-4b0e-b852-e16744654e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856d2012-ea00-46b9-8c05-836b395a48ed",
        "cursor": {
          "ref": "aff06593-e591-4d03-8492-e11e5c946720",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "aed97498-2817-48be-8402-e4682b0f9073"
        },
        "item": {
          "id": "856d2012-ea00-46b9-8c05-836b395a48ed",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ba85e3cd-cb5c-4001-bc9c-deed86a801dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ae208a-4cfd-430b-ae78-b4f47e3da2cd",
        "cursor": {
          "ref": "446d49ee-9457-4561-afb4-f7b09d08359f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2e55d9b1-e841-4801-b997-63430c2610e1"
        },
        "item": {
          "id": "94ae208a-4cfd-430b-ae78-b4f47e3da2cd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3052f1ac-9df8-4904-b676-b40fa5d5c556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5efaca3-e2db-4cdf-9a2d-21c26cfbded9",
        "cursor": {
          "ref": "55868a7c-a4de-4563-a37b-f5d36f8b0987",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "70ede004-013d-49aa-b1ac-8e10475d08e7"
        },
        "item": {
          "id": "d5efaca3-e2db-4cdf-9a2d-21c26cfbded9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d8bd487c-7716-4528-8aa1-6ff525f1daec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a98dd46-8506-4244-9ad7-a65fc6ae299d",
        "cursor": {
          "ref": "a857e9f6-ce5a-44ed-8a22-afd19e93a5cb",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ff9af5ab-83da-4dfe-bea3-1441835f1aec"
        },
        "item": {
          "id": "4a98dd46-8506-4244-9ad7-a65fc6ae299d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ceb83bca-bcfb-4791-a878-d344a241859a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d98820-9014-4aea-9f69-64d74ef25f02",
        "cursor": {
          "ref": "cf5ccc81-4973-4044-98be-bb2033463786",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f9414102-3c16-4928-bc38-9e4544e4d94e"
        },
        "item": {
          "id": "86d98820-9014-4aea-9f69-64d74ef25f02",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eb3e011f-116c-47f6-9d7e-f63d9beb24d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ad3fcf-e321-43ad-8525-5fc43cd0528d",
        "cursor": {
          "ref": "136ab9cf-ebb4-4b2b-8cb9-6c7723f7a3fa",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "19a6aa57-a8b3-4945-bf76-afb79a5fe2c3"
        },
        "item": {
          "id": "51ad3fcf-e321-43ad-8525-5fc43cd0528d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "be50d0e4-09b3-42fc-8ad9-0df36c4514b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15298e8b-d0dc-466e-851e-1e67312c9dd9",
        "cursor": {
          "ref": "f8e68f90-2f36-47a9-bf02-b05cfe1a7945",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "14b2b938-9705-4b4d-aeef-a7d5c058baf7"
        },
        "item": {
          "id": "15298e8b-d0dc-466e-851e-1e67312c9dd9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7a599a33-5745-4007-b2ce-980b031da3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5088fa13-dee0-422a-8089-88233f4d2f03",
        "cursor": {
          "ref": "1e6d617b-933a-4070-9f42-b83c282d1a61",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c7bde79d-3515-4c91-85cf-2cc733ad4245"
        },
        "item": {
          "id": "5088fa13-dee0-422a-8089-88233f4d2f03",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e01c6414-6831-4c71-b3fc-5c7e49a8f84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac231ef-27eb-42f3-9525-fff0b6956b34",
        "cursor": {
          "ref": "ffd18ba9-12bb-4238-9b1b-90c20a8b953d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a9469b0f-6b6c-4c2c-8059-bd7ce707e4f8"
        },
        "item": {
          "id": "0ac231ef-27eb-42f3-9525-fff0b6956b34",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "796acc69-2945-4761-8770-a8bf94568f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298cda59-249f-4fcd-9643-dd22a29ee55c",
        "cursor": {
          "ref": "da63e18e-a21b-496c-8430-2db0e2487bf6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e289e6f1-e1b1-4552-8f46-354eaca5b71d"
        },
        "item": {
          "id": "298cda59-249f-4fcd-9643-dd22a29ee55c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0cedfe70-05f2-457d-9bae-11d78e99c815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb120488-4b6c-4c33-8621-5ab4964e2dfe",
        "cursor": {
          "ref": "ef658fe4-b179-4b04-a162-1693fc99b489",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9b08ed89-d3eb-4b32-b850-652d44db28db"
        },
        "item": {
          "id": "bb120488-4b6c-4c33-8621-5ab4964e2dfe",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d41c2c92-bbd7-4667-8575-572ab017ee24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91908361-48ab-4353-8b42-9d31811ce24e",
        "cursor": {
          "ref": "3006b72c-ab6b-4d98-bcaa-4db86d0b8346",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cbf4a13e-688f-4e5a-a556-2b2298b561e8"
        },
        "item": {
          "id": "91908361-48ab-4353-8b42-9d31811ce24e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7d161a01-afe5-48fa-98db-700c049d7937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87317c6-2bf7-4425-80b0-5bad6d2a0836",
        "cursor": {
          "ref": "39336a07-0844-4b91-b3c1-3e382e5e0262",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "10fd3c8a-2be0-4cd5-b6cd-64ba29eec086"
        },
        "item": {
          "id": "f87317c6-2bf7-4425-80b0-5bad6d2a0836",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f08687b6-fd76-4922-83dd-0dfb499e1aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131ce571-3b5f-4a20-a05d-f0028b6eb407",
        "cursor": {
          "ref": "955a7cb8-ace0-4e03-8650-0886923f9dcc",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f010774c-2029-4c47-a1f3-6c3ce9027cbb"
        },
        "item": {
          "id": "131ce571-3b5f-4a20-a05d-f0028b6eb407",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f02c4154-c29c-4e86-bf57-8557ec86d224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85afd1a9-ca00-469b-9c60-91b38dc60f04",
        "cursor": {
          "ref": "e3a2930a-ea50-4734-8779-0ec3b65cdc62",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b15b8e4b-d5c2-43ef-9e88-d2629aaf608c"
        },
        "item": {
          "id": "85afd1a9-ca00-469b-9c60-91b38dc60f04",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9b12f69c-abe0-40a9-a146-8927aa4b87df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deaa49d-e35f-496e-87be-2cb2b855c4c3",
        "cursor": {
          "ref": "3ad22bf0-65bb-47d1-a94b-e5ea29f485b0",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9a93cf9b-715a-4e3f-a427-2cad755fbd7c"
        },
        "item": {
          "id": "0deaa49d-e35f-496e-87be-2cb2b855c4c3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "14743c35-45e0-456a-9ed4-4debd7f59d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0178c417-8461-4c23-af2a-62d62685722e",
        "cursor": {
          "ref": "a192eafa-2550-4bf6-b255-da1dd88b1a49",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ab2d3f2e-bb33-4701-ad82-38fdfc0950ac"
        },
        "item": {
          "id": "0178c417-8461-4c23-af2a-62d62685722e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "faafa1fb-6e6b-4bc3-bf93-850f1a2c5b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7648a98-4eeb-432f-97b2-7e96b89fa01b",
        "cursor": {
          "ref": "87c8cf83-67f9-420c-8b05-f49efab151eb",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "74a130bc-6bb8-49eb-999d-4819c8f5f6c0"
        },
        "item": {
          "id": "f7648a98-4eeb-432f-97b2-7e96b89fa01b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7dd0f69e-f381-45d4-93c1-7a261b8a94a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a995ceb6-c643-49ae-bb00-c09b609ef368",
        "cursor": {
          "ref": "3c89aeab-a3b6-4326-9103-47e27a4cff1c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9419d828-46b0-48fd-be7b-090a151f05f7"
        },
        "item": {
          "id": "a995ceb6-c643-49ae-bb00-c09b609ef368",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a1d389c0-4c41-486c-be1c-93806a23b6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149a7d35-29bb-440b-a23a-8f940e529f9f",
        "cursor": {
          "ref": "95bb04b2-eb71-4475-9907-6aa6d6c2d4bd",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "344f7ee9-7797-4460-a4c1-b602b4262bb3"
        },
        "item": {
          "id": "149a7d35-29bb-440b-a23a-8f940e529f9f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6c772a2e-f1f4-4349-90fe-49c2fc723a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef15130-a886-44e6-83c4-5f332bf49f1b",
        "cursor": {
          "ref": "662b5533-5c1f-485e-aea7-a900cdb9d7ee",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "76b0cb1d-d498-47a7-bcf3-88f26e163cf4"
        },
        "item": {
          "id": "6ef15130-a886-44e6-83c4-5f332bf49f1b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f9aa097d-983a-496e-8bdf-f42e2048fd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccd97d0-a35f-4e63-bbb1-ead9f49bb0dc",
        "cursor": {
          "ref": "d99c6a5a-1a5f-4ec6-bee0-98905682213f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "887e9c09-4800-4426-870c-f85443c6358e"
        },
        "item": {
          "id": "4ccd97d0-a35f-4e63-bbb1-ead9f49bb0dc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ace1d17e-ee54-4d1f-a942-9e939facf07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98940ca7-b8eb-4850-92a6-8689947e2855",
        "cursor": {
          "ref": "fad6e866-96a4-4c1d-ae62-f1c20e433be4",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "56aa19ad-8f04-433c-bc35-eca97bf98ede"
        },
        "item": {
          "id": "98940ca7-b8eb-4850-92a6-8689947e2855",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "56e396b1-fbba-400c-8946-351b92e0efe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a800ded-5465-4059-8e5f-2782a3507dad",
        "cursor": {
          "ref": "a4271b97-8399-4a5d-8531-063b1fe23e8d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ead86f8d-d95a-45f1-a4be-4a923ff915e1"
        },
        "item": {
          "id": "4a800ded-5465-4059-8e5f-2782a3507dad",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "994df3b7-004a-4485-a551-ba892547887b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f501aa-1b95-49d2-8926-c49d65197e86",
        "cursor": {
          "ref": "7a6c57f3-98f9-4d23-9ca1-a7c9398751da",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "16d37e8b-c1ad-4ffa-a88b-6eaf8a9b357d"
        },
        "item": {
          "id": "f1f501aa-1b95-49d2-8926-c49d65197e86",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "083b75ed-dc5c-4cbb-8db2-1f45d1dee770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01297d5-1a48-4122-8b67-f788b7694438",
        "cursor": {
          "ref": "cf5c8466-a003-40c6-970b-eec9fc37e373",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "07cb25be-9dd4-4eb2-b878-859f3499d8c7"
        },
        "item": {
          "id": "b01297d5-1a48-4122-8b67-f788b7694438",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "417da846-9935-48ea-bf14-985d906ad5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f6ba2a-90bd-4c79-b6c7-f3468c67dfcb",
        "cursor": {
          "ref": "643ce426-d274-40ef-abd0-c8de74026cb2",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2044457f-62bd-466d-be0d-ed64b7fed2c7"
        },
        "item": {
          "id": "b1f6ba2a-90bd-4c79-b6c7-f3468c67dfcb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b62f4ad7-51e7-4a4f-ae98-1689982b9cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11496098-307f-49c2-944e-aff25c9f2b3d",
        "cursor": {
          "ref": "a66a5d94-fdc5-45ab-b27d-62f1cdcd207d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7bfb9c2b-31cb-4f97-98d1-5e56ac4bba1d"
        },
        "item": {
          "id": "11496098-307f-49c2-944e-aff25c9f2b3d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ff0fa2ef-0778-48ba-b02d-13b386e38212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e95a4b-6ddf-4d18-a9a7-aeab7c6eaac1",
        "cursor": {
          "ref": "c9123f04-ba49-4d07-a4b3-71b430b75456",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a090eb0c-551f-4a5e-a8bf-08e53236a2fc"
        },
        "item": {
          "id": "86e95a4b-6ddf-4d18-a9a7-aeab7c6eaac1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "24175757-4a61-4d3a-b3f6-5e021c74fa5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19824962-19ce-4c72-80e5-ef8942a68c00",
        "cursor": {
          "ref": "cc914d64-0faa-402a-904f-36b49ee51a25",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "29883209-993f-43f5-aebc-6b7fe7ece451"
        },
        "item": {
          "id": "19824962-19ce-4c72-80e5-ef8942a68c00",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5eb1fedc-114b-43bf-ac5f-be5b8b6b1713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a617eec4-d254-4f86-8cb5-4cf6890cc0fb",
        "cursor": {
          "ref": "d907fa2c-31e3-4d65-a604-da2eb0136846",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "322fc629-e9cd-4ce7-916d-5dbbcef187af"
        },
        "item": {
          "id": "a617eec4-d254-4f86-8cb5-4cf6890cc0fb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cdb93e8d-9347-4f76-9fa4-ea7c48151dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e38c77-07a0-4359-bc8c-8b10f09f63c3",
        "cursor": {
          "ref": "69e9014f-76d1-4761-bb70-d12b4f9c81ba",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6f2cdf11-048e-4c06-956c-8cc2ea81c479"
        },
        "item": {
          "id": "16e38c77-07a0-4359-bc8c-8b10f09f63c3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c058c3d0-f1db-48ec-83a9-7dd4cce1aeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3452e86-4733-4a90-9211-335f7857287c",
        "cursor": {
          "ref": "d4f601c2-6b19-4d84-b8b1-5f7f1f1e4684",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "21e9db76-7e52-40b0-ae9a-3f5d69a45ac8"
        },
        "item": {
          "id": "f3452e86-4733-4a90-9211-335f7857287c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "94c1c6cd-65c7-4a91-a352-46ad932ef80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed1d661-0706-4e57-a320-546db0fa899b",
        "cursor": {
          "ref": "cb29a188-5289-47cf-9626-fa28f7ba2785",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1b428ad5-1841-4331-a8fd-bcc11e0f28e3"
        },
        "item": {
          "id": "8ed1d661-0706-4e57-a320-546db0fa899b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3b227ab5-9740-4520-a89b-77410cd8a13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caf11e8-a70e-4b0b-b2b4-b63e8fcf5769",
        "cursor": {
          "ref": "76002a8c-e6e9-4f5f-8b86-8bb25bc78560",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2b681b7d-b47b-4503-9c06-2402343b5217"
        },
        "item": {
          "id": "6caf11e8-a70e-4b0b-b2b4-b63e8fcf5769",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "022747b3-c7a8-4fe4-840e-592f39f61a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ad0a9b-ad61-4ffd-b367-cebe059bd737",
        "cursor": {
          "ref": "04359438-913a-4a80-9bfb-e3283dfe7a73",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cff2af82-a484-4b70-b3bc-dd25e2219a1f"
        },
        "item": {
          "id": "44ad0a9b-ad61-4ffd-b367-cebe059bd737",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "49074818-cef9-4e28-bcb5-f26545090718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1c1c9a-8524-445f-bdd9-bffeeec87422",
        "cursor": {
          "ref": "5ed620d9-5440-4647-968b-e0249dc3f769",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b79e26dd-21a6-42aa-ba5b-80a5e92095c3"
        },
        "item": {
          "id": "ce1c1c9a-8524-445f-bdd9-bffeeec87422",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "50a9b702-e2f5-43fa-a104-7f75871935fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a88b931-5e54-4c38-9a48-b33bb3830349",
        "cursor": {
          "ref": "11a64760-5bf7-4f35-82c5-cb37325d1864",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2a55a827-744a-454f-ba2c-dbb2072f976c"
        },
        "item": {
          "id": "1a88b931-5e54-4c38-9a48-b33bb3830349",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "60a4a9e9-97c6-4ce1-b4e4-1da068fd2597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96435bbd-c082-4d18-bb0d-03a49c6a213a",
        "cursor": {
          "ref": "d26979ed-9767-4f8b-98a6-bf21ccfe2027",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ac443682-f08d-451f-b6dc-0c8cdf52ff4c"
        },
        "item": {
          "id": "96435bbd-c082-4d18-bb0d-03a49c6a213a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ee95fb49-c018-4660-8c83-0f1e88e929c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f7ff30-a84f-459e-ba3b-25aaedd151c8",
        "cursor": {
          "ref": "11d271c1-023a-4649-906e-37b7123b67f1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "93f8c3a9-a00d-4f5c-a511-eecf3628a842"
        },
        "item": {
          "id": "32f7ff30-a84f-459e-ba3b-25aaedd151c8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "51ddee7a-2a66-4f5f-890a-9e1192c9c198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fc6300-64c2-4f49-879b-57f4e0c4cde2",
        "cursor": {
          "ref": "75940c8a-fd82-4d1d-9974-51397681ca57",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c4c04505-6841-41b2-85a0-52ad72cc3b12"
        },
        "item": {
          "id": "04fc6300-64c2-4f49-879b-57f4e0c4cde2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ee90143b-f707-4d7b-9431-fc157bb2e0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297a189d-8403-41bb-8d27-b802d7fd416a",
        "cursor": {
          "ref": "7d5f0e22-0b59-4243-9c61-1a6634acce80",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4e680ece-11ef-4ca3-b071-cf5d1f7b8145"
        },
        "item": {
          "id": "297a189d-8403-41bb-8d27-b802d7fd416a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bc1c3679-dd06-49a8-8d85-f8383f29c318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65502a5b-bed7-482d-8db9-310a72687f07",
        "cursor": {
          "ref": "dd5e17ad-b362-49be-b567-8aa2f09f939a",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2362a5ca-11d8-4409-aa12-2a94510067e3"
        },
        "item": {
          "id": "65502a5b-bed7-482d-8db9-310a72687f07",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "235fd9c9-9d98-4ca1-b8f5-447c4d371ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306a300b-9efa-4b3e-9456-ef260e27383d",
        "cursor": {
          "ref": "3727a6ad-c807-43fb-bedf-490aca4ff4f7",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f68ba1e8-fd41-49be-b549-cc63fbc0c1b0"
        },
        "item": {
          "id": "306a300b-9efa-4b3e-9456-ef260e27383d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "20a3d7e9-8de2-43f2-8f50-fd0b27d12ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1335a6-1d74-4fa4-bfdf-4ae0f2efb6c1",
        "cursor": {
          "ref": "5e193e65-97d1-44a2-bca4-ce305b867b94",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "97b8ff8a-c391-495f-9363-9ddfd507fd38"
        },
        "item": {
          "id": "bb1335a6-1d74-4fa4-bfdf-4ae0f2efb6c1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c491a6c6-3f2d-45bb-bfe9-e80ab8ae5e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74adb47-0327-4894-8437-a77697cdd4aa",
        "cursor": {
          "ref": "8aa9f38e-251e-4970-a28f-cda05e6e3b96",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c163d322-c060-4616-820c-6fd9c4d43294"
        },
        "item": {
          "id": "a74adb47-0327-4894-8437-a77697cdd4aa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3fec568f-a402-49a5-9b9f-17bffd0de482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93585b35-17b2-4e07-b137-0477656323f9",
        "cursor": {
          "ref": "c990de61-ed22-4cb7-9485-3b1fdc9fe436",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f8409c8e-0e64-4389-9cec-52515d3159c3"
        },
        "item": {
          "id": "93585b35-17b2-4e07-b137-0477656323f9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ec08ac64-4f10-450f-b8c3-16b83c9449d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd8c99c-4d01-4262-a159-e98d6d39ab81",
        "cursor": {
          "ref": "011b7745-9fb3-4bc7-8b61-2c90a7f25d72",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ff7b08ca-c62f-4274-80c8-5110c33fe008"
        },
        "item": {
          "id": "7dd8c99c-4d01-4262-a159-e98d6d39ab81",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8795ef0a-4bbb-43b7-8a2d-eeb5e486eb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee497fe2-17a7-4c3f-8c7b-75908b4c3365",
        "cursor": {
          "ref": "2b3105a8-84e4-4081-a1e1-f53fb58dcf00",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "566d1339-d30b-4c37-9ac1-561c6c0dee5a"
        },
        "item": {
          "id": "ee497fe2-17a7-4c3f-8c7b-75908b4c3365",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "756a8f6a-f162-4dc0-bf50-707ab745e3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5ab7da-45b0-4c8a-8ce9-0a4846f725f6",
        "cursor": {
          "ref": "4bb651a1-5a20-4ca1-a3f7-c954f69aa136",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d58a7202-f10e-44f5-9ce5-44061b2da586"
        },
        "item": {
          "id": "4c5ab7da-45b0-4c8a-8ce9-0a4846f725f6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7cc57535-cfba-424c-ba8c-587579378811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbfde4a-5377-4e39-8535-591a34571969",
        "cursor": {
          "ref": "298c7940-4a5b-4442-82af-8c735fed27fb",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f912e550-e10c-4de3-ac82-b2e7e2eb31b2"
        },
        "item": {
          "id": "1dbfde4a-5377-4e39-8535-591a34571969",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0dbcd790-f075-44bc-b8ef-57610decddab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebb9b27-475b-4dde-9136-3685d62f425b",
        "cursor": {
          "ref": "da02c759-3e0e-4663-80b4-a51aa9231a3b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b0ff54fc-b6b9-416e-8027-716715414817"
        },
        "item": {
          "id": "6ebb9b27-475b-4dde-9136-3685d62f425b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "98ee8a36-46f0-40fc-b182-323fe01e6dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cb4174-709c-401f-8dd0-96c112787730",
        "cursor": {
          "ref": "1342fc78-bb2d-4562-ae09-e6d0254c7157",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5363f10e-6ebc-4a40-9dc9-2dd4eb6d5383"
        },
        "item": {
          "id": "d9cb4174-709c-401f-8dd0-96c112787730",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "44819aa0-4208-4ed4-ba20-6e9ec157a975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd245016-0be1-401e-ad4c-bbf15f5a014d",
        "cursor": {
          "ref": "8fdee030-a1b7-406b-a09a-edf022f2e468",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2dbbafdf-7b0e-45a3-b341-6c05895d7b43"
        },
        "item": {
          "id": "dd245016-0be1-401e-ad4c-bbf15f5a014d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "852ea627-33d6-4eda-b6e6-78e6cdde6a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be25e84-aa37-4b58-8d2b-ce1b5380411a",
        "cursor": {
          "ref": "a1167bd1-42be-45b4-9760-2dc780f78a9a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b6e6e7f8-950b-4d7e-bf5f-691576aac003"
        },
        "item": {
          "id": "8be25e84-aa37-4b58-8d2b-ce1b5380411a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ba4f9351-b47a-49c4-af92-0c9e6f413d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61fd1e4-4aee-4e65-83fd-e9a06edb032a",
        "cursor": {
          "ref": "b55ca9de-047e-41a6-8445-0f6fac18bba5",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b7e48bdd-610a-483c-85ab-4414d47b8a9c"
        },
        "item": {
          "id": "b61fd1e4-4aee-4e65-83fd-e9a06edb032a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b67a40f0-3ca4-4ea7-a058-cfd707e65b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18490796-371a-426b-986e-9a9723ba7e5c",
        "cursor": {
          "ref": "f7c86016-10b7-44a4-af64-22c7491f2302",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e345a14d-f7bb-47bc-97bd-fb4b32842cc9"
        },
        "item": {
          "id": "18490796-371a-426b-986e-9a9723ba7e5c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f74d837c-0aec-4d7d-8d3b-5ce0e846b550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbad1073-2372-45db-bdf0-6da18961754e",
        "cursor": {
          "ref": "e056c1b2-5c50-4e0a-8880-1f9007abedc0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fae8c75a-b38c-4d85-915e-cd8b4571985e"
        },
        "item": {
          "id": "bbad1073-2372-45db-bdf0-6da18961754e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "47913ce0-12fa-432e-806d-7d5caa8868e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c717f57-521e-4855-8523-c5398264d71c",
        "cursor": {
          "ref": "94d84a72-df59-4581-b804-af05f1a6a05a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "46c91626-2691-416d-984c-44f64636e48e"
        },
        "item": {
          "id": "4c717f57-521e-4855-8523-c5398264d71c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b1200ccd-fa92-47f4-ab5c-2a77770fa7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985834b0-a1c9-4895-8fd5-a065995f2254",
        "cursor": {
          "ref": "ee245264-3b04-491a-a11e-5e1f52ade3a2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bf599866-4825-40ae-9eb1-c8b9f015c104"
        },
        "item": {
          "id": "985834b0-a1c9-4895-8fd5-a065995f2254",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "098f2e76-e89a-4683-b001-1b8374149a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c036cd9b-5c3a-463d-af13-2dfe160fdb9b",
        "cursor": {
          "ref": "5486ab26-ee04-4e1c-a052-79bdd4799f03",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "01479745-7125-4218-b91e-d0c66df6d83b"
        },
        "item": {
          "id": "c036cd9b-5c3a-463d-af13-2dfe160fdb9b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "00938574-6fd0-4b44-b077-59b68ce12661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2363538-7c53-463f-b6ef-a272f3541b85",
        "cursor": {
          "ref": "901cbb8f-feea-4179-8c67-98d62c29aeff",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1fdb09c5-4363-40d6-acba-9a070f1b3ba2"
        },
        "item": {
          "id": "f2363538-7c53-463f-b6ef-a272f3541b85",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1b7b0bc5-342b-45be-976d-88921685eba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5da38e-165a-4f31-9800-71768f66d064",
        "cursor": {
          "ref": "19890106-a507-42b0-a990-ec78a2c25dd0",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b5841fec-a4f2-47d9-b6a6-e4f486eee0fc"
        },
        "item": {
          "id": "1b5da38e-165a-4f31-9800-71768f66d064",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "976e2763-c55e-4c5d-b8fc-3b2a141a395d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905d278e-edb3-4bf1-9f90-b5be6d1d88c3",
        "cursor": {
          "ref": "4b77ba99-21fb-4132-8b01-53761fd8028d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "34667964-e4f8-4c48-95b5-7050cd899292"
        },
        "item": {
          "id": "905d278e-edb3-4bf1-9f90-b5be6d1d88c3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4a4f5c53-241b-49e4-b124-92caadbb57e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec45d55-4a71-44c1-b61d-206062368c32",
        "cursor": {
          "ref": "c19e4f2b-afa5-474d-8061-333ad2e3341b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5c43c011-c333-43a2-8482-4e0534b368dd"
        },
        "item": {
          "id": "cec45d55-4a71-44c1-b61d-206062368c32",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0f8791e9-f688-4be5-a170-965642ef2059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb0bd59-d77d-43f4-9fcc-77ab7587c91c",
        "cursor": {
          "ref": "8d4eb7d5-8d6e-44cf-b5ae-46de77077e05",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "17621ee1-3eac-4b8e-be02-eb22680dfbce"
        },
        "item": {
          "id": "7fb0bd59-d77d-43f4-9fcc-77ab7587c91c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a8c053c9-36fd-4dbe-a556-db0a07600c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3839b312-fc7d-4511-a220-9bb0380bd2e0",
        "cursor": {
          "ref": "6f1ddac1-9ae3-448b-9f1c-ae1c2e23e0d6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "557d6660-2304-4da3-b422-88c6f50f4b80"
        },
        "item": {
          "id": "3839b312-fc7d-4511-a220-9bb0380bd2e0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9e712503-78e8-4a00-bb7b-de4e156227d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7795bb-ff5d-4928-9c11-c4631ee3197f",
        "cursor": {
          "ref": "43143780-39ae-492e-9678-add241308109",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9f692d53-8e01-4f8c-a35c-19dcdfccccc1"
        },
        "item": {
          "id": "cb7795bb-ff5d-4928-9c11-c4631ee3197f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dfc0809f-178c-43a2-adef-60bdcfd455f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc929249-ed57-4a83-8d94-09d15386be20",
        "cursor": {
          "ref": "eb4ac28b-8ccf-4267-8178-33394a59f615",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b8af5959-9008-4bf5-93b2-923204da0676"
        },
        "item": {
          "id": "fc929249-ed57-4a83-8d94-09d15386be20",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6b485009-9eee-48f5-a189-362cd3a2d143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8f23fd-7732-4d0f-8cac-8363323904da",
        "cursor": {
          "ref": "6158b79a-63be-413a-bced-20e42a1868a7",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8ec377a5-ac60-47e7-824a-b8fb9b96f96f"
        },
        "item": {
          "id": "ab8f23fd-7732-4d0f-8cac-8363323904da",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8163ebf6-a961-4559-8ca7-ed54a15ac728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0a2bfd-e9ed-447c-a1fa-8d19a015e2d8",
        "cursor": {
          "ref": "dd32c561-eb80-4434-a4ac-3e5a6c4ffca1",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "33b59e66-c7a6-4683-905e-7d235a7bc1f4"
        },
        "item": {
          "id": "ce0a2bfd-e9ed-447c-a1fa-8d19a015e2d8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "db640b1a-29a5-4467-a763-7e8cbfb2f0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ab2bda-51f5-47a5-ae05-189589dd17f1",
        "cursor": {
          "ref": "7cdd8c86-c494-4b2d-98ce-80b7ae766bfe",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "645dd0fc-5194-43de-aea8-40b68ed215f7"
        },
        "item": {
          "id": "f0ab2bda-51f5-47a5-ae05-189589dd17f1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9eb6998a-2be2-42af-9cf9-a382f660c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6155d320-d9a0-42a3-8d78-2214519ebce9",
        "cursor": {
          "ref": "ca7d6618-4879-4ce5-bfc5-fc1ce6b04266",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a3a80342-b5bc-4a9f-b4ce-a1489b5acdbd"
        },
        "item": {
          "id": "6155d320-d9a0-42a3-8d78-2214519ebce9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9129eec0-bdb3-48df-b6e8-743da7ca6842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b51d584-9c1d-4d2c-8631-6175bd4194b7",
        "cursor": {
          "ref": "0cc80880-9c57-4628-9498-35dbe6421947",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a4e4c4f9-4595-4488-8976-e40df7cd5d8a"
        },
        "item": {
          "id": "8b51d584-9c1d-4d2c-8631-6175bd4194b7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7aeb0f94-05f4-471a-b9d9-d7863f2486cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2affaef-dcf6-47bb-a7e0-4e6d068306fd",
        "cursor": {
          "ref": "d2d993f1-43ff-4118-977a-80aec9cadf9b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fcdef1af-6c22-4845-8985-28b676a59df9"
        },
        "item": {
          "id": "a2affaef-dcf6-47bb-a7e0-4e6d068306fd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "eb07f93a-dffc-4660-af8d-44604ed97161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88018ad-9a2c-46f2-8b23-070b1043f693",
        "cursor": {
          "ref": "f79118a6-5b0f-44a0-befd-3233c4347c97",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "25770cb7-6e14-4333-a9e0-fbeee711b208"
        },
        "item": {
          "id": "e88018ad-9a2c-46f2-8b23-070b1043f693",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1b9f46a0-69bc-4533-aa4d-de944a393e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7c99d6-9f0c-4065-be99-878ffc5a3515",
        "cursor": {
          "ref": "4960da8c-2e80-48eb-8862-a7f49e3153d6",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "980468b9-6456-4c27-b6e3-10b2ea1c4524"
        },
        "item": {
          "id": "eb7c99d6-9f0c-4065-be99-878ffc5a3515",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9151a038-03e6-4809-923f-1baf170e110f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ea9bfc-3bb3-458d-9c36-cc5c395b88c0",
        "cursor": {
          "ref": "b6bddb6f-d33c-4cd2-bd2c-407b1e76f833",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3ce5a72c-1602-4ac9-8d39-795cf6d84244"
        },
        "item": {
          "id": "54ea9bfc-3bb3-458d-9c36-cc5c395b88c0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fe83c54e-a045-43c8-9946-5dc560bc24dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dfb0e8-5378-4838-a849-33eaf4b04d6a",
        "cursor": {
          "ref": "770d273f-932c-4755-a71c-f48972f660c3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d6fdcded-8927-423e-a6af-cac0eef139c1"
        },
        "item": {
          "id": "98dfb0e8-5378-4838-a849-33eaf4b04d6a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fa1da99f-81ea-41d0-9b33-5b80315228e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9b9d23-777c-48eb-8cb5-21153bff1216",
        "cursor": {
          "ref": "e59ec23c-c50e-4243-9bbe-a8d99bc94711",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1fd6b964-06fa-4f8c-a828-e989b5e0692c"
        },
        "item": {
          "id": "df9b9d23-777c-48eb-8cb5-21153bff1216",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "84d29cce-cc07-467e-8e46-c3a12e18189a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d38c7a9-27e1-4091-b131-910f717715c7",
        "cursor": {
          "ref": "52cd0aae-b5bb-4cfc-b04a-c7e047fa106b",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1c5d258b-7711-4a44-bafe-e9ca747032c2"
        },
        "item": {
          "id": "7d38c7a9-27e1-4091-b131-910f717715c7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d3630856-05f0-4276-803b-1ec6e71cf82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d741892-2050-4687-907b-e66f2ea569c7",
        "cursor": {
          "ref": "86d7c767-79b5-498d-98d6-d71220b05b10",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8566c943-6da8-4b2e-aa94-00004c92805b"
        },
        "item": {
          "id": "6d741892-2050-4687-907b-e66f2ea569c7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8fa752b9-7061-4bce-aa58-cbc861774c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5a81eb-19be-4162-9f24-5841027c0d4c",
        "cursor": {
          "ref": "e13a4dd7-e67f-44e7-aad7-48c3312e52b4",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a25a70c7-e015-44d6-9e2c-912fa88b482b"
        },
        "item": {
          "id": "bb5a81eb-19be-4162-9f24-5841027c0d4c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fb0b3c25-a6e8-46b2-abf1-f0626bf0313b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf513eb-dbcd-41ab-aab9-d5a340d0b131",
        "cursor": {
          "ref": "bc99aa5a-3535-409f-a8f4-7505e76c4a65",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6b7af435-5669-46b1-9627-9adfcdc83f75"
        },
        "item": {
          "id": "daf513eb-dbcd-41ab-aab9-d5a340d0b131",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "27f00b8e-f7ec-4409-99ba-6b65d3fdecb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74167aed-bb80-4edc-bcce-2722e17425f8",
        "cursor": {
          "ref": "21b219d0-b389-4694-b133-7182896c3d01",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ed570c4e-15b4-4a42-a565-1ba7893a3411"
        },
        "item": {
          "id": "74167aed-bb80-4edc-bcce-2722e17425f8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "70075bef-8c1f-4c48-a7f7-9225cd8fa834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00452fb-5e6f-42dd-a562-309d5a996a6e",
        "cursor": {
          "ref": "978a1ef4-8824-4263-9231-ffe7cd4c93a8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a9267bee-5245-4ebe-9ec1-e09098bafc88"
        },
        "item": {
          "id": "b00452fb-5e6f-42dd-a562-309d5a996a6e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e753e39b-b9cf-4eac-a16b-fa62b437fff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ecb971-f229-4356-915a-faf93536ac29",
        "cursor": {
          "ref": "86e9db1f-474e-4818-af7c-4158cc3bec48",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "18d60820-b703-41e1-94c6-a6683ce2d544"
        },
        "item": {
          "id": "37ecb971-f229-4356-915a-faf93536ac29",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4900384b-26bb-4162-a84d-3e035d583e82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629932ba-2d15-456e-8903-6223e1e62891",
        "cursor": {
          "ref": "f6024e05-20f7-49fc-85ab-df854a207dff",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "72cf6f0a-2881-4f10-be2f-b421d065ea80"
        },
        "item": {
          "id": "629932ba-2d15-456e-8903-6223e1e62891",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b43352e7-59f3-441b-93e1-6f97153d3f90",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48d316b-f326-48a0-9849-d171fde485a1",
        "cursor": {
          "ref": "7f52ff1e-2581-4503-992e-c9f591207abd",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3088ac5a-be20-4936-b718-41f6de58a95f"
        },
        "item": {
          "id": "b48d316b-f326-48a0-9849-d171fde485a1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "86e0e2bd-639d-456b-aaa5-378a3d5fa267",
          "status": "OK",
          "code": 200,
          "responseTime": 1446,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f902c27-355d-469a-b254-163fcceb9aa7",
        "cursor": {
          "ref": "ba9e98aa-22a3-4e4f-8bb5-62f525c5c88f",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "751d4579-3745-4507-a68d-c9e57068c05a"
        },
        "item": {
          "id": "6f902c27-355d-469a-b254-163fcceb9aa7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "88c86a53-a731-4f0e-8319-9a40f3135910",
          "status": "OK",
          "code": 200,
          "responseTime": 1463,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffb5208-76b5-4523-8e94-191ee8122f0f",
        "cursor": {
          "ref": "dc76571d-c673-4a52-8725-fe5bb9a0d065",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f421c3e7-34f9-4a95-a705-dbefe341109e"
        },
        "item": {
          "id": "4ffb5208-76b5-4523-8e94-191ee8122f0f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60f0064e-b512-46fd-9cdd-fec0a534541d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffb5208-76b5-4523-8e94-191ee8122f0f",
        "cursor": {
          "ref": "dc76571d-c673-4a52-8725-fe5bb9a0d065",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f421c3e7-34f9-4a95-a705-dbefe341109e"
        },
        "item": {
          "id": "4ffb5208-76b5-4523-8e94-191ee8122f0f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60f0064e-b512-46fd-9cdd-fec0a534541d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff12427-6fda-4060-b128-8513cc4e8421",
        "cursor": {
          "ref": "1b1e7f99-6440-4617-8e5a-9aa9bc569cc2",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c839ff7f-f2e5-4505-93ad-4646e6de2d06"
        },
        "item": {
          "id": "7ff12427-6fda-4060-b128-8513cc4e8421",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "823f8c3d-9f43-42ac-8697-7dfbc05c817c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c81481e-f61f-449e-a540-59a7429b5b60",
        "cursor": {
          "ref": "8345e646-b4c3-418c-a5b6-fb56ae706b91",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8815d44a-7d65-454d-9382-1a4411961ac9"
        },
        "item": {
          "id": "8c81481e-f61f-449e-a540-59a7429b5b60",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b38cce98-e1bc-4073-a392-29067af03e09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}