{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c4ca2ac9-65e7-4108-9bcc-777391f2370b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2037c231-345e-4aec-89a9-c4d25fdee643",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29e14427-b963-47b8-9e93-6b7eb346ff1f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ebc0c500-58dd-44f1-9220-5800e71ffa20"
                }
              }
            ]
          },
          {
            "id": "52d825bb-34cd-4ff8-88da-0303876a4c7b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc66fa4d-3a8f-4ee2-967c-b8a0bc1be052",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dcb02026-8d27-4530-9ba3-f7d62a48efd0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8b1f8722-4711-4538-9a17-ef29db30fa1a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a3929191-0be4-430b-b1d3-ce22ee0355d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e4eae573-768c-4261-80c9-c5ce82d0ed1a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e75f4d65-5079-4961-83e7-ec5b583e8c15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86961d35-6e9f-4801-af15-2a13580dc21c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3320835-4de3-4799-b4fb-b59d8115d739",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3aaa178b-ed21-46ab-a346-351264990e9f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f2de63a-079a-4966-ab4c-eafe8246cf73",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "082d2e30-d76f-4a93-a146-9c051d762206"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7067c262-9f42-4284-8368-305ad6214145",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c5dd2b7e-d17c-4f4d-b44a-2c3edac12392"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcdb90f6-5f5f-4947-8833-decef947d7b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d51da0ba-305a-408b-b97d-af6b8063505d"
            }
          }
        ]
      },
      {
        "id": "23344cb0-6729-4209-ae7d-59471a243dc7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a6526373-f61c-4796-9538-63b9629d7adb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e64fb0e2-d050-4f4e-bf6e-58257c6c87f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0c88659-8f4f-43da-9bd0-a9099b222694",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51f9da3-26f1-4991-9fc6-c72fab65476a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7212763b-644a-44e6-854a-a7739f89b587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8879ee3d-223e-4c03-84c9-0904e8219e9c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869dc692-9996-4334-8c93-9e7410be9ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "892da6ab-0583-49e6-bf26-2433966c8ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d65f4c-33b6-4e4f-b459-d2069488d7ad",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ffc232-0c5b-40d9-82d9-75fe93f9f77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59801f53-76e5-4bda-8acf-dbeeec710266"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08eb8668-251a-49a8-a4d4-dcffeee9d889",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a591e5a-1256-4fd6-80c9-31d6437abf98",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a48456d-d2f2-4ae2-afb7-32588e72d4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4da32367-39d4-4487-a45c-809b97ff21b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f915f830-52b6-49e7-871a-861d81d66804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2782f7-70e6-493e-b805-ccd7c28502f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0bb253ab-0088-43c8-8a9a-ac76905ef391",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4d05d80a-d846-4e32-b392-bed67c30ff05",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "858eef90-3caa-455b-94a5-b0477b860224",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e784da97-bea6-415b-9236-3ec5a42338a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4503f224-f764-4fec-8e92-d84d5d77d5a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b8eb81d5-6b6d-492e-8eb8-829f2fae987d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f96efbeb-31dc-4b7a-b03f-191fab81fd15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53071dd8-faa1-4635-a60e-bbdb64f1cbd4"
            }
          }
        ]
      },
      {
        "id": "1d8983ba-56cd-4167-b1fd-142359629c5b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "72a1d39a-ecb1-4709-ba2b-70fd6dc49a5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea41e419-95e9-4d9e-875b-59f46e7a7647",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "82df8c06-b0f2-45cc-98d5-589b04c96915",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6128e6a-eba1-4a5f-a1f8-bf49e17ab88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d95f5b3-8dce-4ecc-8651-9b83d73e5e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba97309-98e0-4cbf-94ce-633d7719eda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fa90648-c751-42b1-8265-6b004e36458c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda6fbeb-21e8-44d7-aee7-3cf81639e58a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cefa78a-d8e2-42c5-9dd8-b263f69009c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3abe4ab-324e-47a6-9047-aa397acef24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd086dc0-728f-417f-9176-dbea2cde819a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b352bfa9-5e3c-4037-bdc8-091ae8db5831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f802a01-fbcf-4c0f-86e8-9796c3613c55",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10929c9-5f28-4599-9137-789cc9e8cb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29ded9a-8d4f-4e34-bf7a-b3cbe8e46ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f364d5-3333-4ece-9dd3-468fdb600f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2015ebe1-2ae3-43a5-8b05-0591756cb727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13bd37b-feef-4038-badf-05e7ec7a73d5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966d861b-9571-4169-805f-ae37e3fea598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbfa4a9-d22d-4350-8566-9ebfb9423f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c6bbf4-7d89-4032-ae2e-0e0af0ae82ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ba6e76d-e14f-43e2-8d15-ab93e87956b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae26314-5292-4f85-b153-0777d1017c72",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a975927-41eb-4053-8e5b-1b5c7f42e737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7476ad1-d364-4110-bc75-fe1006ea1ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50f220c-d88e-4c56-99e3-1adf6513fb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2a9a04b-51bc-4f1c-b512-4679e89f4fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c10451-681e-41cd-83ec-92387b806d87",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b327d1-c641-4e2a-a285-b4f9c831f134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8121f333-5110-4b4a-b07e-4b86c23536d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec752478-a0eb-4c7b-a708-d4e0c324ddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4257bc6-222d-4feb-9bec-1ada894ffffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1c9dbd-7272-431b-b841-5a36a76cbc1f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f801277-c1cb-4525-a780-e2aafc89de82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3644cd2e-2a05-46a5-bcea-8bc90bb51ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718d35de-28b2-4429-b774-4c5f838b4b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49d97926-551e-4810-8d9c-59974cf7ab4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02722cbf-4eb7-42a0-9aac-6377b5a9cde1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7da695-924c-4a2d-8d22-e5d52a384771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3540fcc3-76a8-4fcb-8ff3-861b81a4a19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07167d3c-7cd7-4b61-9b15-a90697b67274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "044ed7cc-9e69-4e10-aa30-52cd60dbac72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef0348f-a82b-4327-be33-61aee75c046b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f1c99f-4313-487e-8fba-989eba406999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf780e4-e4a8-494d-9348-4747f3e0a859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f134fc4-14d9-4191-b68a-daf7bba6c848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3c6a5fd-0bdf-45e5-9498-853c97421ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016b1162-aecf-44ef-8ec5-10639f04ed56",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3692aff-598d-4897-9199-0ed1a1ef1974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b6610f-70e4-49bd-bb59-24a170c9978b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bcd285-df26-4765-b56c-33a868fd5e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00c4fad4-a5d1-4737-ba53-380ea068f776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f3c32c-ac3b-40df-8281-6e9a2796e591",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9abe11-384a-46d4-a0ac-b8de655060b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5316b713-1378-46fe-beb4-261b9b09f07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16be1aa7-8cd9-43ac-87f9-0d9df8b553e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "144d2e63-271b-438e-af75-0033f04460e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56302dc7-ccc6-4b64-952d-066290efe3c4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0a982e-35d2-4212-b343-35d392f9398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb915f8-3a98-4cf3-b552-88db22693784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4001bc-bb1a-42f5-bbc7-deb3f93e5809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d98c98ff-bacd-4dfa-b3ba-6a5fe21c6645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6defa01-51e0-4113-bd5f-e8757f5a3915",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab3c76e-5032-4fe0-9f19-0e2026b018db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab117f3-10ef-4db7-ac48-7ca778f86ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71640e41-134f-42c4-9521-7720aa208e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9fed3ba-6055-4e30-98fe-37bf20b674b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83835783-3302-4cbb-b238-4ec1b1e0a776",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b711b7-33b7-4fb1-8425-9fde29f9790f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21e0bed-8455-4ac5-a4fb-dae69a814321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f9879d-2675-44f2-a173-954da6133134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c507e5bf-6e94-4ff9-8363-af2a8423e1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810a3eeb-a613-44e5-8f79-957ba44977a3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d636f3-ec08-4090-b385-8a534e05a746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473d2a1a-86b5-4f83-9645-4021e316f888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca531660-4433-404c-a44c-be745aa4321a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c0b48b6-e912-40f1-8bd4-ad26e92edc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f79c884-af24-4c5f-a09d-15f8fdd5ba06",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe04cd7-520e-49e0-94f8-e5c006f1b5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f892d2-c4bf-4776-99c2-4f912629c518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd9efa0-646b-4e7a-85a2-139ff77fc0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a6f0084-2d53-477f-81e2-f10b24983815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cbe18b-a77e-4497-a038-b2268056625e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633f2a97-6130-4370-a55e-e44cd56913b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68810b1b-7c61-4b56-9f60-9bc6401c5f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26472f21-b281-4d13-98e6-040081f34b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18431881-bfca-4df5-a8c1-d8bf1b1f8af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b661bee-01af-4bce-a3cf-4b012bf69027",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc650684-2e91-4dad-bfbc-a303617da501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9be4d2-dfe0-438c-9487-b2cd36b1c729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cf4dc8-a07f-4199-a33e-d2bfda214870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "24d09848-5d6d-4e83-95fb-fb51299a25b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99553e76-7e59-4311-8196-ea7e66c0e73c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b140cb0c-ac13-408e-b2b0-a340c8ff68f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aca625d-c545-4513-a6d9-54477486d5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e821d00c-41bf-4944-ae35-b32aa8de384f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77a22eff-6f0d-42cc-8e9f-93b6b1df6501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482dc579-2a44-40e6-94b1-9232a9516205",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5ad8e5-f97f-4dbd-9050-a85db1b7bee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2751de-5a00-47d5-95ad-a369c5004b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e72c17f-e864-40ca-ac79-abf00a569fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c295e1c-5e32-4699-b387-c3279836d37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b386e97-dde4-4c97-a3f2-63927afba413",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6f67fd-cc7a-409a-9126-ececffd3153b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7450edd5-7ce2-401b-895f-142aff611611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0e3337-11f8-4089-9512-dfa127909407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b78dd91-10f3-46da-ab88-e049982599ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a1bcea-ae10-43a4-8913-24e363cb51fd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba7d395-9b65-4fa9-ab59-90658645a667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63d87ce-8482-45e2-a6c4-bb5e81817562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63511a51-bf39-4f79-98c5-d7647f8a2532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "750b9649-4064-4022-9b18-b8b8e6e8f01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e28a651-ebe9-441d-831b-029b1987fb13",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e57e79-82a8-4657-97a6-340ea3a49916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3220976-538f-435b-b146-58fd13d84078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fad881-0096-4d13-bd49-556140cbbf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69183ff1-8e8b-4c7b-84ac-c5d426654038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc7fa5d-ab2a-4eed-a4d7-ad87c6e361f4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e6d6bf-1201-4d2b-9049-c2db82c7ac0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e014ad-afca-41ea-a91b-bb524504ce46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1fa3f8-1e46-4854-91aa-e3c82e2234a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "30d885fe-8607-49c3-8b35-0a44267b8f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc56de8-a363-41b7-b706-4031d1114247",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21ced51-a8f5-4b0e-a8fe-3db5951048ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973e68fd-c44a-458f-ab8d-9f2b9d9ace8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fe33c5-81ce-4fa8-83e2-e2928fef4fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd1117c-ef81-45f8-bf95-f4772a2ee835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2923be96-29f4-4f95-9853-7cd7663ec077",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86878d0-82c5-4cbf-a64f-70833dcc2639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1c1222-5255-4f27-aeed-62af35d5bb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86998103-1b8c-4f63-89af-8d34904d9527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c98d5a3-e5c8-4356-a263-8544b7dddc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7568b0-4a3a-40b8-8ebc-d2413ce6f2ab",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb799fa-e9b3-4978-81af-dadfae362c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b803439-da62-4f02-bb27-f06c3f940aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a10068-8a86-4da0-b272-702de86159bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90b2adf4-1cdc-4472-bcdf-b8abefc97a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746ee618-8999-4f53-bbc9-75aa4df5dd04",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e97d62-18d3-4236-9d41-53bdc98a5bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde64eb2-a6f8-4800-82c3-3f807785aaa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cb39a7-23c7-45bd-8e94-d1643fb6cec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d47b9c1-77c9-48cd-98d5-7c4be9193540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3022120a-a3e4-43b0-b3db-4357ecb036c2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace5835e-b21a-4926-bddf-a7d05ccc27cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfeda40-b4f7-4ed5-a8c5-ce77baa2303a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6a3eaa-10e6-42f6-bd27-d555632addfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd0bfaf-a9a0-46f1-8776-b200c2ff3853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98ca563-38e7-4509-bdbe-e030daaf955d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1c8a36-cbb3-401c-b801-e97e1adb9b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9962fd83-5b63-44c9-b4d4-078f9ee16ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14b2bf7-ee88-44b8-8105-f392274ce463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f53f73d-f705-4e08-be6e-6926eb1b925a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddacf223-b53f-4006-bde7-58f9218bf15c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ac2878-7345-431f-b6ff-1274e9141768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79fd8004-5ab3-42d9-a7b4-447375034e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f994f04d-902f-4f40-b2bf-f2ab8a51f261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c8c6f1-a60d-4d08-ad44-fc2c26aa55ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088ff2c9-0863-4334-91ba-2e9ae9dcc662",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed7fdbd-badb-4f46-80fa-4f8d4f1de420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289e5fa9-8025-4296-8a4d-e70b52fbfea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebba99fb-c7f1-4a92-acc3-4b02794fa22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0547d5a-124b-4ed8-8d0b-4cd3b436840b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331b8508-2816-4a74-aff5-4419a408ac0a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3438f3e6-80fa-4974-8e0e-9b80a7c24a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62513696-0c8d-4d94-81c7-12ebf60505ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ae356d-c96a-415a-9462-51061b2eee50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1078f802-73b5-4a20-86b6-428ced3583d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cc17c0-8a96-4e9d-95df-efbee037c105",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38983bf1-c45e-47a4-a2eb-198248bb1bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5753d3f6-a40b-49c6-84bb-c484db09bfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ebee31-a14b-4dac-b2f7-fa92cc523b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bef3a66b-8642-43f5-9a10-03fa421e107d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504e329a-69ba-4720-940f-d9a0f7694251",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50275689-4045-4761-bfb4-95a7f7210825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09db323d-e2ad-470a-802d-2ec947dbe78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70af007e-9e11-4d7e-93f2-17131db5b644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9bf932-ffd6-449c-a854-c395e6be3717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dc6ed9-907d-47d7-9423-a4fe218a0b9e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba39a287-0591-4ab1-9375-7caa13b5347b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77cd500e-84e0-403b-83be-fe3685915b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a10f68-0884-4f20-b19c-681dc5f77d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc313a37-992d-4e9c-b360-1865a309dcca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356cbf3c-bf3f-4e55-9548-33afcc7616c6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44913beb-8170-4837-9929-3d1b9d8ed3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68540929-17ca-4f0a-a064-b41aafbc120e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6629ac5b-de97-4e93-b34f-0586ad7d21c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f982d7f0-3183-4f61-b62d-625084cf2177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc9293d-1509-4dc5-b122-faad9e6dab74",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2b08fa-0ff1-4358-a773-3942966dc9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6a06b4-14ec-42b1-848b-adefa9e70f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1799d602-f172-41de-b1a4-9442c2ed091a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1d95fd-3caf-4ead-98fa-55c88317abe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8776608-5009-43ca-ab3a-39c38aa0d3e7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2eac7f-ad10-4e8d-8f0e-b033f2dfb4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04235b41-0d24-4454-b388-e3a9a6d1ba4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d62ac2-a0dd-4423-a264-53140437398a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b08f5831-9bb1-4227-9dd5-cd633b91b7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218b64c3-11fd-45b5-8e8d-164e65488bf5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01f9f7c-61f3-4d5a-9331-14e0f61f1fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b22cff1-2841-4dac-be4c-08cf822d5e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9538f1-b49d-482c-b06c-796dbda9a4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d0c89d-7aa8-4e87-adf8-51099b82b15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52a8e2a-0e29-4de9-8a84-2462855ba90a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980f11c9-81c8-442a-a68b-2ba1355fe04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357951a7-efd3-4d6c-9105-7fe86bad944a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b2a526-bd23-4006-8f2f-68e83b9063a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93d0e433-9827-44a5-a8fb-5e156e0a02c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef9c8f2-5a9b-49e2-8515-07e880522ebc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa4508d-4510-4cb8-8d93-493bd0944837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549c1dc6-081a-4917-928e-4fe771c0b221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3868e1-8556-46dd-8261-e1fd6c351ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ff726a34-d860-49ea-8e28-e8635ac1a7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48763ec-e1db-4b4e-af87-d5759e4cfe8a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5221af-6867-426a-9a61-1d7222013901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a46d1c5-9356-4cc2-adf8-ab3e02d2f2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2981ad3-8cf4-4c8c-b470-8d622eeb48c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a4def8-97dd-4389-a2f7-723cbbb97f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff160aec-3c4d-48eb-96d1-18d42759423d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c37771b-333c-4ce1-9e47-8d906f538730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061668cf-728f-41c1-ba10-338978a9e30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cd540d-9d8d-4e98-a836-0bad7fee9ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0afe8e-e04f-42d2-a36e-45420988f027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ba12cb-24d0-4477-b11b-3b321c4ef165",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3bd37b-9150-45fe-815d-d3c1dbffd210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709d2bd9-2389-4d44-87a9-b5340d89c7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c90d272-2ea6-44e4-8b06-62bb3f065cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cfc90f-831e-4666-9c46-966ffdd796f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a8a6a2-6f4e-408f-96fe-b1c414a3e250",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818d50a9-2941-449e-8d31-5e61dc4110d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e0864d-7863-4d31-955e-e88197f4c010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78da71a-cee8-4ca4-bcf7-291e8597668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5daf4188-b393-4f45-b9f8-a323157bcbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e97ba2-eca9-4b30-aef3-3d2e1a1e2ce1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809d0d91-26a4-44fc-9f5d-3d20234d8d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7a24f7-53c2-40ac-88a2-c0638cf0e871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f7fdb6-5db3-47bc-b02a-bf4201cd81bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86371a7-4471-40ff-81f7-a1ef3b8ef4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d18df3-438c-45de-a8ed-e6591b04415b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3d07fd-27ab-46d4-8571-b7af6bfabac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f019b69-b1c4-4146-9176-6239b436165a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b79940-0d73-40b3-af18-b62c1e3bfd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5389fea1-db55-4280-b84e-e3d5adf2cc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddae76c-ee4e-487b-b334-a0144ddbbd2e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e05055b-8e4d-409b-98d3-87f3d0b159c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8714d5-6ec5-484d-9a71-91e1ae8f8d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8c0975-f5fe-4d01-945c-4e09c2c73186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51388c79-aebd-457d-88e7-e44f2ebf5ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2289cb-8611-444d-b5f7-df0e7946c9e9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef033f5-31c4-433f-a5c1-06b58000922d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c4f1e4-1df4-4727-8972-f1985e97f9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96df8527-253d-4432-9264-37c5f6e8ea0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fce1fcb-f97d-4e49-98c5-41671d952ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7603c274-3d8d-439a-811b-cd8b2fb0a946",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab64ab0-5aad-429a-a997-ef936ea212a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8a3299-1043-4263-a602-ee76e0a6160e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b45c24-1da3-4445-8dcc-ac72b47e8342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "80b778a7-fdef-4828-9624-d0a02bcc4ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34f04b8-08b5-43f1-883d-b3faf213b4d6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828a4e84-1f46-4b78-bd3b-14e6445ad7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465d2ca6-5dcb-4526-bbf9-af1a69d64bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f4e675-64d4-4618-9f24-5b846fb352fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2084304-4a7d-4a22-a7a9-2c538cfdf7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f7a135-d2ac-4fae-98b3-ca67f67684cc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd10611c-78f8-4387-b1de-d96c0963596f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f2a379-621e-4de0-b973-9c9841908518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0845a224-46fc-4a1e-a9a3-3728c3160fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "537c2157-5023-486a-a838-598fb00417b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54b462a-0a1c-48d4-b7ba-6257d11f0463",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7205609-7055-4b09-88de-3a411a0efdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182592f1-3ae5-4625-8792-505764aabbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f912644e-e902-40b2-afc3-dbcc7c6edb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b937cfc5-66ba-4edb-8426-04bd14bddc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c44e118-0bd7-45ec-bd7c-53ac3cd391d2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109d784b-90dd-42a0-812d-27b6d18e564d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9cf6bb-c4e6-4725-9862-bc5164685b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457f3751-a1f9-40ca-b0d4-bd4a73b16673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84647528-0911-446d-b605-edc4655fe3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5546270-3b6b-4469-96e4-412cc29118ca",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0daa19c-84b2-41cc-8ba4-f6b975a33fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68543f53-7976-4ab4-8cd9-3fdf72096648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecb29b6-33aa-42dc-a9d5-8bb9f9f66471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ba186a8f-c89d-438f-9dd4-15424e717881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818f9ac5-6676-4f79-8f59-3243ef694e37",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e732a4f6-da85-4bed-9ac3-fea8e5abe398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deeaa3da-fe21-4d61-970d-0262d1e1bc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bfe64e-d56c-4eef-bc19-01ada14556c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "550e3b55-8bfd-435f-93fb-7721dad8a298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280ef26b-0d59-417e-b219-5ceb856814fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d9489f-f3d0-47e4-9693-ec4d87c6fdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a3e911-63ae-4699-9e9e-51f47d5b5c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3db3df-97b5-49a3-b290-49af8081930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "31a2b871-3a15-497a-a4a1-363bb57a8b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb8f609-d1ee-4997-bb04-f1759d523875",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dd89a0-a9eb-4d19-9b79-486e26b0bf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f892f33-4b8d-4080-a6d4-7bb9e099a9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b9a9b8-f9c6-439a-9e3f-e24ba2b36527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de7cdd7f-a0ca-49e1-ab25-fb88a66b1321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fed3905-38b9-4c9e-9113-92449b6f7965",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dae8b0-8fd4-43d8-b69b-d61e6c4eb2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588df6ef-ec47-4f7f-9a0a-ff7d201f120a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c0b69c-979b-455e-8237-d5404b58608c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bc97e8-b545-4f26-b077-b8eee13254c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48442d78-bd75-4dd1-b100-3a6e42feb631",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d35e42-721e-470f-b796-f0bed2e0a63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e33210-64ce-414f-bf11-f6e5b65873db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d109dd5-cb4f-4ebb-9c03-b48d25d3cac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "49596dfe-e336-4cc1-bfbd-96c9ed41cef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32a07bb-fd53-4634-b933-a55a9a8dd7b3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cb486a-3b1e-4840-ad4c-af251660d5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f876e98-6d98-4686-89df-8f2e943ef39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43572644-7882-4f7f-91aa-2d6cc046e1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8438084-ba50-4104-80c4-708ad5d7398f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b9aea9-619f-4fcc-9a76-17e93f798799",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196beb2d-924e-4a52-a8f5-f2de4bf25ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b6ce87-90f7-4c53-a7bf-e23718d2375c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3cff0f-3a04-4d43-8906-f9407da7fddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7d99a2-8d61-4713-b7b3-89e870da02c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdba4bf3-3492-42ef-a4d6-6ee335e871ee",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ba301c-0e6a-4383-b869-56f8cde17c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f380a52-fc88-49cb-9772-3bfbddb37964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106fad90-d5b8-4947-a9ed-846f867ec23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c29d6d3-d575-487e-bb5d-25ca87572b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d41049b-8fff-442a-a873-51e0120f2be4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b989b45-840e-4b1e-9316-bda7ca1e2590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c14a13a-770a-4091-ad9a-390a19441a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebca14b3-54b9-401d-938b-d8b34309d3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0249e78-7947-41a7-8a2f-a9fb01c0d35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0fc59a-7f05-48ca-9403-e15179a36101",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7145d19-0c52-43b7-9380-55969c0dc4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b36d203-6dfb-408e-a939-fcfec31925cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61bc31e-2927-45d4-aac5-2317dce9289a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80a0a013-1a20-46c0-bf93-279bfc5eb4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac73705d-2eae-486e-9a04-2d378ecc76f9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2e68dd-4e88-4f08-93b9-f87a9e87058b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9c99ec-1ea8-4433-8be6-e3e9d8d7f6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7323a3e-0e19-4bcd-a70c-d79ee68a9ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8468d5-5877-4b44-8086-9ed69f15535e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1db9b67-5422-481d-acd8-443a5dbcdf10",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54ce3cf-fd57-49bd-b574-a09043f9da07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd9c5d5-2c11-4c1c-8e04-9a7cff646e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83727c9-8dfc-4132-9fc9-cce77b9f4c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "377f3797-7f26-482b-a0ac-e97a08e9edc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63677274-f5bc-4b01-9d65-4c01f256d71a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1b92d5-f3af-42a0-a21e-5b38fe6efc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad658185-f1ba-407f-8934-45c59c100391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a3dfe0-67ff-4679-b4d0-26ada656961c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4637cb6f-70f0-42d9-9966-f4378f6b6761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fa72de-a502-428f-9884-79cf513ef595",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8165f566-31af-40c9-8ca9-e75a19110404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96de5e1a-9505-485d-97b5-14918429e98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119bf389-a810-4119-8cb6-6925dc5d8954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "991d36ba-b385-4313-9ec3-726459d8c01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7003c3f1-5fbc-4b3c-8406-498b8812ef0b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab71ae6c-29a8-4474-81ab-3fad60010d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e27dc1-7029-4b36-932c-f63ef317eba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a09f09-63e8-4b4d-bb9a-5726e2fbc94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1006d356-58fd-41cf-92b5-95597edcdf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c26325-8634-4cf8-b19c-203647107659",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ae6c2e-6e4e-46a1-a663-9b5b4bd7cdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0d4a73-ae09-4cb0-98aa-73c5f63be299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba944a53-d485-4f9a-a929-0d2a0fa60a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5093df-c2b0-4049-b941-620bc9120c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7dd8f8-5ea3-458b-9c28-c7c43f8b00d8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e926c5c-929c-4548-a1e6-0b8094e6aae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62295fce-9cb0-4d51-9885-2843c3137577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0f3bfc-972d-4834-8c5c-554eb0f9f984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a937484d-87d3-4811-8ea1-7d254e9e9430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8630416d-1f9c-4273-994b-110ff3b9b1f5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feaeb40-297d-4f5d-8a6a-5dd031ae9845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b0b0c6-a8a8-4c59-aff5-7bf6104f80f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63b42e3-11f1-49b3-b9ff-ec6547958769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1248a295-ce3f-4592-b30a-582de683665e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f637360-d3ad-4fe0-a8ee-6d2897bb0267",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2f0fcf-7303-4a3e-ba9f-3cfb36d001e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a5341c-a266-46e0-93e1-c292339bd6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a0c62e-271d-4f0f-a8d0-f93a36a22bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc01ccc-0cd4-4369-ab54-335430e9c54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d0c620-5fd5-44c3-ba64-7933f840a015",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544e914c-5161-416d-8062-ae67b922d466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0512ec4-04b2-4536-8330-056ffbdc93ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f5d6b8-3fec-45ba-ae61-b26377865215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ef152f-7f6e-464d-8028-a3b72256111d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee321ef-3046-455c-83a0-7d2335213062",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d857cee-bfee-468f-ac4d-6b70ffc416e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bf4715-4eff-4228-bbcb-c75553b38519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc926cf-2588-46d4-8965-35efd7eb9b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf667afd-cbcf-4e86-b41b-8b281969b083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7a1982-a87a-4887-b68e-f65361702628",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3c62a7-8db4-4b82-b813-e9b7f8b3e876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713b0f65-8ad1-4dc5-8069-d64606ac4b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9e2991-e82f-44bc-9f78-f351626eb4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "478031be-4bff-483c-aee6-4772c8bfca1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2329e883-aeb5-48a5-9dd0-55de3db067ad",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b0aa12-6e44-4f59-8189-3011f1737f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc382a9-fe4e-4bea-b7da-47c650a1a0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a322a00c-b215-4f11-a089-06b07022c3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8007c54-ea14-4488-a890-3ba31d9f9695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3a5378-a227-496f-9681-cb1e5d9c2823",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc01be5-a2d3-4254-a40b-ed4e3c1f12e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edeee64-6bd0-4c4b-98e2-ed71f7d1f5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60743fc4-7249-4f49-9db7-d79050062597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d33478d-20c1-42c0-8094-0590f8881541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9688d1a1-68b8-4061-9207-353d13e14d0a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289db969-896d-4ef9-ad1b-a61602c043ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2ffe1d-edf5-4713-a403-ccd09246fa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d863bac-512a-4f8f-820a-241166db6219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c504f48-ecec-4095-8b88-edcebffe0754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a46a15f-ecef-4e1f-828d-f3affd5623ff",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554ffb4f-681a-4791-9fa5-1384735b08de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387d00ac-c69f-46a3-b3d6-85b2b7d151b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcba069-1cd9-4373-86df-87c52dc5ee89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "def5155a-dabb-4bd6-a6aa-19d22a95f6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d7f943-7b7d-4113-9092-757dfac7405b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86566d6d-9aa8-465a-aea3-fa37fd5cb254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dcc490-1ed1-4a70-9e26-9b210bda1616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69b5fff-ded1-4db9-bb45-d08d13486f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f52150d3-f29c-4662-8fd3-cd8040f5061f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7586013f-c2e6-4f40-a814-5dc5ba788b2d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9693e11d-abec-4890-a7a5-bedd205663c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b01f2f0-2278-4391-aca0-9d391df29596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb29676-5f7e-455c-9fa4-0a173faf32af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec98488-4dcd-4687-aef8-8b2d7d81c9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3ee407-1bbe-421d-a695-18fc783dc162",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77b446c-cf9c-436d-8905-5681bc221bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec970090-354f-4796-b1d6-effa678b0ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782b1046-e8c1-4bec-b656-4170cb359a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ded7a5ed-7499-4de8-bedd-c2a81155f123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a74065a-9451-492a-8e28-48c89431754a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949093de-1c24-4e9f-8b73-3219c560d617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c433d3-f937-43de-bf71-3d12fe04c15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6962d9a-aaf0-42d2-afa9-4a9ee43d285f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b54abb6-85e2-4f9c-a250-b97250d159a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4ffe9e-228d-4a6a-beb1-16a641014e79",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f496450-fc2e-4045-a580-69651665f9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9033ffdd-ddd6-4ddd-80b5-ce45f9b9b896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fcb3c0-a1ee-4270-b273-bf79f469bafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1103262-20cc-442c-8b71-d6781dcfab31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bbf625-53cb-430a-80c0-2e7797722eca",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf64d0d-f117-430b-b0af-5ef0bac6b355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37552353-0402-4898-9291-bb19c4a3c8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d3b1bf-4084-405d-a137-65810f24ff2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6480e317-e4d9-420b-8eb4-96aabdd205be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dda8db9-ddab-40c1-b218-e99e75dddc66",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6df231-676d-4bd0-84a5-2b8e5ccfdfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d445869b-ead1-49c8-b7fb-27f11835b017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a8c5d8-e9c4-4bb2-ac39-2ce162e409c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fda3a246-c929-409d-a82c-ecb5cf23e913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433eb715-2b32-4b73-9ebb-d3478d4fe529",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59848f73-5abd-42b0-8513-f7825fe7764f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bc7354-0230-428c-8891-680435c61728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82c1bc9-15d2-47d9-9a7d-46f94b664fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a22167-4f14-4a34-bf5d-79b6359db2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dc9120-4296-4c2f-9115-e3fadb589cdb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70a1449-302c-4017-b7d7-ba1c6fb62cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd4296f-95c6-42fa-ba09-6321bfbaee26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a4f6bb-f7cc-4b92-ab28-41bda50f6198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d683215-601e-4d0a-9041-4021b6795230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccff3fc-2c9f-4697-8f2b-8b02519743de",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d82d991-c123-4d21-a367-2909cf89df1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cbf914d5-5057-4e71-b268-c8911852d91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a86218-a336-4df0-8a22-4d922485dd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "32ad8483-3df3-466e-bbb3-e5644d589418"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4cca0224-03e2-4549-88a8-653329c66f8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "973b7a7e-7283-4690-847c-93cc70a8dc7f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebe6db3-e01d-4d68-a8c2-eabf618f7a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42fe36cb-cfe5-452c-8b81-b416842b9d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7b5876-3c37-47a2-be03-5dcb292d974c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "728930bb-56c2-4aee-83d8-6a2fe6b50c12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da4654b2-661f-4094-aa73-ac2a29d7af58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9efebe35-c1ad-4891-9a7f-82bfc7902fa9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9bacfc6-0e12-4049-a862-0eb74ec9622d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0dbdc5f3-9724-48b6-be61-8d346f400db6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9cfac12d-364d-4199-9b02-d1f6f74e7546",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2fd630b-23d2-4fd0-bec9-f56f81153536"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "05252494-240f-4d87-9ba3-a341fb4a1bb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f9ab9d8-2ca3-46e8-acf6-cc31901e1330"
                }
              }
            ]
          },
          {
            "id": "1645f994-9596-4ba9-a583-0d450e11b2c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b47089e-cbf3-475d-9198-48cadb045668",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "446d6306-5847-4e6b-b0e2-d6be91bb55bc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8460adb7-4bc9-462b-877d-23d4deb089db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "90e757fe-dd68-4cd8-88e1-7ed2039d8d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ca9235-8610-45d1-8bcd-c3f653f10a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc90c6b6-1639-4b64-ae73-04159a0b7367"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6c02f09-d6b7-4420-b61f-aeca56944753",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5e82f0b-a6e7-472f-be35-c462381dc980",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0773bbfe-7cf2-41cf-8f7b-35b498388dcf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6878942-7a87-456b-a843-b5b59839b259",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bbf10d0f-da14-4af1-b7bc-2997bf268917"
                    }
                  }
                ]
              },
              {
                "id": "0c795f9b-a7b1-45d5-80a6-02b12a695888",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf511562-3672-4785-8b7a-8aae7eef9c7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83202bd3-2a7b-4dc5-89ec-084c51d0e019"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "268e645c-5327-4179-9cc2-167cfb9cca2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4113e70e-156b-4966-8f43-1c6bb48172b8"
                    }
                  }
                ]
              },
              {
                "id": "404381aa-5522-4a47-b7e1-db9e70c137ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c590b4e4-d465-4b9d-9044-dc4b70cf730a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc28a59c-b997-4a7c-9035-e0687dc07fcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfada8de-083c-4141-ab41-84a99d37248d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d290a0e-22ec-4618-b52f-d29b08300b7c"
                    }
                  }
                ]
              },
              {
                "id": "a0019310-0846-47b9-90df-c07ebf0401ba",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b49d4b3b-7d19-4fae-b897-6ab3b9ba7014",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c147060-2c20-4d4e-be31-f49bd26f48a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "539cbbb7-bfdf-4f77-89df-60c69d42a57e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a0be2773-1b4e-4651-9f14-3f7bef5cd581"
                    }
                  }
                ]
              },
              {
                "id": "14b00af7-bb44-48b5-b7f6-b7e238e2e9ad",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fdc86eb-680c-4c22-87f9-12df4f0b4053",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72b95690-6011-4583-8dd2-2f4f48876e2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a427891d-e3ea-459e-a275-105aa0db961d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "159f6289-8018-4f75-bb01-a5ea32bbeaab"
                    }
                  }
                ]
              },
              {
                "id": "0ab05bda-e377-416d-ba91-5da1175bf71d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e9fe73e-e32c-423c-93ce-1c8c586924dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89267bbc-9bc0-4c0e-aab2-cd60b08c3c46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bc030bc-0292-4435-aec0-1eb299388cdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "971ebdf4-708c-47d6-af65-02d965832c6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b57f407a-cc10-454a-b734-747a85e824bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c8d0575-c7b1-412b-82a5-09cc61970c26"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f127bbfc-fb26-4ceb-9f8c-87677953601a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dcceda40-49cd-41f3-bbd3-fc7ff53585a3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3d34a96-fbf4-4ab9-8754-89f826aa0a0f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1668ffa6-1683-4a78-a36d-6ebd47f36056"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ff76d87-255f-46c7-99bc-69dd18283da1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca90dce1-4de2-499d-9c97-bc75688ed8b3"
            }
          }
        ]
      },
      {
        "id": "d2072ff1-ccfd-43df-9c50-7d6b7f22bd81",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "07433c2b-71b1-4a49-9314-ebc8320b2291",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f40ded5-1692-4669-860a-2451a44599ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bfa604ca-b435-4197-a6d6-b251300f3ae4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc9fccd-365b-4853-ad62-69c9063dabc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e762bc7a-b509-4bd8-9946-503bdff416a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0581d155-7bae-4c05-84e5-434b6596ab1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1662b9f0-c206-427f-b4b3-5bb24653d819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957fee5d-3b0f-4b5b-9a3e-c32b8e996445",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36fbbb9-4514-4511-9723-2e73eb181203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7ade54-701a-49da-90c2-4c5b62efdd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f10ddb-2381-4b1f-ac31-37d77464531c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcf9f53-e252-4dbd-98d5-c46c43cdd066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cdaab7-9035-4d6a-ad30-7adacfdf6ef3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28c163f-b705-4d6e-a704-245f3569895c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8248edd9-47d0-4cb9-8ee2-9e03f0c5ca2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf5aa25-82b2-469d-a7ae-76ad4132f759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87173b46-c642-4422-b59b-8da500e3d056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403d66ca-259b-4821-b660-c445d9023505",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14147710-b70c-44af-b675-455c13b75d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904bad7e-ddaa-4a23-b94b-38241e518d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ad0e7a-47f7-4d23-9901-8d1955795870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a2cac5-fe1e-49a6-a90d-bf1dac270a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f617e008-9b86-4d71-a001-8a0e429ed7e1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c868a6-71e5-44a8-896f-cb7f5521289c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1525a728-01cc-4dab-b669-66874ed0e99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6cd6d3-150b-4fbb-a0de-cb39ff8eddd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cdf925-84ff-4e13-b2e2-bb83ab2cfe64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1651211-9aef-4b6c-b559-b599b1c7c9ae",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002ef2d3-8ed2-4a95-8912-07af92b0bb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb9e745-a726-4204-a97e-20427409cc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6500e7d7-a457-4aa6-ab37-eb8e32ea7228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3003937e-b219-43c5-8993-cbf2dbe65426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b13b3e4-430e-400c-b6c7-88ef8b9b8e09",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516c8943-09bf-4dc3-8901-1d5cc594a694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5a5906-d382-42d0-84c3-537305d3aaa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d11cef4-1508-41e3-a60c-ab8fd22df8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc6b028-5f11-42b6-a0af-e88d45aeba0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939562ee-7994-4dbf-a928-6256fb003632",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c567d8-555e-4541-a4a3-59472a2d1396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed2a7cc-ff32-476b-9e2d-1e33370d8295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7067a9eb-e2ad-4679-aaab-d34204ffde76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c72bceb-6439-4c36-8ca5-811b7e3bdf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f79bf4-5f48-48ae-8484-61b7b881365f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f4d4a6-306e-43c8-a34a-1bb6ce97e379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309ca1a2-3114-4041-9552-a84b76d173be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6507b32d-641e-42e8-8265-da6f9c8d93ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eeff00c-c01b-4912-bc9a-ec85b752b9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f45f48-9f7a-431c-a6a5-0ed4c0bb041b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e28600-1ca3-4e64-b400-4b6c8fd6699f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30eae170-c42d-4f05-88da-931be8a5943d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00c5ef7-367e-44d5-8d1a-e75a3c58fa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0581cd67-afcc-4bb5-bc4a-3052fd21325d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c11872-75c8-4fcf-a82b-782cf8fada75",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e9367a-cf0e-4136-ab55-44a9f706cdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f790bf-8871-4ee3-a6dc-cbfe6ea8a9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2ff2d8-d8d5-42ca-9aa3-c0623f8d3d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "df47495c-c66e-4426-92ff-14518716cc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c2b573-8727-46eb-a0e5-394fafc1be5b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8d21c5-f64b-4eb7-940e-34b705cc8f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a6f454-76a6-48dd-8b71-fea4c2f6cf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9694ccaf-2fa4-4116-abcb-8ea4ec1c88b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61dc6604-a2d1-40bb-8642-e1196aee8fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4175c1-ed87-494a-91f1-7646cc99f817",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4ebace-d25a-4759-86ab-5c2d551bc438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2f6086-3b16-482b-aa9d-01e4ee86c1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f113c92-df10-4971-9ccc-d4e8af44dd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1938cf0-e823-40d7-aae6-0f556bdb78ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00817718-7800-4feb-91d9-9cbbbc6cf6b5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e353c123-ac0e-40c3-a13e-4e70dbc9b1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552e937b-83df-490c-bacf-de4a90c4524d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87035e4-fe4c-400a-9115-6a64b5b36cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfae86e2-3c05-417b-9c93-6718d7eb47cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85c9a33-9e44-4c11-8481-b051bb89de98",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad70e5e-7601-473a-a9d3-47c49f154aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79e14f0-5e80-4080-b6d7-0a6534bca686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39be51bc-70f8-40c2-a956-c689d3c1c23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "982881c4-b087-4eb1-be3a-d4320c139686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd7de74-dfe6-4548-b22b-932343b0fa2d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e301d49-edc6-4b7c-8df3-71bde8fa59e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe4f796-e82a-4dba-b12d-87f93a434938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd64717-4b26-4b78-a394-9bcbdd7ae8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb73ec0-6fe9-4c15-bce1-8a7761a162a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77cf62c-60fa-49ad-9262-4a2e0f597059",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c193a9-eda8-44e8-84d2-ff4916fc4869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2a86da-6673-4c20-a6c1-f1056c540cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec46f3d-7082-4de0-a703-85b2e1c64df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0166a109-ad28-4031-be31-89f5996d17dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9355fab7-1fe8-43e7-afc9-3d92f079639a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862d4600-cafc-43b9-9dbf-ef87f3a7613f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99561d41-c59f-4975-a265-fd3cb9460afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85c5ee2-ba90-4555-b177-bef76ba534ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "716b841a-75a2-4e9d-b25c-d11fac853ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace44ea1-6c34-4224-bd5e-247b59094f20",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6383f01-a409-4fed-a31c-5f455d77421b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db5c9ff-a3cd-45f2-b9a9-ab3dbc63dec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef02715-274f-47c2-9a5b-47ddea2b8788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97501139-9d6e-416f-9153-e6f7ed58af77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a51f9d1-36bf-46cb-8853-88315dd19b23",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2f7d5c-4562-4d97-af39-a69aa1e20732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e548b7-8479-4ae9-a650-475692e05c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9359bd0-6b0e-4892-9fa4-012c1f88550e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee021208-651d-4afb-a816-b6fc7957a3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1132a70-0824-4ed3-adfe-9f6a84a1b8dd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c57cb1-746f-4f08-8dcd-7bfddc6b2bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1deb5d2d-833f-4ef4-b886-c7d8aaeb613b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f58a171-3fce-4b69-8b18-982ce24a202a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f15d2758-8ccc-48be-8748-ab6ec993f85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ba49e8-53fe-48f6-a62f-a174ae890f4e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dcf596-c76e-4591-add7-8b80eca511cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80924c9f-c30d-4e00-b692-d2aa0255295d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd7270c-689c-4ba9-afd4-171ef478f48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1704bd45-dd1a-4dca-8a13-8defceb38b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64a645b-b5cd-42c3-88e6-e7d0ccd64e25",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48acb4d-075c-4c29-88a3-8617de0f3516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56cc11ff-7d5a-41f5-baf2-e4ab4a3a767d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd709f8-e199-4f5e-acf6-fcc590535be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90674860-d9e2-4f38-b7c5-64f2f6d94eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99193b16-c5ed-4400-8e1b-8b80af9295f2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96243dfe-9976-480d-ba11-4a4d5ac6441b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3618aa-40af-47bf-b48c-ef66694bba49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a862ddf1-b618-4210-a6ba-76e5a637efb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6063a8-e82f-40da-a7fd-1610ad781049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59934aa9-df9f-45b5-b601-0512eace397f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da08fd9-2bf6-4df8-a562-b9db5a66a95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be844c5d-c0ef-4f0e-808c-7793c57d789a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21ad63c-f21c-48e3-b09d-16f5b25f3f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b99caf-d4f9-4163-988c-bffb31c920f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe6948d-5e73-4819-8cc9-e6c5786aaabc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a2cae9-4ff9-4d27-b1a3-aceabce19522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e734b59a-85e9-4dca-84c6-7a2ef4e117df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3f8770-5265-4bc8-8798-59a7636a947a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f90db4-e366-491b-a015-50c0cf8188e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362576b2-92dc-4711-b918-80882c236d98",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920a7a6f-36e9-440a-a4b9-fd553385c666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7f34f8-0fa7-4720-80da-bf4fe3902a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8749203a-9982-4c79-80a7-1b094d56f00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f494036e-8ac2-4823-a102-fb2c19cbef5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c7ddbe-78fb-4b79-9262-c8928d845ec6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acad6a3-cc16-484c-937e-5e063f1ad0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417bab9a-44d2-4520-b839-1a5199684069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bec28c-7a87-49d0-9425-d8eb8824fe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7638c0e3-28b1-481b-a1ec-43bbd9e50c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb4190a-7f2c-411b-84c4-6901db8d4416",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7557456a-bb74-43f7-aa24-6ece15ac8879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3743189f-94f2-4f42-9415-6c5cc8fe954a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8597ab79-5a51-4e7b-981e-314700163e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0585e7-e528-4bd5-8a6c-8ea5968a5c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281a46f6-27af-4490-9a4d-a20fac60647d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1816dc71-0549-4559-a6d2-4e1750904ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe768c5d-3696-4755-abb0-c8090eb12462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9ebbd6-2fb3-4bee-b6fe-dd23fe3fd250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0593eadb-552e-43f6-bfe4-79d76cf0e530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e54588-f602-4cc7-b0fb-26e37db037bd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a601b16a-7604-4591-a031-72d67638228a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822d1fe2-2a90-41d3-9aaf-e92148821cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad48a006-1e2c-465f-af5f-0853827073ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5a5d66-6254-467f-b58f-fd9914dc8f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc254ab5-6118-46d7-9283-f5ca311e97db",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9193e3e-39d4-4001-a6f0-2e0fd855f8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050ce894-e6e9-4d3a-bf1c-5454338133f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2755194-c104-43b3-82d9-8eb319d4145a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7ed7cb-198d-4945-9eb8-1430cd4a7290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1893ae50-c4c1-4440-887f-c7ea694cb820",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9914c8f0-b7e3-461c-8c55-94503e599d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0da54e-ddf0-4371-a863-eee5955c98ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29737453-022b-4afd-9e23-f2cf5b186321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88786b74-a0bc-413b-9052-a8f2b7292421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b25f6b-b180-4342-a746-670c3b1c3679",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce8d81a-1adb-4c74-91ac-e0fb4df632e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860bdc9d-0786-4712-b370-2cf6341135c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d375bc-6007-4e19-9c53-2a2908f73f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8213e797-0159-42ee-bfa3-33047ce0c65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33290194-24bf-4899-bdf9-68ed8f0dba96",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77523e5d-8569-4e82-bfed-c4a6bc3a76a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be85717-9611-44dd-93f4-e75fa13ec924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66165f62-d383-4166-8055-20f530871d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3675626-620f-408e-a30a-0f1f28df9a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1da5832-09ab-42cc-b9c5-2fd1961b26bb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba600a8-6b3a-4819-b01d-414a33f021ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e13eae-bf3e-4839-a720-f721624846ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5688643c-7fb6-4e8a-8b1d-5a1610dd8d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9990c8c-de71-4d43-97ba-19f0014bfa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5101d68-f6e7-47f5-af05-2d6ce5467ddf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346a4227-ffa9-4d39-933d-d4d398c67e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fe7cdd-4275-4d65-861d-f40fb860bedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9932db21-d56a-4369-9d5c-9dda956f606a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11128012-5db3-4e32-b363-adcb6c14a291"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d749043-ddf8-4972-9207-7a2df2e7232a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59a5e608-53df-425d-8403-1b6e837fbf4b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06521025-8d66-46c7-a1a5-c40c77410585",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd9e15d-d158-4c46-90a3-b651b15640a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71eee6e0-0e57-4cbd-9aa1-2cc28e22af21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "110d678a-d8f7-4700-b101-d62a61cb0a9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "447c5a39-da1b-4043-ba45-0e61664f38a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f83e6551-3efb-4782-9e42-9476ed1b485c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd1e0e0a-e4c9-4d48-9604-1c4cc79625d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7ddd9ce-feff-4e1e-a675-8e2b1b5c31d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1d1bf43-ae2a-4876-aeaf-f193eeb96497",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "398b9738-b921-443f-9315-6bbf647f4779"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0066d28-0be8-4651-982f-c48b073e1295",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a97dba7-ee50-463b-baeb-a7063ff2fcba"
            }
          }
        ]
      },
      {
        "id": "87e6f720-f295-4114-ae73-de02c9dc098b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "568e913c-c93c-4d87-9dc9-6264ae8d3738",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b6ffa62-4747-4b7e-88cc-68247dfefd44",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2f90f00-30b1-417b-afbf-296b9b6dc734",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035ee24f-e580-4ac6-8e22-170c3c62e231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f163e7-506b-4d1a-8758-529201033e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e231169-7027-47fd-a879-0bd8c9f5c891",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c421dd3e-7154-42ff-bbc8-3c5593705d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ba3f23-df4d-4760-85fe-6dec279741d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05db4c9a-a9d3-42c6-9412-19b68bf5b067",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36803279-89a5-4184-a682-9f80874a2168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5d7484-b4ea-4591-924e-1cf11e7e61fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f047bfe0-76eb-4f76-aba9-67a4230f43f8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa07e94-f65e-45a6-8b70-86870ed953b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee3e4fd-1cea-4c84-ba77-5e16378aa8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbc2052-4982-4ac9-a40d-18a9c84782fc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1435aef2-33cd-4c93-9b66-7e0e6e0b157f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a98cfa5-6705-4159-a70c-97b4fc3f184c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b06fd26-f3b9-4597-8bd1-d775327683f1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec78a522-6536-4fc7-8cac-f1246fe41bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a53517-8adf-45e3-be5e-679e09c8a530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ea2271-d07f-4e0f-a8bc-e7c134ba1a96",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898496b3-aae4-4056-aaca-5730a6aa73d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21145e4d-6316-4cec-a3ed-04e06ae26f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02040e50-1fa8-4eb0-8c55-2829b3855594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ff6b8f-a5e4-483a-b3df-1cfe6493fbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c78259e-5e04-4e3f-9a4d-0328c0910bed",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa221865-397f-47c2-b926-0949aab2708b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "556fbd2f-4e07-4864-9d40-16c3456cf475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042f9433-c8ff-4289-95b7-b44e3574c8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299dee3b-f578-47b5-b63d-a7a3ed63e899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2be476d-a2cb-43c0-9ad4-f210f17022a1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d78135a-064a-4315-a1df-4bad0b00f43f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4fe2025-c8b5-4379-a4ff-2a4bfbdd7b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc514275-b928-4aad-a6ee-d5657ccffb24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3776fee5-7607-419e-8c7c-1c945ba66dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffb6dc8-40e5-4357-901d-94a4c081e86a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b9ee44-26d0-4ee5-8f69-42843f0a998c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45a53975-ead3-45c1-b631-dda046029c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a3716f-97ff-428c-8540-8f370fb98a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf782c1-2b18-4770-ba1c-96adb49a1827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd43ea3-12a2-4d5e-bd8a-a962c935d782",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cbbd42-9138-46da-a1cc-c019fbcb39e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39db592-fe08-411f-aca8-bf16dac670ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b07e61b-57ed-4168-a432-15f1b2f94e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a241b7-9385-45c4-ac73-7610daf48aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44667786-ad00-4dc3-abf0-a79587ff6fa4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceed529a-02a3-4dfa-b208-66e8399b3070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe3532f-ac70-4880-9670-f760d5b9f4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3974c940-4024-44ce-80a3-9efa080b5ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbad09be-bf15-4431-b138-f1f525e6edad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc732915-783d-4118-bc26-623fafdbf729",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fa2d34-b447-4f35-ae03-4e38769c6e16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "320f6bae-b4bf-40cd-9605-01594f2ae15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2417b5d9-4206-48ee-8ca4-f07d3be69c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c421e8-eb3d-4612-b0a9-b0da8e4ea4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8a4c06-49a8-40bb-86f4-df7da4003f74",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e0b729-cbe6-4730-990b-1c9f0c9fc971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eddd983e-d10b-4299-b81d-dfbf2d67f19c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475f12a3-3c82-4100-96e4-c2783f218be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cef925-0d60-46e6-8291-241f293f2475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2817617-eca9-4d4a-94a7-6077579bd482",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9034d68d-41b7-4948-9d61-dcd4f55892a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4531f3b3-82be-4f63-b8d5-26d663110ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c417e2be-ac2b-45e1-80d3-495f9b3a15e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5246db5-da7d-40fa-93ef-6ee12919f7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f31fd4-7809-44d7-941d-7ffa0dbb569d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4da1cef-86e0-4a2e-a945-1cf9e04a0c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d02f904-32a2-4268-86c4-ace6e8ff09cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cd1c53-2011-481f-aea1-22aad0f7e338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2caad08-b678-401a-8f8b-ada3643ade7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faf877d-94e8-4b61-a418-2e29d699de1f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bee1cbe-7e88-4bbc-a423-9a42e88f3cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a16bd74-3a57-4ef8-83f6-159bbbf173ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67d2551-cf21-4de9-a02d-8dc417616bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6ff3bd-d1fb-478c-9f8b-f0f50026698f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c145836-82d7-4806-9366-f142c935a925",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de91c9fd-f794-4480-859f-c9f807d7135d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cc45e8-a656-4a2a-aae9-403efea5fcd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead287bb-7812-4b29-bce4-34aa6956e8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39c0ef1-3a36-42d7-8e5d-4c743f4373ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c18fd10-9b1e-4cf5-b058-17836ce4bd4e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd44db0-d991-4bf8-847d-f732070afa0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841fa434-534b-4a62-baac-8d373b76d5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ee283e-2920-405e-8b2e-c15dc4a880d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6bd57d-8b4b-4908-b91e-06b1cc17a509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a76ca7c-efcb-46f9-bb4e-2ac255f3de75",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7332e9ad-2e4a-4456-953e-f8d2dae34d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481ca643-586d-4d10-8484-b5978a21fec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8977c92-7b8f-42a8-800e-b2d9730d44ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0b62b2-43d6-49a1-81ff-af423889dcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1741364a-3c1b-45d5-a40c-986777eea239",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7771844b-ddae-4821-88e0-9d9cd7770443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4db5e8-eef4-4754-bd4d-7c4c1753888d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a3cc8d-a7d1-4b10-bf5b-8d17db4a98c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cd4377-9d90-44fb-bc3a-9f42daff09e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6e6f18-c7cc-4133-8fa9-c23944c97fdf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd575b7-b22f-4efa-a1f5-fc88d26e3a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d2e805-6b71-4c63-b15f-d9bed9fe3319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba5ebaf-0575-4f74-acdb-59bcdb6d4f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0182887d-fe2e-41d7-a699-37f3867b3546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0122a468-f820-443d-b382-f6e4b0b5c77c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bc3cc1-08e6-4d25-9d5a-c743aca39dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb15de5-c7be-4e50-8982-41c107b8e7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b0c18b-49a8-45d4-b7fa-336cb78e8856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b81858-3c9e-4deb-8d68-de410ed967d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118dcbe6-87d5-4e2d-9251-d989ec490268",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496d166b-fd1e-4467-bd1c-ff76a3b35a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef38335-e399-46aa-b8b9-e809ea47d0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeb869a-30a6-4f85-a08f-06a057ea46c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff549f33-99fd-4413-ab82-1724d911e1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fdefed-fcc6-41fe-ab81-17f2eb57dbf3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f07d880-cc51-469a-8f70-9a955fe38591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c759a8-73a9-478e-9de5-975e3736dc3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b31d712-c3b9-4142-b57f-25de7e7dd690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295bdba9-361c-47a0-ad12-20489bf5d1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320cc2c3-4003-44f1-a781-363b564dbc20",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f9144d-9c4c-4e12-8d0c-ee3286aa6ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8adaa0e8-6b77-4f53-94af-bef296723527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8355e52-70ee-4cf7-a9b2-1b9bb2e134bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2318e0b-faa2-4c92-b627-41c2cc85875b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63762aec-a09f-4372-b6f7-a3fc99590de0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de3d466-83bc-413d-a2e2-11a7cf539632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47265ca-49b3-4567-9a91-a03c1c4f23b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3422bc3e-4ca6-49b3-adb9-b2bba8c3bbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b342b4a-3693-4e1f-ae77-82d1e81e302a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c49f54-c3e6-440b-96fd-77744ec8e863",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582be051-7ddd-4bc2-9a9d-f4c9f23bfef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521e81c3-68a9-486d-81c2-61341aba1201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434087cb-e902-403b-a259-e95c63c71f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1875de87-d4a4-485e-baf3-3196ea22c30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08fdce7-bd56-46c4-b6bf-c902aaf64463",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee176185-b1bc-406a-8fb8-3c9a7f829c78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c6ef98a-e57c-4068-830b-a177cae5ca57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b160da-c049-407d-88b0-6c9850f72e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4a2fca-4e34-472a-bcb7-d9808ef93732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411ccd4a-ce14-4c2d-836b-125843cfa135",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72c1681-bfc8-4706-bb4b-a755663084f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4c3a40a-b3bc-42d9-8561-4e500acfbc55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a093-03de-486e-8d0f-8341bf7b7a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4a2940-3c2a-4cad-926c-15f73ccebfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdc75f3-c243-494d-8aff-8f197fbe0b9d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068bb501-b89f-4c34-955b-8bc364983828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "884b5dc3-649c-4e71-a969-c0257dd3c5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e025432-569a-4370-af34-b7e4b1db3cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2a66e1-9b98-4864-afaa-6af5d2759aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32393a30-700e-41d9-9c23-450e4880199b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb1bc4d-32bb-402c-9a31-61aad447df19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03569165-f576-410b-8429-f441e32e0fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd91a80a-c864-474f-af48-11bde9663d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c2b083-816c-4c63-8624-3c6612b0ccbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1bc0c8-a6a9-4f66-8b66-e4e011cd8825",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8569858b-c276-432f-858d-61cf6757513f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3705cf1e-4e35-4f46-95ad-b96f2cefa01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa513d9-66d1-44fa-9913-693e4c1102eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9937fa4d-bfe8-4358-9504-e4fd8404e6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24d8da2-c672-4ad0-a27f-78c89c83f7ff",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3443858-4876-49ad-8a43-7a8aa036fb01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b24241-613c-4f21-a6ad-c968d1c8008d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e589d93a-1a42-4169-8973-c68848177068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13073f13-9727-4aa5-abd9-ca9b75678073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631d0f53-6d6a-47bf-be3c-d8ef1593d2c6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eb066f-a2f3-4bff-a588-0353abbe50d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13787588-9124-478f-95df-e63dff73c8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fe2490-0e11-4c05-8340-4034ca14093d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9286a4-2d14-4350-8087-7d7a8caf0631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3ece8b-438b-4c14-9ab1-58375f34db33",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97e2716-14ed-42cd-b23f-792d6c99d724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73adee4-a609-4177-af17-7d61f5249bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56dac86-3724-443a-8fef-be65264f2a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d963d6-655d-475e-a61e-0ed2df93860c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f080909-b9ad-4b6a-99e2-2b0228784612",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1054109-62f5-4357-a6b5-f3fb70ae51b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9426fcd-2dc3-49ee-ba60-506e99d88770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e445e8ab-db38-410e-8fdf-9bf52dd9bd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819b0d38-cea9-4fa2-8898-c39a2eec4a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e77b85f-aab4-4f1a-81f7-5f6f803940c6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bffadd9-ff5b-49b9-9edb-cff34960aa5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dbb5b2-cbeb-4152-bd14-f8c9bf889df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0f6f4b-e349-4a44-931c-38822dafa439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf13fa72-1768-4d14-9b39-a55172b61c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bd388e-b714-4824-8c3f-145cbeadfe30",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a192c9-15fe-40cb-a7f2-85bbcb635de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b6aabf-f082-4fe3-ac1f-468e8e547dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd2b601-0f92-44a9-be7b-6aca2de584a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e3296e-146f-434b-8eef-2af7b8229a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41849667-ac8b-42be-b843-e6d1c4b121eb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5adb82-26f1-4bdc-836f-5a692eb53c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c471cf0f-9f07-408c-88e5-2dc691c38c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a7bc69-6369-49c0-9f7e-bae8ba576293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19f0f8a-cbcf-4b2e-bc24-8f656b648905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3526e75-c791-464e-a5f2-987f7df19d07",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bc5a9c-6301-4716-9270-ff1aa127a867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07da3aa-c05a-4fdc-afa0-534922044beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f78f6d-0a80-498d-a7b1-7e84b87db816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca4f097-fb3c-4da0-8802-58c4b9c495e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98e99cc-eef4-4689-ad3f-defa3443a0ee",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9283328e-93cf-47fa-9600-4f1fb1417315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41d3429-4b06-4bea-9f6c-ef471fb2b833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9b5a72-d94d-401c-a5da-c5fec84001d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee659ad-5c91-4fdf-9c31-cbe449674cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f224b68b-9d9a-475a-bd72-ba967dcd4c98",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e8645d-2446-4120-9c9d-e9fc9db30ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7badd4d8-875f-418a-8b44-a42403bde12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf835c8-1fbc-41e9-a659-0360187cef19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39b66bd-ac84-415b-ad59-6ca17bb2cf1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c617b8f3-8b6c-47b3-a863-d360491abae2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00753501-e7cb-4238-9f3a-a00b8eaf0fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f48ac1-9adf-4c57-89ea-7c8c8ff26174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7bf858-e076-4742-8ee0-727c03d3184f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7772bdf5-5467-4ecb-a159-0c5797d9a176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d920af-738c-4d98-bf38-b7f431ba8459",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0b4ca1-a7ea-4a00-a872-bf15235b4113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdcb8e4c-d960-4652-9d9d-99cddb8d6263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e69f5ec-d863-40dd-b8e6-1785f9767022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc488f7-88fe-4752-94e2-9834c1e9d9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f674f7-6c8c-4894-a91c-4b148a2fb577",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd984980-cec9-4b86-9fa0-72d60ad8f5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908ae6fa-e800-4df9-8c25-c3bba6984b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77714c8-9ef5-450e-b8c6-303ae2a52af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98721c17-2006-4d2c-80ae-25f68baa99c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06b722c-2084-48d3-9cb9-0734e31870a7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bfd099-f758-4178-935e-372070286976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46eacbdf-f397-4564-acbb-09a7f5d40a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbc2357-0dae-406f-b724-2ff87f00bf88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e31e85-3108-4025-b51a-8389ffda62f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f25b847-bc18-4c97-9ace-49fdf6d9cfb4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e061de-b48e-4549-b130-c045f2008f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f721ee8-ecb4-4951-ba39-d1d33bdddeef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbe7ac2-28f2-4217-b147-1be9ebfc4bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c252947-8e2e-4a1c-9863-40e1552b8619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd3b7ec-3c4e-486d-a96f-e5c1f2c96f62",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c93846e-4679-479b-b2b2-066f38aefa04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941d6df2-a12b-4e12-a233-9078bfe01f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e387c330-afc6-409d-9568-7663d5e4d7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317b54f4-8714-4e9d-9479-27b3db0c49d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ede9fa-e116-4c5a-8215-06f136531b5f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09502c46-bfe4-45cb-b477-3780de352486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e2986a-ec82-49e3-9532-2227c62dd7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "494212e1-1e85-447e-bf18-8aeb18482470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ef1abe-d4bb-470d-9518-28e01cd0a43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bf5b1a-1cba-4ace-b530-231f881a9101",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dee8768-9400-4b3f-a821-032b300c8893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696011df-9388-46ea-96de-d1eb1685ff2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccc9ea6-cc2d-4f77-98cb-d8db8fe7b516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9403b4-a05b-4a9d-9ebc-a30ff02200e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35215a0c-531c-48e6-846e-063296e4e7de",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9d8220-4692-4d34-bb10-0c79de96c92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f602a1-5795-479a-8703-0e14d2432d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed7ac59-65b4-4de2-95c9-24097df9a766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9164d0e3-5f95-40f4-8ea7-0b4e8bda5b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be537be-fa3b-4681-8c19-9f336d1945ff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ab7ca6-a6f1-426f-a054-7c9aae648a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ec6b64-6ea9-4c3c-ae9f-d6f3450bcbd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a5aab9-0ce6-4c98-8782-a92c1cb1ad70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa9ada6-2d69-425c-90c5-d3301b6c0251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5e16ce-8e81-42e9-b133-cdf93fd39a8a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c406800-6a54-47b8-b2e3-1dec5893ecf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac770e4b-f7fc-4402-8fcb-f78b5981e1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16cc47f-5e21-4b7f-89c0-9417308f566e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf61b5a-0984-4122-b48b-f958645423f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3631c9ac-f483-480e-a15f-b3dd7eb50c03",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7b512b-1cad-4686-a4e6-202360e0165f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a54a0cb-2839-4983-b5a0-7c206825d616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cd31c7-7fec-4b7a-bffe-ccf4babb16a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4579406a-f16c-4a6c-82ae-5d48c0cd6bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d818a7db-016f-4740-b00c-c383f86452b7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5cfa23-39da-458c-abe0-0d198ddc0040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e271755-2fde-4dbe-b4ea-89ddabd23a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfa2dc7-e9d5-4322-84d4-20a69d167d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f0024f-cbe2-4947-981c-b2949a09ce00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4764698a-ce75-4f1e-bca5-9da6f80c7d8f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7da1840-a32f-44a4-8154-6f6f697434a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590f5c6d-1823-4862-93a4-d701bb1b6ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc31b368-1c70-4077-b22d-a44c86d8f3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419d519d-4b71-4b8e-9caa-a8f4734d53d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5343c46-97a9-4181-9afb-4f4229beea28",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3670e66-faab-42b3-9c5d-fd1f892ba77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84aac65e-1b44-4e7e-a322-2c77c374e293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3207ce-29b0-45e7-a063-dc3da512974f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f25752-6ef7-48e1-9595-422279d8da42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed87a39-f2d5-44cd-8558-99ff1fb6ac97",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812c0779-ccbf-4728-ac9c-fdae45a93fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce4726f-8667-4698-bba0-27cbf5137e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae9705a-4de4-40e8-a7a9-5c023e196be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b37e277-0e75-476a-8f84-ae3e7e4c0dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa85dd3b-4eb5-46f2-9a4e-e6a94fc8a1cc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d1b349-baa7-47f1-882f-bb5166e05f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ab705f-7a01-4e83-9b4a-f0419f8bb0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "029dec51-56c9-4e9b-889b-17532d3b3f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8309f8-7659-48c2-9caf-c298ae320e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b49cc7-031f-4a62-903b-9eabfb34c6a4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b581732-dfa7-4a79-bcee-995dfdd206cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a99913-dadf-4844-a9cf-6de2b4203689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66238b7a-d11c-4195-b001-9a4242b5abbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900e84c6-3405-4a01-a8b7-bf424562ed4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e414af-85c8-432d-86ee-0f72b5a9fffc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bff499-e401-4140-82af-53f0f06565a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87132e8a-f28a-407b-ab0f-4764bb4c4385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a164ab-cc37-49c5-823e-0cc6fc28013a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6ee5f8-feba-43da-a92c-2ea6894e2aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf06dd42-d29f-4362-95f4-068fbc8dd9ae",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab553300-376b-4656-8bc6-a6fb5f8e45a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903416a2-b768-4c94-95de-0c39320d8ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52461706-5f97-4766-9ac6-af7b079433d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68dbfcaa-8ed8-4602-bba8-6e4201c25e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dd04d4-3ec6-4e6e-ae7a-62711cb6cf35",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d75da6-e9a7-4212-b3da-6a57cbfda1cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21b14c07-baf1-41d4-ad0b-78dbba67a09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72994c5-5606-46a4-a754-136e1d135119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6750a0a-7ab0-40ac-8c64-d4c98cfb1410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b4d191-0477-42de-b884-3e6c55eb52e0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be46f53-2d78-440f-b79e-591f83a952c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef4f54a-9b90-4e66-ba09-ee4f1fb2da81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f35cde-e912-4253-aa72-3d200d6c4b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb50ec7-2eab-4709-aed5-522568f91cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2ef702-83d9-4d0d-9d69-67623aa8da32",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1142fc-2f25-4528-a3f6-3ccb0a4b3834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0af0574-980c-4931-b120-ae5313150349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2450c55b-40dd-4802-b589-23dbff9ec89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd52f94-31aa-4cf9-8508-871d31e9430b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659ac2ec-a297-4c3c-a4a5-b5052c6366f8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe95ebf-e604-45df-9cdb-5fceff6eebe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1316540-5b98-419f-9262-c47bef791f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cddf338-e1ac-4f24-bd8c-7131e28db290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af98dfe-83d2-42da-8668-e65a00393024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e564af0e-4bbe-42ef-aae2-2243459dc705",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2095040f-3703-4993-b5dd-44e073b4e0e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f178df71-8ead-406a-aeda-5b1dbc629bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7d57e4-12a8-498f-ae2e-fc8857226a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a43734-f56d-4b53-8d18-beb5a6913a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87af0329-59b5-407b-8cb6-30245ae04b0a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ccbabf-b90e-4a83-ac06-21835f8fbedd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09173a4b-8669-424b-a5e5-70f36ff2f982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71b47b7-0635-4ba6-a1be-6563f018d25b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1528b4-cee1-4381-a000-01dae5e5b4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d2ced1-f5e0-4983-919f-0fed97ee5fa0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa28963-ce47-40be-94bd-6fa66a27bf45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26f7935-d57a-4683-9367-fbbac407e25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a1e5e8-2500-45a3-ae90-86ac76d3fa76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b49bf6-2260-43ee-81d4-ecd10e8b2a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c75e997-402f-4409-b90a-ed4f6cc13475",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2df937-ee5b-4bf4-8796-3d9ec44da3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f4e0f5c-600c-42a6-a7b7-6fcb172da100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7c179c-b08c-4d52-a7c5-dc7cb0efe879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23391149-2b52-4b93-bb65-cb7f64bbc769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6372dbfe-37c4-4fb7-a7c2-afc9d2c08a95",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee345a5-f324-4db2-b528-8ca91d5d147b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c0976e-5aef-445f-a4bf-44f2ed716bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825a5557-4567-4201-84a0-1bd3fe740df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f5f45e-8a31-4071-adff-30be0cb78472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6827547b-a6b2-4595-bbff-975b657fbc00",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156254d7-1d92-4d6f-9e89-a641791cdf58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17264dc-8afd-43f4-994f-fb9291d67cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2b4add-cf72-4ee9-8974-713fe3e59acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f67801-c0b7-453c-8ee2-74bf769aafe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d9350d-6f18-4890-9a56-0ad8c5b4ace3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb29976-ea39-4c93-a8e2-9b924d2bc5f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b84be489-221e-425a-b6db-97e0f27414b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffcb82d-02b8-42d5-beaf-4374930cae06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f652310a-5c96-43f4-b3ef-7f89d48399f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1388f77f-6012-4885-a7c2-988c1122ad65",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f7a977-f5ca-4354-9ff5-69756c421cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0178d160-b03d-4509-b559-24a21a920aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfa0fd0-e997-4bec-92c2-9b77833540c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1927f99-2294-405c-a387-0873edb112ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f480e9-3f7b-4235-a75d-e8f008bd2e52",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea20609-8fdc-4011-b5fe-0766701545b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50049526-5ce3-433e-840f-cae6e846fafc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebe9cc0-a20e-4a7b-ad98-d76e887255e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dad9019-d969-442e-bf3e-1d42c27805ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcd4ece-3282-4f97-a5b2-0a13839d6e1f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f9e692-4162-4d65-a0f0-0c60fd9ecfcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8962e97a-b5a7-458d-afd7-c44f3e05098b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f18a69-e8fc-4e18-acf9-526eef289ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87433ae7-a5ad-414a-9677-b73350289ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f44415-cfea-43cc-b0e5-13ebc20d49e1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b69e1e0-8d26-4f2c-a7be-dc6b5270c03c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9198e264-69e8-43ad-ba90-259db58e1f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb94310-e1f2-4ad2-bc36-cdde48137574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa36f478-bf7b-406a-b2bc-eb2327d860c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ad1852-d60c-4a2b-a2cb-13d35466f906",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451f7709-e676-45bd-8b1e-dab8059f9074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c993c6-0df3-473f-8156-39dd54913984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b2627f-12fe-4ff6-95d6-f3b04b02e073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44160953-f893-4ddc-8a1f-82f22ca0b7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3e818e-9a74-4e6a-b27a-3cf8e700d2b1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b66903-7d66-4bdb-90f2-da8f91c2302c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84e7e545-62e8-4098-a886-d763e70dd496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81158429-af52-4a95-8a42-920b4889f866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf4f0b0-d914-4046-8fde-b861bea49f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f23835-cfd2-4648-9b3e-796ddb6feeef",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c917c690-ccbf-46da-aa6e-022bf9dbcd5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8243179c-98a7-4051-97dd-3256a64b9000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1735f12c-8bc8-4602-9f8a-88a86f5a8848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e13cd6-b5b0-4d1d-b0f9-4e05b1276dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f11d65-a0dc-43f1-978e-3f3f3359dfe1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef87f2ff-cf35-4f51-82d4-fb457a5a2a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe87b9b-67b0-492a-ba42-c5029980eed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8056c6e2-406e-4088-823b-bc67ebaf2a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62706e3f-4179-4f92-ae64-e59a81e2f6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def52fa6-498b-43dd-9bbd-ba248ea0f1e5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdb059b-37d5-42f6-b82f-a7fbe2d46ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0379af51-d357-4caf-8ec7-df7634bc88db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64409d2-2e98-4087-b50f-e1366134e671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9df8a1-22a2-488e-9fee-9be08940afe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d9d5f1-931a-4ead-bb90-21c48bd8df43",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533d0c6d-79b9-4387-a385-4c0347a8a31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062e6e4c-992f-4e5e-8e7a-4eabd568ca13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab5897b-cee8-4eec-bfd8-970ee4b3a6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a389eb-9e47-40dc-8a63-b56c8106906c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a330d923-9cb8-48f7-be62-56f8af61b015",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a68a7b-e54d-49cc-b29a-bf14abb58f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a9ac7e-387c-423f-9c06-3c724409efe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee9e48c-9893-4526-85c6-4fb90b10fb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45960b80-0c88-4fca-8205-859c67498d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9905e6b1-d413-481d-a02c-99307a56da21",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de24f377-3cb0-4538-922b-f44938941ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0fb849d-2a8c-423b-bc65-617fff8543b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15979f99-be7e-49dd-b125-317294187b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03149df-624e-4677-84ad-f24b5073ddc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec49a20-2fff-45eb-bae6-11e482b4dce3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdf2acc-6c79-4a65-8d05-556004412b29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c31c56b9-f827-43d0-8315-b9024596a6d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f7c419-2d78-4eb1-b6d5-04464b9c2b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c522dc6-d8ae-4d0c-9548-f8715e0869ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcb6335-8355-463d-9485-e86f1d1c6643",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f73fa5-dfc6-459e-ac55-5450c3e2f798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be38a0d4-e0ab-420b-8491-dafedbf5d3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bace6393-3ba3-4334-8848-f95af99dfc8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f826b6-57aa-4e99-98fb-b4ed67fc5099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3409f2-8d36-4d91-8d99-95ae368d9060",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d68959-22db-402b-ad04-89bd869dd116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86ffd686-bae4-45d7-a78b-590a6035c01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce1252d-3158-42fb-9e81-63f20b9a4ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f66fdeb-d21e-483a-950e-6a352e69e440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b08a550-3762-4df6-9ea9-4bd48c985045",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70f65dc-5ca8-4316-85f4-9cecfb4d57a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f66a89d8-39fb-4d64-b26b-d9da071ed479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd61735-5b18-4aa8-9434-46bdbe496fb9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2c7b0c-5927-44b8-b6d2-dda94c6712dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330e9002-1c59-4f69-8047-4428d181a304",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4442d5c9-698c-4450-a4ee-70c2a56a1f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25aead14-118d-4920-b5c1-1a26a81318f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d6383f-3ddd-4e76-a0a0-8afff387ed0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6865d7-c5d9-4e0b-86d2-4c6a29c56270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b7bda6-517f-4ec9-a1a9-71eec4cad46b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf4e01c-7780-4849-87ea-fefb5b586722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea56d88c-6656-44d2-9d0c-cc605c1bb98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3905b287-d3ef-4a91-9a2e-0788caeabaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91eb3e06-716c-4f30-994c-34209fca2cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fb8910-2c56-49ea-a1f1-4408990c29cc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd14041e-59aa-45ee-945e-4b8f6bdbb2c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29821241-6ebc-415c-907f-3b70dfa7a8c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4a8faa-a6de-4e35-a50b-db6fd3cc5102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25822ebb-b541-4865-9e94-adc8537ac15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afa0c43-174b-4bd3-85e9-1735bbdc2b13",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4fef25-174a-4feb-be74-c8d418846bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c390c6-41e2-4c85-8508-5b77fa5de820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd372c92-e5e8-4770-87e5-f1e39bcde5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6507d0c3-5ca6-4b98-b233-815674e1974e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523de432-3c7f-454a-9e80-0275daa1e434",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a8fba5-48d6-4640-8b21-0d60f420ae19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51acdaa6-6eb8-400b-aa97-c81871db9419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d04050-d9dc-44da-8785-0d72108827f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22eeb56e-9184-43f7-aea8-783c6c7ae5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cee56f2-b609-47ae-b2e6-e445521118d7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b72f8d-0259-46af-ae73-6f5543569100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cbe6c89-765a-4656-91f7-93a8e85deda9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3770d1-6a0e-4c18-b963-b46048d7b060",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b403a2ad-df51-4834-92c5-8ff754983e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fa1ad3-ef6e-444d-bd1c-ef70997a3516",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45e8deb-a334-42fa-a76a-b9d55827ea5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f9e6e8b-f10f-415f-ade9-1b0f651f7642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedc0ae0-5732-4d23-8c73-43ce618bf66d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2903d34c-ef8c-400f-9f83-3960881a6190"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac6480e6-1dd3-4f9e-b94d-bf6d06e2fda6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b822bb2-acce-4dfb-b89c-32371b1f6ece"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29ff7937-543c-4889-8e19-4c4d98c6d1e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79e0d54d-c905-4c74-9d06-8b9d0c483f3c"
                    }
                  }
                ]
              },
              {
                "id": "98a5bbbb-ba9f-45ac-839f-b79d865f7098",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a17dfbff-a6d7-415e-8799-499df598792f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd322fa-7e5e-46e8-8e49-25e53e237bf6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1629087f-72d1-4008-9966-85503eda6338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1314406-cb50-405a-986a-23c6ddc79ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "689aeda6-7887-4299-9a68-8ab90c798f4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "089b98ea-4a63-4795-bdee-e8c49b0116bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "604160e9-ec9a-41d9-9efe-11d3e3d79946"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6eefeee5-6111-4221-8529-2949eb0e95d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "897fa336-641c-444d-aaaa-b1d6c9197553"
                    }
                  }
                ]
              },
              {
                "id": "9134eb9f-f85e-4e30-ab37-654ea62dd91a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "10423498-5462-49b6-a157-7919b3ade8aa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fe7fac-2b22-4fb7-b7ee-c26fcc0b0a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "caf6a751-cdb5-4638-ba4c-1e514facb7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2030bf5a-22ce-4d3f-9752-2897afbaf450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf9e74b-afeb-438e-9787-9a9049c8d493"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9419c252-155e-482a-a83c-bdf1607b1404",
            "name": "Positive Testing",
            "item": [
              {
                "id": "38058064-4639-430d-a9d4-deb6cdd41429",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a68c25e-bc02-4b78-b806-9c4ef1030130",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "18f663ee-b7e3-436e-9603-8c466fc349bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a966ed2-7cb5-41ba-b20e-3711d9d0a119",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "995e7c0b-7ae8-49bd-97fd-a5e13e2f99a3"
                    }
                  }
                ]
              },
              {
                "id": "3ccf05da-c7e8-4bb9-9b9b-d02a5a0aba0b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4358b3db-b930-4a6d-b83d-5f13a0e44c2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4f5f0671-2805-4235-a350-1453d85e6284"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "871d94e6-8278-4a16-8f60-716d2d7b0807",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dad839b-40a5-4fe3-baaa-881dac8937f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6d61dc1-1503-4a1e-a5b3-decb325d0e44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7f9955ce-d7ad-4e11-8056-dbf07fac612a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbc94265-1add-4608-9c80-5c73678ba844",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8aaf2dc-8fa3-4ec6-88a0-4908a6a603d0"
            }
          }
        ]
      },
      {
        "id": "b4bc4bc6-361f-4120-9430-e52804136e72",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6eb4b25d-0387-4290-8d2a-31291d62fed5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d16a4fc9-c778-43a0-8e5b-a52f683b831b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6e5f4cc-8821-44db-8328-197fb2deca29",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc52060-5a16-451b-a86c-175f0486c17a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3d955b31-1fe0-4f73-9e70-342a34efb5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecf82bc-ad1d-4879-9fd9-7c5f555475b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63eeb4ee-c69c-4180-93e7-26ce01015955"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b0d3149-468d-4131-9338-205fdecf8ff8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0040d7ca-bce8-4f1a-b715-364a8a5d9e1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f36ebf6-e33e-4287-8d93-ff2fae0d876a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e086dee-d0dc-4c8e-a7df-f6913570ca6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9efabe16-6ae0-429a-8179-b7ef980f259d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "afd0f614-59b5-411e-b24b-9bc023f15cb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30e2e388-474e-4e4f-b07a-eb97dbcfa04e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8f215f0-bd4f-47f2-9c5f-18d9a396b882"
            }
          }
        ]
      },
      {
        "id": "cc47d760-9a98-4207-a6e7-ccf49271afc1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5c91887e-b441-4993-aa1e-4968816a3aca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e732c55-58f4-4199-b964-9d8a84ebfe0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c50776a-4806-4e0d-bd5a-15818cb21d38",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c402b67b-69f2-40a3-9817-0e8d79cf3b70",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffb400f9-6996-4a2b-90da-f185a6ccb4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb82a69d-a671-4d23-a2fe-4d2e1b86f889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d0e6cb7-8cb5-4a7a-bda4-f8deec4c0e33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ea8f3a1-df68-44e9-9cb0-4686a96e8bd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24199440-a090-4fb1-94ec-70e1adf7a89b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9183da6-1d88-4bad-83d2-d4d57fc5298d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b90cee1b-231d-4f7c-a9ec-3168920970bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53a45a3c-eda5-43de-9429-d5d0afc919ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f0fd18af-e67a-40e9-ba08-b8413b67d642"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14f419f2-685d-4e6c-811f-547b7652cf28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3cddcbe5-4f4d-49b3-9cee-c7478d031a6e"
            }
          }
        ]
      },
      {
        "id": "ad60ea79-8967-4741-b579-d8c1466e0112",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e4775b30-48e4-4a06-a9e5-33f983d824f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8fce124-f75f-4f7b-881d-d012e2c6056d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e0cd185-993a-4e05-ab22-04739fa7eef0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db552bcc-978b-4691-bab3-75ff803699c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1aadda55-69f4-4ea8-a3e0-e2f40e14e91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9645088-479d-4114-bfcd-400c86865b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "315db493-976f-4039-b8a8-fd49bb0ff1f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0146b2a-09e4-42d5-bf05-f361f3419089",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55f581a2-92a1-4a9c-8633-496bfac82c11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86d31828-9c71-424b-a1f4-5037fd020f89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d1f025f-adce-430f-88b6-cafef7b656d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "717e51b1-5cf1-44f2-bcba-b744cb46c072",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ef89bf1-165d-43c8-bc6d-50bdbe546195"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e846794-8008-41d3-ae62-16701d30368d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "439d49c2-28b0-4ff7-9773-1cadeb9c31a2"
            }
          }
        ]
      },
      {
        "id": "c403a235-bbec-4aa2-a813-9b2c7cd9eb2d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b074a10e-ea50-4a48-8fe8-a66878c49709",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fec6a08b-2439-4a00-a2dd-63833617c9d1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "12968037-edf9-44fd-9029-e9faa234138d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0612e7b4-f31d-43e2-9c73-f7838414924f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f7647f9-c405-4adb-b192-f90d2731b8c2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 7
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 251,
        "pending": 0,
        "failed": 4
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 35
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 7
      }
    },
    "timings": {
      "responseAverage": 133.54435483870967,
      "responseMin": 7,
      "responseMax": 3297,
      "responseSd": 375.5627471740327,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716251816147,
      "completed": 1716251857178
    },
    "executions": [
      {
        "id": "2037c231-345e-4aec-89a9-c4d25fdee643",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3e6d71d6-ab6d-46bb-a614-6f427e1119f1",
          "httpRequestId": "f83d8881-193a-430c-aa25-f20ee3b18781"
        },
        "item": {
          "id": "2037c231-345e-4aec-89a9-c4d25fdee643",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e00984f5-99f7-4e08-b3fb-faf691dd99e4",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "52d825bb-34cd-4ff8-88da-0303876a4c7b",
        "cursor": {
          "ref": "5d3c2afa-f604-4c11-bf48-587defe61553",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "97be2150-fdfb-4353-b3dc-9a121643746b"
        },
        "item": {
          "id": "52d825bb-34cd-4ff8-88da-0303876a4c7b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "799c69a2-491c-4e67-9e56-9c6c2a135867",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "e4eae573-768c-4261-80c9-c5ce82d0ed1a",
        "cursor": {
          "ref": "ec716e00-e5ad-4846-816b-d6f25dee8d3d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "062b6a91-e459-4f92-849c-2a5aac2d5130"
        },
        "item": {
          "id": "e4eae573-768c-4261-80c9-c5ce82d0ed1a",
          "name": "did_json"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ]
      },
      {
        "id": "c0c88659-8f4f-43da-9bd0-a9099b222694",
        "cursor": {
          "ref": "0782c330-e267-4106-b91c-babf9100cc63",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "80ed4f15-7572-419c-8552-6f9d8b3afdb4"
        },
        "item": {
          "id": "c0c88659-8f4f-43da-9bd0-a9099b222694",
          "name": "did:invalid"
        },
        "response": {
          "id": "8dcd6925-6022-4266-86cc-fb1ee9d3fbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2244,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c88659-8f4f-43da-9bd0-a9099b222694",
        "cursor": {
          "ref": "0782c330-e267-4106-b91c-babf9100cc63",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "80ed4f15-7572-419c-8552-6f9d8b3afdb4"
        },
        "item": {
          "id": "c0c88659-8f4f-43da-9bd0-a9099b222694",
          "name": "did:invalid"
        },
        "response": {
          "id": "8dcd6925-6022-4266-86cc-fb1ee9d3fbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2244,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8879ee3d-223e-4c03-84c9-0904e8219e9c",
        "cursor": {
          "ref": "e84fc416-9ffc-4f1d-83ec-0211ac953b1b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0f0af7d2-990d-4815-a497-bbb8b2ec4f00"
        },
        "item": {
          "id": "8879ee3d-223e-4c03-84c9-0904e8219e9c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3d4ce24f-3a1b-4384-bd13-35077e05f388",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2556,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d65f4c-33b6-4e4f-b459-d2069488d7ad",
        "cursor": {
          "ref": "480bfb76-32f3-4e84-a18c-5f933da3b3e1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "13a3fc63-4fe3-4ba2-93ad-62d5a944a2c9"
        },
        "item": {
          "id": "40d65f4c-33b6-4e4f-b459-d2069488d7ad",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b0889568-c043-475e-a5ca-18609b37d60a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2244,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a591e5a-1256-4fd6-80c9-31d6437abf98",
        "cursor": {
          "ref": "d62188aa-9b63-48db-ac64-0218a8edce62",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "da7311b1-ec0d-406b-b285-0f6dc5b12509"
        },
        "item": {
          "id": "5a591e5a-1256-4fd6-80c9-31d6437abf98",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "468afd07-dc21-49b7-a34e-742b57778074",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 404",
              "stack": "AssertionError: expected response to have status code 401 but got 404\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "4d05d80a-d846-4e32-b392-bed67c30ff05",
        "cursor": {
          "ref": "e9d1910c-d5fe-4c9b-b68e-d032e1935a75",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8be4cbae-ae87-4aa7-97cc-7745c71395ee"
        },
        "item": {
          "id": "4d05d80a-d846-4e32-b392-bed67c30ff05",
          "name": "identifiers"
        },
        "response": {
          "id": "e4803b0c-e109-407d-84ca-ed997c0d524a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "id": "82df8c06-b0f2-45cc-98d5-589b04c96915",
        "cursor": {
          "ref": "c1d87af0-9584-4925-9a2b-db6591378c20",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "88bc0f63-5f25-4acd-9cd8-da9356278da8"
        },
        "item": {
          "id": "82df8c06-b0f2-45cc-98d5-589b04c96915",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "79d900d4-7b69-4bac-9c70-bab0ca360063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda6fbeb-21e8-44d7-aee7-3cf81639e58a",
        "cursor": {
          "ref": "a010d296-cb25-4336-9502-57a000786db0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9c2baeae-ef6d-4717-9b5e-12fc52c6b9b5"
        },
        "item": {
          "id": "fda6fbeb-21e8-44d7-aee7-3cf81639e58a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "419513bd-da67-48e4-98d6-6b24d015797e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f802a01-fbcf-4c0f-86e8-9796c3613c55",
        "cursor": {
          "ref": "006ff95c-9a1b-4b20-9211-7af870a7ef75",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f810559d-43f4-432a-a436-9227e23d2b78"
        },
        "item": {
          "id": "6f802a01-fbcf-4c0f-86e8-9796c3613c55",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "38ab0fef-2fb3-4d5e-be06-b6b0fe241f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13bd37b-feef-4038-badf-05e7ec7a73d5",
        "cursor": {
          "ref": "ed9aaff3-7deb-4d65-96fe-ba87ab290eee",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2d173de4-1456-4ecb-a54f-28d67a8e74ac"
        },
        "item": {
          "id": "e13bd37b-feef-4038-badf-05e7ec7a73d5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "da9f5662-3145-4ec5-98b3-5dff42b7c556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae26314-5292-4f85-b153-0777d1017c72",
        "cursor": {
          "ref": "5a4190e2-4bfa-4080-b76d-3206aed962e2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "66c692ec-2b88-4ce8-bd4e-8d4af7962332"
        },
        "item": {
          "id": "1ae26314-5292-4f85-b153-0777d1017c72",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0d5a394a-ac4d-436f-a460-b545d22c88f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c10451-681e-41cd-83ec-92387b806d87",
        "cursor": {
          "ref": "1195711b-8148-4cbf-ac6e-882224ee0ea5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fe6033fb-619f-49ea-8ce3-1de51c14e5bd"
        },
        "item": {
          "id": "73c10451-681e-41cd-83ec-92387b806d87",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a02e1618-d2ec-4539-a834-ad17e13b17b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1c9dbd-7272-431b-b841-5a36a76cbc1f",
        "cursor": {
          "ref": "a02ae6d0-ff42-4bfe-bc88-96b81cb4f603",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7e82c816-05cd-4439-a3f8-fb3076881989"
        },
        "item": {
          "id": "6e1c9dbd-7272-431b-b841-5a36a76cbc1f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8197e6d8-118f-4809-821d-f9ad2cbd141a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02722cbf-4eb7-42a0-9aac-6377b5a9cde1",
        "cursor": {
          "ref": "d51cf20e-1cff-4606-bd9e-9eabdc8f2010",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f6cf6a40-79de-4611-97bc-1bdff97a5e90"
        },
        "item": {
          "id": "02722cbf-4eb7-42a0-9aac-6377b5a9cde1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0671b72c-99c1-48dd-9a45-a873927ed79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef0348f-a82b-4327-be33-61aee75c046b",
        "cursor": {
          "ref": "60d50bf5-03da-48fd-ad72-6d52d2f24766",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5d3a88b1-4211-4b85-b9a7-cbded121adbc"
        },
        "item": {
          "id": "1ef0348f-a82b-4327-be33-61aee75c046b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8299b846-0d90-47f5-b721-e9fbe841ac54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016b1162-aecf-44ef-8ec5-10639f04ed56",
        "cursor": {
          "ref": "a9c6ccfa-0878-4fd5-b955-2fdae1911e86",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "14e2cc92-80a7-47d1-a3c1-d9d25d0b7884"
        },
        "item": {
          "id": "016b1162-aecf-44ef-8ec5-10639f04ed56",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ca2e90ab-e0ad-4482-993c-ad327d4441f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f3c32c-ac3b-40df-8281-6e9a2796e591",
        "cursor": {
          "ref": "35b931d2-c1a5-4f2e-aa89-f06f0551851f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4e94f9e3-8ba0-4337-957e-0bbff4070bcd"
        },
        "item": {
          "id": "03f3c32c-ac3b-40df-8281-6e9a2796e591",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6772bd2c-eb71-433e-b685-c33fbac44951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56302dc7-ccc6-4b64-952d-066290efe3c4",
        "cursor": {
          "ref": "f93a66d0-a63a-40b3-be4c-11beb1326160",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b8af9064-d899-4bda-bfe7-e3babcf22a5d"
        },
        "item": {
          "id": "56302dc7-ccc6-4b64-952d-066290efe3c4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "573869e9-256e-48a9-b86f-c52514ed1d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6defa01-51e0-4113-bd5f-e8757f5a3915",
        "cursor": {
          "ref": "d1f1b6da-262d-43ac-acb3-5172abaeac16",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9f16d191-2ff3-4862-b612-b6080f46c56e"
        },
        "item": {
          "id": "f6defa01-51e0-4113-bd5f-e8757f5a3915",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7da05a88-9244-4bc4-bef7-cdcdfbac5fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83835783-3302-4cbb-b238-4ec1b1e0a776",
        "cursor": {
          "ref": "a50cff86-2614-4275-95a8-c9148353d08b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6ed81d28-cc1b-4838-90c7-5d161f022b0c"
        },
        "item": {
          "id": "83835783-3302-4cbb-b238-4ec1b1e0a776",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2294e853-63f0-4a2c-a736-4db0708ebf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810a3eeb-a613-44e5-8f79-957ba44977a3",
        "cursor": {
          "ref": "202a225b-8566-41f3-a3e3-574a9c44b57c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bba7a4c8-e50d-40e2-9949-ca5876850a74"
        },
        "item": {
          "id": "810a3eeb-a613-44e5-8f79-957ba44977a3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4384d0a7-47bb-43a5-8428-61b78ea2807d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f79c884-af24-4c5f-a09d-15f8fdd5ba06",
        "cursor": {
          "ref": "c9ee6be8-7c68-46f4-9583-b4d9f70c09ad",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b5dd7d17-9f99-4d3f-a935-402487557ae2"
        },
        "item": {
          "id": "6f79c884-af24-4c5f-a09d-15f8fdd5ba06",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9b25d50b-442b-48dc-87ea-cc829e5ab058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cbe18b-a77e-4497-a038-b2268056625e",
        "cursor": {
          "ref": "756cb229-a518-4907-9203-a369613f904b",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9ac443da-3967-4b8b-867c-fb2e01659d4a"
        },
        "item": {
          "id": "91cbe18b-a77e-4497-a038-b2268056625e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8d32b89e-c955-4be0-9499-16e5cb9dc4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b661bee-01af-4bce-a3cf-4b012bf69027",
        "cursor": {
          "ref": "2fe807ae-fd75-4827-9a18-38bb9ac87724",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "afd41c75-0589-40dd-8b78-eec88b44aff9"
        },
        "item": {
          "id": "5b661bee-01af-4bce-a3cf-4b012bf69027",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c0db61ee-d624-4e21-9c17-eefaab6a7f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99553e76-7e59-4311-8196-ea7e66c0e73c",
        "cursor": {
          "ref": "3f51343e-95b3-4153-a463-085b78f80721",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2ad214f1-9f81-4c92-a61b-5eb33d33d929"
        },
        "item": {
          "id": "99553e76-7e59-4311-8196-ea7e66c0e73c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "246c83bc-a7f0-4615-b533-613b467ae0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482dc579-2a44-40e6-94b1-9232a9516205",
        "cursor": {
          "ref": "2bfe0590-74ee-4704-9bf3-720c691d4783",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a7c27635-8a89-499c-9e4a-3d6ed20d1f18"
        },
        "item": {
          "id": "482dc579-2a44-40e6-94b1-9232a9516205",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bd8efcd4-fa01-48ba-904f-036fb411c55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b386e97-dde4-4c97-a3f2-63927afba413",
        "cursor": {
          "ref": "cb67c433-f6ae-4868-945f-bf82fd1f6987",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "da8d34c6-653f-4bdd-b870-562f63cdb17a"
        },
        "item": {
          "id": "2b386e97-dde4-4c97-a3f2-63927afba413",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "04b42af0-7f6a-4e39-bc3a-a03c108f3c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a1bcea-ae10-43a4-8913-24e363cb51fd",
        "cursor": {
          "ref": "eaaa1d41-bef5-4593-b6ca-aa7e2b6586a5",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3e8ab739-1c02-4d7d-9fd7-e25179dbd470"
        },
        "item": {
          "id": "b5a1bcea-ae10-43a4-8913-24e363cb51fd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fcda2b69-6927-4353-8712-407a8e5175b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e28a651-ebe9-441d-831b-029b1987fb13",
        "cursor": {
          "ref": "735d3060-770f-4d79-8ada-c68ccb986e50",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "47213fdd-6fe0-42eb-b733-7bed8379cf4f"
        },
        "item": {
          "id": "2e28a651-ebe9-441d-831b-029b1987fb13",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "01a8e45e-65aa-47cb-b0c6-7dea31f39d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc7fa5d-ab2a-4eed-a4d7-ad87c6e361f4",
        "cursor": {
          "ref": "95015828-5bc1-440d-91dd-327871de98db",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "36fa670b-75c9-41a1-89b2-51ed44bad10e"
        },
        "item": {
          "id": "6fc7fa5d-ab2a-4eed-a4d7-ad87c6e361f4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "58d32e91-089c-4c0b-9ab2-2d85f0a129e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc56de8-a363-41b7-b706-4031d1114247",
        "cursor": {
          "ref": "fcfe1c57-24b2-4cff-be53-c30cbd576e77",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "30185b7b-39ac-4d61-b4d0-7197f8b1abf7"
        },
        "item": {
          "id": "2fc56de8-a363-41b7-b706-4031d1114247",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d12eed25-6635-4b7d-bcb6-bdfec88649f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2923be96-29f4-4f95-9853-7cd7663ec077",
        "cursor": {
          "ref": "50c37480-73c8-4be1-b3c9-3a3a205a32da",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e1dd3219-57ff-45d2-bf71-1b0e25d8e11d"
        },
        "item": {
          "id": "2923be96-29f4-4f95-9853-7cd7663ec077",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c2735407-3078-439b-b49e-d732a0076379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7568b0-4a3a-40b8-8ebc-d2413ce6f2ab",
        "cursor": {
          "ref": "af63206d-017f-4efe-9c8f-300019c86a00",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "655000b0-d446-46b7-a9b4-77f524e3d349"
        },
        "item": {
          "id": "9b7568b0-4a3a-40b8-8ebc-d2413ce6f2ab",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0879a084-6249-45f5-9e5b-7e2c0bc22904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746ee618-8999-4f53-bbc9-75aa4df5dd04",
        "cursor": {
          "ref": "6f8593d2-85a9-4c3d-9e1e-8edc6808d834",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d5be32da-ae02-412e-86a3-77df58a64367"
        },
        "item": {
          "id": "746ee618-8999-4f53-bbc9-75aa4df5dd04",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f0c03c9c-6d74-4b6e-95b3-7fde2d05b509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3022120a-a3e4-43b0-b3db-4357ecb036c2",
        "cursor": {
          "ref": "968bf41c-559e-4cd4-b7e1-a2ed99682a7f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "260305b9-ab6e-400f-8ab9-fc0d8e01c348"
        },
        "item": {
          "id": "3022120a-a3e4-43b0-b3db-4357ecb036c2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9c075d12-ce9e-4e85-9448-d17a41cc791d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98ca563-38e7-4509-bdbe-e030daaf955d",
        "cursor": {
          "ref": "dc9d2d4a-957f-4711-ac9a-1b01815b5677",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c10c0262-db3c-4d8d-9fa0-c1e5307b63cb"
        },
        "item": {
          "id": "e98ca563-38e7-4509-bdbe-e030daaf955d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ece264c9-a626-4727-b479-746a9f4a36e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddacf223-b53f-4006-bde7-58f9218bf15c",
        "cursor": {
          "ref": "1a887007-52e0-455b-810e-7d07be5404b0",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "442e61cb-cfc1-4ca4-9025-09ac5ff542b7"
        },
        "item": {
          "id": "ddacf223-b53f-4006-bde7-58f9218bf15c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2f549e07-f346-4f75-91ad-adfa8e1eae68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088ff2c9-0863-4334-91ba-2e9ae9dcc662",
        "cursor": {
          "ref": "b9a68be5-7e81-41b6-98d9-df82d25d4680",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c6b90b99-e08f-4070-9e41-4e98e54294e5"
        },
        "item": {
          "id": "088ff2c9-0863-4334-91ba-2e9ae9dcc662",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c16e9efd-379b-46ed-906e-a5c3c7376c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331b8508-2816-4a74-aff5-4419a408ac0a",
        "cursor": {
          "ref": "9301b684-5c54-489c-85b0-7cda74760796",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "408eaf8a-6425-461d-bbb6-72656dd09190"
        },
        "item": {
          "id": "331b8508-2816-4a74-aff5-4419a408ac0a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a71b9d5a-5890-4ca4-a65e-6074374ee4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cc17c0-8a96-4e9d-95df-efbee037c105",
        "cursor": {
          "ref": "8a935428-356c-43ab-94ce-a6717d992ff6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "349f3717-e899-4ef5-88c1-191c6b5aa078"
        },
        "item": {
          "id": "72cc17c0-8a96-4e9d-95df-efbee037c105",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4d09ee21-f4fa-438f-b723-10ed06b621ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504e329a-69ba-4720-940f-d9a0f7694251",
        "cursor": {
          "ref": "5e8eac44-dc65-4a8b-bcf0-004be7dd3912",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "701108fc-209b-443f-a7da-82e9bcd828d5"
        },
        "item": {
          "id": "504e329a-69ba-4720-940f-d9a0f7694251",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a16f5190-8eae-46e9-a0e0-8cc8dc3a832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dc6ed9-907d-47d7-9423-a4fe218a0b9e",
        "cursor": {
          "ref": "63bf24da-7d51-4214-bc29-23a3629052ff",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1766a0a9-a222-4a0f-acc3-668125d0d082"
        },
        "item": {
          "id": "c3dc6ed9-907d-47d7-9423-a4fe218a0b9e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9cb30c4c-f76e-4e39-a0e8-ad9138d80add",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356cbf3c-bf3f-4e55-9548-33afcc7616c6",
        "cursor": {
          "ref": "dbf38982-6801-4a0b-b374-8779632a30e0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9b64ed4a-9c59-4d04-8868-b18f026a50eb"
        },
        "item": {
          "id": "356cbf3c-bf3f-4e55-9548-33afcc7616c6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "eb8dc3b0-60a1-48db-87ea-cb06a153459f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc9293d-1509-4dc5-b122-faad9e6dab74",
        "cursor": {
          "ref": "dad04405-0b15-46de-83f0-4bab676ada06",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b1a03cf5-e988-49b5-ab02-fded0135bff2"
        },
        "item": {
          "id": "acc9293d-1509-4dc5-b122-faad9e6dab74",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ceaa6722-5137-47af-8c0e-94bd40a1876b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8776608-5009-43ca-ab3a-39c38aa0d3e7",
        "cursor": {
          "ref": "f15bf1fc-d652-4f4b-8311-6c781908c5ec",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2e0aeab0-d401-4909-935b-a5913035ebac"
        },
        "item": {
          "id": "c8776608-5009-43ca-ab3a-39c38aa0d3e7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9d3ba669-495c-4c56-ac5d-1b562f99e9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218b64c3-11fd-45b5-8e8d-164e65488bf5",
        "cursor": {
          "ref": "aac0dad4-c1bb-496d-9063-43bc466767f5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "74d8f623-2f64-4535-8519-e50d9f70ad9c"
        },
        "item": {
          "id": "218b64c3-11fd-45b5-8e8d-164e65488bf5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3cfb7d22-c884-4f13-9aee-b046b7f7e2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52a8e2a-0e29-4de9-8a84-2462855ba90a",
        "cursor": {
          "ref": "9ec3c82d-4dd2-486d-8371-ceaf2b9f6295",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c96f589e-f77d-4b7a-847c-a5b1cb4136d8"
        },
        "item": {
          "id": "b52a8e2a-0e29-4de9-8a84-2462855ba90a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "268467e2-3263-4734-ac32-cdefa4f7ed87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef9c8f2-5a9b-49e2-8515-07e880522ebc",
        "cursor": {
          "ref": "7979b23d-8de1-45dc-9d2f-b916ea3180a9",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e4e418cf-a4a2-4719-a4bd-beb1b674b3ef"
        },
        "item": {
          "id": "1ef9c8f2-5a9b-49e2-8515-07e880522ebc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "48cd68b3-df76-4ddf-b940-fbec1d079260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48763ec-e1db-4b4e-af87-d5759e4cfe8a",
        "cursor": {
          "ref": "208b9d80-6c9b-47ec-b0b1-5b4ef48a46d4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "18876475-8a14-4c9a-a925-e20aca00f19d"
        },
        "item": {
          "id": "f48763ec-e1db-4b4e-af87-d5759e4cfe8a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "edb862c9-46c3-4524-a4b0-6466e7a3a318",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff160aec-3c4d-48eb-96d1-18d42759423d",
        "cursor": {
          "ref": "97944daf-9ce4-4ca3-9f26-f56ab70093ce",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8a4d8abb-de90-4397-b9dc-f4135f222545"
        },
        "item": {
          "id": "ff160aec-3c4d-48eb-96d1-18d42759423d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f57f3ed1-6f61-4451-ac16-0379485eaa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ba12cb-24d0-4477-b11b-3b321c4ef165",
        "cursor": {
          "ref": "18647a16-ff21-44be-88ee-bdfcd0b06951",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ecd66323-6ed7-459a-968c-7b2dd3202aa6"
        },
        "item": {
          "id": "f5ba12cb-24d0-4477-b11b-3b321c4ef165",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "180e16a9-07fb-4c4d-bf44-5be04688c0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a8a6a2-6f4e-408f-96fe-b1c414a3e250",
        "cursor": {
          "ref": "9de5850c-38c4-4101-af5a-cdcb21ad2ed9",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "77f1591f-0c6c-4d99-9c06-9efbe48ba143"
        },
        "item": {
          "id": "97a8a6a2-6f4e-408f-96fe-b1c414a3e250",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2fe2e6a8-e5d7-4319-90e9-02761c276d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e97ba2-eca9-4b30-aef3-3d2e1a1e2ce1",
        "cursor": {
          "ref": "d093b2b5-7306-4d8e-ba26-741506312caf",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ae7fe1f0-4c18-4bfe-bea8-f59fdb69c2f6"
        },
        "item": {
          "id": "c1e97ba2-eca9-4b30-aef3-3d2e1a1e2ce1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "09b8ce3c-29b9-409f-9cec-2bfb6e39363f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d18df3-438c-45de-a8ed-e6591b04415b",
        "cursor": {
          "ref": "44737eef-cd09-4d47-a046-4afc3c94d212",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a3a94b4a-c129-4e2e-a981-aea72eb90872"
        },
        "item": {
          "id": "31d18df3-438c-45de-a8ed-e6591b04415b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "48dce766-2cb5-4c6f-8a41-5c4c2edcee8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddae76c-ee4e-487b-b334-a0144ddbbd2e",
        "cursor": {
          "ref": "61d427c0-222c-4660-9321-375654dfba0c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "db26adee-dc62-4ccc-8f32-ae7877461c5a"
        },
        "item": {
          "id": "cddae76c-ee4e-487b-b334-a0144ddbbd2e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "405a9038-aef4-47e4-a8f1-ce28085d839c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2289cb-8611-444d-b5f7-df0e7946c9e9",
        "cursor": {
          "ref": "b20c96be-1993-4ec7-982a-9c1f88082f0b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2eebd745-9fa4-4ad8-8bd4-603ebb54ac1f"
        },
        "item": {
          "id": "ab2289cb-8611-444d-b5f7-df0e7946c9e9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "21870772-44ae-45e3-bc77-b01134bb28f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7603c274-3d8d-439a-811b-cd8b2fb0a946",
        "cursor": {
          "ref": "0b9fbe32-c8d2-44a5-b4ae-53feeef40f3b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1f5f5761-bb8c-4e94-a600-bda476930a8a"
        },
        "item": {
          "id": "7603c274-3d8d-439a-811b-cd8b2fb0a946",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1dfb2e5d-f713-482f-883d-6acd8313bdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34f04b8-08b5-43f1-883d-b3faf213b4d6",
        "cursor": {
          "ref": "4931b8ee-2ef0-4b66-87ca-3cc675f34e62",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "60056712-c1d3-4d94-9928-f23e6976920c"
        },
        "item": {
          "id": "e34f04b8-08b5-43f1-883d-b3faf213b4d6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9a3f3355-ddfd-4f54-aa21-1c44846b230d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f7a135-d2ac-4fae-98b3-ca67f67684cc",
        "cursor": {
          "ref": "0a396756-f2c2-462a-b443-82ed1eb9e52e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2c0c493b-f7d8-4a1e-bc47-8bef6daae2ab"
        },
        "item": {
          "id": "b5f7a135-d2ac-4fae-98b3-ca67f67684cc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fa64bbd9-69b7-425f-9a09-a48a232ea891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54b462a-0a1c-48d4-b7ba-6257d11f0463",
        "cursor": {
          "ref": "bd955a88-a5f2-48ef-b11c-dd002225fc65",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ff03342d-f344-43ba-9118-1638aec5aab6"
        },
        "item": {
          "id": "b54b462a-0a1c-48d4-b7ba-6257d11f0463",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0cb37f61-100f-4121-9910-cd48db5cf6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c44e118-0bd7-45ec-bd7c-53ac3cd391d2",
        "cursor": {
          "ref": "184c61db-ddf5-4941-8794-63d231828781",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a5166f4c-d1e5-4bf7-9d74-416679195168"
        },
        "item": {
          "id": "2c44e118-0bd7-45ec-bd7c-53ac3cd391d2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "59b43993-e042-4869-b414-0ceacdfe7dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5546270-3b6b-4469-96e4-412cc29118ca",
        "cursor": {
          "ref": "594ae291-a4a6-47ed-912a-f862ba8ddee3",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fd11cf00-6bd6-45f9-8cd6-04d48888e873"
        },
        "item": {
          "id": "c5546270-3b6b-4469-96e4-412cc29118ca",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e901f5fd-8ab9-4394-b833-58b9ad1a7923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818f9ac5-6676-4f79-8f59-3243ef694e37",
        "cursor": {
          "ref": "78d18a6e-0d35-4441-a582-5aff04b4a5e4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6f51d6f4-1370-4a9b-82b3-3bf1109d4e69"
        },
        "item": {
          "id": "818f9ac5-6676-4f79-8f59-3243ef694e37",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b1b4db05-cc33-4fcf-bf6a-1f473a6a172a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280ef26b-0d59-417e-b219-5ceb856814fb",
        "cursor": {
          "ref": "55e04274-0b0c-40d9-b548-07c344f89a94",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a491dfe3-ab2e-4189-bdb9-8f422f00311e"
        },
        "item": {
          "id": "280ef26b-0d59-417e-b219-5ceb856814fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "08b650c8-371d-4b3d-ac70-e94bdf4c2efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb8f609-d1ee-4997-bb04-f1759d523875",
        "cursor": {
          "ref": "c99f9cec-f392-4a92-a860-f2436544e882",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2deb3512-1c2b-4699-8998-3d16be6efd9e"
        },
        "item": {
          "id": "8bb8f609-d1ee-4997-bb04-f1759d523875",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "734a4c24-c14b-46d8-b194-904ae98629b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fed3905-38b9-4c9e-9113-92449b6f7965",
        "cursor": {
          "ref": "68597b59-bcb0-42ec-b8a9-fa6fae5dc2a7",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5faa4a55-53a6-41e0-b484-15c9f29a05bb"
        },
        "item": {
          "id": "3fed3905-38b9-4c9e-9113-92449b6f7965",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c76be443-3056-4877-807c-31b06ff62006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48442d78-bd75-4dd1-b100-3a6e42feb631",
        "cursor": {
          "ref": "ab76a953-56be-4f3d-8ee6-e3b065a49382",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4b3703de-e0b8-4374-b1ce-46701a217d4c"
        },
        "item": {
          "id": "48442d78-bd75-4dd1-b100-3a6e42feb631",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "890d1b87-7416-497a-af53-e20811f31b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32a07bb-fd53-4634-b933-a55a9a8dd7b3",
        "cursor": {
          "ref": "996fda59-42bc-4c33-bf57-9d565946e8a4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "501b0511-bf74-409f-b649-96032af1cabf"
        },
        "item": {
          "id": "f32a07bb-fd53-4634-b933-a55a9a8dd7b3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e6d04a12-1cdf-4a4d-83c3-a70567a30380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b9aea9-619f-4fcc-9a76-17e93f798799",
        "cursor": {
          "ref": "f7c53fde-350e-405d-9c96-47436617d08b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a13fdecd-87bd-4623-8060-8a34f3cae011"
        },
        "item": {
          "id": "f2b9aea9-619f-4fcc-9a76-17e93f798799",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "06d96ab5-aa7e-4c0d-89f1-7b3ab40a0edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdba4bf3-3492-42ef-a4d6-6ee335e871ee",
        "cursor": {
          "ref": "546bc7a7-4164-4c38-8ca2-8550d9d37c89",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "74625135-3c20-49b5-97b8-c2ae3de954bb"
        },
        "item": {
          "id": "cdba4bf3-3492-42ef-a4d6-6ee335e871ee",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3a005d42-752b-4027-b45a-9b4f7489a952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d41049b-8fff-442a-a873-51e0120f2be4",
        "cursor": {
          "ref": "653d5604-30b1-4f7e-8a70-04a75cc1f4ea",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a04861c9-6eea-4cbe-bff8-c311aff6876d"
        },
        "item": {
          "id": "1d41049b-8fff-442a-a873-51e0120f2be4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3bc3cd82-e535-4fdc-8b5f-e92c0098ee87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0fc59a-7f05-48ca-9403-e15179a36101",
        "cursor": {
          "ref": "448ecbca-68e3-4327-af69-4bb7031aa898",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e75571d4-ad22-4ecd-b2a8-4e8a01f19d76"
        },
        "item": {
          "id": "8f0fc59a-7f05-48ca-9403-e15179a36101",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1b7d39c4-4e19-450f-a30f-40da3aeab1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac73705d-2eae-486e-9a04-2d378ecc76f9",
        "cursor": {
          "ref": "4c2f1eb7-b431-4f58-ab84-bc779b9c24d7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a147adad-2f49-48df-afdb-f058fd1c6f97"
        },
        "item": {
          "id": "ac73705d-2eae-486e-9a04-2d378ecc76f9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d874ab92-c86f-494d-b967-745ea285a481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1db9b67-5422-481d-acd8-443a5dbcdf10",
        "cursor": {
          "ref": "084420df-5a18-44e1-bf13-5e61c7cf79bc",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e7bbc372-2832-40ea-9462-6d5aa7ddb16d"
        },
        "item": {
          "id": "e1db9b67-5422-481d-acd8-443a5dbcdf10",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9dd03387-5352-4df1-bec2-b96ac8de8fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63677274-f5bc-4b01-9d65-4c01f256d71a",
        "cursor": {
          "ref": "cfc9df75-47a4-474e-aea5-80ecc14fb922",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d018b921-a304-4df7-b58c-1ac826bfd099"
        },
        "item": {
          "id": "63677274-f5bc-4b01-9d65-4c01f256d71a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "eb68e5a7-6c15-4460-93ac-ab5cd4e047f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fa72de-a502-428f-9884-79cf513ef595",
        "cursor": {
          "ref": "bda5caf4-b8ed-48f5-9b2c-af4fc3e683cb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bc07f70e-b120-4ddd-ae6a-29577da79f25"
        },
        "item": {
          "id": "68fa72de-a502-428f-9884-79cf513ef595",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8373c827-6a1c-4610-8496-93c2ee012a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7003c3f1-5fbc-4b3c-8406-498b8812ef0b",
        "cursor": {
          "ref": "465274f2-32b3-4803-95d7-238f7a910efe",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f988720e-c1a9-489b-b604-9cf0694db915"
        },
        "item": {
          "id": "7003c3f1-5fbc-4b3c-8406-498b8812ef0b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7311402f-c356-4bd0-ae87-36d0ac1e115e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c26325-8634-4cf8-b19c-203647107659",
        "cursor": {
          "ref": "d76bdbdd-c96a-4165-a618-b8a76d25e959",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a9f22074-862d-4993-a704-e79f9a961b05"
        },
        "item": {
          "id": "a1c26325-8634-4cf8-b19c-203647107659",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0d5a1f45-0efc-43a8-91f7-80ba2162e16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7dd8f8-5ea3-458b-9c28-c7c43f8b00d8",
        "cursor": {
          "ref": "ab1bc719-d6dc-49f8-b430-3162a4e788f7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "010ee24a-cd4c-4859-b44f-17996b9a9457"
        },
        "item": {
          "id": "ca7dd8f8-5ea3-458b-9c28-c7c43f8b00d8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "09cec7dc-6b12-4bcc-a8e9-9fb108dd22a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8630416d-1f9c-4273-994b-110ff3b9b1f5",
        "cursor": {
          "ref": "f9a0bf70-ccae-4762-a2da-6a506bec3991",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0c12fe9f-e3f5-426d-b5c3-3f5a022fe339"
        },
        "item": {
          "id": "8630416d-1f9c-4273-994b-110ff3b9b1f5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4c37f03c-08e4-4a76-9eaa-71c63c015e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f637360-d3ad-4fe0-a8ee-6d2897bb0267",
        "cursor": {
          "ref": "f728b565-6d0e-42b2-b6fe-03994afffb17",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2c6407a0-0ea0-49aa-ab66-3bda2f4d7370"
        },
        "item": {
          "id": "6f637360-d3ad-4fe0-a8ee-6d2897bb0267",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "812c942d-b325-4bc0-8ca1-5fcc70ca1e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d0c620-5fd5-44c3-ba64-7933f840a015",
        "cursor": {
          "ref": "268a51dd-f263-403a-ad9d-bda6eaf2de6a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e0dd3534-a4c8-4a83-9f59-2c44291a876a"
        },
        "item": {
          "id": "96d0c620-5fd5-44c3-ba64-7933f840a015",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5ebffbe0-67fd-4542-9a75-b32d3315d0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee321ef-3046-455c-83a0-7d2335213062",
        "cursor": {
          "ref": "5b219789-2273-4921-90c4-aad62917c8ae",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cb9a4449-deec-4bf8-83c2-574d95385a5e"
        },
        "item": {
          "id": "fee321ef-3046-455c-83a0-7d2335213062",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a6864530-4da9-4a1c-841c-0eff0e736774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7a1982-a87a-4887-b68e-f65361702628",
        "cursor": {
          "ref": "c6f75573-e9f4-455a-9bd8-92e4577b5c4f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ef5194b4-abde-4197-b51f-811603e0cb60"
        },
        "item": {
          "id": "ff7a1982-a87a-4887-b68e-f65361702628",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "20ca4bda-3582-47f7-8556-bceccfa2b728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2329e883-aeb5-48a5-9dd0-55de3db067ad",
        "cursor": {
          "ref": "1653d98a-0304-4c0e-bf36-117e1bffdd61",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dc843154-4543-4977-977c-223d36ed7ac4"
        },
        "item": {
          "id": "2329e883-aeb5-48a5-9dd0-55de3db067ad",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7d6ae853-cfc1-4d20-ad47-3f8fe2c6ac24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3a5378-a227-496f-9681-cb1e5d9c2823",
        "cursor": {
          "ref": "282f1296-73e4-4c8f-be4b-58d2e2665c1f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1e45ed6a-42af-44d1-a104-d89ca35549d3"
        },
        "item": {
          "id": "ce3a5378-a227-496f-9681-cb1e5d9c2823",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8aca43b0-4566-44ad-947d-ae29d9d18331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9688d1a1-68b8-4061-9207-353d13e14d0a",
        "cursor": {
          "ref": "39123519-e2ef-4acc-908f-c6c516c07bff",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bc46f358-bcc9-499b-82df-0624f534c4b8"
        },
        "item": {
          "id": "9688d1a1-68b8-4061-9207-353d13e14d0a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e444ddc3-7692-47f8-98e6-e0cbad938b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a46a15f-ecef-4e1f-828d-f3affd5623ff",
        "cursor": {
          "ref": "295a0656-4d11-4b89-947b-738f1a887a11",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a6fed3bf-b65e-4f37-afa4-a3d71cc4289c"
        },
        "item": {
          "id": "9a46a15f-ecef-4e1f-828d-f3affd5623ff",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "08416488-4ee2-4949-a33a-4f104b1cb88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d7f943-7b7d-4113-9092-757dfac7405b",
        "cursor": {
          "ref": "146a043c-9369-4da6-ad49-ae0dfb7ed721",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "13f75fc4-feb9-419e-85e1-80aeb2a18212"
        },
        "item": {
          "id": "60d7f943-7b7d-4113-9092-757dfac7405b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b35731b5-9e38-452e-a2f3-bffcc91eb7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7586013f-c2e6-4f40-a814-5dc5ba788b2d",
        "cursor": {
          "ref": "5dc9ebf8-8b24-4222-95ff-cf2d747dd93d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7b30e4f8-7fe9-4fba-8f68-bf4e8826f1a9"
        },
        "item": {
          "id": "7586013f-c2e6-4f40-a814-5dc5ba788b2d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ec2ae3ae-ad63-40ff-bb64-a41d1392819e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3ee407-1bbe-421d-a695-18fc783dc162",
        "cursor": {
          "ref": "82a23631-0500-4a9e-878c-32568300aa37",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b967a95c-fa31-4d22-a5d8-05fca91c3de9"
        },
        "item": {
          "id": "5d3ee407-1bbe-421d-a695-18fc783dc162",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b4f063a8-37f6-474d-959e-f54c844ba316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a74065a-9451-492a-8e28-48c89431754a",
        "cursor": {
          "ref": "b84d4b3e-8fc0-4417-a7e7-074515dd4068",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "61b5357a-ae41-45c7-beb4-dfb0ebbea8c2"
        },
        "item": {
          "id": "5a74065a-9451-492a-8e28-48c89431754a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7f1ef2d6-fa64-49c5-8938-cf49aef8a2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4ffe9e-228d-4a6a-beb1-16a641014e79",
        "cursor": {
          "ref": "df488079-5c70-44fe-9678-6a4151eebd20",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5617c211-97d0-4f53-b4c7-6235c442180b"
        },
        "item": {
          "id": "af4ffe9e-228d-4a6a-beb1-16a641014e79",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e4513626-55cd-4656-9f14-cad396b23438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bbf625-53cb-430a-80c0-2e7797722eca",
        "cursor": {
          "ref": "2d31cc1c-7ab0-4c2a-a804-73dd037e8dc8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7abd44b5-c516-4b0c-b2f2-e2ba4ecb3f4c"
        },
        "item": {
          "id": "83bbf625-53cb-430a-80c0-2e7797722eca",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0dea707a-553c-416a-bc45-b3aa8720de4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dda8db9-ddab-40c1-b218-e99e75dddc66",
        "cursor": {
          "ref": "01f61447-d6d0-49d3-a1c2-f12831b78754",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "36150849-7601-4d43-8ee2-fbccab4916f0"
        },
        "item": {
          "id": "4dda8db9-ddab-40c1-b218-e99e75dddc66",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0297e89c-c002-4ed5-b2d1-83884cd1ccff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433eb715-2b32-4b73-9ebb-d3478d4fe529",
        "cursor": {
          "ref": "aeda9551-3984-4601-a3ac-d15c7b45fcd8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c77ccc6b-3e18-47e8-8e94-58976073ac1a"
        },
        "item": {
          "id": "433eb715-2b32-4b73-9ebb-d3478d4fe529",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7cf52326-bfb7-47c0-8b2d-48d5c718768a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dc9120-4296-4c2f-9115-e3fadb589cdb",
        "cursor": {
          "ref": "40d4662f-b26f-4151-b2d4-b170438c5b26",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2e892867-5852-4ed0-abf8-63f19e73f32a"
        },
        "item": {
          "id": "c8dc9120-4296-4c2f-9115-e3fadb589cdb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "067efff9-6496-45c7-97c0-68e524687bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccff3fc-2c9f-4697-8f2b-8b02519743de",
        "cursor": {
          "ref": "af9f69fa-11a2-437c-87fd-c150c29d3f19",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a0d1d355-a097-431f-a55f-77de324fabc3"
        },
        "item": {
          "id": "bccff3fc-2c9f-4697-8f2b-8b02519743de",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "68d9bda7-7460-478e-93de-fd4aebfd5b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973b7a7e-7283-4690-847c-93cc70a8dc7f",
        "cursor": {
          "ref": "4df706d7-65f1-4ef2-8e67-e5f6fd3f0e34",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0acf8fe6-5110-42b8-bdfa-af20edfb6b67"
        },
        "item": {
          "id": "973b7a7e-7283-4690-847c-93cc70a8dc7f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9fb2808d-90fd-437a-850e-5986896fbd2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446d6306-5847-4e6b-b0e2-d6be91bb55bc",
        "cursor": {
          "ref": "4329021d-22ee-48a0-9ce6-3467072ba7fe",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "647d2139-2fbd-4d4b-bf72-4d6991c841b0"
        },
        "item": {
          "id": "446d6306-5847-4e6b-b0e2-d6be91bb55bc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c88bdfe2-2113-4962-b361-94526b6cf8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e6c02f09-d6b7-4420-b61f-aeca56944753",
        "cursor": {
          "ref": "bb19b2cf-aaa8-4c5d-bfe2-5670b125abc1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "11524c55-27f1-4d84-922e-ebd5fd630ade"
        },
        "item": {
          "id": "e6c02f09-d6b7-4420-b61f-aeca56944753",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8fb1d2c3-f536-487b-83c1-6345d4b0a37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0c795f9b-a7b1-45d5-80a6-02b12a695888",
        "cursor": {
          "ref": "e11e530f-4216-44c3-8ebb-f0b5435b08f4",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f9be6a58-a8ee-406c-9511-09fe8fe557df"
        },
        "item": {
          "id": "0c795f9b-a7b1-45d5-80a6-02b12a695888",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0face74f-c6ef-48f9-a827-f708ed128f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "404381aa-5522-4a47-b7e1-db9e70c137ef",
        "cursor": {
          "ref": "ac04acbf-a6f9-4a83-be33-61e1e3c70509",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9fff3bb0-ec84-41b0-855a-671e1866bb8f"
        },
        "item": {
          "id": "404381aa-5522-4a47-b7e1-db9e70c137ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1af82f2a-843d-44aa-81f3-ea217c14aed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a0019310-0846-47b9-90df-c07ebf0401ba",
        "cursor": {
          "ref": "f11c4b86-460a-431d-a2c8-f40d84e8d5b8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7578fced-5879-4ed6-addd-690e2e53cd1c"
        },
        "item": {
          "id": "a0019310-0846-47b9-90df-c07ebf0401ba",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "67055ed1-4d30-4d83-8835-0d8c3771d79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "14b00af7-bb44-48b5-b7f6-b7e238e2e9ad",
        "cursor": {
          "ref": "284459a6-420c-449b-b359-5084e957c37a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "05dd7dae-f3fd-414e-b3c5-eaac4dc9d1a4"
        },
        "item": {
          "id": "14b00af7-bb44-48b5-b7f6-b7e238e2e9ad",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bb26469f-baf7-41ae-8d2b-b33c5b1778a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0ab05bda-e377-416d-ba91-5da1175bf71d",
        "cursor": {
          "ref": "88d72219-1b3e-4aff-974b-f595f632972d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8eeab453-7c27-43a0-92c6-5710e2a93460"
        },
        "item": {
          "id": "0ab05bda-e377-416d-ba91-5da1175bf71d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "723bef41-f626-42e4-8f78-3a16d85542da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "bfa604ca-b435-4197-a6d6-b251300f3ae4",
        "cursor": {
          "ref": "20561d71-748c-4d46-a254-98327014166d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c02040d7-d157-49e2-b18d-ec70c4eb8556"
        },
        "item": {
          "id": "bfa604ca-b435-4197-a6d6-b251300f3ae4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a6896763-ff4c-428d-8cc8-42934c095555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957fee5d-3b0f-4b5b-9a3e-c32b8e996445",
        "cursor": {
          "ref": "e0801630-172f-439c-91be-896ea244b739",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a1b2a7d8-e1e3-4e53-8a8a-204112cf0b10"
        },
        "item": {
          "id": "957fee5d-3b0f-4b5b-9a3e-c32b8e996445",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "934d6f14-3a56-40be-86ca-0e6a1435a5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cdaab7-9035-4d6a-ad30-7adacfdf6ef3",
        "cursor": {
          "ref": "b64fc37c-83b6-42c5-839f-f43a4278e603",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a15746e6-eec4-432b-bd9c-d29c8859b5d6"
        },
        "item": {
          "id": "17cdaab7-9035-4d6a-ad30-7adacfdf6ef3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "af87ff97-bff4-4859-a995-78c77134b7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403d66ca-259b-4821-b660-c445d9023505",
        "cursor": {
          "ref": "42cb1acf-97d2-4a54-9bcd-4294f7f8d711",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "36f4d4fd-3690-4968-b2f5-97879c08cbbc"
        },
        "item": {
          "id": "403d66ca-259b-4821-b660-c445d9023505",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f8741cae-81ae-4a99-95b3-7c8d8720dd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f617e008-9b86-4d71-a001-8a0e429ed7e1",
        "cursor": {
          "ref": "09bd59dd-bc15-4bd5-b60a-548807286515",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ec9d6bfe-9df5-4188-a649-76561610f4b6"
        },
        "item": {
          "id": "f617e008-9b86-4d71-a001-8a0e429ed7e1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eeadf68b-4796-4d12-95db-f4efacac00fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1651211-9aef-4b6c-b559-b599b1c7c9ae",
        "cursor": {
          "ref": "8e7e2e0b-e55b-45c6-9dbf-72cf0ca56d18",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "75e86806-360d-492b-a269-6fd62d937965"
        },
        "item": {
          "id": "a1651211-9aef-4b6c-b559-b599b1c7c9ae",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cc964090-0d81-46bf-a2c5-814ec522562f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b13b3e4-430e-400c-b6c7-88ef8b9b8e09",
        "cursor": {
          "ref": "ba7830d6-ba8b-468e-ab5a-b38f4852f3e2",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "997a3026-2e4c-4642-ba32-79aa0c43432c"
        },
        "item": {
          "id": "3b13b3e4-430e-400c-b6c7-88ef8b9b8e09",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8e840a07-0a10-4404-a4ac-2c0ab5b12532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939562ee-7994-4dbf-a928-6256fb003632",
        "cursor": {
          "ref": "d5eb6d12-0f7f-405a-90ec-40ec04410db8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "429d3200-3e65-4053-b55d-358675384306"
        },
        "item": {
          "id": "939562ee-7994-4dbf-a928-6256fb003632",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "344b28bc-08e2-42f3-970d-83d021eef8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f79bf4-5f48-48ae-8484-61b7b881365f",
        "cursor": {
          "ref": "d47f5719-e3f5-459e-a605-4a87ba751ea2",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "84c73dcf-6ce2-4f6e-9d85-a2cc47068480"
        },
        "item": {
          "id": "d3f79bf4-5f48-48ae-8484-61b7b881365f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "da2fe2d5-9ed3-42c0-af56-2c44dad99377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f45f48-9f7a-431c-a6a5-0ed4c0bb041b",
        "cursor": {
          "ref": "1886c77d-1aeb-4d4d-9edd-e134b6b1a36a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "987de574-2617-42c7-8edd-3db3270cd9e7"
        },
        "item": {
          "id": "91f45f48-9f7a-431c-a6a5-0ed4c0bb041b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5d6dd262-87ad-48f2-b514-585252df00d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c11872-75c8-4fcf-a82b-782cf8fada75",
        "cursor": {
          "ref": "a61c74da-3f08-464b-92f2-c8c2984035e0",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "788ed9d5-cfef-479e-bf96-085935ab3114"
        },
        "item": {
          "id": "48c11872-75c8-4fcf-a82b-782cf8fada75",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "793c6df3-150d-40dd-8eb5-05f08c41728d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c2b573-8727-46eb-a0e5-394fafc1be5b",
        "cursor": {
          "ref": "07cf22ad-0b33-4306-8a08-efaacbac2e84",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b20a824f-5034-4ead-b729-6fb0dd18e18a"
        },
        "item": {
          "id": "f9c2b573-8727-46eb-a0e5-394fafc1be5b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1c95356c-0566-427a-ac23-eb4c8f2dbf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4175c1-ed87-494a-91f1-7646cc99f817",
        "cursor": {
          "ref": "5b3559ce-c4a8-48e5-a5f4-0179e683bd28",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b4befb75-a269-43a4-9fce-c6f603deab16"
        },
        "item": {
          "id": "4d4175c1-ed87-494a-91f1-7646cc99f817",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "818618b0-862c-4627-a70a-e18bca22ee5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00817718-7800-4feb-91d9-9cbbbc6cf6b5",
        "cursor": {
          "ref": "d63d53be-1d42-4690-bc04-d99521d421f2",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dc855a1c-d8a2-461a-a4a7-a8b3f14ef7a0"
        },
        "item": {
          "id": "00817718-7800-4feb-91d9-9cbbbc6cf6b5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8df98e78-6dae-4bd1-9164-74c6eafb23a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85c9a33-9e44-4c11-8481-b051bb89de98",
        "cursor": {
          "ref": "8a123221-b348-4a90-bc56-11b3edfd9522",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "28746269-ccae-4bff-9c5d-edfdba0caaa9"
        },
        "item": {
          "id": "e85c9a33-9e44-4c11-8481-b051bb89de98",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4dc516ba-a750-4945-8c30-9a22cbf0c9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd7de74-dfe6-4548-b22b-932343b0fa2d",
        "cursor": {
          "ref": "5d3d651a-9236-4aa1-bca4-792e59bfde38",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ff089333-a2fa-46b6-999e-0679e95e7575"
        },
        "item": {
          "id": "bbd7de74-dfe6-4548-b22b-932343b0fa2d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f7a263d9-fdef-41a7-80ba-66b2fafbe79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77cf62c-60fa-49ad-9262-4a2e0f597059",
        "cursor": {
          "ref": "576c2e9d-3523-44b0-a74a-7bf043cafeca",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8334e932-1b1d-4dcf-ac01-8f98562fbd0d"
        },
        "item": {
          "id": "b77cf62c-60fa-49ad-9262-4a2e0f597059",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f7bfe256-e3d0-4846-82a7-97240322025f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9355fab7-1fe8-43e7-afc9-3d92f079639a",
        "cursor": {
          "ref": "568b3c70-7e1b-433c-930f-09fb6685bd0d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fb117eea-b458-463a-a328-5f9cfa45b13c"
        },
        "item": {
          "id": "9355fab7-1fe8-43e7-afc9-3d92f079639a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ba5199b-1693-43e9-9cac-9af3a4ded5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace44ea1-6c34-4224-bd5e-247b59094f20",
        "cursor": {
          "ref": "7f6f5a0c-4b8c-464d-bc01-0e7f248c5742",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6144cb11-e05e-4172-9349-ea669b2b15e1"
        },
        "item": {
          "id": "ace44ea1-6c34-4224-bd5e-247b59094f20",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e3ac7af1-3c52-4da0-8a85-9908f5260c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a51f9d1-36bf-46cb-8853-88315dd19b23",
        "cursor": {
          "ref": "0a7f571c-5d3e-4202-a676-2b297204355c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e8433b64-71fb-48e3-bc6a-0c7d9eae513e"
        },
        "item": {
          "id": "8a51f9d1-36bf-46cb-8853-88315dd19b23",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "518f8caf-ce2f-4b3a-8738-d06ada2c3a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1132a70-0824-4ed3-adfe-9f6a84a1b8dd",
        "cursor": {
          "ref": "530f2fd5-6f1d-46b9-8076-e2580facfb4d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3bcdb870-54cb-4619-b540-8370faa22762"
        },
        "item": {
          "id": "d1132a70-0824-4ed3-adfe-9f6a84a1b8dd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2ab56245-be05-4174-a755-6d66c23f7ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ba49e8-53fe-48f6-a62f-a174ae890f4e",
        "cursor": {
          "ref": "e9e197e7-6740-40c0-b10a-efd177fff1f0",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "994bf75b-774f-44a1-9a2b-6826a355193c"
        },
        "item": {
          "id": "d5ba49e8-53fe-48f6-a62f-a174ae890f4e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b9e848d0-1986-4a7b-b8ec-1420e6079c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64a645b-b5cd-42c3-88e6-e7d0ccd64e25",
        "cursor": {
          "ref": "d236ed5c-c76c-4176-9cba-a8240bc88778",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7f38af31-140b-476c-8a2d-622de65fad7e"
        },
        "item": {
          "id": "e64a645b-b5cd-42c3-88e6-e7d0ccd64e25",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "23cbc405-aed2-4eae-9ddc-09de6e2e1437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99193b16-c5ed-4400-8e1b-8b80af9295f2",
        "cursor": {
          "ref": "72135a3a-b130-4c5e-a88f-1e1159827a37",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "df1f0fed-5b90-4766-ad47-5431c37b5a87"
        },
        "item": {
          "id": "99193b16-c5ed-4400-8e1b-8b80af9295f2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f4804a15-e33c-4cfe-a7fc-50a122f70c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59934aa9-df9f-45b5-b601-0512eace397f",
        "cursor": {
          "ref": "4fec9646-7d54-4f1e-8365-4202b23a0931",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9d17e8af-3854-4d98-b346-eba1cb1ac294"
        },
        "item": {
          "id": "59934aa9-df9f-45b5-b601-0512eace397f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "385d591a-4c6d-484d-8fc9-77beb5db1db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe6948d-5e73-4819-8cc9-e6c5786aaabc",
        "cursor": {
          "ref": "ae79ebf2-87a7-45d8-9f6d-60762c5e0132",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "256698ae-3047-45bf-a2cd-51138287e7f8"
        },
        "item": {
          "id": "ffe6948d-5e73-4819-8cc9-e6c5786aaabc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6dbbbba1-ddb5-4bd4-9aac-9e5a5d8ccc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362576b2-92dc-4711-b918-80882c236d98",
        "cursor": {
          "ref": "0291713c-010b-4344-ab96-61c35d45aa59",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a64408bb-8fdf-43f9-8e73-dab717954bda"
        },
        "item": {
          "id": "362576b2-92dc-4711-b918-80882c236d98",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ddbbfcd6-9c59-4c8f-911c-f6f4b5cf0e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c7ddbe-78fb-4b79-9262-c8928d845ec6",
        "cursor": {
          "ref": "aab7c740-0262-42b8-975b-f83c53bf0bcc",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "75992fae-9bcf-4101-bb0d-75e28d58035a"
        },
        "item": {
          "id": "c6c7ddbe-78fb-4b79-9262-c8928d845ec6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "277c004d-1d49-4691-adbe-01e7bb64ec5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb4190a-7f2c-411b-84c4-6901db8d4416",
        "cursor": {
          "ref": "bb911746-b47a-4ba4-a8b1-dd441c5a9fb3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6ae1b9a2-3669-4fda-82c4-aae6bf366691"
        },
        "item": {
          "id": "edb4190a-7f2c-411b-84c4-6901db8d4416",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "226d1fa1-bc5a-4292-af23-118b7513faa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281a46f6-27af-4490-9a4d-a20fac60647d",
        "cursor": {
          "ref": "96b9ed56-4eed-43bd-a91f-0a6e8742dd14",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6d22ccd2-e272-42ac-8627-d3091d3fc05a"
        },
        "item": {
          "id": "281a46f6-27af-4490-9a4d-a20fac60647d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "388a47e1-1b04-4964-a757-2590c242e02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e54588-f602-4cc7-b0fb-26e37db037bd",
        "cursor": {
          "ref": "ab88405a-a441-4bf1-825c-29fb43eeedcf",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "62598a6e-6597-4e51-92e8-a9d06e36183a"
        },
        "item": {
          "id": "62e54588-f602-4cc7-b0fb-26e37db037bd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5416fbcb-5e4d-4781-bbf9-dde218211b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc254ab5-6118-46d7-9283-f5ca311e97db",
        "cursor": {
          "ref": "8a524367-950f-426d-83f4-057734349a92",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9b6d7b94-bc29-41a2-9567-91876ca6f1e1"
        },
        "item": {
          "id": "bc254ab5-6118-46d7-9283-f5ca311e97db",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "69005b2f-952b-4b14-8043-7e716c6e3428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1893ae50-c4c1-4440-887f-c7ea694cb820",
        "cursor": {
          "ref": "e9e47eeb-f123-49fd-bf0a-9809b45b5b9c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6d66ad5b-afcf-4355-ab14-504c9d70e266"
        },
        "item": {
          "id": "1893ae50-c4c1-4440-887f-c7ea694cb820",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "27262c49-4daa-4dfb-adf6-89a5bc09972f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b25f6b-b180-4342-a746-670c3b1c3679",
        "cursor": {
          "ref": "060af0b0-b418-40ea-8660-79d24a57c6f6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "df52dce0-3695-41fe-93f6-1682c63e2e25"
        },
        "item": {
          "id": "99b25f6b-b180-4342-a746-670c3b1c3679",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "18deb86e-8753-4e73-a39a-9341f3b3b650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33290194-24bf-4899-bdf9-68ed8f0dba96",
        "cursor": {
          "ref": "297080b0-6889-4265-bda5-b6496a70b713",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "29f7317e-04e0-4401-a228-d1e013dd0aca"
        },
        "item": {
          "id": "33290194-24bf-4899-bdf9-68ed8f0dba96",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c7285c7a-6215-433f-b29c-bbd5302b06fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1da5832-09ab-42cc-b9c5-2fd1961b26bb",
        "cursor": {
          "ref": "05d54bfc-8d02-4478-984d-068d4fc2f68e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d3b708bc-7e15-4d40-9c8a-eedab04171d3"
        },
        "item": {
          "id": "a1da5832-09ab-42cc-b9c5-2fd1961b26bb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f656dcf0-5445-43ec-a230-c86e41e03065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5101d68-f6e7-47f5-af05-2d6ce5467ddf",
        "cursor": {
          "ref": "60999ce2-33c8-4ef5-8923-7fc1ffe97922",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "10ec0419-f7d6-4358-87e4-7e49ff52484d"
        },
        "item": {
          "id": "f5101d68-f6e7-47f5-af05-2d6ce5467ddf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8d6bfb6c-5ae6-4c94-a9ec-ab7d68f5c96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a5e608-53df-425d-8403-1b6e837fbf4b",
        "cursor": {
          "ref": "5ab7216e-b53e-46c9-90cb-2b534f7a3650",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7286fb39-0fa2-42b6-8eac-8420d8c9a3a4"
        },
        "item": {
          "id": "59a5e608-53df-425d-8403-1b6e837fbf4b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8cc0d280-c3fb-4295-ac8c-486a5e4406f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f90f00-30b1-417b-afbf-296b9b6dc734",
        "cursor": {
          "ref": "6cab3ca5-bc27-46be-a2c9-d063ed63dd9a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b082bc62-7f8d-4114-b327-1428fb357de4"
        },
        "item": {
          "id": "e2f90f00-30b1-417b-afbf-296b9b6dc734",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "07fd0dce-a19e-4fa2-83d9-c8c36618e9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e231169-7027-47fd-a879-0bd8c9f5c891",
        "cursor": {
          "ref": "e9dad3f8-edc7-4d11-8631-60cb2ff8d668",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "26c7791c-01d6-4fda-8394-fe7937f53d77"
        },
        "item": {
          "id": "7e231169-7027-47fd-a879-0bd8c9f5c891",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3dc496a6-2923-46fe-b40b-7252e999610b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05db4c9a-a9d3-42c6-9412-19b68bf5b067",
        "cursor": {
          "ref": "cc9f5a9a-ea44-4079-8187-3e8f557f1942",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "aec6e0ce-e8d5-4f95-a58c-419cc232045c"
        },
        "item": {
          "id": "05db4c9a-a9d3-42c6-9412-19b68bf5b067",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4d8e661e-c214-409c-a052-6a7984d660fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f047bfe0-76eb-4f76-aba9-67a4230f43f8",
        "cursor": {
          "ref": "c05ff701-0345-4bce-a811-46ca0eb6eefb",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0de045a3-51f2-4df0-a6a6-16f7f11c17ab"
        },
        "item": {
          "id": "f047bfe0-76eb-4f76-aba9-67a4230f43f8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bfb6889c-2e3f-492c-b909-887fdfd1907d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbc2052-4982-4ac9-a40d-18a9c84782fc",
        "cursor": {
          "ref": "851e4d70-3afd-4cd0-a3f8-eace8ce12b2e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bbc1d8c8-c7e5-475f-93f8-1558db373a19"
        },
        "item": {
          "id": "dbbc2052-4982-4ac9-a40d-18a9c84782fc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2a2efceb-5d4e-4ec0-b335-7e601def8f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b06fd26-f3b9-4597-8bd1-d775327683f1",
        "cursor": {
          "ref": "41499703-3557-425a-a9fd-7ef97fa171a3",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "55d6592e-cb22-42f3-ba03-29582e84e8e6"
        },
        "item": {
          "id": "0b06fd26-f3b9-4597-8bd1-d775327683f1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1f0629c2-fa5a-43a5-9062-67c3c39d2bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ea2271-d07f-4e0f-a8bc-e7c134ba1a96",
        "cursor": {
          "ref": "7c63a573-abc7-42ed-a401-a81f43d5e562",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "da60f685-f61f-4f34-8a19-7088ed5ebfde"
        },
        "item": {
          "id": "f5ea2271-d07f-4e0f-a8bc-e7c134ba1a96",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7c00ca04-d547-4702-b416-56df69e82311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c78259e-5e04-4e3f-9a4d-0328c0910bed",
        "cursor": {
          "ref": "19b5c1dd-39c4-4fcc-a3f6-cb945cdbe166",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c40766fc-b827-47e7-895f-9f91916b545f"
        },
        "item": {
          "id": "5c78259e-5e04-4e3f-9a4d-0328c0910bed",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "03fee032-bec4-4dbd-b178-f8d484c30ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2be476d-a2cb-43c0-9ad4-f210f17022a1",
        "cursor": {
          "ref": "d76c9b1d-8e8a-427f-833d-7010c0240091",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7620475c-d40a-42c1-be44-685733bfd90f"
        },
        "item": {
          "id": "c2be476d-a2cb-43c0-9ad4-f210f17022a1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9b582839-8379-45a4-8905-5b1b6507aa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffb6dc8-40e5-4357-901d-94a4c081e86a",
        "cursor": {
          "ref": "89d4cc00-88a7-4327-ac4f-afee0f47fbc6",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a04f7f76-c9ae-40cf-a3be-2358bea93e6d"
        },
        "item": {
          "id": "bffb6dc8-40e5-4357-901d-94a4c081e86a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ce9bbe90-357c-43ce-979f-fd72db7c3e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd43ea3-12a2-4d5e-bd8a-a962c935d782",
        "cursor": {
          "ref": "9834215d-cedd-47dd-a7f3-e72ecc0ec638",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ce61cc09-ba83-400f-8777-7ddc5710e3c8"
        },
        "item": {
          "id": "3dd43ea3-12a2-4d5e-bd8a-a962c935d782",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bed7f753-e471-46c1-bf1f-911144b5e81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44667786-ad00-4dc3-abf0-a79587ff6fa4",
        "cursor": {
          "ref": "7d919fde-546a-4e5f-9730-260d615af054",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0f549c78-0204-465a-8ee6-7e12c9a02cbb"
        },
        "item": {
          "id": "44667786-ad00-4dc3-abf0-a79587ff6fa4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b37476d4-ed3f-47a6-8662-a7613653ec86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc732915-783d-4118-bc26-623fafdbf729",
        "cursor": {
          "ref": "d0505cab-ed48-4c64-a473-7683f5bd766b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9043b591-0ed3-4a0e-968b-3e2d1db5eb5c"
        },
        "item": {
          "id": "cc732915-783d-4118-bc26-623fafdbf729",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "470ebf47-425c-42e8-8976-0f17cdeffad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8a4c06-49a8-40bb-86f4-df7da4003f74",
        "cursor": {
          "ref": "d415b5f8-c64a-401f-8984-361c05339d6a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "43443b97-0e8b-410b-94cd-92388e7d1c95"
        },
        "item": {
          "id": "ba8a4c06-49a8-40bb-86f4-df7da4003f74",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "319d666a-2aa6-4e54-99c8-8655092ab4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2817617-eca9-4d4a-94a7-6077579bd482",
        "cursor": {
          "ref": "22fab411-32fc-48ef-9ab4-342f6b1e2794",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "22538392-62cb-4473-8969-b30b8ad4240a"
        },
        "item": {
          "id": "d2817617-eca9-4d4a-94a7-6077579bd482",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f58a91da-48af-45ee-81a5-d8ef215351d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f31fd4-7809-44d7-941d-7ffa0dbb569d",
        "cursor": {
          "ref": "1cdf7823-d8b7-46ea-b2c7-79dd1c8420df",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "419b8cd0-ac80-4073-a32c-83539a5d7632"
        },
        "item": {
          "id": "60f31fd4-7809-44d7-941d-7ffa0dbb569d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5ea2ed9a-fd4b-409a-a6c6-a4528260f2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faf877d-94e8-4b61-a418-2e29d699de1f",
        "cursor": {
          "ref": "f80b7b21-7ce1-4df8-9d4c-6cc35e0b3803",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2912aef7-f99f-4a7c-8035-2ac551e38c54"
        },
        "item": {
          "id": "2faf877d-94e8-4b61-a418-2e29d699de1f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1fc1149c-6df3-42ba-8115-84b986ce6d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c145836-82d7-4806-9366-f142c935a925",
        "cursor": {
          "ref": "bbb9904d-a0af-4cbb-b7ab-d67a986c36b5",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fc77ff84-7862-4f05-8f2a-ec4e88f5edb7"
        },
        "item": {
          "id": "9c145836-82d7-4806-9366-f142c935a925",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b94b3542-b960-4010-8268-f611b4b77e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c18fd10-9b1e-4cf5-b058-17836ce4bd4e",
        "cursor": {
          "ref": "48141955-15bd-46aa-af72-c5be1d90d1dd",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bf00d27d-5cc7-405c-b9a8-abc8f386a3fd"
        },
        "item": {
          "id": "5c18fd10-9b1e-4cf5-b058-17836ce4bd4e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "16420ef2-d244-45af-bf0c-be5d43f11566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a76ca7c-efcb-46f9-bb4e-2ac255f3de75",
        "cursor": {
          "ref": "91705679-bf9d-471a-9638-4d9195e59a46",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "296648eb-5517-445f-8f9b-96b05f3db3c1"
        },
        "item": {
          "id": "2a76ca7c-efcb-46f9-bb4e-2ac255f3de75",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d8af4b5c-7a47-4b98-95a4-39a60b9135b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1741364a-3c1b-45d5-a40c-986777eea239",
        "cursor": {
          "ref": "17c9302a-d6a6-4994-b6bc-39e4f375998e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9a9d80fe-4578-4508-a256-cf442a950ee1"
        },
        "item": {
          "id": "1741364a-3c1b-45d5-a40c-986777eea239",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e1860b4f-6cb0-4720-af93-cd305b56cf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6e6f18-c7cc-4133-8fa9-c23944c97fdf",
        "cursor": {
          "ref": "fc4b3c7a-6d51-4b17-9ecb-4998147ea684",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6afd4ceb-b129-467d-b291-ca83539118af"
        },
        "item": {
          "id": "1d6e6f18-c7cc-4133-8fa9-c23944c97fdf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4e7f63cf-8611-4506-a8a5-9ef7171a8ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0122a468-f820-443d-b382-f6e4b0b5c77c",
        "cursor": {
          "ref": "4697b509-5f52-4a31-a8d6-da4a99b790ae",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bd64e8b4-39a0-4d48-86a0-085a43ecc340"
        },
        "item": {
          "id": "0122a468-f820-443d-b382-f6e4b0b5c77c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "977bf28e-47d5-4a3f-a987-250f6b21c509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118dcbe6-87d5-4e2d-9251-d989ec490268",
        "cursor": {
          "ref": "6365a33d-4d8d-4a43-829d-b765d77b8123",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "61dd5250-e748-4def-b216-e4c56ccc6640"
        },
        "item": {
          "id": "118dcbe6-87d5-4e2d-9251-d989ec490268",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fe55e8dc-929d-4cd1-b156-9926c3b46513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fdefed-fcc6-41fe-ab81-17f2eb57dbf3",
        "cursor": {
          "ref": "fd94f77e-56e6-47b9-b0fd-f223931ee9b4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "23de2d31-a147-4a99-8413-82e927662778"
        },
        "item": {
          "id": "31fdefed-fcc6-41fe-ab81-17f2eb57dbf3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3a40f843-c0fb-41f8-9280-e2becd5923ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320cc2c3-4003-44f1-a781-363b564dbc20",
        "cursor": {
          "ref": "dabfe006-7d6c-47e7-931c-a9ea48c7033b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2ab716d5-9e7e-4cce-8644-8de3eea7e004"
        },
        "item": {
          "id": "320cc2c3-4003-44f1-a781-363b564dbc20",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2a3ad3d8-c756-4832-940a-0d339c864d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63762aec-a09f-4372-b6f7-a3fc99590de0",
        "cursor": {
          "ref": "727e71ff-3afe-48ed-b913-05f7febb143f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "68f0988a-ac09-4a5d-bb64-1e353b6198b6"
        },
        "item": {
          "id": "63762aec-a09f-4372-b6f7-a3fc99590de0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "35c3ade0-6098-44ca-9bc0-57166fd7d7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c49f54-c3e6-440b-96fd-77744ec8e863",
        "cursor": {
          "ref": "8ad8ac76-ae0c-4ff7-8e25-3272bd7475e3",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "debd7d0c-c0af-469a-bd49-4626be809797"
        },
        "item": {
          "id": "35c49f54-c3e6-440b-96fd-77744ec8e863",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f1f5df9d-c6cf-4ebd-9e2b-65bab596b68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08fdce7-bd56-46c4-b6bf-c902aaf64463",
        "cursor": {
          "ref": "b0afc834-0273-4a09-a62a-3e187784108a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bd000c6f-c9b4-427a-baf3-95adfa9d7787"
        },
        "item": {
          "id": "d08fdce7-bd56-46c4-b6bf-c902aaf64463",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4da26efc-bb8c-462f-b360-96f779fd8025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411ccd4a-ce14-4c2d-836b-125843cfa135",
        "cursor": {
          "ref": "46267aef-b5c6-4f88-9dc4-a561f870cf53",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a9b7d24d-e65d-4419-b53a-16a68e89759f"
        },
        "item": {
          "id": "411ccd4a-ce14-4c2d-836b-125843cfa135",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8d51ce00-81ab-432b-af24-8307fec8f14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdc75f3-c243-494d-8aff-8f197fbe0b9d",
        "cursor": {
          "ref": "7b1d6e33-9dd9-4c0c-939e-091a54526e6d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "266b2bf6-400a-4f26-aa20-206607662e61"
        },
        "item": {
          "id": "acdc75f3-c243-494d-8aff-8f197fbe0b9d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "940ee18f-8016-4b65-bc04-a4b3f82b5aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32393a30-700e-41d9-9c23-450e4880199b",
        "cursor": {
          "ref": "ae927194-b96e-4c16-ad57-42f93e6f1b6f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b1eae4f5-83a8-4603-a5af-7b82769e3277"
        },
        "item": {
          "id": "32393a30-700e-41d9-9c23-450e4880199b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7bebe591-b549-460b-a75a-11223d369b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1bc0c8-a6a9-4f66-8b66-e4e011cd8825",
        "cursor": {
          "ref": "4c5bbe9d-2f3a-45d9-a94c-d47870fe7674",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5f7ea3b6-6b9c-4b90-9389-ba7b610269d5"
        },
        "item": {
          "id": "1e1bc0c8-a6a9-4f66-8b66-e4e011cd8825",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "426fd54b-d6ad-40df-8e68-444ce7a8bb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24d8da2-c672-4ad0-a27f-78c89c83f7ff",
        "cursor": {
          "ref": "4f2ee2ce-22e2-4359-9a87-1e780f204701",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "addccf3b-2319-43e7-b4aa-3bd5c28bee37"
        },
        "item": {
          "id": "f24d8da2-c672-4ad0-a27f-78c89c83f7ff",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "69049ad5-48bc-421c-93a3-4cd5603542a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631d0f53-6d6a-47bf-be3c-d8ef1593d2c6",
        "cursor": {
          "ref": "75028664-5b66-49f5-9412-69cf2aee5fd8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c8e24268-78bc-4a06-acc6-85fbd73e0240"
        },
        "item": {
          "id": "631d0f53-6d6a-47bf-be3c-d8ef1593d2c6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9f58b72d-4136-4bf8-a62a-d390c3fa9c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3ece8b-438b-4c14-9ab1-58375f34db33",
        "cursor": {
          "ref": "01be908e-3fde-4f2f-a286-7ee7ec013b01",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a387a213-b5ad-4152-b98d-71cf0260e092"
        },
        "item": {
          "id": "fa3ece8b-438b-4c14-9ab1-58375f34db33",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "46576d9a-21f0-4219-aecb-43a5692fba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f080909-b9ad-4b6a-99e2-2b0228784612",
        "cursor": {
          "ref": "2ead33e3-600c-4895-966b-4e86783597de",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6772f5ff-02a0-4c9c-808b-bcd7029715e1"
        },
        "item": {
          "id": "1f080909-b9ad-4b6a-99e2-2b0228784612",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "67ee2b6f-0f84-4675-bb00-f56ef3f1a472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e77b85f-aab4-4f1a-81f7-5f6f803940c6",
        "cursor": {
          "ref": "d0e130c9-81c4-43ea-a4e0-94b2d26e7e5b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e23d92c3-b29d-4370-8d2d-ec3f25da309f"
        },
        "item": {
          "id": "3e77b85f-aab4-4f1a-81f7-5f6f803940c6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b95143b2-0d30-480f-8a2c-22327d2fe68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bd388e-b714-4824-8c3f-145cbeadfe30",
        "cursor": {
          "ref": "34e08619-76cd-494c-87be-af9fa6c8d1b5",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "edcb5e08-e9a9-44cd-84fa-c748e5f4fff9"
        },
        "item": {
          "id": "97bd388e-b714-4824-8c3f-145cbeadfe30",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f5ef7faa-c907-4b4f-8411-6444ce3c94e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41849667-ac8b-42be-b843-e6d1c4b121eb",
        "cursor": {
          "ref": "fac5389b-7453-44af-a620-2827768a420b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4aced25a-d5ca-4a6d-b4ba-0d2667e80880"
        },
        "item": {
          "id": "41849667-ac8b-42be-b843-e6d1c4b121eb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "94470364-b500-48dc-9a05-10f4265f84c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3526e75-c791-464e-a5f2-987f7df19d07",
        "cursor": {
          "ref": "bf0f0d5f-cffe-4d36-9183-7a994f9e6108",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "033656c4-a500-45ae-b720-eece378fa13a"
        },
        "item": {
          "id": "a3526e75-c791-464e-a5f2-987f7df19d07",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "85873cfe-8e14-40b2-8028-c08a973930ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98e99cc-eef4-4689-ad3f-defa3443a0ee",
        "cursor": {
          "ref": "b89b752c-eb79-4b8a-bc20-df1f0ed24fcb",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7dca2314-9bcf-4525-82b5-2cae2904b606"
        },
        "item": {
          "id": "e98e99cc-eef4-4689-ad3f-defa3443a0ee",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4c10e5e5-60b7-44b7-b50c-c701f7618b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f224b68b-9d9a-475a-bd72-ba967dcd4c98",
        "cursor": {
          "ref": "c9e2ae4b-1c6a-4ddd-aeac-c2a3bb3d937d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b0344e5c-39a9-4d92-8102-b584b5d2006d"
        },
        "item": {
          "id": "f224b68b-9d9a-475a-bd72-ba967dcd4c98",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "25df4006-44fc-4199-a027-676eb05fd597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c617b8f3-8b6c-47b3-a863-d360491abae2",
        "cursor": {
          "ref": "3c444451-3e9c-43a2-b7c8-8683f891c849",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1e419a78-9b50-45c8-839f-2198b86966e5"
        },
        "item": {
          "id": "c617b8f3-8b6c-47b3-a863-d360491abae2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2992ff1c-9e08-4358-91a8-c3376e6004d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d920af-738c-4d98-bf38-b7f431ba8459",
        "cursor": {
          "ref": "263a7429-5a77-48e3-9cd7-5898947a3a04",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b7765886-1748-49dc-a655-9e90afde22cc"
        },
        "item": {
          "id": "62d920af-738c-4d98-bf38-b7f431ba8459",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5199ad65-40ba-47af-b22e-b5cb16214230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f674f7-6c8c-4894-a91c-4b148a2fb577",
        "cursor": {
          "ref": "566bf785-e569-47fe-8182-7305d9e1feee",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "64235378-047d-4d17-9e85-3fb69247480e"
        },
        "item": {
          "id": "07f674f7-6c8c-4894-a91c-4b148a2fb577",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a7b80322-4a0a-42ca-8314-4d31436a85a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06b722c-2084-48d3-9cb9-0734e31870a7",
        "cursor": {
          "ref": "b3f62938-bda9-45c4-82af-311caf0387aa",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a74504c8-e64d-453f-8504-fa8fec4b67f6"
        },
        "item": {
          "id": "b06b722c-2084-48d3-9cb9-0734e31870a7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d6e11c1e-6543-4c0d-9812-dbfbb82c03a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f25b847-bc18-4c97-9ace-49fdf6d9cfb4",
        "cursor": {
          "ref": "46c75939-3b6b-4d5b-b56c-38e5dca4480d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9fcfbb45-acd4-42bc-9baf-79effcd91786"
        },
        "item": {
          "id": "7f25b847-bc18-4c97-9ace-49fdf6d9cfb4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9abbe81c-6012-498f-93e7-9e7d7aaa91f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd3b7ec-3c4e-486d-a96f-e5c1f2c96f62",
        "cursor": {
          "ref": "00116467-b561-4598-b5f0-ceef06eb1c90",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "024c2906-ee45-419d-a00b-ab560d832c24"
        },
        "item": {
          "id": "3cd3b7ec-3c4e-486d-a96f-e5c1f2c96f62",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "aef6a6c5-9326-4543-8e4d-a09bc1dfdca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ede9fa-e116-4c5a-8215-06f136531b5f",
        "cursor": {
          "ref": "d1d8e0ef-9792-4c3d-80a5-eb8cfa878a91",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9c8fed4a-5414-44e9-84d3-d207dc6d3fcc"
        },
        "item": {
          "id": "a8ede9fa-e116-4c5a-8215-06f136531b5f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "87dce989-0482-4cdb-bc5a-837f8c4c2f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bf5b1a-1cba-4ace-b530-231f881a9101",
        "cursor": {
          "ref": "e4e6de1a-585e-4b8c-a182-cf70c5ccfd8d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3a97e5c0-8517-4ab5-a57c-39b5ea6d256b"
        },
        "item": {
          "id": "77bf5b1a-1cba-4ace-b530-231f881a9101",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b7b5725f-9c4b-493e-8c8f-12da6d70ea27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35215a0c-531c-48e6-846e-063296e4e7de",
        "cursor": {
          "ref": "4578d02e-9532-4d90-9d91-3f9031637111",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5684e5d3-d7ad-4da4-97a6-5d7019402079"
        },
        "item": {
          "id": "35215a0c-531c-48e6-846e-063296e4e7de",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "59458f13-1917-4ac5-942c-fb0f20f283ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be537be-fa3b-4681-8c19-9f336d1945ff",
        "cursor": {
          "ref": "06a65f4b-9e77-4070-86f1-7e607673d65e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "25ecf411-e375-44f5-8619-009ede993c13"
        },
        "item": {
          "id": "1be537be-fa3b-4681-8c19-9f336d1945ff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fd1fd689-e2b5-43d2-831d-b1757454ce45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5e16ce-8e81-42e9-b133-cdf93fd39a8a",
        "cursor": {
          "ref": "9e6eac5d-22f3-4ac1-b9e6-b54a0330c4b5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0f24970f-c488-4777-ab19-4f367e9319d0"
        },
        "item": {
          "id": "ab5e16ce-8e81-42e9-b133-cdf93fd39a8a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5c361128-4ae2-447c-8c40-b61cc9bd1723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3631c9ac-f483-480e-a15f-b3dd7eb50c03",
        "cursor": {
          "ref": "bba394ff-57a2-4ec8-a362-7168bf42f222",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f3e33f33-7267-4e68-96e8-c38c09c134b2"
        },
        "item": {
          "id": "3631c9ac-f483-480e-a15f-b3dd7eb50c03",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "02e05957-204f-4444-8598-828a72d243c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d818a7db-016f-4740-b00c-c383f86452b7",
        "cursor": {
          "ref": "9268a9cf-7185-42c8-bfdc-72800b479f4f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8c61035b-2a9e-43ca-a01c-ec55ab0fcf6c"
        },
        "item": {
          "id": "d818a7db-016f-4740-b00c-c383f86452b7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "17fd80b4-7de0-4920-816b-86ebac1746d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4764698a-ce75-4f1e-bca5-9da6f80c7d8f",
        "cursor": {
          "ref": "6fbda846-a710-4b0e-99be-cbdfb8788d0a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ff3043f8-5796-4e16-92c2-cd520a519dac"
        },
        "item": {
          "id": "4764698a-ce75-4f1e-bca5-9da6f80c7d8f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8bbb2b29-0ead-4cf6-a813-494175b8f1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5343c46-97a9-4181-9afb-4f4229beea28",
        "cursor": {
          "ref": "fbcc0ade-702a-495f-912e-b88062140be1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "536d65c1-6eb5-49b7-96a0-e5454108fc82"
        },
        "item": {
          "id": "f5343c46-97a9-4181-9afb-4f4229beea28",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "90a9e16c-8023-426c-9cb0-a78f26eddc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed87a39-f2d5-44cd-8558-99ff1fb6ac97",
        "cursor": {
          "ref": "442824d7-89e5-4d34-92d3-b19805b58a93",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1c4bdfc5-e000-4e9f-b0b9-ec5455bf9dfa"
        },
        "item": {
          "id": "5ed87a39-f2d5-44cd-8558-99ff1fb6ac97",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ce90e143-b7eb-4fcb-8684-f28101c0d481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa85dd3b-4eb5-46f2-9a4e-e6a94fc8a1cc",
        "cursor": {
          "ref": "0441517a-e9c6-4c23-b4ab-f7cb087f5f27",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "127f6b05-6a90-4262-ad90-a443d62a6d45"
        },
        "item": {
          "id": "fa85dd3b-4eb5-46f2-9a4e-e6a94fc8a1cc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6cf6317a-d0e8-429a-8cd8-fa614f3b6c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b49cc7-031f-4a62-903b-9eabfb34c6a4",
        "cursor": {
          "ref": "d5846c55-7a3d-45a5-992e-586be44d2f21",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "11518048-e04e-42a3-9480-18e05e3bfd14"
        },
        "item": {
          "id": "01b49cc7-031f-4a62-903b-9eabfb34c6a4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6e2bcb64-7b38-4ec9-93a4-68464d783785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e414af-85c8-432d-86ee-0f72b5a9fffc",
        "cursor": {
          "ref": "b29d0aea-89b7-4626-9f7e-097304353bca",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6bf8f70b-79f6-449d-a191-eccf7280b335"
        },
        "item": {
          "id": "71e414af-85c8-432d-86ee-0f72b5a9fffc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a1dbdf24-47e2-4a91-8471-e7f7363311bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf06dd42-d29f-4362-95f4-068fbc8dd9ae",
        "cursor": {
          "ref": "5582d779-72f8-4dc2-bce2-42e7423777db",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "50cba78d-85b2-4019-b71c-ff0a12081028"
        },
        "item": {
          "id": "cf06dd42-d29f-4362-95f4-068fbc8dd9ae",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5f6acfbb-7607-4d00-a638-5f3f512b21c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dd04d4-3ec6-4e6e-ae7a-62711cb6cf35",
        "cursor": {
          "ref": "45059f59-f17f-4bf7-ae81-d38cc12daba5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "537f216a-c9b4-48bf-8508-0b41d626c072"
        },
        "item": {
          "id": "d0dd04d4-3ec6-4e6e-ae7a-62711cb6cf35",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a5ba066a-05a6-4b28-931d-8bd49b0bda9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b4d191-0477-42de-b884-3e6c55eb52e0",
        "cursor": {
          "ref": "514eb3a1-3321-44d9-b0a2-763e1c2d625a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "971ed102-d61c-4da5-b0bf-ed6556ea31f1"
        },
        "item": {
          "id": "05b4d191-0477-42de-b884-3e6c55eb52e0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b5db189b-6768-497a-95cb-65a2e8b558aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2ef702-83d9-4d0d-9d69-67623aa8da32",
        "cursor": {
          "ref": "5954ee2c-8377-4610-b663-8b7e63e3b81b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1de107b3-c434-4f13-b4c5-d6a835d7549a"
        },
        "item": {
          "id": "bb2ef702-83d9-4d0d-9d69-67623aa8da32",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6bda714d-99e1-4503-93bf-a316b5167e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659ac2ec-a297-4c3c-a4a5-b5052c6366f8",
        "cursor": {
          "ref": "7f04270f-25ab-4a2f-b218-f4710d4b2676",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3a035edf-6e67-43bb-b7a6-d7d07c26c13c"
        },
        "item": {
          "id": "659ac2ec-a297-4c3c-a4a5-b5052c6366f8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "103cfae1-9a0a-436c-9701-555f77dae512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e564af0e-4bbe-42ef-aae2-2243459dc705",
        "cursor": {
          "ref": "024f404b-532d-4750-8642-46423e9bd004",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4080da02-018b-4232-96da-ef0056d19375"
        },
        "item": {
          "id": "e564af0e-4bbe-42ef-aae2-2243459dc705",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a7f1233c-d43c-41fd-bd25-b6b3ec4a8958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87af0329-59b5-407b-8cb6-30245ae04b0a",
        "cursor": {
          "ref": "7f250ffa-1994-48cb-9daf-d7caa78a227e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fc3e1b0b-022e-4767-beee-1dc9312ed154"
        },
        "item": {
          "id": "87af0329-59b5-407b-8cb6-30245ae04b0a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6c3e6e02-c5de-455e-a41c-b31912d3a31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d2ced1-f5e0-4983-919f-0fed97ee5fa0",
        "cursor": {
          "ref": "5108da18-ebee-44b2-a60a-b7e6096b5eaa",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1f23f96a-b35c-4136-9d6c-ce62c9571807"
        },
        "item": {
          "id": "71d2ced1-f5e0-4983-919f-0fed97ee5fa0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7e0231f8-c1ca-4591-b7f1-53eea31767b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c75e997-402f-4409-b90a-ed4f6cc13475",
        "cursor": {
          "ref": "9935b5ed-1b97-4a18-b108-28bbc77aa825",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "98846c25-3895-4180-a148-fefc5b29d63f"
        },
        "item": {
          "id": "9c75e997-402f-4409-b90a-ed4f6cc13475",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e6f5f1e7-33b7-4bd5-929d-f795a3813342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6372dbfe-37c4-4fb7-a7c2-afc9d2c08a95",
        "cursor": {
          "ref": "3139b41e-1e58-4344-8d9e-e2cb02df93d3",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6908ae76-12da-424a-84d4-6760646ac168"
        },
        "item": {
          "id": "6372dbfe-37c4-4fb7-a7c2-afc9d2c08a95",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "47045564-e8aa-4770-aee7-af30d1966d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6827547b-a6b2-4595-bbff-975b657fbc00",
        "cursor": {
          "ref": "d4d772b6-5ff0-4d2d-9ae6-f45ff9683766",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "86d821d2-27c8-41ab-b730-c3295dfac8be"
        },
        "item": {
          "id": "6827547b-a6b2-4595-bbff-975b657fbc00",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f3e63edc-8095-4972-b8fb-1c38e76000bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d9350d-6f18-4890-9a56-0ad8c5b4ace3",
        "cursor": {
          "ref": "f302cdc0-8389-47eb-b68e-d16e1a734811",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "964f3c03-1864-4b28-9f7d-5c8a101d8762"
        },
        "item": {
          "id": "83d9350d-6f18-4890-9a56-0ad8c5b4ace3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "adebf0d8-21cb-441c-97dc-0228f4b762c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1388f77f-6012-4885-a7c2-988c1122ad65",
        "cursor": {
          "ref": "6eb4a196-96d6-4517-969a-5b67cce8cf21",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e4d7b163-9b6e-46d4-9a56-9856408e0a2a"
        },
        "item": {
          "id": "1388f77f-6012-4885-a7c2-988c1122ad65",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d9618f0e-c2c6-4ec0-87d3-ceda07bab704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f480e9-3f7b-4235-a75d-e8f008bd2e52",
        "cursor": {
          "ref": "62b76e2f-553f-4a65-b7aa-e3bb1bda95d0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "149f12e9-518b-41f5-8557-a069a32ebffc"
        },
        "item": {
          "id": "c3f480e9-3f7b-4235-a75d-e8f008bd2e52",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "14093ca2-6440-4ac9-b4f1-7394cfdd483e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcd4ece-3282-4f97-a5b2-0a13839d6e1f",
        "cursor": {
          "ref": "b54fa408-ac98-489b-b432-6e780f49bf00",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "228aa372-b81d-4629-bdbc-a6dae1490588"
        },
        "item": {
          "id": "7dcd4ece-3282-4f97-a5b2-0a13839d6e1f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "feb7e43f-5e9c-4b55-adde-54bba7fcbc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f44415-cfea-43cc-b0e5-13ebc20d49e1",
        "cursor": {
          "ref": "28b8d532-0dff-4ed0-a6bc-d7a21e5b4b3d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "90707577-49ff-45cb-b8b0-93644abb3eb1"
        },
        "item": {
          "id": "d0f44415-cfea-43cc-b0e5-13ebc20d49e1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "32e36e1b-be7d-4ca2-b80e-1f7aa07707bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ad1852-d60c-4a2b-a2cb-13d35466f906",
        "cursor": {
          "ref": "b46f79af-e217-424f-8c4a-5aed31fbdfee",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "08d4d3d9-be69-49f2-bbab-00460d594d1d"
        },
        "item": {
          "id": "79ad1852-d60c-4a2b-a2cb-13d35466f906",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "25045039-6d12-4502-9d5c-101252b7f151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3e818e-9a74-4e6a-b27a-3cf8e700d2b1",
        "cursor": {
          "ref": "83e8c040-de7b-43cb-a5af-6fc10b910e02",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1f1758cc-fcf6-4a67-ad54-10febf44c362"
        },
        "item": {
          "id": "dc3e818e-9a74-4e6a-b27a-3cf8e700d2b1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0cb354c4-0d46-4849-81e5-2b4f6a46a851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f23835-cfd2-4648-9b3e-796ddb6feeef",
        "cursor": {
          "ref": "b3b9835c-7281-4e67-9472-fc944fe1868a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f5f4986f-7dd9-470b-be79-8d1dbac52a18"
        },
        "item": {
          "id": "67f23835-cfd2-4648-9b3e-796ddb6feeef",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a2602258-37d9-4d18-b7ff-5017f38a9fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f11d65-a0dc-43f1-978e-3f3f3359dfe1",
        "cursor": {
          "ref": "033cd314-3790-4ee9-93ab-32f3bf428e7b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ecb1b1ef-fffe-4776-9a43-31ffa0e88b1c"
        },
        "item": {
          "id": "d3f11d65-a0dc-43f1-978e-3f3f3359dfe1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ca95ee06-6fd8-4529-b310-8de8b90c527f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def52fa6-498b-43dd-9bbd-ba248ea0f1e5",
        "cursor": {
          "ref": "e57a157e-dae5-46a6-9612-710abd9a6144",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0f5f612c-7325-4380-9181-14343d1b1d9a"
        },
        "item": {
          "id": "def52fa6-498b-43dd-9bbd-ba248ea0f1e5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f29f3258-d423-4a9d-8cc4-3de4f8e68272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d9d5f1-931a-4ead-bb90-21c48bd8df43",
        "cursor": {
          "ref": "85233bcb-b19b-40ad-9fa9-b08e38f08e39",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dcade7f1-6c2a-43df-8a50-6b2b8316c484"
        },
        "item": {
          "id": "77d9d5f1-931a-4ead-bb90-21c48bd8df43",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bc69d636-353a-4a4d-8e1f-ad698edead13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a330d923-9cb8-48f7-be62-56f8af61b015",
        "cursor": {
          "ref": "b0373122-00ff-4a75-8547-9d2ea05e3c4e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a60dda0e-87e2-4955-870b-81f0737bba74"
        },
        "item": {
          "id": "a330d923-9cb8-48f7-be62-56f8af61b015",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8a45b1f3-a425-4fa7-93d8-0b931a52569d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9905e6b1-d413-481d-a02c-99307a56da21",
        "cursor": {
          "ref": "25d90922-1679-4af1-948c-ebdb06407769",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b0d680a8-2ab6-48ec-89bf-a6b21ffc2ee9"
        },
        "item": {
          "id": "9905e6b1-d413-481d-a02c-99307a56da21",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d46d93b0-c399-43dc-9ce8-467df3b71fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec49a20-2fff-45eb-bae6-11e482b4dce3",
        "cursor": {
          "ref": "30a9b22f-deec-4156-8393-2012bc0d4ad0",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "753a5935-e4bf-4663-b869-6d2242581b7c"
        },
        "item": {
          "id": "dec49a20-2fff-45eb-bae6-11e482b4dce3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0ca1401a-c799-47da-8da9-e7603a737594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcb6335-8355-463d-9485-e86f1d1c6643",
        "cursor": {
          "ref": "cee7c007-d0e4-4394-a5ea-e448562b94c0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "04e90176-23e7-4dd7-ade5-adce24fe6de0"
        },
        "item": {
          "id": "7dcb6335-8355-463d-9485-e86f1d1c6643",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fd969edd-d26b-4f84-a9dc-b26d77d571a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3409f2-8d36-4d91-8d99-95ae368d9060",
        "cursor": {
          "ref": "d4fa74eb-e4fb-4984-bf9a-61b21bf78fad",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6a7742f2-adbe-4899-9007-68c6d66c90e9"
        },
        "item": {
          "id": "ec3409f2-8d36-4d91-8d99-95ae368d9060",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "16f2d580-1052-4e9a-a458-7ec9cce2ec8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b08a550-3762-4df6-9ea9-4bd48c985045",
        "cursor": {
          "ref": "1b3873ca-e9f4-4579-8450-45728d23820d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a37b7bd4-c2f2-4020-80a7-b9b8fc9f2c5d"
        },
        "item": {
          "id": "8b08a550-3762-4df6-9ea9-4bd48c985045",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "597b6484-963c-4910-8d20-a50953e64b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330e9002-1c59-4f69-8047-4428d181a304",
        "cursor": {
          "ref": "4aabe679-1a4d-458a-a16f-f7d25335f24b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3ef012f3-d014-45c7-8998-c7670f6730c8"
        },
        "item": {
          "id": "330e9002-1c59-4f69-8047-4428d181a304",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e225b4cd-9617-4c66-beda-686c99c41c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b7bda6-517f-4ec9-a1a9-71eec4cad46b",
        "cursor": {
          "ref": "1c444bce-2c60-441c-910b-e9c75b5285e1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6781e8e2-15ab-498d-a4a7-de63d7ba79b8"
        },
        "item": {
          "id": "84b7bda6-517f-4ec9-a1a9-71eec4cad46b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "94ca12e7-05a8-4a81-80fb-7f37c0f28bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fb8910-2c56-49ea-a1f1-4408990c29cc",
        "cursor": {
          "ref": "f117ee03-425c-47b3-b037-a8cb7b831b5e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e5e32ba6-1bac-4305-8e98-25786af70834"
        },
        "item": {
          "id": "a1fb8910-2c56-49ea-a1f1-4408990c29cc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f19384d0-9846-489a-b46f-c4e117ee8e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afa0c43-174b-4bd3-85e9-1735bbdc2b13",
        "cursor": {
          "ref": "95a3c34c-3b21-42ef-b05d-5291ce0efe9f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "db7b1af7-a4df-45f9-9acb-ee13c0f33900"
        },
        "item": {
          "id": "4afa0c43-174b-4bd3-85e9-1735bbdc2b13",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "27eb8162-0a13-4f72-9c4a-5ca7fe8970a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523de432-3c7f-454a-9e80-0275daa1e434",
        "cursor": {
          "ref": "9a422567-f9c9-41c0-aff8-fe5f8f25b6ac",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "48b81ff8-5931-45d6-b384-88b33988750a"
        },
        "item": {
          "id": "523de432-3c7f-454a-9e80-0275daa1e434",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "be0fb5de-3592-4839-a947-2cae80aadb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cee56f2-b609-47ae-b2e6-e445521118d7",
        "cursor": {
          "ref": "7e03451a-8430-4499-9ae6-25255b046de7",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1e08ccaf-bc7b-4ee0-8caa-b4f5533a0787"
        },
        "item": {
          "id": "1cee56f2-b609-47ae-b2e6-e445521118d7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d1500741-935d-4561-b796-59b8742afaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fa1ad3-ef6e-444d-bd1c-ef70997a3516",
        "cursor": {
          "ref": "f40ea39f-74e1-4c3a-93f9-f19900baefa7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d1127699-e37a-4e57-a20e-2bd969f3c298"
        },
        "item": {
          "id": "83fa1ad3-ef6e-444d-bd1c-ef70997a3516",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ed7f0eb6-39b9-4e71-a057-125c9e42b25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17dfbff-a6d7-415e-8799-499df598792f",
        "cursor": {
          "ref": "640acafe-a0fa-4323-bb90-827796d8da5f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f0161bc4-1fd0-41b9-ba50-a06d5647f042"
        },
        "item": {
          "id": "a17dfbff-a6d7-415e-8799-499df598792f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8dcc4d4a-1b64-4591-af2e-67d1012f5851",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10423498-5462-49b6-a157-7919b3ade8aa",
        "cursor": {
          "ref": "78d88e9b-53c2-4a40-a723-493b297109da",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "728ea8b7-711f-4386-b3e8-305b947e8138"
        },
        "item": {
          "id": "10423498-5462-49b6-a157-7919b3ade8aa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cdf74b7a-a32c-4c5e-96ce-c976041341cb",
          "status": "OK",
          "code": 200,
          "responseTime": 2241,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "38058064-4639-430d-a9d4-deb6cdd41429",
        "cursor": {
          "ref": "acd69e06-b6f5-4ef8-81e7-e68cee45c023",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2c09f026-e804-4e19-b1bd-85efaee84401"
        },
        "item": {
          "id": "38058064-4639-430d-a9d4-deb6cdd41429",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f85a3405-6ac3-4f7c-8daf-6612f1ba0e71",
          "status": "OK",
          "code": 200,
          "responseTime": 3297,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccf05da-c7e8-4bb9-9b9b-d02a5a0aba0b",
        "cursor": {
          "ref": "cfd57f90-dd1c-4bc6-9852-0841a8660e79",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1253f7ac-d092-416b-b0f4-aa66020c43aa"
        },
        "item": {
          "id": "3ccf05da-c7e8-4bb9-9b9b-d02a5a0aba0b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4e5aed25-6751-4528-9144-5b6e251eb988",
          "status": "OK",
          "code": 200,
          "responseTime": 2309,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e5f4cc-8821-44db-8328-197fb2deca29",
        "cursor": {
          "ref": "e3e8dcce-576c-466b-b285-af4f9d2de714",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "728cebc2-6b20-4dc6-bedf-f05b99181869"
        },
        "item": {
          "id": "c6e5f4cc-8821-44db-8328-197fb2deca29",
          "name": "presentations:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:248)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:248)"
            }
          }
        ]
      },
      {
        "id": "6c50776a-4806-4e0d-bd5a-15818cb21d38",
        "cursor": {
          "ref": "8ef16353-09fc-4eda-9a92-53e0d88a8999",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0edcb369-69bd-42c8-9805-25e887535eb6"
        },
        "item": {
          "id": "6c50776a-4806-4e0d-bd5a-15818cb21d38",
          "name": "presentations_prove:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:249)"
            }
          }
        ]
      },
      {
        "id": "8e0cd185-993a-4e05-ab22-04739fa7eef0",
        "cursor": {
          "ref": "6fe75b7d-2dc0-49f1-affb-a3b959f92865",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3ca78591-8bf8-4ad7-ade4-dcd18f9a67d8"
        },
        "item": {
          "id": "8e0cd185-993a-4e05-ab22-04739fa7eef0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:250)"
            }
          }
        ]
      }
    ]
  }
}