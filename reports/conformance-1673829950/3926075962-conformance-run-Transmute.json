{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "78cb6af1-272c-4af4-a284-9b275729b977",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d7258aa8-bed4-47c4-893f-999e0c83b0ee",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "06196733-bef8-4e95-be1b-832d369f22bd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7d889796-f506-4f02-886f-d1ad5f91db0f"
                }
              }
            ]
          },
          {
            "id": "58db7740-1772-47ee-8a73-ba5351f13630",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88dd722d-d28d-4c3c-86ad-0fb6cdd44e5a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "046ed58f-0d52-44a4-bd2b-cc09c69b4176"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8042505f-52b8-42e3-ade5-d484f47fd152",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "91ffc2a8-ee2a-4e9a-bec8-7eaaa59035fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "636107ce-3461-4355-8a51-f850676d747a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4850153-1e6a-46f2-9c5b-9c2740a99964",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33ecab5e-df33-4c43-976a-8ab0cabc402e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "348658a3-74bf-41e7-a735-0f5c7e2b2b71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a395bd0-e618-4c66-b5ab-7242af1c057d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "58d1629e-9ced-442d-917d-c76cd04b93c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d3dac60-d01d-4d79-a1f7-6418ede94445"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddc39379-745d-4c35-9859-e1bcce3f38c4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "71d9cc24-520a-423a-bc9a-e5a3a0034ddb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10bf844f-e619-4f90-87b0-e5eaac846578",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23f411e2-391a-4577-84f7-97057b006b93"
            }
          }
        ]
      },
      {
        "id": "c7610974-46f2-47e7-8725-f0eee0ff3e87",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c9d33c76-5291-4a54-b0e1-5bd292b13b8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "284143d5-a776-4cd3-aba4-8ecf5704dc49",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5b6a70b6-e731-4f56-b1f5-a5520450607b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fff2c5c-3985-495e-8ce6-1b0a26c8d864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5088c7b-6f3b-430d-8b63-24bfb749bc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cb179f-8de6-4d0f-8961-2830f0fcadf4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7f3bb1-e096-45da-930a-65e1178013d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa2c65d7-771e-41fb-b5e3-c77349061c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f695e40-84f3-440e-90bd-b94e70166421",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92d1352-78f1-4799-91ea-b1cad531ff52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e861c42b-ed63-4d81-a79e-533c1a021425"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8f2ddf5c-7870-435a-ad7a-be21248d7121",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e614572-546f-47bf-810f-83dcb1b248f0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71becc07-08f0-4c5e-8b60-ba5cdad75555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3edd33ab-7b11-45b2-9bda-2e59b85296c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6f8eb7-fab5-4977-a9d2-4027cef7e6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f08bd81-5204-451e-81c4-3ce37e877576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53126b1c-20bb-4451-a4a5-762e3b4f83f2",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e1dd48-f6d3-4f2d-ab5e-bd7277178091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a42f3767-0039-4016-aba9-425cc92d7c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48433169-17e4-4ef2-b572-71f2fbcc139b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "8af526f4-6640-4000-922a-f5207b0f633a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e8e3ddb9-f775-4ca6-bbaa-db51a2966516",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0260e27-61ba-45f4-90c2-ed9118fe9b20",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcaf107b-3bc2-4947-9cdc-38e0fd6d2521",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "af6757f0-5bad-4292-bd7f-40bf63d4e1df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84151a7a-e3fc-4160-a6f9-be8c98783e0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "61f14a52-8614-4e6b-b336-5667b1ec342e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cf3ec2d-9189-4e9b-968d-d7058b1492a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6042cab7-8652-46a4-8d27-c490984a46f6"
            }
          }
        ]
      },
      {
        "id": "6706524c-a9de-4aa9-a081-73ba36106ec5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e4171de5-a349-4ebb-a6cf-4e5e0ef87611",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13661c4c-acfe-47b7-a991-9ddfa2cd17ef",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "31e1419f-46db-4136-afc4-7d9ebe7f082a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2884b7-1c50-4cc3-b4cf-ba46f611318f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef0943a-8a10-405c-93c9-69b770a0ea9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9591813-af24-4dab-b5f1-27fc6c8de7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3053e9b7-4879-4518-a27b-8b578ecfcd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f7dcfb-fe3c-42e3-8b78-f072972a4456",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8869f537-bc6a-44a0-a75b-ff4f9f450abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9717e379-3fdf-4a67-be1a-32a3e5f9f035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d699e0bb-b9a4-4132-96b6-0a3e581c9396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77d85e78-0c0a-4980-9842-23d1ac8e8e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39521b6-92f9-4afb-8c57-89daa121f143",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13bc26c-0f24-44fa-93d4-ad627b4764c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1833260-49c6-483f-9d88-6df8c35096bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77666e74-fd4d-40b4-bba7-f380af33411d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bee07023-de62-4df5-a72b-5be561532109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada2b4ed-0ae1-47d7-b323-b961575cb8f6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d07687-f4dd-49b7-a182-e77cc7b8f089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750fbe02-ba21-4953-91cd-886d1f52fa4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90c528c-99e6-48be-b05a-b727608a143d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff3cd323-a556-4b22-b8f6-b2d404fde666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e5e1b8-7d10-4815-8152-5a18131bb2ea",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efe1c61-fa81-48df-985e-a34d51a9c5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e2b704-8223-4f53-b8bf-47ab8dee0b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38ce71c-13c1-4bd4-83df-04edb9a8ab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a5450d0-2d24-408b-9723-b0ddaf8b0c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d25b33-073f-466d-bc2c-d33697de60bf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a08e78-3501-4859-9198-62bfcf04e5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab198afb-3529-4a0f-a3e6-2a2ea3f2af23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccd3076-eacb-4747-810d-a48319afe739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce17e5b2-026e-4e0f-ba81-e3bb9ffcc0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0844d485-5a59-48bb-88c0-e211824e9cb1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449c0f18-e8a2-400b-8c39-505c8839ea44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709ac480-155e-421a-8350-4fbb21f45c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810d2feb-957e-42aa-8833-1f69cebabe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bbae293-6aee-4133-9c38-4894686f2d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c0a752-4ee8-4b5f-b10f-45073382ed6f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d269eb30-7fa9-4a55-88c4-43508a781c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b115e50a-3755-4bfc-b814-9277313e6ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33a555c-4327-4e88-8900-11349b3017e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05a5a744-7d78-45ba-9751-d73ba1a5533d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2451948f-4c9e-4793-8843-dba1462c72b2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317b2c1d-fab5-47a1-9b38-60fe702deec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d22ae2-f260-4567-8ad0-3338bd8f7a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac5109f-eba3-4e1f-ae1f-b65e843de455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2103632-954d-4552-a7a1-ffabc85b38d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1bfede-1dfe-419f-a67a-e2cf52da3843",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "becaa458-75a2-4f77-8af4-13e730f5ea2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1dcde7-80d6-48bf-aa71-1e70e17b69aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ccfbfe-0ff0-43ae-8f97-413f90fc1a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21fe18fd-3604-4953-8b05-1101c430949b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618f7cfe-25ad-462a-a893-30d2c2d30939",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00e7086-67ea-499d-bc3c-5998585c4fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e5cbcb-e00a-4900-89e6-19c2b45fa1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ca3ef0-94cf-4299-849b-9222e2345ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fad5c6c4-4ff2-4314-8a14-d0c93c182176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bfb032-181d-4649-be2e-3c2981b3ddfb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d051e124-5f2f-4471-8d3b-7b49b40dd6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f777ee4-bcb8-4d1f-b2d9-6842f875f577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405b6819-3852-47b6-a449-db1b9f72d81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b437292-7b0d-451b-91d0-2c457c9f13db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f25532-1788-48bd-a1a9-c528e58cd640",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8291a47d-e711-4ae1-a5f9-2d6db0360278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3ee190-858a-4ef1-899f-2e9413908389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fe3d52-cec8-4f0c-96f8-8a8bcdd49912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a36b896-418b-4155-b521-a51f9e12d7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a352f9-19a9-4771-aeea-1e52dd8c9829",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed30627b-28d5-4b9e-b134-96eb87e3e1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c411c0c0-1b5d-4856-8895-46471c2cbfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832c9f0b-4f94-44a6-9be7-77ded6c14410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "c099b4a9-b353-4673-ab2a-b3ea9238ff86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d14111-cc43-498b-befd-6d29a9bf2a1b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cb3a85-8fb2-4cf2-856f-76b87ea467e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7e11fb-7402-4ae1-9259-efd83fd1a34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3580fe76-0fcf-4ccb-809e-0cde51105765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdc9bd6d-8ee6-45e8-b37e-6a18fca0b4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae7862-a3a8-4df2-b5ba-7e44983cee0c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c57513-0f34-48c0-a170-3627ff6b34b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2cbcbf-8f34-455e-b3b3-7dc746a7d1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c25e5f3-1be9-4a40-9896-5999cb4bf0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a5e9a5d-1d10-40d4-b46f-79d26ba694d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc6d651-2586-4883-a14b-6893922873c8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021a4294-eaf2-4776-a768-af19ce380767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da50870-a209-4bbb-bdb5-8b49bd737af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874b62af-0148-412d-9d11-5fff67fb9c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d286c18d-52e6-4572-a5c9-4576d70802c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10685bdd-2dc5-45b8-bff5-4c517517b063",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3564cb89-316c-48ca-bf8e-f0c890519d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a982904b-6eb1-45a9-85af-817b4e7571bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b79fc0b-7cb4-4f78-a139-d663dd944063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "377efdc1-e061-4f70-8463-71336c8be2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deba047b-2348-4dc2-9a07-30d3e80bd49f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a1f633-ef0c-4058-9bd3-ef93aed06a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304180b7-6da9-4266-b009-7b925b75ebac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733c1768-03bd-4f0c-97fc-2d24e9af91f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b41bafe8-9ba9-4bd2-a901-5a2aea2e17a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d677e0cd-c1ea-42f6-8cc4-666ec9668730",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b6d8bb-9107-49da-b8ba-c9e7e1226d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a367f073-2052-4e38-9a15-065197a8f681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d888cd-ff94-4862-974a-1b5224c47187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee51db84-4713-4956-bbbb-5dfd8d06a473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892e719b-1b39-44bd-965d-b4a600a9d20c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef3d9ed-8353-47fa-8763-e0d5d303c74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d245ec-e9c3-4135-be89-b9a4cb097ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b98f111-ab01-49cd-8988-af64ae5da8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f0b75e-a65f-477b-b857-48d94457dc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aafd6df-a8cf-41c5-8b0b-968acf0ca92f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837246a1-4bbb-4b5c-ae7e-ac7b8fc59353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a471a75-3e26-4dc3-a5ff-c58680fc9fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e2450e-4bba-4dfc-b901-5b205fffc0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89a77e11-eea4-4479-b438-d3f5b61cda49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41182522-47df-4a93-b530-747fcedf5cd8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935afc0f-45df-4fe6-bf88-7ad988bd8383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1bf57f-93ed-42fb-8c28-1bccb96f7ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63c630d-54e0-408c-aec7-9a1132f76c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d27b181-75a8-480f-817c-375688d2abe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e047b5e1-c2a9-4bb4-a061-ad3a3572bbfe",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964da869-df2b-4c61-9faf-95e68ff8e685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d30a00-c4f1-4645-a866-3f767bc025aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1278a84-fbf9-4699-b6b5-aa9b93bfdcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23e49c6b-bd32-4021-bafc-d1150004ae8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcc6e31-ad4b-4ae4-a49f-87cd3f9d94f1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfd5eb9-9bab-444f-94eb-839f0164015f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfe1c94-0d44-4604-9241-617719801832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6309fde4-6be0-4546-a252-fb0c9231c7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d779b485-8cdd-448c-9928-6d2d900ce2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59521c9c-a851-47ac-aa28-25b09a446a5c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6deadc1-c384-4c40-98ec-029f0699a8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fccb63ad-b6d1-4966-8605-b76f2c90a129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98896fbf-ed1b-4340-8cad-217ba32fc961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0314d853-8804-4a01-8fbf-7c163c7d82c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bbfd3b-a848-41d6-89a5-437d0ea0cd18",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990ea924-c1ae-4a5b-ac16-d151e9c83a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b820a23-042a-44d3-a98d-9662e3ab6eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79438245-e710-45fb-a9fe-cd75400e50e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2251a069-639a-48e7-b2f3-972ac665f62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5376298a-bb26-49db-bd0d-87b4491573d0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe5e4d8-3d87-44e4-b775-4ead6e24ff04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c2cdea-e3fd-40d7-953d-b0d4b7aa7c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722f26f4-5d29-40aa-abdd-8bfbf6aec43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "035261c5-a721-4fa2-9caa-91ef57cff53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a7b8b9-aca5-43fe-a35c-e561d1c3f8fa",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3aa6bf-07eb-490f-9254-21f4e30fd3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e43438-5e8c-4fdc-bccb-6ca142de6c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbad8c1-441e-4919-936e-624a7917940d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb7bbc5-f559-47f0-b565-bb0da017f483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729ebf76-4249-4563-b3ae-6cc477c0e59b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d41a6cb-68fb-486f-94c8-5c228af28943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d48ea3e-aadd-46a3-980b-af66e2a6d1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149584ae-0d67-4a0e-829b-d72a74dbfe89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cb0e25-3b6e-4e1e-977e-4af10ead6fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb8aef4-a2b7-4f96-902e-78469114f112",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926a42c8-52aa-4dd9-85d9-42f80864cf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7123cdff-127b-44a9-a1b0-852014241925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3808c280-872d-41b4-ac43-2d3fa52d44b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc25d3d-f74c-4285-b63a-e6c521c84716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2aebab6-caec-4c50-bdae-a2b527fa2867",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bf435e-9e2d-4a88-aef1-02f98986b353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465d4363-d2e3-4b88-8938-e5865b18cd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603fb066-beb3-44a0-b65e-884d6429bbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe9996d-7f70-4ef0-bf46-8f583928db9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d550a41e-f32c-41ef-8223-c3c295666818",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36076c7-384b-4ba8-812a-769ef5b45673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7507b507-2482-48b5-aff6-232f458a7460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3544a577-4b4c-478a-836e-a25f2fec0969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a07b895d-ac29-465d-ade2-03dbc6269b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcea824b-4525-4769-8261-28d757e58662",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1ba6f4-1167-426f-9926-724b48b812c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac724f71-75b4-403c-bf5b-0d59df81c5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645e0c51-dd88-4666-99bc-cba6dd4e8b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1e3d09-78f2-4f27-957f-e5b293757343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bf2644-88d1-4d45-a625-18a886febe78",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0333f787-4e1f-4324-8cf9-97a97505030b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d569fd2-35d6-4735-844e-d5295c42d754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcdcdc3-68ea-4d21-bdea-d619e02a4253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba402ffe-f16a-477f-b588-0d25c6974a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d106c9-dfde-4a51-b2c6-39e3f87f30b2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76feff4f-fec3-49ec-9158-b883b0ea0cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca183a6-57c8-42c4-9b6b-e7074100f1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5108bdc-ab54-4b92-b6c0-360f09932457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41c96c58-e4eb-4948-b362-c5aed620a934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21b8fcb-e4a6-4f2c-8acb-fb52adead14b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0327286-5964-4a7b-b41f-2dacc8b1d778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29358889-fb01-41a5-9319-38567b81a7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87372ef8-6b83-47e9-a8fd-9d8b54de3a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7aad2f4d-b2dc-48d6-ac33-734b4a847956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f955d80-6e66-436e-9d94-2ad96f331f20",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5ab765-965b-4051-b67e-f6f4f0dc441f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5556dbe1-7b1d-4275-8d39-0ef97832ded2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4660f9e-ed95-42e5-be63-d716cdafaede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c559bb25-d94a-4828-a4fa-197adb038c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaae2d2-062f-4ede-8edd-3b4f9324a171",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580adf06-6f5e-4a68-8151-fd7e8abfc3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25da4168-0f13-4d53-a85c-14fef1a11882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c4658b-88e4-4180-8c41-733b182e3aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5db54de2-7252-4107-994b-729bd8bf9195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422bcfe2-b2aa-4f75-a7fe-bd1066e46cb2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe52329-3f4a-4354-bf02-64e8293437c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da6ace5-dc22-4e8d-859a-529a5f02d4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce4cb6d-0eba-4d37-8931-e22c675f9d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef08a49-ef32-456a-8e66-0e53d6252c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c043280-291e-4031-a7aa-6b172fef0d1d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9698de68-79cf-49fd-8092-5a529874504e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c06e115-11b0-472c-8b57-7a02a95c080b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f348aa5-57cf-478e-9043-a1b93d654799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "30e34cae-9c7b-4d37-a556-46325ed4ba10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98374478-c88d-4d8c-8601-b78abc09ec74",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fafa59-7d55-4751-ae59-1544c8002503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17ad416-2c25-432a-99af-7b6c654f8a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45ad6a0-c1ad-4238-8ed2-d19e77c7fbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d59ae2-24ce-486a-981c-ac61a7af2001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5b6ed4-78d7-4278-95e8-3fe106aea754",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2fe30e-9732-4ff7-9f32-6bd3b055a23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff6c957-077f-4576-b0fa-18e49f572756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdc7e01-8679-480c-a16e-fca9138b2431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee66673-5567-43f2-9006-902da8fce8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e3870c-e2ee-4ba6-8b01-2255eb0f9f88",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bf078c-c70c-4c9f-a245-be5a9b3fe36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0b37d6-e4cc-42bc-bd6c-9d005726207a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071806d8-dd68-4c93-aef5-631d250bc0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0c144656-d484-45e7-b24c-56fd8790ec25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e7ceee-37c2-4e21-af7e-cd5623c3197c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9959c0-94f1-44d5-aa66-475df906d0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a738f4-7cfa-487f-85d7-ffcc10fef356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c370fdc-3f38-4edf-9f29-d0e7ae4731cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a52f4476-1a7f-4e4b-b719-ba09f958e919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01a8f4b-64d4-4c2a-9fdc-4e0003eab7f5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423c6600-cb84-4b3c-a88a-8130ce5451b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794423da-4018-4af9-9e52-7207f1fe528b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab34ab7f-99f1-40c8-9e09-326a8eea0585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e00a08c0-79a7-4258-a573-c8ca92105a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb2b995-d79b-4cb2-99e7-bf388c5803e3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4394282-b344-4904-bf73-296003966cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3150734e-77d8-44d4-a0d3-f1176e49518c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147c225a-a47e-41a0-af78-0bbbeaecaa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35b67d61-6862-4f85-81b3-4fc4512be197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8e0510-7cf4-4bea-a10a-8359d8f2d109",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba0344d-680a-47a2-b907-f1e976b47c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ceae99-93a3-445a-9256-34255ddd7e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b749fc3-8dcb-458e-b387-006cde101e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee88d78-8e3e-4ba1-9c07-393f329584a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de40494-e715-449a-9a09-d7db6aba267b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763c8b11-c9aa-4aa0-9a6b-b37a30065fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec38bda-1d37-4b4b-88ea-518de26e2779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccedc67-791b-471e-9f51-83c6f8424d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11a89387-592c-4f73-8982-b87e4abb60b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d021aa59-624a-47e9-b3bd-904e519b16ef",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba720858-af5b-4847-a582-1583abe75f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82859a8-55f0-4a60-a380-34348b92d205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786b70a7-13f8-4e44-a878-18b01446c54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1037d008-0a26-48ed-b467-4b1266f34ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69cdc85-7f4a-4056-8bd8-4b29019ec7a8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b9aa9f-69d4-4025-a398-78408407bbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293ecd30-85dd-4f87-93ab-7854876bc7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c4ff2d-ebf1-4162-af2f-19d0f07be000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04437abf-baad-4f55-94df-6a98d9639bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2a93ef-550b-4c96-ae70-377f70b9bf8b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6467e282-cdfc-4f48-81ef-9f531100909e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa48e5c7-3c83-4a19-9875-b038cc344a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e63a95-0afa-4a36-99f8-55748da4366d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6966d7b0-ad6e-4bbc-bbf7-21cef98b7970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be78b4d-8b2f-4562-ae08-643b83e7237f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de30d79-df84-4467-9a2a-4f9e639fe97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b5725f-13ad-44ef-a26d-4a51463256bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db00ce16-ecb1-4b16-873f-5fc479329dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab76c90a-e026-41ec-a94f-1bf6f0ec9b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fae4200-5a33-4842-80ce-ba28edae4132",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f95265-9921-4a70-9ba3-cc653ad853e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618391d2-59d8-42c7-bd93-8e635a24c9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c64a10-1758-4778-8016-84a4fa0e9ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c222ba6-9751-4467-9038-8c2842f9811e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a825ab-55b9-4503-bc36-8c62e8cc2fd5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7378a4b-4b84-4c17-a8b1-3a31d1099933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73498291-5002-4f47-b917-1a57632c9c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c956b1-b405-4a66-99ff-91ea9ad8abf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2423f9-19f4-4509-bad6-553b63184bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaec844-d211-4233-9f3e-00b29c29e500",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609a1b3d-7147-4e4a-9697-bd13945ce2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57b4f69-85ad-4825-b338-af25fdc89308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e949a2-f516-4c2a-ab72-67af3a52c8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75278fa5-a674-4c65-b375-f10bb720d11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd3a4a2-7f29-46df-b38d-a65b98a592f2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a6da2b-ff4f-429d-8e81-161b30dff4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ba1880-408a-48c2-b3ba-cba4d5a1c38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8def640-c6c0-4c76-b6f7-d5c1021260b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97577847-f154-40a2-aaf3-edc9ec68059a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e96ac3-e765-4e37-9dbd-e03ddafa32e5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58e6099-a44b-4bc6-b4b5-c9799fb924a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa31cf82-eeed-4d62-8c44-89a9d4705f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61e9f31-8050-47d4-9e76-86f408a33150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b6d1c9-c185-4592-83f7-f49b85270b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e7ce8a-efdc-4e09-8881-8fc3956ac054",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d8c31d-db09-4532-81db-c85672795dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2732c6bb-ec28-4494-a58b-9b80a99cae70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2cde2a-9e20-4e9b-ac0a-05f8bc05afb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "465b3d32-5541-4628-835b-b788e0a27f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18b778f-f105-45d8-a458-d1075793642a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d0960b-c03e-4516-bac0-517c4d9ac31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52f0689-ecc9-4f3f-bbd5-3eae0af4e231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b79ba7-fab3-40ae-8938-510e29ff8a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "22bfe69e-4474-47cf-8f7b-f753115849d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8f0a55-d7aa-45f2-9c41-41ae5ce59de3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b628ac-89c1-44bc-8482-260a52af06fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb448466-8fb7-4798-a1cc-dbdb13b77bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a344a8-e763-4ad0-ba6a-324e8fb24f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2240fc5-ad0f-488f-8404-c88d33caefc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f94a99-7c88-453f-aeff-ef771126178a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f789547c-90b4-4ca3-ae96-4a02bb323e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108ba7b9-3377-4fd8-a03e-de69355652e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad5ade4-9c71-46ae-adda-dc73ecf73d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "14f610f7-3895-428a-af51-24488564e15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d42a64-9250-4b08-ad88-8548d9d66e37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbebf84d-da65-417a-a96d-eaad8ae3832c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac6094f-0ac6-40e0-b33e-633dc7d36329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271ec3cc-cf89-45b5-b674-04ba0e0d27e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa75e97a-f1f6-4b3d-b451-dd8f35d07c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7813d611-6659-4690-a7cc-89deec49094f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73637438-0449-48a4-b15c-85c450286080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ccff35-a081-4ac1-bbc8-c20cc18a6c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad4fc37-5a92-4ad9-a265-287fedd4a8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b3ad01-8331-41cd-946f-81e6e3bcc669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffaa2897-ab21-408d-8b1b-84521a25aee4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df737f10-7ab2-4135-b125-63854c719e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f90ddc4-b37f-45f3-9b43-ecaaf67af33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad06b04b-9dae-4edd-92a0-3e938f6faa0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d8de76-a8e4-4f88-a8ea-ef58d6aa86bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de80274-f3b5-4b99-bfc2-455bc23f5ea0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f194de9-e6c0-468f-ba2f-8a742e4ca4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d16b858-6e0c-470d-9002-10b659f15554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d844dbc7-ec95-4778-894e-c4ecef848231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90b4019f-e153-40a3-9316-6482806631aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be81405b-74f8-4525-9d9c-4b0d85866d8e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2576fd0-c278-4415-bf98-dcd243442535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff4abf5-f53c-4f7c-b7cd-765d5cc20733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca0f674-5558-417d-972b-89f0fe5384fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39508697-82be-4ae9-a30c-5022dd85893e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee75d9b-a1d3-4b05-9f75-5a87df0f7f03",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e02dbb7-2576-47c5-81ad-943f0ed93a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe230c0-316b-4d24-b5b6-f205a8e0beb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e095623-8ded-4e41-bd88-2ebb30d98a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9b449b-5b21-408e-a426-cd20c33836ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0284cc01-93f6-4bab-90ea-48e2f4ef76ed",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bb76d3-4b06-4b53-88c3-8c9e7f2db477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73a07dc-bda8-4a78-a404-2ca95a72ac1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99fcfee-e4cd-4ead-9f80-fcdbb6cf94cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "545a0669-2b9b-4a71-94c6-7fddba627312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe0e221-a982-4019-a668-84f685817530",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c189d224-534e-4219-a7bd-fb107b69a602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bceb055-2295-43f3-804f-f880bd393042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7b6b10-b2c7-4200-a507-f943bd148829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a971b4b-739d-442c-8322-6cda4d4c2085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a88d84c-89d8-467b-886c-d363f527bf7a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b22086-8223-4157-ac9a-37877b8fd18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affbe69c-6c59-43e2-b9c5-593f20427617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c45eae-a93c-4159-b66f-58a06706d267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3540f45c-7d9e-4e2b-9560-1e414a4698ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decd6aa6-42cf-4291-b39e-3304206d8b0f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908e1ef1-4285-4022-8b16-0130a4e87834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d2dab0-6010-47de-9bb6-649111015fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8572235-7a77-4f26-844d-09481406100b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb81da8f-ec21-4aa2-a310-74a062783bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd595430-a53b-4e65-9740-7886ef529d39",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c35a140-4646-4b8d-abea-72d6fa672bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fc77ac-7487-42e6-8e12-4fba7a62234f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d647ec4-2267-4e57-b7bd-723edcbdf253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e05741a0-945c-48a4-8d41-b05786024e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4c4dd5-a567-4b1a-a1f7-0f2643d4ab3c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b31a7b-6285-43d9-8c83-d10b1da3a2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b63e91b-5a1c-4307-a272-f8ff1f97847e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a8cb66-39fd-439b-b978-f4d476d6744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1090f2dd-451b-4512-9c20-a5371e5b99fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4959ab5-be66-487e-9f05-035b334d99d0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e59cc58-14fe-4559-83d8-2fd21fcab563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fac464-841e-4fb7-98c2-9a1a498b7ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c40221c-d0ad-457f-83bc-f604033cc8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51dfd2c3-d60c-493d-8626-4f6106dcbc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aa6e1d-dd90-4cda-8076-bef2a42b9d5a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650a27da-b015-4189-864d-01d8c2323c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25509731-8a69-44c4-b083-cdadf8baa075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792b154d-6d6a-44c7-9a13-fc946c3af489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9be6c0aa-03e1-4ba3-b9b8-9708c968180d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97eb77b-ce0d-4312-a8ff-fae90e981f49",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1aa8b85-101b-4748-b434-1ae3e372c063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae67644b-d324-440a-9a6e-401561ad2982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61306b87-d2bc-4bc3-9931-c67b60de01bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4031e614-07a5-4fc7-bbf8-59c92a7e41d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49510da-4986-4f3a-bea8-5b97d679fe2b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15586dc-c9f7-47f9-bf23-858292202035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cda21c-cf69-4e66-84c3-234af8d4b610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3356de2e-afad-4859-8db8-c21cc7886682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff51d82-3c5f-4a82-90bd-4d257c52cc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfb460f-800e-4b7d-a221-a773db8acddc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55811e8e-d094-47b4-9b1f-6b84ed62a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10bc5c3-530b-442b-8dd7-66806e8300c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5b737e-8eb5-4437-9f16-105160c7750b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb6f563-6e49-41ac-9549-a3fcc19e53d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e83235-619a-490f-babb-1e3be70d3ac6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af842f3a-b769-4eba-9be3-bad137737778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c033f5c-b8d0-4bf1-b5b9-354e0951826d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd6b36c-819a-4f33-b073-30a36acafa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5dc809-46f7-4187-8409-40436baa601f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1957ae3-9e51-4ae0-b476-f741d9f5387c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9fcd12-8626-4f6b-b974-1a5b53d96cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92edbc3f-0a3f-47b2-877d-3e5aa09af78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a1200c-522c-42f0-ae8a-8a5b4bfaf39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9be56232-5dee-4830-8d22-60426335259b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8fed63-e722-42d5-9a3e-3df525496f01",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e68def-395d-46cd-80a9-f465ef43ec4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03145e83-a6a4-4fdc-a83e-0936cf2ef221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91377f47-665b-48f0-9e02-67ff259da1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "807a6e26-a4b8-41f2-8681-8dc4211fa13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806d08a7-f31e-4bf8-9893-dd2117752301",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464c54ab-7ad0-42c0-98ab-14d8e7e9c738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d39a09-ce07-4a7a-98eb-38393aecc77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a98fd18-2703-4d85-b761-3be4114b162d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "62b354a1-2ce5-4229-876d-1d96f26ca6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dc268a-b548-45f6-a45b-9e17877424ca",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd4931a-f27f-401d-b581-e3e3e3cdd5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158deff2-06f1-42f0-a8c3-0c52a9c2ee29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4af53d6-f17d-4299-95f9-7bf231de940f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f59eee-86c3-46de-bae9-0d2d600d3ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ec5581-2aa7-4b41-b9d2-04b6392c55ee",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b07f67-6750-48b3-a98a-080b625bf40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7703e832-f1bb-4c4c-88cc-9251b540ebdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e2920f-a907-4b7e-8ee7-bf8a92e8bff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1329e47-dfbe-4b03-8844-780bbbd70279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5189a6d9-3cf7-4e2a-8542-7cee8e2f7f0b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3443d6f-9222-4e0b-9c2d-24fca5192a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031e7117-0061-42d5-931e-c2e93ad28272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfa62de-73ee-454a-a0d7-123974be3c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90abf976-679b-47f3-8415-98d5ad3d8faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac21a3c6-4ca4-41df-8c08-b751867b7bba",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabe55cc-e156-4f5a-ad51-b018ac635c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50431016-1a80-4cb3-8ca5-5ab521d2b9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b19694-2edd-4a80-abee-c428c1a24b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37f99a8e-1753-4b25-9ce5-b48bed30778a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34770894-b287-4ee0-ae92-21fafbbe6337",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8593b94-d41a-4c17-abe6-4fc2a1160901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26800d87-ed92-4027-8171-e01fbc9d6fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e49c15f-5f39-45af-a9fd-d4d8920c0359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "307779c8-26b5-4e86-8391-edc0318683dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd9b263-ed13-41f4-86c3-32a2091effea",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66db0490-3128-4a3c-8c7c-7afc0bd928c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ce9a59-599e-430e-8a32-6ef423fa3658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00e40b7-bf5f-4b9a-966a-809a39c2e4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "54d5b10f-83de-45c2-ad56-4bfa59511b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1630d1-e578-4ae8-823c-09f4c08233f8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cb2af3-3289-4599-89d3-e910d9b7b3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2721f24-595c-4eb4-a7eb-c295e437a4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8cd6f7-cc8f-4818-a081-b21f200c2563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d60082-9347-4e5a-ac53-9735e869d1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6654a8-bd9f-4d37-ab34-6e238367271f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa4fe65-d9ff-4a83-8135-1ae0216cbdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d1702e-d260-4c54-8b18-5b2d63f56b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fddbfd-e583-4f13-b00b-652afe9f62be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "42c04698-7cd2-42ff-9d32-2051f8d6db3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ebac57-3069-48bd-a080-d63e7e753960",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18fae45-0ef3-41d6-b7eb-eca99e900b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd58dc28-b9db-4e85-b449-b19d6f77a41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84115ce5-1be3-42c3-82e6-65a9debe60d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1de260-0653-45a1-97a9-f46b12e9cd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d371bf4-7dcf-46dd-8158-ce22bfb69a45",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acb78f9-b635-4660-b848-44b926a8bb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337c9335-7302-49d0-93cf-e0d7dba010a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032e79f6-2774-47b6-ade9-586708ca942a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7527ea-5d5e-47e8-9c4e-e4b9f9981f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6fc104-bf4d-40b7-9d29-24a8c5834bb8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bfc0e8-6cc1-4ec8-bb2b-abb4f8c7d21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4aa85334-8bdf-4d31-bc9c-7f11c352d943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c693f916-93d3-4cd0-a22f-a6e6d7d18910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2764ec28-757f-45f6-925e-381919eb7373"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b7782895-fd0b-41ee-8a9e-a060bacbfdc6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29c05ec6-a10c-4b2a-9dbe-489ef586c9d2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c75466-dd64-4adc-8f09-967c5ab7b3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3149106-ac6a-4895-ba99-4875275b3fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d587954-7855-42d8-84bc-8024329c8813",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "cb9175fa-c1fa-418c-96e7-d544b0fa7bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fd9025-f114-440e-b539-f80925caa3ee",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517434d9-a678-4d5c-93bf-db4d6552e40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e813e8a7-257e-4b16-9193-0b0ec0b4cf5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551105f5-a638-4284-a319-a1fe20810a77",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "cff5b6f4-b0f1-4f2c-849a-80af99ce2be1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c282159-aebc-4430-8461-e794fec96089",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aa316ab-1861-49c9-b26a-d3e713279ba6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "692ad85c-6cda-4d7a-8343-d8d51fd1ad46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5aef29ac-8e1d-4e57-8323-e37d20e43364"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5a70807-312c-4869-928e-8bf1fa0cba15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5abc2f1b-512b-4570-8a93-4eaf38f143cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e79c9a44-17fb-4955-a8f7-f6db21b4c13f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5f8b648-0143-4d37-844a-57bfe6d17255"
                }
              }
            ]
          },
          {
            "id": "0faf3b34-ebf5-489e-8c55-734abcfe99fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "50633d29-3f81-47e2-8ce3-a132d73457a7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f01c65f-ef00-40cb-b56d-22ccf17e67fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72fc746f-20b4-4c11-95df-5d87579c46f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "695fdb6c-ed4d-40b9-8b0b-ac8e33591fc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85fed16b-f6a8-4bf2-9bc9-8d42e9ad7595"
                    }
                  }
                ]
              },
              {
                "id": "ec79e054-e854-4817-979b-e24a84f64b71",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca1f26e3-53c5-489b-bcf4-98b3676f2aa2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ecdc3a1e-f7cf-4715-9701-59b9df3566b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ceacd998-0543-4643-b1d3-58d99f22d799",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd74c0d0-1fa0-47e8-aa0b-8e90cf488798"
                    }
                  }
                ]
              },
              {
                "id": "8b186eb9-3fb8-4d0e-aaae-a6f3f02a86de",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdf67c07-f691-4809-adaa-03f1cc9b989e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "655777a8-51d7-4cc5-a5fb-a61b12e21508"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbc9460a-6907-41b9-b5a7-99917e6bec4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ee99f530-5b2e-43a4-8c00-6a3dd9760827"
                    }
                  }
                ]
              },
              {
                "id": "1ab231a6-7619-4f9c-9677-5dc6dd3a0e0c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89aa6273-5830-45ba-abde-3b611959fdba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7123f73-6798-4b44-a2f0-bb8ff01dfcd0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6ce5799-f85a-4b09-b92d-bd8eb08856fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b8d8980a-f248-4674-810e-42721c41559b"
                    }
                  }
                ]
              },
              {
                "id": "9c197462-2993-449e-925a-1d363a1a601f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7db66910-2b71-4fae-b0d8-31cfa356ed3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b93f6720-6f4e-428d-aa04-1c196fe669be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57125055-2973-4c5e-9bbb-041f41e64f88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "92cafad4-d49f-4ccf-a958-aafc322505b9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ece75e14-3da1-4462-b913-944d5d3369cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c27e5993-fdcd-40ed-a5f7-f83c13b4bcbc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ede786af-2db2-4f03-b71e-ae12e82dd410",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ecb0d02-93fc-4d6c-86bc-c80afbe0dc0d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5714a388-aac3-4166-9e43-5d58fc870119",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "389fff76-ae63-4fb3-8827-866bdd245049"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "968817ba-f345-4680-a0e5-575d98ba444f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5304b210-ee63-4250-9190-7a596105ce11"
            }
          }
        ]
      },
      {
        "id": "31fbc3d5-7e1f-4503-a1d5-d61cda999850",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9c1cf09c-d383-4226-b1a3-eb2eee27c572",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58160fa4-6bee-46d8-a178-d0d0bf62892f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ffbc70a-25d3-47ed-ac5a-e862f3f411c0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13260302-0f32-4eaa-9548-56121dfc75f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f82bd41-f87a-4ac3-9f70-c64f5e0b1b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c26b0cc-69b9-434d-87df-a8168c889874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "be539d5e-5cb0-45ea-b3f6-e8fc8205fb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cde05c4-67d7-49fc-b01a-1b50daa3b22b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631e3d2f-791f-435e-8ce6-e9c369e87c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a337694-889f-4632-940e-e65a79c49eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bd8110-101f-4d89-8c71-98ffedf2b44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f42adbf-76a0-44b2-acf8-13b34533eb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa4d8df-8e17-4fd3-8e55-fa63cb2ef7e3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514933a7-7abb-4c84-9ab5-4d33beaa4007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fb64e5-1bc0-4262-8067-bc1fa9b22fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7430236f-b202-4bf2-8aef-edc934987eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e99834c5-29fa-4402-9846-928e8e41bd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684b7cd1-9e90-4139-80d0-a06f1c4146dd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85e2084-ad81-4f8e-9b7a-fb9c2bfc79df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1387e9e-9802-46cb-925d-d3c3fb238a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105f5d7f-f24e-497b-b5a8-06719ce45894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8947a8f-ad39-4fb1-8448-5b02670ddf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2feb92f-f0c5-45b0-919f-eeb25b5e73ff",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c514302c-e8c6-4feb-a633-be8b8da4a2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fa5134-763f-425b-b5ce-4a497946aebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bb988c-57ee-4e45-af2e-adf0083adb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9286ac0a-6f1c-4fc0-a1ec-8314397f129a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7273f73f-b332-4a33-8628-584fb9ae20e2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a485d424-b484-4583-ab86-ba612871c26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db89de9-fbad-4ccf-9d3b-e63194100fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5edc4f-75d1-47ad-84c3-99ee817e3d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9a8aee-99e3-4114-a217-e02e6391a68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f87ce5d-9fe6-4133-a265-6f26bc432360",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadb3e42-3f95-4f59-90ce-20b3f3318acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae2cee7-651a-4f44-bbfd-e46d3f5186a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846ec369-67fc-4a10-b087-8deb233c8770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "70f6ae54-d593-4bdf-a8f0-9dad447363aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aada32f-30ca-4291-9b41-a5c4a14f9f6d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4682138-5507-4d47-9a58-6cacacfdad55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2769ee60-261e-44f5-91b9-ef36460022d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b15b2a-31b1-4728-b902-db4989e7ef7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f343d2-9d80-4782-a844-7150b36e6544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e68a2e-4cfc-4d82-9cd2-d0e11e895470",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fb1700-fd7a-4753-a3cd-66f471e5e353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922706b1-b868-4402-9d81-52a57e22b3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0e0435-2e35-437e-9aa7-5c6cab7522ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4290dbf0-d5ab-4093-b75d-5d914fcadf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e3282d-051e-4d67-9aaa-e8b3be4c17db",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23471c83-995e-4e83-8666-f24cdfe8fc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fd5923-f7c3-43f4-b75a-be6a47b1ab86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e61112a-57dc-4dd2-bbb1-2354057dfa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68b032d-053e-4a44-9686-eb44c2023b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19700345-a4d7-4f84-b089-a27411fc8fda",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b94cb0-68a4-4930-a431-3e75f65b61da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676a48d0-334a-4efe-be99-d9387fecf8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b11c5e-a9b3-4bbe-beb3-6595f8d7e1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "83775523-8c59-4b21-822b-6d200469ab1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb9ca54-455d-478b-9acf-4497b93591a9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5016cfea-3747-40e9-bd9b-c6d4f456ba2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5083358c-48c1-4a00-bfc7-8482f092fc9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc702644-9d70-4f74-b1bb-5e5d8215ed94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab240a16-bedc-46bb-aa97-150507ab977a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87adcb6-7cf9-4a44-a47a-f51771eecfbb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e243a30-c782-4800-85ee-e63fe2bd023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802ee652-be83-46a2-82bc-3b8a57fb361b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f65bd8-05bf-4939-8c55-ebb52e3c6b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77050402-f006-4a38-b198-918e13f80489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca18d749-e43a-4e5b-b4ad-0efb449536ec",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6227be-0898-44cf-8a5b-634250740392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772a52dd-0d7f-405c-8b93-3191e61e8ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d584ea2-6dfc-493d-8fa3-d44773bc9d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "52712f22-da68-4da0-9e20-4eeb29ac6005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57540c82-a938-47c9-812c-ba93c21cd42f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe4ed1e-407e-4ee0-a629-e47adce94f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d81e0b-1d0c-45e8-a86c-43bf3a21a3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faec3e8-3993-43b4-a216-42385927c83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e83116-acd5-4e06-aae0-f582665fccdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c4c415-2ffe-4c1a-ad64-b4d1c8a478bb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6594f5ab-79a3-4708-b4ad-72c5600ef6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cbdf51-3579-442a-abcc-9e60adf91df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce0f819-8d3e-457e-8bba-826e5f7fa545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "932fa01b-8340-4a57-a1f5-2a724bf81fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166a3c84-95cb-424a-8a55-94e49c87cd09",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a093-6e11-46e6-ac1d-3c0ce867f75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14214724-180b-426a-bbe9-e0f19c2632fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6bb9c4-8511-47fc-966a-e59d97f95b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "62e2be6c-e207-42ec-808a-19d511a84da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5084344e-716e-4e00-8375-0a1f15a6aa45",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a192e9f8-29f0-459f-9406-9fd1aa479131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a26b2b-6c2e-40b6-857c-73e2bed0e711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937769e0-e6d7-4a49-a46a-47426d19589b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af73737f-e3ea-4263-9537-8928e92d3cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93412709-200d-497e-92a4-66d3eb23a696",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6b82fb-a762-4c27-a00e-007b280d7cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ea8d1b-92be-4811-bc09-ed0ff94cff4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af4afe8-b78b-4d6b-9a43-bb38fa949dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff57512-feeb-44ab-838b-1cf80955121c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b59ac2a-7131-40de-a00c-c5436ec13cd1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7cf9dc-9461-49f8-9e96-30037deae8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31201560-9218-4846-b458-45a2336f4024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a81ca74-4755-4a06-8c0a-ecb2db200cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9e8d69-71f5-487c-8254-e5a1a39bb80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235158b1-1859-4cf6-8cbd-77bc6e377afa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fcb9d7-5e80-49d4-a35f-ddea1f44e2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936bbea1-3dad-40bd-bd40-9810bb81960f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5a02d4-26e6-44f7-bed6-2138ca2cbbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "999d50a4-4b9d-470c-92b7-2300c6726f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4241219e-8025-4361-9317-f2d14b95e33a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06314a1-08e1-4938-9d73-49119432697f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2545928-3997-4102-b4bf-26ce169c4056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2826e64c-ba94-493b-a95f-59973109ec03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8d730c-41dc-4992-aa79-070b0f64e9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ca11f8-aa2f-445c-9eaf-1322a91166fc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d873290-de5c-4a8e-a3d9-13fd95853000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d0a57d-bfc6-4b53-bed1-17a2156fde11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4372b19-5dd2-4efd-8095-0ab3c65472aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb32e3e3-e863-40c8-9d30-0aa3cd772b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c8722e-1287-49fe-b09f-841b8e300faf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990af672-8b68-4ef9-bfe5-26a0710adcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcab09b2-82ef-4565-94db-8a1d54284262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583195ed-b118-4407-ac3a-af6af1a683dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca071e0-7dc9-4b1f-9913-89bf60df03cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45a0644-a563-4ec8-8eb2-a16176ae888d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344b15e4-3c19-4c6b-8ade-14fc9968d6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a77ddf9-bd80-4df7-98ce-4350cd7c2106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8104d6ce-b37a-4401-a914-0659fa849458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b50d5d31-c2c2-4cfb-aac9-47481b9d3c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f56ff24-bdcb-4b80-82c7-5327566f4e37",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dbedeb-75d9-43f7-84c9-bb2a4c9b553d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ae9e13-bd9c-43db-9a81-1fbc037eeae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037a9afd-ea41-4200-9c8f-f99257a1ed8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efc00a67-7608-41c1-b8be-6221aac1ceb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d49c437-ac1c-4dc6-be2d-f4810b246c37",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a208068-5727-4d4d-a0af-828cdf008c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b049f9-d191-4585-9de2-8a166e7ea592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7897a48-3650-430d-9906-0a464a9a54c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc076901-0d52-4e34-bc06-8a7648c2d651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b3c4db-31db-4bb2-8498-5e512d0d2fbb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c56807-f9ab-4251-afa9-3de3e3ddfbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40681aa1-b352-40e8-b0ea-62edc63050e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96e273c-df19-4516-bc8f-ad57a90699ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c10f0d3-81e9-4630-a186-eb87c4dd0d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910dbd59-e947-4d51-8d43-4b710928e6e2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59e4782-4cc0-4124-a068-037671c70968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f25d71-60db-4bcf-b135-51d0eee4c94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84831a10-a010-473c-9ad4-5b2bb55ff293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00f029f5-fac4-4bd3-bc94-862729f9b045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533299b8-bede-4810-b209-32011bc69577",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee5032d-b029-4854-a0cd-352ff433f09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781cc3b0-74af-4b6a-9b83-ebfdf8b14624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d48b02-2f03-4d27-b3cc-ae488ede62e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce11bce4-f8be-41bf-afd2-cc474814cdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d760f651-06cc-4085-bec9-8b25c1619068",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2b9de0-079f-45f9-a973-db5908bc3945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f97ca1-73ef-449b-8f2e-953f88dc9b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f155c15f-9717-4b81-9548-ab9e2ee284ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1688e1-0776-4c13-b787-31707a5c5ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68da9eb-e676-44e6-bb77-e617a0d2582c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ca8778-913e-4b18-bfba-57e3212ee5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46863c30-8c4a-4c21-a40b-77ee8ca17ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456ffaec-c928-4e0a-b4a7-eb085be5deee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd10eee8-6307-496c-a7f5-5762597a7e4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af727d69-04af-4a1f-8799-9b4a599a2821",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d711cbb5-c461-4727-9fac-6efb28842f0c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd8a78e-4daa-4071-876e-9c1604c6d0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbca6ac-31f6-470d-9834-92c38b7ef7ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5978701-67a0-494c-bb45-82f701227d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8498bac8-d578-4083-8211-71787e22d7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4748ec24-13a3-4021-bf25-4cc0082f9384",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d69d56c-32b5-418c-aa83-bef5f432a463",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ef3204b0-da08-4279-a82e-9cecd02a1739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434990e0-1587-4444-8104-c78cfda00a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54eddcf0-9e82-4336-9f7e-c5324a9c8f13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f43af28-a102-406e-b13e-928494ca9fca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "862a242a-f24c-4609-a100-dec7e367a2c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a300558-3789-4ff2-adac-a4036d8091fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "732bade6-97f7-455a-81c2-0e693eff9fc3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21901c15-09dd-42b4-9114-f2bc88a383f4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a84ea40d-b14a-44fc-9ec7-ad8a0d9dd488"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b61531d2-e1cb-4101-a234-3cb84097acbc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a5fe77d-487f-4079-9b67-295d1596c34a"
            }
          }
        ]
      },
      {
        "id": "369756b5-e396-4699-8deb-0f6ba8c88dc8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3cf287fd-a15e-44df-8b94-96ae54d2ede5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a717bdb3-34db-4e51-af49-e1e64e6dfd33",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "386724cb-45a0-45f3-9f92-1d7f8da2ee8c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9355c336-558d-432b-9330-9020692bb822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465febf0-9fb5-49cc-a6cb-9fcf16c2c33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c34d9c-a0ee-4e15-80e5-0a73066be675",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ff48e9-2689-416c-a0b2-f08c8ee8375a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8205e2a4-1e4d-42d2-b542-f259fbdd7492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a54464-8851-4b01-a24d-ad79ea412933",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62972bbe-b85b-4aca-b76c-74d682c482ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7b7da4-53e1-401f-9757-f9e6f0a9c871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e9f89d-971e-4afa-a923-27ec19a98edb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c28920-965c-497a-8efb-0545ebadf5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6027c77-cd96-4925-966a-0ba9165fe20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf2c69f-683c-4016-a3bf-aa97c98229f5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45f8fa4-8786-4fd3-b3a6-ac1ba409607d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4481c472-89dd-49ff-b5ca-605bc6da0bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba45a0c-bde5-4a8f-9a3d-eabf2a3fa8d1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2945ed4-7721-4e90-b700-183505079010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651ae450-f5b0-4af4-9237-c7afaf3b04df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4716483f-ad8c-429b-bcde-c1c5c7e5a2f3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a43fd08-39da-4fa2-bd6e-0bc0dfe0829b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4936eb5b-b9bb-44a2-ab64-91bac3abc4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418b49a0-62e2-4755-afd4-d4ad2a09918f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec80fcf-a34d-4faf-870a-a0d16c589609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b798dcea-751c-4283-8600-9bc1e71d833a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f87e3ab-ed84-4f74-b1b2-f74b4a1027ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c67a12-2f80-4b8d-9378-3aa775851b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4329c01-ee6a-42ff-8502-def9df850964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebc9e6a-21d5-4410-af4d-d11f11f45264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f0ecd7-50e3-44b8-85a8-f6e264ae7487",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411899fd-e637-49a3-9d34-0eecc21fc026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e52b2009-14b8-4367-99d8-59a64797366e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf69910b-9db3-4bf7-81f3-0424c6289e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87664a74-2a6e-41d9-b75b-bb650a7a2007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddc2d25-f841-44c3-b0d6-d74c745c84ed",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b2d16a-44e8-4500-9c0b-4385d465d5c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52402dab-6d5a-4f14-9898-9ee07fe804b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a868e17c-5806-4cc3-bb25-3bb77dec04d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd1016b-6167-4083-a9d4-56cec369d3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57232028-948a-4d01-9384-4b7aabab9c50",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e77728-19b8-410e-b792-dc08538ea897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9dd9ca-62fd-482b-a0ae-f28b62020053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5cda9b-95d9-4851-83ea-151eb89af223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec15bcd-bbac-4c43-a5ab-417a97612b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3239fc02-a214-47c1-8e5c-9f1ba5f907cb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839c8241-00c3-4348-bb41-a45feaa0ae00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb18ae9-d5d9-4f39-9f0d-49fa68bde08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a17963-546c-48c0-b46e-44274b7f5542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1c74ab-d0e4-4869-9cf0-fb7968f37ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07842a4-f4af-4337-95ef-149f33ebc183",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af098de0-fe30-40ad-9425-a0baa1c4bfd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3bcecc-ce59-4d52-a4bf-8e0bd484f029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5074f437-9030-4d3f-9751-02cc76f7e947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf17418-0590-4877-a9ea-aa8700368944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf03df6-a245-4378-8f50-e4bc70993819",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ee7955-31cb-419a-93d2-a72cdb6deb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc970f1-5aa1-4391-a33a-0706708f77a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a527b7-6992-4a3b-a20d-f4a8f4c6b6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbea3e7a-2c0f-42b4-b243-adf1533765b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe34aa4-28c0-4f54-9ff0-08ef59938deb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32991656-f0fc-44c8-857a-977afbb61405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f90591-9ea5-46e5-b9e5-c0ca7bc9da0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9352ec61-cc41-498f-a845-e5c56850b2f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967b0c05-f1c0-4ee5-83a2-db65f89514b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20425344-8a43-4fd0-9f3d-b0116d86caa0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d952cf24-e7c9-4bca-bac7-2e745f65dd36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "017fbacf-a15a-45f2-8cad-3953b83ca53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92638dd-f73f-4439-ba77-a32196d3511a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96869891-1fc7-4a89-a3af-afdd399ded18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34b2a42-01f2-40a1-8784-44b86e4c9560",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0b3c7d-6d3a-4494-acc7-65b986ee89ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29595138-1bdf-44c0-b2a4-41a8239d1bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf11a9e6-ab2f-4457-ab95-fe53acb19d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7ffcf4-e03f-4f4a-91c9-f83c6dc05238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5acb18-a894-4a82-b4ce-3f90247f8316",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b71c23e-0b56-47bd-92cd-de94b9f13fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd12f682-37ae-4a15-8c18-76b0f886c7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf27dfc-35ba-49c9-a6da-3530693a5829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c76d370-14e1-45b3-b35b-5ce7d8fe36f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adaa24f-74c9-4232-b0a0-74eddcebfc92",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8f4bcf-d2dd-456f-8e27-6e6df145f153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad43885-ed92-4c6e-a877-1a15e983c027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148ca383-40ca-46d4-8bbe-7533158f6667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1971ff0f-627a-4efa-946e-7d6db301d385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fadbd9-eff8-4296-89bf-335c064902df",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5919a6b0-10df-40b0-9085-a11641c22f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4887576d-7baa-4eff-b235-96c7ffbe6da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c7fd4f-59de-4631-ad90-98a9e86cab07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ad885a-60ee-42a4-bba2-a8e2d46fdd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57b1088-b091-4438-8e99-49bc5b6a6bcc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096129d7-d898-43a0-9535-7773bbb4d822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60af2ec6-f2e7-415e-8366-f4172d7052e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933a5f93-ae82-4fde-85d6-d71633ae50c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29ecdfc-0422-40b6-86c0-66bdf1628c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8e29b1-854f-49c6-97f6-4f6c9b1eb395",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7146730-1560-4316-8577-a337d94ef53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c301546f-3996-4f80-97cb-cbd7a91a6874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39770a1-c250-49a4-877e-d0dd8a4dce00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6111a88b-d7e0-4295-b85f-8d937a5c79ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c181f68d-8db9-445c-92d9-421f087ae1ca",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a627fd8d-dafe-46bf-995c-d155c9dcdcc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdc5874-0177-4477-8291-2c17cd287da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b74a07-140d-41c6-9667-a116e17437a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3820c6-dcdb-4307-9ae5-6a40b4495158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4939d726-4aef-4e50-82b6-f03fa909a2f1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa80fc4-31d6-49d2-9799-85fc860db52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30beeb3-7d81-46fa-a92f-fa6d3430a08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2890a36b-58fa-4ce9-ae50-ea05350d5655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23727c55-9a28-46fc-a610-f475236f9462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07d5933-b1b7-42c3-bf96-93f310260f95",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3713de36-beb8-4ca5-b49d-12e22f433ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e43cd3-91a2-45fb-8bfc-2db24c104ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f87940-ae77-4a8e-86e3-f34514df8cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792d55cd-e9a7-4152-b021-24bd249a7633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5518d0ac-2351-4181-bb0a-c234c541f7ae",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacb9a80-ca46-4bc0-b608-e74cf1e7f09a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b33ed2-2f27-4071-aa8d-1c2b8ddf605e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87e6efe-f510-4c59-9681-855ec721ee6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962ae18b-c344-4bfe-b37a-2bedf77f6588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671f56a9-e267-46fb-a1ac-9fce73604677",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5249ed69-94e5-480c-8713-e2459fcc1176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37bc63a-ef4a-4e50-ac8c-e5094cce3fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf046222-96eb-43e7-ae5e-3fb449f049dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6db6188-6d4e-4335-bd41-03de58d92a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecd5948-240b-4d07-974c-94b6cbab29e3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ba6bb1-f0c6-41e1-b150-2222af1ecb23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de4464e0-f50e-49ca-affd-01699b261db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b135a25d-c312-48bc-94e8-c880433b0556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a134fee-a09b-454a-b449-92efecc2572d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393fc9aa-26e0-4deb-a296-bb97fdb2658b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e21d202-1975-4d96-bb1e-1538047be55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5f5b8d-c5d1-42c5-bedb-16cebadbe681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f307ba-b2fa-4e5f-adc4-9c34ee6daa19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b0f39f-910f-45d8-a6c7-ac1647ea6b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c59c65c-c566-48ce-bb06-cd1b56d745ab",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b401269-1ad1-4bc7-b77b-15943446ab77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3bf4907-de96-432d-aa7b-5aadeb4d882c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f66091-9161-458a-a106-f673d982214b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d789500-14ac-4d03-a70e-8d34ce0470c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69bb854-30fe-4411-943c-5bcee0458207",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b030927-ba69-4f23-8c8a-0d449e02597f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e029edfa-0caa-4288-a43f-e4b05a519f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933329bb-cb86-4c45-ab63-a43a7270b421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fa1c6d-ef6d-4dc2-aba6-9380a042178d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d29b11-e5b8-4399-95e6-a8dd6300920a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da27b17-671d-4a15-b008-830f6a863aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf45118-45ac-46ec-ab4c-61a7f77b31fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702804e7-562d-4fe2-a700-ec3205c7ab64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4efed68-3482-4185-bf8e-fd8274860bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8567e150-4cb4-4201-a30d-df9e9fcc0253",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54257b5b-6cb5-4251-aa7d-a79b58510079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "084dcbd6-19d0-4b1c-a6ee-f1a58f367a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbdfbf7-e2e4-4577-8632-9739fa05aef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0336b87f-8431-40e2-a793-c84d0322b5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4471e85e-c85d-47cf-8e10-c6ac3be44d1b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fb91cc-d632-45b3-b0a9-4b161c050ac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa04999-6c3b-4b3a-b863-23a48ac75401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11b53b9-0849-46ba-b0f7-71eba5beaaa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e6947f-f1d3-4cb3-a7c1-2450e17f3859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca733a0-2463-4016-8748-04338271485f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c137bd1-ddbe-418d-a901-f72d79de4294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "762b7c08-f52e-47fe-aea1-86bf9d207244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9572a2-9de6-47be-8666-6b41d3068263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeeaed82-7fa8-4989-99b4-5532939103d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2319ce-33ac-485c-a949-dea6748c0cdb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781ad149-71dc-47ac-8121-54eb8357b70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21265a26-a007-44ac-82c9-eb41131f7986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d24752-2a4a-4d25-8c6d-3de0f4a5c225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5d5af3-dcdf-4be5-a7ff-8f5d8c1dc365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e5efb7-e313-4024-9dcb-6fa2d1787362",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6cd7f0-4d5e-49ae-bfbc-fdb8f762a693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9ddcb0-2117-477f-94e4-f8d13ed2b2f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51086dbe-57b7-462c-8450-12d286eb38a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5ce9d2-4953-4ac6-929d-6fe69dba1674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a0da9d-e52d-4464-89fd-2eb7fbe72f1d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0787c9b-eb03-4840-a009-06b664308868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4aabe9-cc20-4714-b190-98064a1929d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeea6837-9398-4b5d-8983-e5bfee07319f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f03b8d9-edad-4d5c-b773-c3a3c5561fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c0d2d9-8467-46f4-957b-5d75ca61e9ab",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9897b123-8df1-4009-ab13-6778885b79ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe2089e-98bb-4b21-8266-59d00cbd45bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f014eb-65b7-4656-81eb-428a2b96949b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18785ec8-ea02-4171-a546-e9f66fb325cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0bb845-b2c1-47c1-a823-5440974bb3ff",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75b2fb2-1298-4cef-a2c0-bea30cf73986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c1b65c-4c64-42d3-ac7b-673ae1b7c220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf0aa73-c8d0-4c67-a3fd-97c6ae303397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de2e748-5dd8-48d7-88f0-71f54eb5a1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d21773-25fc-482c-bd88-bc37767e3663",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dccc07-a668-46dc-a1b8-2a32023216ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c98890-573c-4acb-b309-af200d3996ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b85008-dd77-41b7-9dce-11a9464eff65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3baf3a-c8d3-4453-ab65-36b50e11cc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3735f558-08d9-4d26-a180-41dd20055d47",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f3c675-dacc-4580-932e-b4b77379a5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a1a600-7f89-4c65-956c-e52caef4fdfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d3e0e2-fd8d-4f4a-8808-2a52fce83e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaf993f-c7a0-42fe-a366-aa916e091e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765bf83f-3e08-4b6b-b9f8-767d8f0664d0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e504cafb-b6cf-4edb-a66b-52327c765539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6396c30-dc44-4e6d-b702-94653f6cd75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0597575f-a75b-4c73-80c9-25e14e5a8e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47dff57-19c5-48e9-a02f-b53c7af559c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31495f8-9f61-4d0b-9cdd-9bae13bebadd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c5125e-4d04-4514-b555-2cc73fa525f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d167f1-7fb2-4fbc-965c-8ea20e550698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4805af1b-c875-4319-bb83-f37d1e28252a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdcbc85-2cd9-40c4-990b-745c6b5bd3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2660f88-1efb-4651-b9e2-9c3c9c273cab",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4876b7-fcef-4c32-ad02-94c9cf7c1d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c83a9e-2289-4a89-a43b-8812867cab8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a785ac7-0112-4af6-8421-3752242ebc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cbb9cf-90fc-4711-b479-14e9f2885b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65060b25-6baf-4d8b-a6e9-72435d70f53e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea42762-e65c-4e52-988d-91f56c95949a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7495a6d-2299-4e4a-837c-33ab0e8833a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be30db30-b12e-4250-ac19-7c9503dac2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089e366c-51b2-4e1c-b1ec-94daf7bdc9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73cfa0f-91f7-406e-982e-b86d71136153",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edec18e-47d7-440a-80c0-7f6235cdb5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c631e111-e90c-46f2-af06-19babdf9e675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c514b85-9a5a-4daf-80e2-c61df38669f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a53604-6396-4db3-8c4a-4814795c2743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeebc510-f039-4768-9790-d22c7cac2581",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d34a029-e18b-4b82-bd9c-8219aed812c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e50af5-abbe-4956-bb09-6d1785810f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648250df-0d8b-443d-a739-20a27d06d207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697a1f57-8bdc-4034-a154-ab4568c7e8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c5896b-82a5-4f5d-aa17-6ee9c2b78361",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2447db9-515a-44a7-8c19-696cc6b42ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b87a25-d8b2-4b4a-a14c-96fedc1fcafc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2311e5-8483-4856-8bbe-b8300a4a5794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb7be7a-664d-48ce-94f3-1746f3e06ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffb4ca4-757c-4e5d-95c8-29f50861463c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c559e69-7c08-493d-825b-229f14553855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85aec6b7-b9cb-477f-a308-a303d1dcf8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a04a13-1b2f-4209-bdba-085c0e68de2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff321cb8-147d-41da-b642-cea543c2428a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1355e780-4e4e-4d98-ac07-ced7378bb12f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e09dbd3-173d-4bd7-928d-fcfa42dd360d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685d0368-8557-42d0-adcb-d62cbaa9df8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3687f03a-3977-4a5b-a513-fa1803b1fc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576446fb-c9a7-4819-bb7a-285be3ca7f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55462757-d3a3-4994-b671-60a2e782be28",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f7ab18-2e42-47fa-9da7-2a209f1f5077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af06580c-43c2-4e55-8cf1-3f2db952afdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acc8196-22c4-49a4-a4a3-07b6396c2727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667087ad-57af-4ba0-ba82-2772942b8659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1373cb4-7f45-4a00-ad55-a690972aeaf9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09aea3ca-9ce4-4eb6-b8fb-cb37a5564886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b55871-5be6-45e5-8bec-583c37e80bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dbc7c8-0186-4bc3-8ea5-741b9ed80d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c0e7b2-bde6-4522-87c6-587f32afed30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae32a9b-1b7e-4c08-b8eb-4864fd4170a2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e8bed6-6cd2-426b-b015-81f21a68eaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1562d5bb-db11-424f-bdfc-150095acc313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0e9a3d-5606-4450-92a8-9b2d816d9616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895a96c1-98cd-4660-bc40-4350dfb10caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118f0f75-0834-4b7f-bc84-022ab288b1e8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b3731d-e74f-43a3-a628-093f51c2d4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b6aeb4-36b7-4103-bf60-e46a4a8f72f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38cc5de-28f3-4fc4-9546-468020f1397c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d50239f-e81d-402f-a424-1db0bc11d5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e04ee3-51e9-4709-adf1-148dceee2e5e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac60e9d-d97e-4117-b94b-642578429dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26a2c7b-c795-49b3-8123-894a4da17712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4491871-4537-4438-9dae-79c2fff13003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f634ca-2801-4506-980c-6318c05c560f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529eaedd-6f67-49b7-a888-0dc2656c2d2f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eac5d75-ad52-4336-8c54-73a246383f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52dd57e-c4a2-4746-8513-4d644c028b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e800e8f-7617-4d4b-ad60-b84ed7c36e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb53c2c-ae4b-4499-8fb0-2e2ed2adb2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65aa5e06-9768-4820-993e-37707c06cdcc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b7d516-2b3f-46b4-9850-807e4055f2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d5d103-f786-4b72-af84-c9ea838efd24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f03d1d-deeb-49e3-ac5e-75c1a2ba4daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35df61a6-3dda-41ea-9b88-dfa2af5afb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dec762-1026-4ff6-ad57-7e38077ca24c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db95751-ceb9-4037-819a-bb2b3fe12f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22393e8-0dbe-499f-a97a-e454a41d92b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d27846-5ff6-4f5f-a134-d6a403c12da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce032da-98f0-40e2-a0e8-88d628eadef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abea795-a2dc-41ca-84a3-bffdfd603b67",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edbc031-73fd-485c-8ee2-8174e0a41f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54a47f9-5676-4d69-ab2d-8967f8cd5fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216ca531-329b-4b17-8dba-b8376ce2d302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d60bb28-55d2-4f03-8088-1cdb2fb16aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de2dfd4-1a6f-4680-94fe-142718d9aa0b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c589e42-ca0f-4aa8-8411-470477253278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d35c592-6ffb-488b-a42b-764c2a4018ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e710d5-ec5e-4634-a6d6-a9b37b8ccda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17056d0a-aa0c-40c2-83fd-1e353103f8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9142b381-15f5-41a2-bf90-baf88c1c8ea0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc9ceb8-c405-4680-b2a3-d2296b21bd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3890e117-c054-43e2-9d77-4673b16c814d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41b4c08-6c41-4e30-a7fa-9412127836c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5714565-7c7f-4f33-9f00-6c5709212bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0f5f22-ca40-4a4d-92ae-b598c8bfabb2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a62a3c-d456-47d7-bc61-132e11720a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3201e7b2-7137-4d9d-abeb-684ff0eda6d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1608f1fa-9cdd-48ea-8a1a-d9841f4d5ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d58aa4-12e8-4435-b58d-cac8b67d8e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50afcb2c-b49f-404d-8645-0bec2b0bc477",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac18132-0b32-4291-a533-68fbd89e6982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b49542-36cf-44bb-9594-34e26bcc9876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67d1949-f478-4fce-9ef6-a0aca8a4abef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1f4957-bc60-44b8-abaf-f36a81d3eb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7316bb28-3b4f-4ea1-a9d7-ed1d6f64b822",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0d5c1f-1a45-477f-a91c-2614343740ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85638c98-15cc-445f-92d1-c23cf6c0a687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fd27e6-7f58-426e-aeea-368295eb7332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244c1fce-8b37-471f-8a12-28ace6a28db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edffd922-cbfa-45af-a693-651c86c04c1a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ad4148-6a78-4d48-8b14-c48bcf4624de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8af701bc-7dd6-4c07-9f7d-8cd42e9fd7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43767d96-f1a5-4f98-abbf-851e0ee9a0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b3f387-cf11-4318-ad6a-e92be14f9128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7843735-3608-47d3-a363-e0f122f2902b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c21cd0-605b-442b-a0b4-b9b6d75ef85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc9b760d-39f0-46cb-9e63-dc5889a60c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96a47b9-d9ca-4cdf-ba19-b68fb49f58cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c739277-c60d-4dfc-bf50-3c9f782e5eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf7597f-a36d-4bdf-be93-3989481500c1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1745e9-205c-4d23-bafb-64d0d0c34e5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea10d55-7b15-41d7-8b68-322a0b8f3ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104689dc-92ba-497b-be72-0cb2b3ac6c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df415a2-465c-49b6-84a0-8933db9f3916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2b07e6-a716-490b-a1dd-60540552895a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289e9643-9a08-4e32-b104-ed9b8d1570fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ca87ca2-a297-4441-9f3d-ce065e3daed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa6ecae-fa5c-47d1-8015-dd49443a00a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84415649-3f6f-4bd6-b1e2-95b16f2c1c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad38485d-b2a9-40c0-a617-d7bb5dfd9a08",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc603d7-5bca-40c9-bdb2-1f3ff40883c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b59e70e-5824-4b11-b1d3-6e46eb615c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883a7603-4da1-45f3-99a7-6b950617f5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9747ec95-dbce-4342-a6ec-91848c997126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dffac5-73fc-4b4c-b27a-1383954552a8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43123ff8-a9cc-4d60-a1d5-ce11aa714628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9301167-6a2b-4239-aa41-1fcadd8cac8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da9f65f-7f4d-4136-9f1c-8fab225298e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd91f7c-e264-40ac-b8fc-a75056b3e133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4083186-de9e-4d9c-a6f8-8c4541b1c95a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf33e85-b37c-4432-9735-80a659608e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5689870-8832-42b2-9147-aed612a32752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd093b0-1ea1-4261-925a-b65bf2ae4609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e746aec6-164f-45e5-abc7-2f625481f5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167bf5f3-86e9-4ac7-9c24-4e35d9614ac9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ca8791-6bab-4ea6-9fc4-f6409e35cc4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e877ae47-b889-4292-8ece-494b021048c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af97c2ae-afd9-49b1-ae91-8bc9f1fb102c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e09c220-ea10-4b6c-89dd-88b69adff82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3159743-8db5-4a14-a740-7188075e91f7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5297b09b-c01c-4320-b644-0d633a1c3fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbb95f0-ceff-438f-8091-7ce07f501173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86efddd0-5537-48b0-a1b5-fa17cc85543d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27a62a5-5dac-460a-8302-1a5a43a4299c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2b8fac-0015-4150-a494-a3c7d122aa16",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ba95fe-4526-4947-8946-1560624a31a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0246722-5611-41e6-9a7a-4f748adacac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6afc64a-9dfb-49f4-a0ab-3d05a5e32d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3efdf53-66c2-4b8a-ab41-4ccbe4c5be95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7560b32-178a-4a8a-921a-526bbecc0332",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e00bbe2-7b08-485a-aefb-18ae35363ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc51f58-2dc1-46d5-8014-07df8b9d5cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401325b6-c58d-4b82-9ba0-607a94b61c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8dc1d46-5173-4012-b807-ad026900be5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3782b20-bbd4-4993-9931-0176de9efb0f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7ed49b-6cbb-474b-8c1d-17276ba314a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78ae35a1-d179-4bd9-a4c2-44743a65c39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872bafcd-f4d5-4aeb-97d7-925d278c8fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f690048-d8be-4dd2-9452-0ce9f9dd51ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8367bd71-6282-4f67-8351-3c5e4c2c6f79",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3da0028-22cf-4c95-ab1f-e11d4470e452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efef9a1b-81cb-4281-8a84-e15247e4bd82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8446bced-fa18-407e-8b5b-2759fc5971c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44751426-eec8-45a5-b587-66d8700df1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fde7f6e-7b8d-41c1-abf5-1be7efbdc28a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff56668-9e69-45c4-aa36-3534b0870214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eeb7cd4-aba4-497b-9c34-76c8be393e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fc7fcb-dba4-4d33-b0c7-841d6426c9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b324c37-3a31-4ece-948f-d68cc3f38c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52deb869-f639-421d-ad77-12867743ddea",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b500c8a-f431-4fd9-bb77-c70a9502da46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a42acc-f29f-44c8-9325-3ef38448e750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3381794e-e9fa-41d6-93c6-144131cbe2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8a580e-1408-41e9-be94-7428d09e3abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22eda67a-82ae-4cde-a21a-b85ed9765ecf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6f3bad-f8eb-498c-8638-b8f10b246cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08334764-7591-4f28-8040-e0c8209d34a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec898411-d2b7-41d1-b347-a160a590ab0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94945da4-b3ba-4ca4-8f28-8e77f79088e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093efc6c-f48f-4ea9-af98-0a293f263fa8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e417db-4d4b-4d1b-9476-472637c8335b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e5a50d-5ef4-4cb6-8b0a-4dff9047616d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38bd1a3-65f7-48b3-8cf2-ceaa7f032f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44cbe929-d675-4669-a178-9c5d51c53b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8546af-349a-49cb-abb0-6042aa910cb2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2dc296-308f-43d7-bf6a-656586f942b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5555da85-19ea-4129-9b61-8a83c906b4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e00e04-bdf6-4033-8c95-d11edb31837c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa52ee9-d15d-4be1-8c67-568ded2f149e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d5c53d-38e2-42de-b4a2-17a5ea042960",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4446b9-d4fb-4b5d-8a04-04174234038f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca4aec5-9959-4f16-b2ee-17e06b98cebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aad8e43-f41f-4dc8-8469-7345bea822fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2745fdd-80de-4e20-a028-57acbcc81956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe9655a-8702-445a-859c-d9f296350563",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3ab485-9240-48be-bdd1-20c4fe08954f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d892047-afc3-41d4-8094-e4ad91bfa1c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4ee7bc-d687-47cb-b518-007d9a81afd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53e5329-9346-40dd-a950-f06f94d91248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1245b6-375f-47d9-ab21-6ba6882e75e8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8ea787-dc93-4181-ab3a-5c4274b4097b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f39c82cf-5351-4a3b-9b60-d3b70484c280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce324fc-9a5a-4da1-bbf5-cf921ac0435e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afb27e7-70db-4a73-b9e9-35df24f42ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81186eae-db50-49c2-afef-13ac02ef7365",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef133c8-f547-4761-a027-3b85ed5c14a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037d2abc-1f8e-439b-917f-28c9aa92cc77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de642f2c-5ae4-4042-b222-a0816c74bcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc012e6-2e7f-40dd-bd65-7d3edf174fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66dd7045-d456-44c4-94fb-e04b79fee778",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6d4e50-947a-472e-8def-a7678c60d119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f4ccaa-2765-4f97-a517-2d3ccbd41c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c42dd0-2f98-40c9-967f-878a263da407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3782c5a-f0e9-4935-9c87-534ab321b07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faedc4e5-180a-4592-ba51-841af9946125",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c2ad95-ed1b-4d7b-8595-0e91164ccbc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b31c37ed-825a-480e-b4cb-fb25e6772586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b430979f-8b2b-4aa1-b6b1-21f537086a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250317a0-f95d-43cf-b8a7-53758b3456a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66a7aff-d081-4559-87d8-8b39af5d306a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d10f646-3431-4d72-9e91-b001c76e84d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d5e76b-8634-4ba7-9c3b-1fc10551fd34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975eb612-1fb7-4755-8efe-717332b97d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91547f75-8388-4f2c-ba96-5079024d63c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60115c4-e9c6-4f61-9251-31f0661d42df",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afba1641-41ed-48cf-8349-b3cc07651b60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b6f04cf-21ed-4e8a-a528-b6fedd487e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacd0436-268e-4c72-83bd-6bb2722517e0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efef4390-edb8-4f48-9e6a-f2234f461115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fb2ff8-5656-434c-b292-4ee0224ed7c1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6e967b-47fd-43fe-bdd4-3036088b2867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a45953fa-84a8-4701-a049-c4d1e1f1a80c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d751917-14d3-49b0-a097-faa0f5f20453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3e1e18-b5c3-4856-ac54-6b5c522817c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2629b67b-1839-4b18-9169-fc056e1039ae",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d23519-919a-41bb-9c69-41dcadb33df4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b6a5bc-76d0-4dc8-aed0-2d7ede7b8286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357ecfdf-16d7-427b-b51f-c9b2e8061682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ca484b-c14d-4b9c-a74f-f4e6ddd55a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5e7184-1385-47ee-8b0b-6f28f173b352",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18119ea3-b49c-4361-88b5-4b25313e2b4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34c2dfbb-1935-4c05-8bec-64d5d0343d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49649f0-cd76-4955-9180-29b98453e5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66724c0-e117-4b75-80a0-77a4c4eb0dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaef364-0313-4f02-bb5b-3426e0307f13",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0bf0ab-1972-463a-89c0-2585ef154b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94297b87-ec8c-432e-b2ab-5f104fd81b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4ebcb5-a4fc-4fa3-ba40-c20395bec84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e214be3-1aee-4e76-ae1f-e89d39489481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe1a890-e8df-4b0f-838e-347b5da843a9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af05619-5d62-4ec1-b357-454f59c530ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ad240e4-e881-4326-9948-3ad59ee6bee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d247ef-937f-418e-ade8-a55bfa7966eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f043ec9-f3a8-47f0-a24e-910e8b5da04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3083a49-e59d-437a-b8c2-a066e8297e74",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57b081f-939a-493d-8b83-7ca1a0764e04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca5c2a55-b3f2-4bc8-bef7-cfb35eb34fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5554f3e0-303e-406b-a575-566405ecf139",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb79c5d3-d7b7-4644-bb3f-b3cb70a80e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59bc672-678c-4042-8177-9fcbc0648774",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ead7ca-4947-4208-adac-bed44c7c4ec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a80c54b-3c4d-49cc-8179-5ad2a86843db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c013e4-a167-41a3-8b2a-4a94d9a32291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582348d9-978d-4ab6-a883-d1af58891ead"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63c92648-281d-441f-b1bf-c12658ebf277",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bde1bb57-9f8f-4e0b-a27c-646a3529608d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4259f998-d029-4a30-a9f5-ce42a498e26e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5927bbf0-6797-42c3-8444-5d5de328e991"
                    }
                  }
                ]
              },
              {
                "id": "944889be-fd8f-41ee-8102-1e602a3f4d09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd91b578-0125-4603-a96c-f02a8e39a6a7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89a0204-d1d1-4ddb-9b64-4716d5c5c59e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7266af26-cb35-4f19-b37b-6fc97739bf92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6ba1a5-d573-4756-8b98-bc50c36519ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfe467c7-2157-4320-a216-4d418f5f20b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15b6891-e40d-4df3-9405-2edccb83a22a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54377a37-fe24-4f1a-a8bf-f8533c663d0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "652f358a-c540-4399-8c5d-ff01ca81da6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5095494b-f99c-41a7-8719-bbfb01762cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91f0b0b6-e1ee-4237-b58d-3704b8cf8ec9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fbf4618-d78a-4f78-ab3a-70c612e246a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6c082f6-07d1-4f90-a8aa-f8331942ea58"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5299c59e-722b-4569-83b1-30d772675189",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1245f369-cbfd-44ff-8414-5c6ba9ab4d56"
                    }
                  }
                ]
              },
              {
                "id": "05de98bc-e553-44b2-8e58-c5116f9ac502",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f4179388-f289-463b-a394-5ad272f5cf18",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa15e4f-2a95-4113-8ecc-92077b25293b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3bd79e1c-9cde-4070-ba4e-37defc7540f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2003471-f75f-45a1-9824-392ba521f63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebf9e9f-ebe5-454c-9e39-130eedca3c14"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a770d946-fb6a-4109-9cdd-e3f1ec59bd3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3c9843d8-5004-4c44-b101-12d1fbb66827",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84c9339c-48ac-4c58-a5ef-0dba8e9dd16b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1432706c-26a2-433a-9a0a-ae5b0498c4c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d2a5ff7-9d83-4b32-a238-a7893d96f6e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab1981f5-0eb1-4b8d-8197-e7545b67ca49"
                    }
                  }
                ]
              },
              {
                "id": "876fe455-3890-4643-83fa-faa99849e07b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "509bd133-1cb2-442c-a951-392c35461c25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2d77fdf6-3a53-4692-a60d-635f11bb8560"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ddca017-59a9-4b26-b8d2-805159c0c2bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f9f9233-ef8c-4355-9de9-8b4b0798e453"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e52f45f-46e5-4c2c-8df5-cb623620fb73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c58db968-c0fe-48b3-8f85-375b24fb055a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57b559cc-b652-4897-bb85-faf717bc559b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "615cb9f5-ed2e-4f74-a6fb-ae3211a75675"
            }
          }
        ]
      },
      {
        "id": "5d88d232-95a3-4f0a-a8c0-476beced6ed2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f8274eb3-bed9-4fcc-b7f2-e7b2aad9696d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d20f2a52-4624-4815-bd5c-8d249655878f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15395f57-e721-47b8-9126-5939e0a55651",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f1a863-d6b6-4fa2-afdb-47ff3203a820",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "29f2b789-21cb-4583-8040-7798a1dc7c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc21de0-5102-45ba-bd97-e50105b483c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2b7b6ed-e39b-4359-b2c2-a05888127554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f342c7a-6ddb-48ce-a7db-0490cd69b07c",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e739ff-3805-4840-8f63-5643c67cb472",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ad93e8a3-13f2-4dad-8c1c-30f2d535229c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7742fcc-1732-4f00-8354-d38b822a620e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36dddfaa-ab85-4cd0-b1ae-b3bced2ddc44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a1706e9-06c2-4b8b-843e-13c9a1bb927a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94f881df-c569-4764-9f4c-f9babb143f77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21ace4af-0480-47fb-ba4e-d0c0ff9d559d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6ded676-2ce9-4c7d-a2c4-f08bfc1ed356"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0f37ef0-d4c3-4b98-a949-6d269659d770",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "20773d8f-cbdb-4dc5-992a-086892fc3613"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e3c3cc1-9797-48b6-8843-7e97fd9095c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7c87efe-5dda-4af8-a5f0-c7e02e18ba69"
            }
          }
        ]
      },
      {
        "id": "e8d72927-a765-48f6-873a-5f0ddea2bc9f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e6f7f2df-0055-488c-b7e0-493911ed3d8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26d6683f-dd2a-4e69-a7f3-2f5351298a09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "621f9bde-dbbe-4aee-af7e-60da6f0c1035",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ca66c1-7c2e-4d82-9fc7-ccda247ae0a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6dc1fb56-02f8-4f47-863f-04d67be415dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcc027f-eea7-4666-95c8-9c62507727ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8456a15e-da73-489a-8c76-900c927c49b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cf2fc3-476d-47f8-bb69-b8e2639cf165",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23846cbc-6787-4349-aaaf-499d3b2f3bbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ef93d1f7-3465-49bf-adc4-b5dd43ba6c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daa935e-fd5a-4d6b-8ef5-7df9afc666e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dea8a29-3a55-45d0-8acd-47adac7ee9b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "729807ed-bf9f-4408-8019-d496271ef8f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1e7428f-4329-406d-a49e-8dd7ef47e038"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7038815a-99ef-4ab6-a541-ece2d96eaf8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b67c621b-d6b5-4223-8a84-c318c6bc09f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ac0ffb0-3195-49d8-b1dc-d3cff51e9a82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "970bf08e-2417-4665-a756-f0b27437c44b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e9ef610-294c-4bba-996f-ebd96df24d57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e99b0d0-50c9-4bc4-9ced-d914c7954df0"
            }
          }
        ]
      },
      {
        "id": "0e273aa5-2a3a-42aa-b0d2-5a84ec180228",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8a0ec384-eb19-4afa-a19e-5deb90c9e087",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e6a3298-3155-4110-9a33-19617ce9cc89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "881bb13f-3819-47e0-aa0e-93b2410f4c91",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60b2fe2-5e93-492a-840e-d43de3e6730a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e75e723b-7d3d-448b-85fb-cb2133937b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662206d8-9b8e-4d29-b80b-ef71a10ab920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fee41e4-532b-4c0e-90df-05ad460a7086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1ab6e9-19bd-46fc-bd5c-1ffe4a64ac66",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4bd5fb-8bf0-4049-a83b-d0ff654e8f7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1e5efff2-7550-4aa9-82b7-50afb24f16c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ba55b1-30ec-4014-9ddb-517f82733efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "634af3bd-1b68-4eb2-b9f3-515535909425"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92d02af9-a73c-4c1e-9677-bbe0034440e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3eb7630-44b2-456a-abf5-eec67da9423a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "096dcb64-a6bc-4a62-9aad-efd559b0b768",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0686cfb9-9afc-49c1-815c-8f826d3bae1f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b814e508-3ec0-4295-834f-91d6885bc7b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c5bbcbed-ebd4-45b9-8445-46cbd514547d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "400caccc-a773-49c1-92f0-986b0f8ec64d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afda6ced-aa89-4473-a02f-7767762b4771"
            }
          }
        ]
      },
      {
        "id": "dc10d68d-09a0-4fad-88ff-7caed6bd3899",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59d13fc8-2826-4e52-aa5c-299d236289da",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d30e8d2-b012-4478-bf6f-94aa1c4bed0d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e0382e9f-db0f-42d9-a033-26f0b2cf3c14",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ef55c97-c405-4abd-b1bb-a31a393129f9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "470bc840-a313-4c7c-a6a5-cf57574346b5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 665.3053435114504,
      "responseMin": 22,
      "responseMax": 4732,
      "responseSd": 642.1875827966185,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673829555933,
      "completed": 1673829740940
    },
    "executions": [
      {
        "id": "d7258aa8-bed4-47c4-893f-999e0c83b0ee",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a3fef3a8-7bff-4daf-9e3e-b47ee6be12b2",
          "httpRequestId": "ce85d3a8-d90d-4eb8-8296-1bb6e70fe72b"
        },
        "item": {
          "id": "d7258aa8-bed4-47c4-893f-999e0c83b0ee",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "27980225-8996-4eb6-9cf8-a9a9fbebf2a7",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 0
        }
      },
      {
        "id": "58db7740-1772-47ee-8a73-ba5351f13630",
        "cursor": {
          "ref": "8cf1dbb3-d139-42ec-afcb-00c157b0a0ad",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "de60fa48-8ff1-42db-a83f-8bc523d1cc06"
        },
        "item": {
          "id": "58db7740-1772-47ee-8a73-ba5351f13630",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "86bb0c4e-ce9a-4b19-ab90-12b290c1605b",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "636107ce-3461-4355-8a51-f850676d747a",
        "cursor": {
          "ref": "a132c765-7dce-42b7-ac3d-55381c03c880",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5adb07b9-0eea-4c53-850e-b14fdf8de21c"
        },
        "item": {
          "id": "636107ce-3461-4355-8a51-f850676d747a",
          "name": "did_json"
        },
        "response": {
          "id": "5f75c499-101d-49dc-ab64-426ef74809b9",
          "status": "OK",
          "code": 200,
          "responseTime": 750,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6a70b6-e731-4f56-b1f5-a5520450607b",
        "cursor": {
          "ref": "a1f01cf9-6aad-4ba4-9b62-63eecdd75ded",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a5c5edd-79f5-44ee-9f6e-135cde858fe8"
        },
        "item": {
          "id": "5b6a70b6-e731-4f56-b1f5-a5520450607b",
          "name": "did:invalid"
        },
        "response": {
          "id": "c1ac408c-fad4-4d4d-97c6-e590af4eb7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6a70b6-e731-4f56-b1f5-a5520450607b",
        "cursor": {
          "ref": "a1f01cf9-6aad-4ba4-9b62-63eecdd75ded",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a5c5edd-79f5-44ee-9f6e-135cde858fe8"
        },
        "item": {
          "id": "5b6a70b6-e731-4f56-b1f5-a5520450607b",
          "name": "did:invalid"
        },
        "response": {
          "id": "c1ac408c-fad4-4d4d-97c6-e590af4eb7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cb179f-8de6-4d0f-8961-2830f0fcadf4",
        "cursor": {
          "ref": "92aa002c-7b23-44ed-8604-f0bc47ab437f",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f4f6b85b-920d-4d69-8988-60eb849297ea"
        },
        "item": {
          "id": "67cb179f-8de6-4d0f-8961-2830f0fcadf4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "138801ec-2f15-4430-9bfd-fdc4d57550ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 678,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f695e40-84f3-440e-90bd-b94e70166421",
        "cursor": {
          "ref": "4188f3e8-3b5c-4266-9f12-1fc3f70b6427",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "86ac9a2a-20fd-4321-8372-f113eed39f4f"
        },
        "item": {
          "id": "4f695e40-84f3-440e-90bd-b94e70166421",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "af28fbe1-a7fa-45ba-b38e-2c6b2b004442",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e614572-546f-47bf-810f-83dcb1b248f0",
        "cursor": {
          "ref": "8c183a0a-05fd-4b2e-be9f-98e815e5a9d2",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "03ac1cfe-0696-4134-ac6d-6d31624bc084"
        },
        "item": {
          "id": "8e614572-546f-47bf-810f-83dcb1b248f0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a2e68e15-ee05-486f-aae1-f8d5ad229ee3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53126b1c-20bb-4451-a4a5-762e3b4f83f2",
        "cursor": {
          "ref": "632c2786-3cb6-4eb8-872b-6bdb8209714c",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6913cd81-d9ac-4ae3-80c8-83533aac23d8"
        },
        "item": {
          "id": "53126b1c-20bb-4451-a4a5-762e3b4f83f2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "71f7bdcf-8cdf-4d15-9531-56bad215f941",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53126b1c-20bb-4451-a4a5-762e3b4f83f2",
        "cursor": {
          "ref": "632c2786-3cb6-4eb8-872b-6bdb8209714c",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6913cd81-d9ac-4ae3-80c8-83533aac23d8"
        },
        "item": {
          "id": "53126b1c-20bb-4451-a4a5-762e3b4f83f2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "71f7bdcf-8cdf-4d15-9531-56bad215f941",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0260e27-61ba-45f4-90c2-ed9118fe9b20",
        "cursor": {
          "ref": "dc7176bd-4165-4f72-a271-cce21643ac73",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "55713571-028c-47b4-9835-485dceda8f1e"
        },
        "item": {
          "id": "d0260e27-61ba-45f4-90c2-ed9118fe9b20",
          "name": "identifiers"
        },
        "response": {
          "id": "9ffe7041-4eb2-4c36-b3ee-ca4387947221",
          "status": "OK",
          "code": 200,
          "responseTime": 893,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e1419f-46db-4136-afc4-7d9ebe7f082a",
        "cursor": {
          "ref": "153dcba9-b15f-4ca6-9453-c2cf18d7e47c",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "02234a16-5dcf-4bfd-947c-645334931efc"
        },
        "item": {
          "id": "31e1419f-46db-4136-afc4-7d9ebe7f082a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f79c1944-ed23-4642-b5dc-c4a8b05cc2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e1419f-46db-4136-afc4-7d9ebe7f082a",
        "cursor": {
          "ref": "153dcba9-b15f-4ca6-9453-c2cf18d7e47c",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "02234a16-5dcf-4bfd-947c-645334931efc"
        },
        "item": {
          "id": "31e1419f-46db-4136-afc4-7d9ebe7f082a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f79c1944-ed23-4642-b5dc-c4a8b05cc2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f7dcfb-fe3c-42e3-8b78-f072972a4456",
        "cursor": {
          "ref": "e1ef039e-a233-466f-86f7-b02eb163f02e",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "76aaec4f-f1ab-4ca1-88de-3d3949537d1d"
        },
        "item": {
          "id": "62f7dcfb-fe3c-42e3-8b78-f072972a4456",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d4ca505c-3776-4b08-9982-14301db2b9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39521b6-92f9-4afb-8c57-89daa121f143",
        "cursor": {
          "ref": "765093b9-3fd8-4882-93ee-1ec1389abf5e",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "21cc028a-d605-4cbf-addf-234bb0c4afe3"
        },
        "item": {
          "id": "a39521b6-92f9-4afb-8c57-89daa121f143",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "dcc34ce6-b6cb-42b5-ab84-5bb65967dec7",
          "status": "Created",
          "code": 201,
          "responseTime": 2605,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "ada2b4ed-0ae1-47d7-b323-b961575cb8f6",
        "cursor": {
          "ref": "36ab1380-860a-435d-8f34-3b76920c6778",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cdb3b035-5c24-4b63-a1f3-9c4afe1385d9"
        },
        "item": {
          "id": "ada2b4ed-0ae1-47d7-b323-b961575cb8f6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a9ecfc56-249d-4340-932f-5c018e627f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e5e1b8-7d10-4815-8152-5a18131bb2ea",
        "cursor": {
          "ref": "42defa46-2318-46f4-86cd-c098763a57c8",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3d2f2f8d-0679-4031-9233-749a3a51ac51"
        },
        "item": {
          "id": "c6e5e1b8-7d10-4815-8152-5a18131bb2ea",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "13e640f1-7a79-486b-a73b-ed064f26b9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d25b33-073f-466d-bc2c-d33697de60bf",
        "cursor": {
          "ref": "2d714121-1db9-4413-9857-a6736b6bfced",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6c9c7b70-b601-4043-a492-6608b9cfa08f"
        },
        "item": {
          "id": "10d25b33-073f-466d-bc2c-d33697de60bf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0113475c-afdd-49b2-b13f-bded21f96a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0844d485-5a59-48bb-88c0-e211824e9cb1",
        "cursor": {
          "ref": "4b7bb1ca-e891-46d8-b752-b9b24a32f7cc",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "083b6a3d-d136-4345-9d2b-a799049ee690"
        },
        "item": {
          "id": "0844d485-5a59-48bb-88c0-e211824e9cb1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c2425a78-b858-48d2-851f-bb893999a660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c0a752-4ee8-4b5f-b10f-45073382ed6f",
        "cursor": {
          "ref": "fc41a5e2-03ce-4dc6-b0ff-337600458193",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ef94286c-505b-4981-b55b-baa12bd2e7f4"
        },
        "item": {
          "id": "c8c0a752-4ee8-4b5f-b10f-45073382ed6f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1a5a2ac3-4033-4b11-b98c-7937aa293d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2451948f-4c9e-4793-8843-dba1462c72b2",
        "cursor": {
          "ref": "117d80c5-1d0a-4fb9-9b6d-961dfc06538f",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "39ad4fda-617c-4504-81f2-ef986e0db31d"
        },
        "item": {
          "id": "2451948f-4c9e-4793-8843-dba1462c72b2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "19cb0481-dd4b-47fb-90e2-b261db8cf2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1bfede-1dfe-419f-a67a-e2cf52da3843",
        "cursor": {
          "ref": "3bf2b65b-9eb2-4952-9e27-069ea8960982",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0ae5ffa1-6270-4df0-82eb-a9b8ae30f851"
        },
        "item": {
          "id": "4d1bfede-1dfe-419f-a67a-e2cf52da3843",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cdc0b989-04f8-488f-bcdf-fcd100ce6949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618f7cfe-25ad-462a-a893-30d2c2d30939",
        "cursor": {
          "ref": "fbb17faf-3126-40e5-9352-0a4f32c7ae53",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5f916475-5287-49aa-b148-1f72986a7b0e"
        },
        "item": {
          "id": "618f7cfe-25ad-462a-a893-30d2c2d30939",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fb25f9ac-7d2a-4b29-b196-2d76ad74c802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 960,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bfb032-181d-4649-be2e-3c2981b3ddfb",
        "cursor": {
          "ref": "d8b99f48-e680-473a-a053-ba0456a411f2",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ae01a323-a543-4d20-b504-5033250c9a66"
        },
        "item": {
          "id": "10bfb032-181d-4649-be2e-3c2981b3ddfb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b9309f52-c26e-4551-9351-9b711e2460b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f25532-1788-48bd-a1a9-c528e58cd640",
        "cursor": {
          "ref": "a5c234fe-fc40-4fd8-b352-333554aa3305",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f0ed149a-190c-4a81-a64e-1dfcd46a89db"
        },
        "item": {
          "id": "53f25532-1788-48bd-a1a9-c528e58cd640",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e3fbd2bc-e052-4d00-8394-214df9418c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 865,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a352f9-19a9-4771-aeea-1e52dd8c9829",
        "cursor": {
          "ref": "dd25c543-4095-4de3-b05a-628ca8767dfd",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6486a9bb-1c29-4e08-8b68-46eb8ade108b"
        },
        "item": {
          "id": "b3a352f9-19a9-4771-aeea-1e52dd8c9829",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "6c4ea5f8-e4d8-4fca-a782-9d1125749972",
          "status": "Created",
          "code": 201,
          "responseTime": 4513,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "26d14111-cc43-498b-befd-6d29a9bf2a1b",
        "cursor": {
          "ref": "da346e97-a2cc-4806-a995-d79745671c9b",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a13b630b-43bb-4140-bfa2-a41638009017"
        },
        "item": {
          "id": "26d14111-cc43-498b-befd-6d29a9bf2a1b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f0965e98-9004-452a-be2b-a5baf62eb32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae7862-a3a8-4df2-b5ba-7e44983cee0c",
        "cursor": {
          "ref": "5f2900b7-2313-4061-9e59-0874ca4363e3",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e0dd06ff-1a00-44b8-bd7d-3ebd0a6a8d40"
        },
        "item": {
          "id": "13ae7862-a3a8-4df2-b5ba-7e44983cee0c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b592ba27-9080-4e4d-9c8b-d8ea1324d371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc6d651-2586-4883-a14b-6893922873c8",
        "cursor": {
          "ref": "cb6622f8-bb43-4d39-9cda-a26942abc203",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "77c2ad7f-cebd-450e-9486-40693d210610"
        },
        "item": {
          "id": "fcc6d651-2586-4883-a14b-6893922873c8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "907ac613-d32c-41dc-a705-6a36b654e404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10685bdd-2dc5-45b8-bff5-4c517517b063",
        "cursor": {
          "ref": "55801e4c-6fd7-49e3-a963-dfe7182e5667",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fc222637-b867-4fad-87c6-cc62b3c29e3d"
        },
        "item": {
          "id": "10685bdd-2dc5-45b8-bff5-4c517517b063",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "36ec36a5-bc18-435b-b19a-d31ec0f04702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deba047b-2348-4dc2-9a07-30d3e80bd49f",
        "cursor": {
          "ref": "74461fe9-6658-4215-9f5a-624ff6fdf282",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "498156f7-3073-42fd-aca7-8b685f96f4bb"
        },
        "item": {
          "id": "deba047b-2348-4dc2-9a07-30d3e80bd49f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9a4d773f-d7b4-44f1-8c85-98e85a72ca6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d677e0cd-c1ea-42f6-8cc4-666ec9668730",
        "cursor": {
          "ref": "ab852157-1ae6-43c9-b34e-330dd9ebbc2e",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "63a53367-7dd0-4360-9e99-a0d9c309cfe3"
        },
        "item": {
          "id": "d677e0cd-c1ea-42f6-8cc4-666ec9668730",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3975549f-8dd3-4e6c-9172-056d54873aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892e719b-1b39-44bd-965d-b4a600a9d20c",
        "cursor": {
          "ref": "63141b84-bc4f-46f5-8d3a-00e5f637616b",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ed022d6c-f0d1-46c6-ad77-8be4594c7a89"
        },
        "item": {
          "id": "892e719b-1b39-44bd-965d-b4a600a9d20c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "25317333-feb4-4c20-879a-caf70bc7ba53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aafd6df-a8cf-41c5-8b0b-968acf0ca92f",
        "cursor": {
          "ref": "982572f0-49a5-4841-aa6b-fcbdb9937d8d",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a2161369-64eb-4454-bd54-bb8861c5ea6b"
        },
        "item": {
          "id": "9aafd6df-a8cf-41c5-8b0b-968acf0ca92f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "42f31039-e379-49f6-a9f4-03968f724591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41182522-47df-4a93-b530-747fcedf5cd8",
        "cursor": {
          "ref": "501ea1bb-f09c-4748-b938-9a14d7b88232",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2e93c6c4-dded-4558-b7e0-0f73ddad8085"
        },
        "item": {
          "id": "41182522-47df-4a93-b530-747fcedf5cd8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "364f5ca2-5f8c-415f-a527-afdeb7b9708a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e047b5e1-c2a9-4bb4-a061-ad3a3572bbfe",
        "cursor": {
          "ref": "995f8f2a-8a2c-4da1-93d2-f7a9aef154d2",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cdcbaef4-aa69-463b-b70e-d1eecfebd959"
        },
        "item": {
          "id": "e047b5e1-c2a9-4bb4-a061-ad3a3572bbfe",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a4adeb3a-c4bc-4b30-b4e5-455314631d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcc6e31-ad4b-4ae4-a49f-87cd3f9d94f1",
        "cursor": {
          "ref": "e720b4ad-0dcc-43b5-8e7b-af392c525aa1",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f33b27c0-ad96-45f2-95d6-b2bf3e3c8e7d"
        },
        "item": {
          "id": "8dcc6e31-ad4b-4ae4-a49f-87cd3f9d94f1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "841c7d10-b61b-4e85-9f08-6c4055a5dcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59521c9c-a851-47ac-aa28-25b09a446a5c",
        "cursor": {
          "ref": "66c3a136-6b8f-467b-a0ac-9e1d9b5c294f",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1a6c3e38-5d93-4684-8115-f24eae107c0a"
        },
        "item": {
          "id": "59521c9c-a851-47ac-aa28-25b09a446a5c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "acf27edc-5fc7-4abd-b810-f40f588e9325",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1797,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "f6bbfd3b-a848-41d6-89a5-437d0ea0cd18",
        "cursor": {
          "ref": "84d96147-afd3-46be-a18a-752ae3027076",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "eb3ff9ef-eaed-40e3-8a5b-e58b4616dadd"
        },
        "item": {
          "id": "f6bbfd3b-a848-41d6-89a5-437d0ea0cd18",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0ee0e91f-e46d-4b10-b884-ddc31bf42ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5376298a-bb26-49db-bd0d-87b4491573d0",
        "cursor": {
          "ref": "01b282e7-b156-4958-8d9b-fcf37daf2d21",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e678a552-e490-408c-bc2d-f7b47a5403fc"
        },
        "item": {
          "id": "5376298a-bb26-49db-bd0d-87b4491573d0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "650ffcaa-f50d-4a20-b151-fc44ba7ad119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a7b8b9-aca5-43fe-a35c-e561d1c3f8fa",
        "cursor": {
          "ref": "8b3fb222-f0c1-40d6-acb1-998505e822b6",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2c83f3e8-e747-4bc4-9fe0-fa91c4da2ae7"
        },
        "item": {
          "id": "91a7b8b9-aca5-43fe-a35c-e561d1c3f8fa",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3eaa16cb-c8e6-4f65-b1f6-cf30c019c562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729ebf76-4249-4563-b3ae-6cc477c0e59b",
        "cursor": {
          "ref": "4576f692-a42c-458e-ba27-a12f959e325f",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a5e29b82-68a7-4de9-a4d7-bdeae7542808"
        },
        "item": {
          "id": "729ebf76-4249-4563-b3ae-6cc477c0e59b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b4b026e1-40c8-4f39-9863-d4e4ceefc0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb8aef4-a2b7-4f96-902e-78469114f112",
        "cursor": {
          "ref": "234e3d43-f92a-41cb-9023-809ee649e549",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6a350f7a-2231-4f6a-a5d9-51666352187f"
        },
        "item": {
          "id": "feb8aef4-a2b7-4f96-902e-78469114f112",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8156e09e-6865-4c5c-b645-88dec496f88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2aebab6-caec-4c50-bdae-a2b527fa2867",
        "cursor": {
          "ref": "89534459-d217-481e-9745-c25d54c356c0",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f4056da5-47cb-4c62-91ae-03057eee88dd"
        },
        "item": {
          "id": "a2aebab6-caec-4c50-bdae-a2b527fa2867",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "67dfafeb-1141-4a88-b078-b6c22f509822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d550a41e-f32c-41ef-8223-c3c295666818",
        "cursor": {
          "ref": "a888d509-3aa9-404b-a1c0-b4efc0604b50",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "61d085f3-b160-4351-a0b5-f5a37900b232"
        },
        "item": {
          "id": "d550a41e-f32c-41ef-8223-c3c295666818",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "842d82f2-46b8-49a0-a977-eaaf46b24197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcea824b-4525-4769-8261-28d757e58662",
        "cursor": {
          "ref": "de326564-8378-4211-8e5c-234035f13e57",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "30817d63-c1ce-4743-9094-da9c0b27f71c"
        },
        "item": {
          "id": "fcea824b-4525-4769-8261-28d757e58662",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "35018f92-dcbc-4b8f-8c1d-6a7da42ce9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bf2644-88d1-4d45-a625-18a886febe78",
        "cursor": {
          "ref": "31d4e9bf-aa6f-4ee1-b910-7b8c15faaea2",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4d5a9fe3-ad27-40a7-980f-9b695076c8eb"
        },
        "item": {
          "id": "c3bf2644-88d1-4d45-a625-18a886febe78",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fbc14a3f-a9b8-413f-a333-4e1ffd31fbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d106c9-dfde-4a51-b2c6-39e3f87f30b2",
        "cursor": {
          "ref": "ab10a46f-dc85-4cde-99d6-63cbe9201f87",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b83df8d6-e9b3-4cbd-8b33-6184d293d417"
        },
        "item": {
          "id": "83d106c9-dfde-4a51-b2c6-39e3f87f30b2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5a1aa8ca-85fc-44e0-8021-b00922f2816c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21b8fcb-e4a6-4f2c-8acb-fb52adead14b",
        "cursor": {
          "ref": "a5f1d207-4e76-4376-89c8-043f4a457e0e",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e86085d9-5a28-436d-9b0f-f476067fd6d0"
        },
        "item": {
          "id": "e21b8fcb-e4a6-4f2c-8acb-fb52adead14b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4c0527a4-90c8-4897-94bf-d1fdd74503af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f955d80-6e66-436e-9d94-2ad96f331f20",
        "cursor": {
          "ref": "5af46993-748b-4f97-8930-c440a5735a97",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1f3cac0d-b14e-4668-a161-e835eb398485"
        },
        "item": {
          "id": "1f955d80-6e66-436e-9d94-2ad96f331f20",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "45a69601-4966-4350-aee2-64abf5bb8df4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 645,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaae2d2-062f-4ede-8edd-3b4f9324a171",
        "cursor": {
          "ref": "8702e89d-2554-4d05-890d-13fe8442ee09",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0c918559-f8aa-4b3c-a7ed-03e83fd7719b"
        },
        "item": {
          "id": "efaae2d2-062f-4ede-8edd-3b4f9324a171",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "78d41319-68d0-4cdb-9b43-30612065e897",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 572,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "422bcfe2-b2aa-4f75-a7fe-bd1066e46cb2",
        "cursor": {
          "ref": "35f2ac80-76ab-4277-a847-cc0370ca9dfd",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a4531cb6-bf61-4923-bc08-ec019c1952f4"
        },
        "item": {
          "id": "422bcfe2-b2aa-4f75-a7fe-bd1066e46cb2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "48f4d5fd-f8bf-429e-8937-1d565ace3a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c043280-291e-4031-a7aa-6b172fef0d1d",
        "cursor": {
          "ref": "e9767567-9584-40a3-8ceb-3da7bde641e8",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "92ca8b8b-dbb6-4668-a9d1-196970039db8"
        },
        "item": {
          "id": "4c043280-291e-4031-a7aa-6b172fef0d1d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f76dc691-3bb0-4638-ae50-2856517b6fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98374478-c88d-4d8c-8601-b78abc09ec74",
        "cursor": {
          "ref": "086613b2-7e81-4706-a4f6-b1e69f262bb6",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7942956f-25a1-45f3-a1eb-5e3b79b96827"
        },
        "item": {
          "id": "98374478-c88d-4d8c-8601-b78abc09ec74",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bc71e39a-9019-44f9-9215-eab32a7d79de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5b6ed4-78d7-4278-95e8-3fe106aea754",
        "cursor": {
          "ref": "5390dd33-9545-4fab-bdd4-de15b17ae8da",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "64994391-cfd5-4e68-99fe-8525ebee6fd5"
        },
        "item": {
          "id": "1f5b6ed4-78d7-4278-95e8-3fe106aea754",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f4337e32-3f64-4491-9528-2f067a744996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e3870c-e2ee-4ba6-8b01-2255eb0f9f88",
        "cursor": {
          "ref": "536452c9-a877-4d0e-9652-140b8447c891",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e678234c-c3bd-4e78-a5fe-2e6348c8a6f3"
        },
        "item": {
          "id": "b4e3870c-e2ee-4ba6-8b01-2255eb0f9f88",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a42107d9-394e-4c88-899c-534bcedf0cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e7ceee-37c2-4e21-af7e-cd5623c3197c",
        "cursor": {
          "ref": "53e31c80-8084-479a-b3d9-84e093c539c2",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "355ce73b-0d8c-4c77-a19d-b923cc7235bf"
        },
        "item": {
          "id": "69e7ceee-37c2-4e21-af7e-cd5623c3197c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "924fb950-e5b3-48b7-89bc-e139a3d586c6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 621,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01a8f4b-64d4-4c2a-9fdc-4e0003eab7f5",
        "cursor": {
          "ref": "2bc9cc86-5b7e-409d-bc2a-bad4fcbbbea2",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d0c06451-ed72-493b-94bb-6d9ee090e74f"
        },
        "item": {
          "id": "f01a8f4b-64d4-4c2a-9fdc-4e0003eab7f5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5ae3e3ae-e0d2-4c6d-8e18-79bce0653bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb2b995-d79b-4cb2-99e7-bf388c5803e3",
        "cursor": {
          "ref": "d0742291-4839-4bc7-9600-3c9a86d46311",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "473fd93d-85a6-49a6-86e1-b77719e004b6"
        },
        "item": {
          "id": "acb2b995-d79b-4cb2-99e7-bf388c5803e3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c541f528-abe4-49de-9dd9-0215e7a3e5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8e0510-7cf4-4bea-a10a-8359d8f2d109",
        "cursor": {
          "ref": "1e886366-071e-4653-a3c8-d42ff70315f9",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "498c1cd6-9a1d-4d93-bc73-e91f0e3a8120"
        },
        "item": {
          "id": "9e8e0510-7cf4-4bea-a10a-8359d8f2d109",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "429276be-2620-4762-a17f-d50457ca2196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de40494-e715-449a-9a09-d7db6aba267b",
        "cursor": {
          "ref": "2c202552-63b2-4a5a-9228-e708f6a84c5e",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "87888e16-be59-4f48-bcb1-8e1ca3720c90"
        },
        "item": {
          "id": "8de40494-e715-449a-9a09-d7db6aba267b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "457daff5-52a5-4a86-8288-b1f0172f886e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d021aa59-624a-47e9-b3bd-904e519b16ef",
        "cursor": {
          "ref": "e2797dda-c73c-4f12-8ab2-2f0e515c5a51",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1f15b3c0-22df-4f50-bfc3-0c08be860c21"
        },
        "item": {
          "id": "d021aa59-624a-47e9-b3bd-904e519b16ef",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2dc6cde2-8a64-4a80-8757-8172c2635f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69cdc85-7f4a-4056-8bd8-4b29019ec7a8",
        "cursor": {
          "ref": "6ff56493-286b-4bbc-b3e2-c85644828b0e",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6e5440a8-4b49-4015-b151-f31383aed20c"
        },
        "item": {
          "id": "a69cdc85-7f4a-4056-8bd8-4b29019ec7a8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e312151a-00ce-4e1e-a98b-35ec06f17dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2a93ef-550b-4c96-ae70-377f70b9bf8b",
        "cursor": {
          "ref": "5ab59ddb-5be9-4637-8fda-6aaf4c7fcdfd",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c7e5a321-f73d-4baf-812e-c166faf2bfed"
        },
        "item": {
          "id": "9a2a93ef-550b-4c96-ae70-377f70b9bf8b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3be3a2da-61f8-4298-b80c-55f690e70919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be78b4d-8b2f-4562-ae08-643b83e7237f",
        "cursor": {
          "ref": "61e5a5b3-b7d6-43ad-a663-3a59c37b4005",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7a91b30c-5bf3-4852-961c-0e0396069335"
        },
        "item": {
          "id": "4be78b4d-8b2f-4562-ae08-643b83e7237f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "aa810bf3-bdd5-481b-a0f3-8ea58249dfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fae4200-5a33-4842-80ce-ba28edae4132",
        "cursor": {
          "ref": "b71a61ad-bb9b-4cd9-b450-526d25f43f6a",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5e4a1e78-f02b-4b6b-9e78-308ae3b8ba28"
        },
        "item": {
          "id": "8fae4200-5a33-4842-80ce-ba28edae4132",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f9da4bf4-e6ac-4f98-a46f-eb49c4a4e3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a825ab-55b9-4503-bc36-8c62e8cc2fd5",
        "cursor": {
          "ref": "93daf659-317f-4373-84c7-e75e7bcfe5b0",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bb011b8e-04e3-430c-91bb-30cd9afe0780"
        },
        "item": {
          "id": "c5a825ab-55b9-4503-bc36-8c62e8cc2fd5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0fa1f7ce-058e-4081-a0fb-0df45cb1209a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaec844-d211-4233-9f3e-00b29c29e500",
        "cursor": {
          "ref": "5ee32b8a-2937-47a6-b7c7-1f78c4fb13a2",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ea47c325-e7cc-4963-b61c-8ad005660bbd"
        },
        "item": {
          "id": "3aaec844-d211-4233-9f3e-00b29c29e500",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b2d56b27-acd8-4b0b-b108-2b90b822ca44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd3a4a2-7f29-46df-b38d-a65b98a592f2",
        "cursor": {
          "ref": "0fcb7ffd-17d0-410b-bc08-50d3b36737ee",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "df76dde8-e628-4146-aa88-4c2bdb39e9e0"
        },
        "item": {
          "id": "9dd3a4a2-7f29-46df-b38d-a65b98a592f2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "45e9e2aa-8ca4-4fef-abfa-b081b6112cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 921,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e96ac3-e765-4e37-9dbd-e03ddafa32e5",
        "cursor": {
          "ref": "4e94171b-0d12-4adb-8a38-c195ef0254ec",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "56b3f53c-2ac4-4341-97c4-ece5ada53f03"
        },
        "item": {
          "id": "c2e96ac3-e765-4e37-9dbd-e03ddafa32e5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a633c921-e24a-4261-bd25-9af25061b15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e7ce8a-efdc-4e09-8881-8fc3956ac054",
        "cursor": {
          "ref": "96ce6c09-bd1a-44b1-b390-87d13f88ed7b",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8abf100f-b8cf-4d32-bc92-1d10ec8796db"
        },
        "item": {
          "id": "e6e7ce8a-efdc-4e09-8881-8fc3956ac054",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "826859d0-1ff8-488e-a329-63290dc40ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18b778f-f105-45d8-a458-d1075793642a",
        "cursor": {
          "ref": "857596ed-fb28-426d-8f80-f6a31e372476",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "26e6c55c-0b4e-4ed1-8f1c-999b2cd40a0d"
        },
        "item": {
          "id": "e18b778f-f105-45d8-a458-d1075793642a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "17db51cd-3b03-4c8b-9639-e180f12f23d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8f0a55-d7aa-45f2-9c41-41ae5ce59de3",
        "cursor": {
          "ref": "5df95b91-87b5-4cdf-809c-e3a2b993af24",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5bcd064a-a653-4857-9dda-fd62baf86990"
        },
        "item": {
          "id": "ea8f0a55-d7aa-45f2-9c41-41ae5ce59de3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5527feac-975b-459f-819c-3be249b3f05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f94a99-7c88-453f-aeff-ef771126178a",
        "cursor": {
          "ref": "7876d357-affc-49f9-9008-9639bb541677",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2d7bfc67-4dba-43ec-ac05-93ed388eedbd"
        },
        "item": {
          "id": "03f94a99-7c88-453f-aeff-ef771126178a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4bf336dc-cc48-4cd9-837e-c4a1e72f25ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d42a64-9250-4b08-ad88-8548d9d66e37",
        "cursor": {
          "ref": "ff033dbb-a74c-47bd-93c6-fcc9922c5e4a",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ac165602-616e-4ecd-bb5b-9e6c30cdddc0"
        },
        "item": {
          "id": "21d42a64-9250-4b08-ad88-8548d9d66e37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2970f1c3-86ac-4ff9-91c9-187f5f85b33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 983,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7813d611-6659-4690-a7cc-89deec49094f",
        "cursor": {
          "ref": "6b02cdee-c36d-4862-8c3b-0a97ee5665a4",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b2c4c540-a495-4455-80c2-9e2ee2425215"
        },
        "item": {
          "id": "7813d611-6659-4690-a7cc-89deec49094f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e433e06f-e195-456b-b50c-31e568a4de31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1141,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaa2897-ab21-408d-8b1b-84521a25aee4",
        "cursor": {
          "ref": "6b4ba274-5e53-4e3d-9b83-1bf9fbfae999",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0d202f1e-73d0-428d-bfae-0ec313ff85ec"
        },
        "item": {
          "id": "ffaa2897-ab21-408d-8b1b-84521a25aee4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3715ee2e-45c2-4328-84d8-35349b4f90fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de80274-f3b5-4b99-bfc2-455bc23f5ea0",
        "cursor": {
          "ref": "81f480ea-1db7-45c8-9eb0-70e98549acc2",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "769ca541-6539-4ec2-9139-cea3680b1ce1"
        },
        "item": {
          "id": "6de80274-f3b5-4b99-bfc2-455bc23f5ea0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ffc7b61d-6fb0-4226-bcc6-ce1826891f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be81405b-74f8-4525-9d9c-4b0d85866d8e",
        "cursor": {
          "ref": "258f4df3-b300-4f57-b858-91621dee5f4c",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fcb6f4e9-da63-4eeb-a498-b1d2abe6bb42"
        },
        "item": {
          "id": "be81405b-74f8-4525-9d9c-4b0d85866d8e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0e8c324a-7d79-49c3-8dd2-60af56f93382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee75d9b-a1d3-4b05-9f75-5a87df0f7f03",
        "cursor": {
          "ref": "0e2ce9b0-adcc-4555-b05c-fa2d1b86dc32",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "22c906e0-44b9-4034-ae8c-61fddf3abdcb"
        },
        "item": {
          "id": "7ee75d9b-a1d3-4b05-9f75-5a87df0f7f03",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "62f9e061-706b-40c2-a401-bcdc1c313681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0284cc01-93f6-4bab-90ea-48e2f4ef76ed",
        "cursor": {
          "ref": "0f87bf5c-5b72-4837-8d6f-aa469b3c087b",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d9dfb7fc-0e03-4537-96d4-864045c631ad"
        },
        "item": {
          "id": "0284cc01-93f6-4bab-90ea-48e2f4ef76ed",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e05f379e-b052-4e96-b16a-4e06acf4cbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe0e221-a982-4019-a668-84f685817530",
        "cursor": {
          "ref": "1a8db0a2-4e92-492f-aa71-84cb71cd1009",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "15d39d47-5fa4-4649-b1cc-7b5e36174e27"
        },
        "item": {
          "id": "afe0e221-a982-4019-a668-84f685817530",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b76556a8-2016-4238-988e-2161bea71e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1045,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a88d84c-89d8-467b-886c-d363f527bf7a",
        "cursor": {
          "ref": "a3d35d1b-718a-413f-b1f2-3d0bf84d0999",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a930138e-b6c0-4672-ba9d-09d2fcd6d570"
        },
        "item": {
          "id": "3a88d84c-89d8-467b-886c-d363f527bf7a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d7b95ca6-9256-4d00-8130-c220d8e0af50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decd6aa6-42cf-4291-b39e-3304206d8b0f",
        "cursor": {
          "ref": "7c9cc3ee-8b2b-4f6c-9f6f-9dbab1c3881d",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3393838f-b84f-4add-9373-7515b3733b7d"
        },
        "item": {
          "id": "decd6aa6-42cf-4291-b39e-3304206d8b0f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a49d13aa-94b1-4296-b161-b1a059bdb5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd595430-a53b-4e65-9740-7886ef529d39",
        "cursor": {
          "ref": "824734b2-d103-4385-9bc3-8c50539cbb32",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0a5ab26a-6909-4555-befc-3d52ab822eb2"
        },
        "item": {
          "id": "dd595430-a53b-4e65-9740-7886ef529d39",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "24c21683-ad54-4aca-ab0a-5f135818de07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4c4dd5-a567-4b1a-a1f7-0f2643d4ab3c",
        "cursor": {
          "ref": "6957aeab-8329-480e-adc6-feb1c135f055",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "99e7d52e-4799-4d42-b63e-b8f304ab2166"
        },
        "item": {
          "id": "7f4c4dd5-a567-4b1a-a1f7-0f2643d4ab3c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "df0eec88-2017-4321-a216-cda69039d9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4959ab5-be66-487e-9f05-035b334d99d0",
        "cursor": {
          "ref": "44be2bf9-347d-49ec-893f-e7b296da33dc",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "70abbd41-fc20-4480-8f46-464b0c2d2d37"
        },
        "item": {
          "id": "b4959ab5-be66-487e-9f05-035b334d99d0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "64f74a81-7a05-4db6-861d-a3c2364f5367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aa6e1d-dd90-4cda-8076-bef2a42b9d5a",
        "cursor": {
          "ref": "2cd057a7-4d1d-4837-80b1-f88154b9b931",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "81ac583c-ee58-4968-85d3-2a0a78d13ddb"
        },
        "item": {
          "id": "43aa6e1d-dd90-4cda-8076-bef2a42b9d5a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b39cb7b6-91c7-4a53-aaec-c318faa98269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97eb77b-ce0d-4312-a8ff-fae90e981f49",
        "cursor": {
          "ref": "ceab69a8-f00e-4de5-a6ab-d6fb40e4d9e0",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7cf7bdcc-a5ac-41a6-958e-aac18ba8c9f2"
        },
        "item": {
          "id": "e97eb77b-ce0d-4312-a8ff-fae90e981f49",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "141900f9-a57b-4df1-b300-171f3f0c00dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49510da-4986-4f3a-bea8-5b97d679fe2b",
        "cursor": {
          "ref": "f49feac1-43d0-480e-86af-98ada813915f",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a668c0e0-a545-4be0-9bd6-ea0082993fbb"
        },
        "item": {
          "id": "d49510da-4986-4f3a-bea8-5b97d679fe2b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2f6bac9e-4226-4038-b17a-7964e28be905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfb460f-800e-4b7d-a221-a773db8acddc",
        "cursor": {
          "ref": "c7d4a483-0d36-4909-b1a1-8ae9cc1470cf",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "367e2195-25e3-4bb0-825c-650785f02ad1"
        },
        "item": {
          "id": "1bfb460f-800e-4b7d-a221-a773db8acddc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "20ea7b22-220c-472d-b06a-dfb14546bda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e83235-619a-490f-babb-1e3be70d3ac6",
        "cursor": {
          "ref": "8fda694f-0edd-40eb-beb6-687ac6ca176e",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "447a00e2-7f0f-42c4-bba2-5de1f10da0ea"
        },
        "item": {
          "id": "55e83235-619a-490f-babb-1e3be70d3ac6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5214cabc-84b3-42f3-9de3-b826b6109829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1957ae3-9e51-4ae0-b476-f741d9f5387c",
        "cursor": {
          "ref": "e3095c99-3019-47bc-b4fd-0d94653e5c25",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4dda64fe-6320-41d5-b54a-25b81d174487"
        },
        "item": {
          "id": "b1957ae3-9e51-4ae0-b476-f741d9f5387c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e87ca323-11bc-4ecf-87a5-166b46fc9737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8fed63-e722-42d5-9a3e-3df525496f01",
        "cursor": {
          "ref": "80731917-9a7b-4639-8090-78a774e95562",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8ff87634-ff26-4648-a39a-db3a72a0999f"
        },
        "item": {
          "id": "5d8fed63-e722-42d5-9a3e-3df525496f01",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3fac5d46-dfc1-441f-bcbd-0f45e19180e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806d08a7-f31e-4bf8-9893-dd2117752301",
        "cursor": {
          "ref": "dea44c8d-2e36-4a30-88d0-5deaf61985ee",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "04c1720e-8675-464a-89f6-f5b7cad4fac6"
        },
        "item": {
          "id": "806d08a7-f31e-4bf8-9893-dd2117752301",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c5d2701c-e461-4d42-b7f8-46dd46c5083e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dc268a-b548-45f6-a45b-9e17877424ca",
        "cursor": {
          "ref": "325e1b89-5b13-41c2-8cfb-edf82e7b94ca",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d2e370c2-dfde-4ce0-b373-0cbdb5e8ac67"
        },
        "item": {
          "id": "34dc268a-b548-45f6-a45b-9e17877424ca",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f4b94b34-0293-4fda-9393-59747762a493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ec5581-2aa7-4b41-b9d2-04b6392c55ee",
        "cursor": {
          "ref": "37bca7f0-6be3-4520-be12-978ded2a3cbc",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "01339caf-e2bb-4511-9d44-098c591bd41d"
        },
        "item": {
          "id": "68ec5581-2aa7-4b41-b9d2-04b6392c55ee",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e40552ea-9fa5-4b07-8869-87e797f41d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5189a6d9-3cf7-4e2a-8542-7cee8e2f7f0b",
        "cursor": {
          "ref": "30b9d4e3-3677-4214-8407-7cf3f73a7d1b",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5c8906ec-514e-48cf-b85b-8cb82ad86d3c"
        },
        "item": {
          "id": "5189a6d9-3cf7-4e2a-8542-7cee8e2f7f0b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b9891686-8305-450a-a20f-10422f1b9428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac21a3c6-4ca4-41df-8c08-b751867b7bba",
        "cursor": {
          "ref": "52c98107-c9fd-48ac-b36b-8ccad053c73f",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0836e95b-c9a7-4a52-b304-588fc0bbc55f"
        },
        "item": {
          "id": "ac21a3c6-4ca4-41df-8c08-b751867b7bba",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9758d8b2-95ce-477a-9382-f886e0019170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34770894-b287-4ee0-ae92-21fafbbe6337",
        "cursor": {
          "ref": "67ec9068-724b-42c4-8bd6-b4d62131d6fb",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "af863ca0-3948-4998-8ad1-d2aa47a697ed"
        },
        "item": {
          "id": "34770894-b287-4ee0-ae92-21fafbbe6337",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "70a286ef-060a-400c-9435-ef5ad2d084d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd9b263-ed13-41f4-86c3-32a2091effea",
        "cursor": {
          "ref": "dc319472-27e5-4d7c-83b9-63796a3d56c2",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6bf523bc-8f7d-4006-98bb-2c0bcafc3c61"
        },
        "item": {
          "id": "9cd9b263-ed13-41f4-86c3-32a2091effea",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9e9e0584-58fe-4fea-8938-dec34ba6b87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1630d1-e578-4ae8-823c-09f4c08233f8",
        "cursor": {
          "ref": "cff5df66-2412-43b7-95cc-613148756e46",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "203bcf4a-d7e1-4666-aa13-5bf5ebc994f5"
        },
        "item": {
          "id": "2f1630d1-e578-4ae8-823c-09f4c08233f8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9519c4b5-3469-41f0-bf5b-3b8e7f62ff5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6654a8-bd9f-4d37-ab34-6e238367271f",
        "cursor": {
          "ref": "2041bb92-589a-461d-9b03-ce9468e4bd2a",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3c98d403-67f4-4d4c-991e-a54175727c0b"
        },
        "item": {
          "id": "7e6654a8-bd9f-4d37-ab34-6e238367271f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "31c93836-2d55-477b-a10f-6f9369133b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ebac57-3069-48bd-a080-d63e7e753960",
        "cursor": {
          "ref": "5cff947d-c81c-455e-b3d2-4443c9e74acd",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "29f77af8-dcea-4b37-af71-1710c801c76f"
        },
        "item": {
          "id": "13ebac57-3069-48bd-a080-d63e7e753960",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ba78ddb8-ed34-4a7e-86d9-7a08c83610bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d371bf4-7dcf-46dd-8158-ce22bfb69a45",
        "cursor": {
          "ref": "d3c9b586-3972-4964-9e28-85b97b816c9f",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d5a44928-3f75-48a8-9857-d46daecdde4a"
        },
        "item": {
          "id": "3d371bf4-7dcf-46dd-8158-ce22bfb69a45",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a39d89b3-6008-4b5f-8b14-f443fc77df19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6fc104-bf4d-40b7-9d29-24a8c5834bb8",
        "cursor": {
          "ref": "c73dbc46-f3a4-443e-b968-91a677f5170a",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0f4bdce4-8304-4adf-916d-f75e2e71c494"
        },
        "item": {
          "id": "4c6fc104-bf4d-40b7-9d29-24a8c5834bb8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8770a980-5ea7-4cbb-9ee4-b2c54ded1620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c05ec6-a10c-4b2a-9dbe-489ef586c9d2",
        "cursor": {
          "ref": "1e7ca009-bb69-4a4d-aec9-82485243e44a",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "97aa26dd-4fd7-4af0-add2-818d28336a37"
        },
        "item": {
          "id": "29c05ec6-a10c-4b2a-9dbe-489ef586c9d2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "910a1444-0779-4d3f-9355-fb5848e1a0c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fd9025-f114-440e-b539-f80925caa3ee",
        "cursor": {
          "ref": "8062490a-9f6f-4325-8e19-ac136e49d907",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8f7665ca-311f-4512-a728-d026c5cab081"
        },
        "item": {
          "id": "d6fd9025-f114-440e-b539-f80925caa3ee",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "39fc2aab-ccb1-430b-bdf5-702d492f2748",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50633d29-3f81-47e2-8ce3-a132d73457a7",
        "cursor": {
          "ref": "778ca645-ddd4-4268-86bc-f2243609e3e6",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e6e80dc0-4b1b-4f6f-9bfa-5752be5ed6de"
        },
        "item": {
          "id": "50633d29-3f81-47e2-8ce3-a132d73457a7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d560ac68-c9ce-4dde-8c56-0cce56fa4d60",
          "status": "Created",
          "code": 201,
          "responseTime": 4193,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "ec79e054-e854-4817-979b-e24a84f64b71",
        "cursor": {
          "ref": "996da9ad-15ff-4a9d-b38b-0961aeda7142",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c4628e4e-6908-411e-99f2-a92f83b9f643"
        },
        "item": {
          "id": "ec79e054-e854-4817-979b-e24a84f64b71",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fc5915df-3014-4f1b-82a7-70754328e77a",
          "status": "Created",
          "code": 201,
          "responseTime": 4708,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "8b186eb9-3fb8-4d0e-aaae-a6f3f02a86de",
        "cursor": {
          "ref": "f095d95b-6fd4-4e4f-9cef-320ba18409cb",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8a56a7a0-f56a-4586-965b-0c714ec90fc1"
        },
        "item": {
          "id": "8b186eb9-3fb8-4d0e-aaae-a6f3f02a86de",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "71015c1a-0c8f-4e11-b901-12a7214c4e42",
          "status": "Created",
          "code": 201,
          "responseTime": 4366,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "1ab231a6-7619-4f9c-9677-5dc6dd3a0e0c",
        "cursor": {
          "ref": "2b711030-e33d-4f1b-a879-f266aada4415",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "16a5cf3a-f574-4e77-9874-cbe950d6bff0"
        },
        "item": {
          "id": "1ab231a6-7619-4f9c-9677-5dc6dd3a0e0c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "effc5c92-12eb-42ec-8d1c-e7808ee73b21",
          "status": "Created",
          "code": 201,
          "responseTime": 4097,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "9c197462-2993-449e-925a-1d363a1a601f",
        "cursor": {
          "ref": "23e5a09d-1b16-4d62-b2a2-81ca93fc5f33",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2a765dcd-4c6a-4846-a85f-2d1cab66a607"
        },
        "item": {
          "id": "9c197462-2993-449e-925a-1d363a1a601f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9904c57d-70c7-4fb4-a8fc-668174b82e17",
          "status": "Created",
          "code": 201,
          "responseTime": 4732,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "5ffbc70a-25d3-47ed-ac5a-e862f3f411c0",
        "cursor": {
          "ref": "cb274837-658c-4101-aa9f-c0c0b04b3a0f",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2981ccf7-90e4-4d03-a110-fa750f3cff36"
        },
        "item": {
          "id": "5ffbc70a-25d3-47ed-ac5a-e862f3f411c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "857cce0f-c02a-4655-b904-c5528b268b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffbc70a-25d3-47ed-ac5a-e862f3f411c0",
        "cursor": {
          "ref": "cb274837-658c-4101-aa9f-c0c0b04b3a0f",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2981ccf7-90e4-4d03-a110-fa750f3cff36"
        },
        "item": {
          "id": "5ffbc70a-25d3-47ed-ac5a-e862f3f411c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "857cce0f-c02a-4655-b904-c5528b268b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cde05c4-67d7-49fc-b01a-1b50daa3b22b",
        "cursor": {
          "ref": "0e6df5a3-bb6e-421f-8c25-1ed1fa60de4b",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "437e792a-dca2-4e09-abf8-ab3ab321af0c"
        },
        "item": {
          "id": "2cde05c4-67d7-49fc-b01a-1b50daa3b22b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "00fcfa1c-211a-4a24-9b3f-e8b17d9ab62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa4d8df-8e17-4fd3-8e55-fa63cb2ef7e3",
        "cursor": {
          "ref": "b8943b5d-bda4-4679-a33c-c00bed3d0167",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "77da6a9e-5222-4eff-be82-9741f82bab51"
        },
        "item": {
          "id": "7fa4d8df-8e17-4fd3-8e55-fa63cb2ef7e3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ca89ba1b-808b-429c-bbb8-eff41b54b121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684b7cd1-9e90-4139-80d0-a06f1c4146dd",
        "cursor": {
          "ref": "1667e6c1-fc44-44ba-9818-6e7c5dd8cd09",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7d63f0cc-92cc-4e71-81fb-7495ae1b31fc"
        },
        "item": {
          "id": "684b7cd1-9e90-4139-80d0-a06f1c4146dd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5b2483df-68dc-4271-812c-48ada10f8e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2feb92f-f0c5-45b0-919f-eeb25b5e73ff",
        "cursor": {
          "ref": "c34aec47-30a7-4c1e-9501-e4a7d76f8d9a",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9cb2a083-4e9f-4564-b248-b0c88f88cb41"
        },
        "item": {
          "id": "e2feb92f-f0c5-45b0-919f-eeb25b5e73ff",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f350ee4a-b585-4c51-a58f-356849231262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7273f73f-b332-4a33-8628-584fb9ae20e2",
        "cursor": {
          "ref": "0d276e6d-c6ca-4827-9667-5b6563058896",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fc668f61-e566-4e29-a3aa-cd8d05d63893"
        },
        "item": {
          "id": "7273f73f-b332-4a33-8628-584fb9ae20e2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b150b9e0-c9b0-4871-9483-9fe0cc7657a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f87ce5d-9fe6-4133-a265-6f26bc432360",
        "cursor": {
          "ref": "f2e780a6-d32b-4bf8-a5d0-5c0992a7f745",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f18c7ac6-9cce-49aa-bfc0-c5d897908c0e"
        },
        "item": {
          "id": "2f87ce5d-9fe6-4133-a265-6f26bc432360",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eb3218c1-4b6c-4289-9273-fc99e4ffb50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aada32f-30ca-4291-9b41-a5c4a14f9f6d",
        "cursor": {
          "ref": "98b3bf51-a3c2-4b1c-b527-e054da8abb53",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "94fda4a3-00aa-4673-bd13-6413ceceb94a"
        },
        "item": {
          "id": "2aada32f-30ca-4291-9b41-a5c4a14f9f6d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b6732c13-6d9a-4c4f-8e5e-ed0eb7b97dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e68a2e-4cfc-4d82-9cd2-d0e11e895470",
        "cursor": {
          "ref": "39c703e2-3d16-4c76-b42a-fffabbea950d",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fefd2cab-07d3-436d-9def-2e46d220cbfd"
        },
        "item": {
          "id": "c8e68a2e-4cfc-4d82-9cd2-d0e11e895470",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "184adb99-d7be-4e8b-9fec-548ea3e72cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e3282d-051e-4d67-9aaa-e8b3be4c17db",
        "cursor": {
          "ref": "bb155659-bd76-4512-b334-1c855a950b0a",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "781ae67a-7299-440a-87a3-24b8d61a5988"
        },
        "item": {
          "id": "a5e3282d-051e-4d67-9aaa-e8b3be4c17db",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0ab2e952-6426-4301-81e8-acf215e2722d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19700345-a4d7-4f84-b089-a27411fc8fda",
        "cursor": {
          "ref": "1b6927cc-9ace-404e-b5af-af864bb1837c",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9473c063-29ad-4fed-82f5-ad03308571ec"
        },
        "item": {
          "id": "19700345-a4d7-4f84-b089-a27411fc8fda",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "154b6cd9-76f1-4ea7-95c8-d70e92b6a3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb9ca54-455d-478b-9acf-4497b93591a9",
        "cursor": {
          "ref": "f1e13ae1-1819-4217-bc66-b932473f29f3",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ff6edb61-c6d5-4562-8b5d-ae569cddf3a5"
        },
        "item": {
          "id": "dcb9ca54-455d-478b-9acf-4497b93591a9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "26f11c13-6b84-4c12-9acd-2f247d347a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87adcb6-7cf9-4a44-a47a-f51771eecfbb",
        "cursor": {
          "ref": "6a6d3e2b-8ab9-4635-baa1-b65a5d991b42",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c23aed3f-8aa5-44c5-a0da-b9a6e3290ac0"
        },
        "item": {
          "id": "b87adcb6-7cf9-4a44-a47a-f51771eecfbb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1c570221-d0c3-4f9e-9e76-725e4579e62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca18d749-e43a-4e5b-b4ad-0efb449536ec",
        "cursor": {
          "ref": "076cb039-18ea-4be7-9d68-514e6d9a52c4",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "66d5a0b5-2765-47fd-be39-24e46c2d9d5f"
        },
        "item": {
          "id": "ca18d749-e43a-4e5b-b4ad-0efb449536ec",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2b421b50-65a6-434a-871f-200f7656768c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57540c82-a938-47c9-812c-ba93c21cd42f",
        "cursor": {
          "ref": "41268ba7-cc70-4fa5-bd84-7025edaa3040",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1b875e16-5a5f-4ea4-a0b1-ea8807a91c4c"
        },
        "item": {
          "id": "57540c82-a938-47c9-812c-ba93c21cd42f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d14456a0-e15a-42a5-9264-bf0830ad5602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c4c415-2ffe-4c1a-ad64-b4d1c8a478bb",
        "cursor": {
          "ref": "523c4a86-9830-4030-af0a-5ebc60ab80ec",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ae80e8a7-05f5-4af1-8b2e-9c473220869a"
        },
        "item": {
          "id": "b5c4c415-2ffe-4c1a-ad64-b4d1c8a478bb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6fd4f83a-424c-4875-95e4-7248d2a56b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166a3c84-95cb-424a-8a55-94e49c87cd09",
        "cursor": {
          "ref": "a575e62b-6b24-4571-99c3-9cd4892f9c26",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "24aa771e-8e7a-4436-bf6a-e23a4b2c4eb0"
        },
        "item": {
          "id": "166a3c84-95cb-424a-8a55-94e49c87cd09",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6f794bd3-0463-40d1-ad51-bacd32570264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5084344e-716e-4e00-8375-0a1f15a6aa45",
        "cursor": {
          "ref": "f4bbb8b4-01b3-4c13-96f2-035be9c64903",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5b984533-cf1d-4e70-a9f8-ad291cef9731"
        },
        "item": {
          "id": "5084344e-716e-4e00-8375-0a1f15a6aa45",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3c093f8b-ac08-4cb5-9cb5-f686ae519b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93412709-200d-497e-92a4-66d3eb23a696",
        "cursor": {
          "ref": "9edd1bf2-e361-44f2-ba88-51a2af90fa32",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "97654f43-9d0e-4290-90fd-34be2d8bfbac"
        },
        "item": {
          "id": "93412709-200d-497e-92a4-66d3eb23a696",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d1c2c0b4-9c2f-470d-8e5b-afba48f7cf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b59ac2a-7131-40de-a00c-c5436ec13cd1",
        "cursor": {
          "ref": "1f45458a-8940-4494-b076-21a4b2511f6e",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0f8657c5-4fc5-4896-903d-49039d71f153"
        },
        "item": {
          "id": "1b59ac2a-7131-40de-a00c-c5436ec13cd1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ea553aae-a5fd-478e-b247-4dc800c1e7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235158b1-1859-4cf6-8cbd-77bc6e377afa",
        "cursor": {
          "ref": "ee0245cd-a80f-4d3b-909b-17991da9ed6e",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "159c918a-7a2e-48ce-b9da-e385016b329a"
        },
        "item": {
          "id": "235158b1-1859-4cf6-8cbd-77bc6e377afa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "17a2351e-f35a-4f6a-8b0d-74bfcfc21300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4241219e-8025-4361-9317-f2d14b95e33a",
        "cursor": {
          "ref": "b940f55e-d9ac-481d-bf89-34616afdd22b",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "11b38059-df80-4e75-abb9-e691c93926d8"
        },
        "item": {
          "id": "4241219e-8025-4361-9317-f2d14b95e33a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "866c9ed5-77a1-4fe5-bcc1-f103682ebc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ca11f8-aa2f-445c-9eaf-1322a91166fc",
        "cursor": {
          "ref": "ce0d51ce-c167-4be3-a6e3-e8dd9d765d9a",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c012d65d-98b6-4cbb-91af-37f26f83c054"
        },
        "item": {
          "id": "47ca11f8-aa2f-445c-9eaf-1322a91166fc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "964c4809-5de4-4005-9417-fdbaae7cff05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c8722e-1287-49fe-b09f-841b8e300faf",
        "cursor": {
          "ref": "42e85c05-46c1-4bea-a63d-20b433bf1f44",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "55ebae50-278c-4faa-873d-a956ae2740f2"
        },
        "item": {
          "id": "26c8722e-1287-49fe-b09f-841b8e300faf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ea21cc5c-3c3a-4e42-9872-75dcf807d511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45a0644-a563-4ec8-8eb2-a16176ae888d",
        "cursor": {
          "ref": "26cb853d-3620-4d54-b3eb-849076165c8e",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "83d72bc8-d436-4fca-8f3a-508cac73da01"
        },
        "item": {
          "id": "e45a0644-a563-4ec8-8eb2-a16176ae888d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f6aa6e71-e44c-4d86-bdd2-ddceffde10af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f56ff24-bdcb-4b80-82c7-5327566f4e37",
        "cursor": {
          "ref": "55365031-4ff4-43d3-86b9-0545bc1107a9",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dcff0890-7eb1-463a-ba69-b7bb6961641f"
        },
        "item": {
          "id": "7f56ff24-bdcb-4b80-82c7-5327566f4e37",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fd0db4bc-7a8c-4768-a01f-048d027e4a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d49c437-ac1c-4dc6-be2d-f4810b246c37",
        "cursor": {
          "ref": "450bb44b-da7b-4dfe-b1fa-4faeae7e9d84",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e2e740e6-3f3a-491e-8ac5-698ca953ff16"
        },
        "item": {
          "id": "2d49c437-ac1c-4dc6-be2d-f4810b246c37",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fdd9c33e-42b4-4d10-a130-c41e9e85364f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b3c4db-31db-4bb2-8498-5e512d0d2fbb",
        "cursor": {
          "ref": "43c6333c-88cf-458a-888a-510b570d9157",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6e9286a3-8def-4637-a43c-d5ebe8a71ae0"
        },
        "item": {
          "id": "68b3c4db-31db-4bb2-8498-5e512d0d2fbb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0b852826-271c-4423-9405-13957968ebc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910dbd59-e947-4d51-8d43-4b710928e6e2",
        "cursor": {
          "ref": "9de2918f-de86-4597-a504-6dececb5da68",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fb6524ce-6eb4-49f7-8f76-cb236ee01b09"
        },
        "item": {
          "id": "910dbd59-e947-4d51-8d43-4b710928e6e2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "10371afd-343c-4c44-9d42-f661aa812257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533299b8-bede-4810-b209-32011bc69577",
        "cursor": {
          "ref": "1cbbb81f-4be9-4cd9-90b3-3ddf07783c5c",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0a391e9c-9eb3-4f4f-bcf8-64c631a8d810"
        },
        "item": {
          "id": "533299b8-bede-4810-b209-32011bc69577",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0b16709f-db17-4133-a928-cf54e031cdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d760f651-06cc-4085-bec9-8b25c1619068",
        "cursor": {
          "ref": "ca3c8345-34f7-44b3-a9e8-8373e7e03450",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b73505d9-1088-44f3-a0dd-2236b8b17521"
        },
        "item": {
          "id": "d760f651-06cc-4085-bec9-8b25c1619068",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c415a5de-caf3-408d-a668-78945ad6ae66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68da9eb-e676-44e6-bb77-e617a0d2582c",
        "cursor": {
          "ref": "92309cff-83ba-42b1-97f3-c537d4b775d6",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a6d179ce-f4bf-45ff-b317-55938b0fd900"
        },
        "item": {
          "id": "d68da9eb-e676-44e6-bb77-e617a0d2582c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6226ddde-a231-43c5-9738-8106fa61c15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d711cbb5-c461-4727-9fac-6efb28842f0c",
        "cursor": {
          "ref": "a4ea6ccf-a283-411c-b187-bdec1643a1ab",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2967fd26-88ce-4d7f-ac9f-e3b6e262143d"
        },
        "item": {
          "id": "d711cbb5-c461-4727-9fac-6efb28842f0c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "654a26b1-5f19-4999-a283-ea8fdb5e80dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4748ec24-13a3-4021-bf25-4cc0082f9384",
        "cursor": {
          "ref": "8ee8ca55-34cd-4a78-b8ba-bd3295458f63",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c54c5f61-a136-4c8d-a743-8b4862b47e2c"
        },
        "item": {
          "id": "4748ec24-13a3-4021-bf25-4cc0082f9384",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c90a457d-aa45-4a19-9ca1-2ab1e2a9d45d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386724cb-45a0-45f3-9f92-1d7f8da2ee8c",
        "cursor": {
          "ref": "eeb0df4f-b42b-4024-8ed8-94ea8aac0e89",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "abcf03e1-ac33-446d-9a9c-00ebf529c121"
        },
        "item": {
          "id": "386724cb-45a0-45f3-9f92-1d7f8da2ee8c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "731bf0ad-82ba-4b4b-9324-c14c7142b572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386724cb-45a0-45f3-9f92-1d7f8da2ee8c",
        "cursor": {
          "ref": "eeb0df4f-b42b-4024-8ed8-94ea8aac0e89",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "abcf03e1-ac33-446d-9a9c-00ebf529c121"
        },
        "item": {
          "id": "386724cb-45a0-45f3-9f92-1d7f8da2ee8c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "731bf0ad-82ba-4b4b-9324-c14c7142b572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c34d9c-a0ee-4e15-80e5-0a73066be675",
        "cursor": {
          "ref": "1f6a91b6-7c96-4063-b5a6-821a4e407f48",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9717c1b0-8ae2-40ee-a0d3-96f3c039e7a5"
        },
        "item": {
          "id": "a0c34d9c-a0ee-4e15-80e5-0a73066be675",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dc3dfaf8-1497-4a28-9cee-c87dccaf7bba",
          "status": "OK",
          "code": 200,
          "responseTime": 369,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "76a54464-8851-4b01-a24d-ad79ea412933",
        "cursor": {
          "ref": "82741d72-84cb-4970-886a-9656ca74dbcd",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e00135b8-b6d2-4573-bd2c-7eb08a456a67"
        },
        "item": {
          "id": "76a54464-8851-4b01-a24d-ad79ea412933",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4a91e325-d093-4fa4-b1f9-e3b0d2445a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e9f89d-971e-4afa-a923-27ec19a98edb",
        "cursor": {
          "ref": "8b53c879-64ce-4416-8890-98b655c11e88",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "11a63ebc-6853-456d-8d96-166c78623dd1"
        },
        "item": {
          "id": "01e9f89d-971e-4afa-a923-27ec19a98edb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "570e7306-381d-4436-ae70-26d47e58482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf2c69f-683c-4016-a3bf-aa97c98229f5",
        "cursor": {
          "ref": "c57ea34b-791e-4681-b911-f72711738a89",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f0eb3252-6c93-4b25-a9fb-3f58e61a27ec"
        },
        "item": {
          "id": "9cf2c69f-683c-4016-a3bf-aa97c98229f5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "06a73244-22be-42e8-9b1c-467d9bde4b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba45a0c-bde5-4a8f-9a3d-eabf2a3fa8d1",
        "cursor": {
          "ref": "b6283726-9be2-4d62-8fe9-52953f999bf8",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ae9eef8a-5471-4374-93d7-5fbd223f60d4"
        },
        "item": {
          "id": "6ba45a0c-bde5-4a8f-9a3d-eabf2a3fa8d1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "aaeeb50f-0dc8-49f1-a937-eeeb92e978f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4716483f-ad8c-429b-bcde-c1c5c7e5a2f3",
        "cursor": {
          "ref": "cec8ce33-2745-47ff-a28f-9f24743e74a2",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8c0c29c1-a070-4c21-bbd0-82a94e3a72d1"
        },
        "item": {
          "id": "4716483f-ad8c-429b-bcde-c1c5c7e5a2f3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7a5320bd-14d5-4ec6-bccb-8c7f94227373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b798dcea-751c-4283-8600-9bc1e71d833a",
        "cursor": {
          "ref": "30bb4926-59ac-4a65-b5da-0e8c900754a7",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b32fb286-f80f-44c7-ba5f-811a03e69517"
        },
        "item": {
          "id": "b798dcea-751c-4283-8600-9bc1e71d833a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "11ab5833-3c73-4c68-b84e-a8374c8361b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f0ecd7-50e3-44b8-85a8-f6e264ae7487",
        "cursor": {
          "ref": "d6c06bcc-8025-43d6-9d01-ea21f764fb9e",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3b0d2c34-8ae4-4f44-ba47-66af6812b25c"
        },
        "item": {
          "id": "16f0ecd7-50e3-44b8-85a8-f6e264ae7487",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c709fc41-80a9-4de3-9a37-0316c116234f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddc2d25-f841-44c3-b0d6-d74c745c84ed",
        "cursor": {
          "ref": "84010cfc-b068-4f71-b110-3db362d3b86b",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "19fe4c38-ffa3-44b6-9b2b-2d26c72e9fe2"
        },
        "item": {
          "id": "9ddc2d25-f841-44c3-b0d6-d74c745c84ed",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4b5d9361-7bb4-4811-993b-d68e8a25addb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57232028-948a-4d01-9384-4b7aabab9c50",
        "cursor": {
          "ref": "368ae2c2-8271-4bc3-9f0d-882e61ebefdc",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "afff8cc9-5630-497c-82ac-5bf03ec473ae"
        },
        "item": {
          "id": "57232028-948a-4d01-9384-4b7aabab9c50",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c759b4e4-94a0-459c-a8eb-0ee7af407370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3239fc02-a214-47c1-8e5c-9f1ba5f907cb",
        "cursor": {
          "ref": "1d221c0e-2f13-4e8b-8ceb-ff9a9293555b",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "334347d2-d5b9-4bad-a41f-c32c0641f252"
        },
        "item": {
          "id": "3239fc02-a214-47c1-8e5c-9f1ba5f907cb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "def2fde6-dbc2-4928-98b7-a5fac4ab7e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07842a4-f4af-4337-95ef-149f33ebc183",
        "cursor": {
          "ref": "d1e3c275-924a-4e40-acb0-99a1953544d6",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "27d5eeab-9936-44a3-8e88-44ae8c951b05"
        },
        "item": {
          "id": "a07842a4-f4af-4337-95ef-149f33ebc183",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6ad717ae-fec1-414a-ae12-9cad7d4c59a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf03df6-a245-4378-8f50-e4bc70993819",
        "cursor": {
          "ref": "069e1cd6-ebc3-4aa4-9b30-0f293ccb7fa1",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "61ef5f61-52c8-4b02-a444-f9e4b620edd5"
        },
        "item": {
          "id": "2cf03df6-a245-4378-8f50-e4bc70993819",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "21dec957-a91c-43b9-ab80-2cfed18ffa74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe34aa4-28c0-4f54-9ff0-08ef59938deb",
        "cursor": {
          "ref": "d28bbcb1-fcb6-47fe-9194-5b50b76cee94",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4e99cd32-8477-442d-8e67-fa885202d075"
        },
        "item": {
          "id": "cfe34aa4-28c0-4f54-9ff0-08ef59938deb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7a945a46-d027-4e96-993b-0ac6b28ee9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20425344-8a43-4fd0-9f3d-b0116d86caa0",
        "cursor": {
          "ref": "4f7d45ec-948a-4467-ae89-db61c6891e53",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "07e9df11-3227-4ec7-9565-ba42e4b5efa7"
        },
        "item": {
          "id": "20425344-8a43-4fd0-9f3d-b0116d86caa0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "650e6315-9dc0-48eb-b55e-ac5d841989a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34b2a42-01f2-40a1-8784-44b86e4c9560",
        "cursor": {
          "ref": "08ff63ff-9f52-4e56-ac91-ff3eda9a6042",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5337cece-dade-46ad-8b77-c01e8fc8fb21"
        },
        "item": {
          "id": "d34b2a42-01f2-40a1-8784-44b86e4c9560",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a83a8f0e-bfd4-46ac-890d-ec1bcaf3b3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5acb18-a894-4a82-b4ce-3f90247f8316",
        "cursor": {
          "ref": "dfa780fc-d41f-498b-bb19-56a2b89bd938",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b87b6eb6-a0d7-4627-b776-09ec275137cc"
        },
        "item": {
          "id": "3e5acb18-a894-4a82-b4ce-3f90247f8316",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "b6576cdb-921a-452c-a0aa-5b19a3722b51",
          "status": "OK",
          "code": 200,
          "responseTime": 2396,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "5adaa24f-74c9-4232-b0a0-74eddcebfc92",
        "cursor": {
          "ref": "804ec3b9-a9de-44be-90a2-d9680cdbe26b",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e65c8698-138d-4dda-a613-d5e66efbda1b"
        },
        "item": {
          "id": "5adaa24f-74c9-4232-b0a0-74eddcebfc92",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bbd8e5e9-2e48-4ea8-a013-44fe68cab890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fadbd9-eff8-4296-89bf-335c064902df",
        "cursor": {
          "ref": "fc84d0a2-400a-440f-9a67-872e301e2de6",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0198ddbc-b9a5-4d07-ab59-20e4bbb219a9"
        },
        "item": {
          "id": "c9fadbd9-eff8-4296-89bf-335c064902df",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "384bad70-025b-4b69-a6a8-8f8da01c9087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57b1088-b091-4438-8e99-49bc5b6a6bcc",
        "cursor": {
          "ref": "15dfcfb7-906f-440d-821c-787b4a911a15",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c32e16ff-aed8-44c9-89f5-ec7d9f7301e9"
        },
        "item": {
          "id": "f57b1088-b091-4438-8e99-49bc5b6a6bcc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "644a61c4-4b08-47f1-9878-47fcb9818b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8e29b1-854f-49c6-97f6-4f6c9b1eb395",
        "cursor": {
          "ref": "432516d2-ab1f-4fdf-a163-1d514ca78570",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e947f104-c682-4270-8d8b-0351b63e3e60"
        },
        "item": {
          "id": "0c8e29b1-854f-49c6-97f6-4f6c9b1eb395",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3d0b2357-5e85-4d9f-866b-c880b0e0fa19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c181f68d-8db9-445c-92d9-421f087ae1ca",
        "cursor": {
          "ref": "04ceadf2-9aba-4013-9f53-70a73ff424b1",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b9268045-d0e1-47f3-b0a0-195584ce716c"
        },
        "item": {
          "id": "c181f68d-8db9-445c-92d9-421f087ae1ca",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b39f6d8c-ad1e-4933-ae2e-fb12a30d258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4939d726-4aef-4e50-82b6-f03fa909a2f1",
        "cursor": {
          "ref": "fdcb2477-d33d-4a22-9b8d-0c21772d34cf",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e1594a18-882d-42e8-b0b2-b06a8a080f94"
        },
        "item": {
          "id": "4939d726-4aef-4e50-82b6-f03fa909a2f1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "54426a0d-ff0c-44f9-a48a-bccc093d9e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07d5933-b1b7-42c3-bf96-93f310260f95",
        "cursor": {
          "ref": "1867a5ec-7550-4a0c-a25e-29cf6207ada8",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "347c947c-e172-413d-8386-e457f332aff8"
        },
        "item": {
          "id": "c07d5933-b1b7-42c3-bf96-93f310260f95",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4e437ed0-3770-4615-8c89-ed69d820e0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5518d0ac-2351-4181-bb0a-c234c541f7ae",
        "cursor": {
          "ref": "c61613cf-8030-479f-8472-ab6ae4056ca9",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "48d32853-53a0-4c1b-9aa4-39c7aadf601f"
        },
        "item": {
          "id": "5518d0ac-2351-4181-bb0a-c234c541f7ae",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d977d362-d171-4175-949e-e3be63e29d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671f56a9-e267-46fb-a1ac-9fce73604677",
        "cursor": {
          "ref": "8fcbf5a0-702a-409a-91e1-f182ab589ee8",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c945c429-a55a-4fa9-aae6-625ad48a35a8"
        },
        "item": {
          "id": "671f56a9-e267-46fb-a1ac-9fce73604677",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d15cd2fa-4590-4cfe-8be5-bbbdcaf775d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecd5948-240b-4d07-974c-94b6cbab29e3",
        "cursor": {
          "ref": "5655e54b-b64b-4339-8544-bd8fe0d3c880",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c45ba42f-a2bc-4b80-973f-3081a1ab08b8"
        },
        "item": {
          "id": "3ecd5948-240b-4d07-974c-94b6cbab29e3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8cfa4d7e-bc8b-474a-990e-c6c9a097bba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393fc9aa-26e0-4deb-a296-bb97fdb2658b",
        "cursor": {
          "ref": "a73b7f11-c638-4219-b13c-7854e8af1a42",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "85383953-9616-483f-99dd-045f174d9e46"
        },
        "item": {
          "id": "393fc9aa-26e0-4deb-a296-bb97fdb2658b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0077c245-9922-4428-a433-c4c93ec764a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c59c65c-c566-48ce-bb06-cd1b56d745ab",
        "cursor": {
          "ref": "643d4371-125c-4ac4-981a-dcad5621fead",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9a8adc52-b113-4dbd-b823-4fefb9270bc1"
        },
        "item": {
          "id": "6c59c65c-c566-48ce-bb06-cd1b56d745ab",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8a933dc6-dc52-45b4-8a33-5fe8652cdd87",
          "status": "OK",
          "code": 200,
          "responseTime": 456,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "b69bb854-30fe-4411-943c-5bcee0458207",
        "cursor": {
          "ref": "dcd265bb-81f1-41a4-86f3-bba548f90936",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b59c60ae-3164-4b98-a9b2-7ef1dfce5cec"
        },
        "item": {
          "id": "b69bb854-30fe-4411-943c-5bcee0458207",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "447b83df-4744-4482-ace5-aa07134791a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d29b11-e5b8-4399-95e6-a8dd6300920a",
        "cursor": {
          "ref": "2aae724f-0cc9-4054-b8bc-126a3b404313",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6a7df6b9-0066-48ed-8c4d-2738a2528e8a"
        },
        "item": {
          "id": "07d29b11-e5b8-4399-95e6-a8dd6300920a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "35edefce-85f1-406a-bba4-afa7ddd9a14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8567e150-4cb4-4201-a30d-df9e9fcc0253",
        "cursor": {
          "ref": "a6fd6988-11d4-4804-a394-0419ba5b15ab",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6d8a6df5-b50e-4fd8-a05b-d09d3f4aa2f0"
        },
        "item": {
          "id": "8567e150-4cb4-4201-a30d-df9e9fcc0253",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6b79b051-c67c-4688-a859-fe42d2e8c975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4471e85e-c85d-47cf-8e10-c6ac3be44d1b",
        "cursor": {
          "ref": "a03926b1-4cd4-4ab1-acfd-6aa552205250",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "62ee9461-bc39-4594-80b9-e179a9e61b51"
        },
        "item": {
          "id": "4471e85e-c85d-47cf-8e10-c6ac3be44d1b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "798cc301-278d-422c-b7d9-bfb06aeb53ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca733a0-2463-4016-8748-04338271485f",
        "cursor": {
          "ref": "a5ceb9c6-c6d8-4135-b1a7-88d1b793f929",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3219074d-f0d8-47b5-8cdc-469a4115a9d6"
        },
        "item": {
          "id": "5ca733a0-2463-4016-8748-04338271485f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1457140c-0419-464a-bfb3-a2bf5744cee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2319ce-33ac-485c-a949-dea6748c0cdb",
        "cursor": {
          "ref": "eb38b71b-b273-4096-8b04-0b774f9d1fa4",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2858d131-e0a7-4bf0-83ff-cf563fcfcb90"
        },
        "item": {
          "id": "2d2319ce-33ac-485c-a949-dea6748c0cdb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "28652976-45e8-4a5e-9ed2-8bee0f697ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e5efb7-e313-4024-9dcb-6fa2d1787362",
        "cursor": {
          "ref": "72b8b3f7-a8a5-494b-9eec-caeeffd16968",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "65564b94-6306-4b66-8225-1d3912aeb125"
        },
        "item": {
          "id": "19e5efb7-e313-4024-9dcb-6fa2d1787362",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ed6b4e29-0843-4d59-b8de-833fa7d0388f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a0da9d-e52d-4464-89fd-2eb7fbe72f1d",
        "cursor": {
          "ref": "6ae3ab8a-1be0-47fc-9839-99b82bcd6591",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6ed3e584-2cbf-4f9a-887c-df2c74240da2"
        },
        "item": {
          "id": "52a0da9d-e52d-4464-89fd-2eb7fbe72f1d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eb4b1c37-d4cb-4cd5-aafd-2e06f7ac4d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c0d2d9-8467-46f4-957b-5d75ca61e9ab",
        "cursor": {
          "ref": "53ac7692-3e24-40fc-a98a-185848d72305",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7dc65c0e-58b1-48b9-a32c-21bc683fa410"
        },
        "item": {
          "id": "f4c0d2d9-8467-46f4-957b-5d75ca61e9ab",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "82ea8be8-7d22-4d54-9db1-b5f8408172fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0bb845-b2c1-47c1-a823-5440974bb3ff",
        "cursor": {
          "ref": "d49ca28c-fa16-4dc2-b3ba-a7cd55fa3d17",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fb89ae95-a975-41b7-8f9b-59285f063371"
        },
        "item": {
          "id": "8a0bb845-b2c1-47c1-a823-5440974bb3ff",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "141895c2-2f76-4630-ac4d-c1165802f096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d21773-25fc-482c-bd88-bc37767e3663",
        "cursor": {
          "ref": "391638b6-4094-4019-8021-d24e2a77c936",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e0c21050-d3a5-46d9-a736-7768859ed7e6"
        },
        "item": {
          "id": "68d21773-25fc-482c-bd88-bc37767e3663",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fa398335-37d0-4831-a549-5384b59de408",
          "status": "OK",
          "code": 200,
          "responseTime": 536,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "3735f558-08d9-4d26-a180-41dd20055d47",
        "cursor": {
          "ref": "d335c675-3428-4dec-9864-2875f0b297ba",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d22d4e9d-e65d-4bfd-97f1-b763e81f554f"
        },
        "item": {
          "id": "3735f558-08d9-4d26-a180-41dd20055d47",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f6781b03-449a-40fd-8599-39c557ca2a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765bf83f-3e08-4b6b-b9f8-767d8f0664d0",
        "cursor": {
          "ref": "a5af2711-bb75-45c9-be0c-c1d834da49c2",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "45b13568-ea2a-4c8f-bcf7-7ecae98f8d3e"
        },
        "item": {
          "id": "765bf83f-3e08-4b6b-b9f8-767d8f0664d0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6334a053-7ddd-4c01-b9f9-edaaefcd0754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31495f8-9f61-4d0b-9cdd-9bae13bebadd",
        "cursor": {
          "ref": "b6ff3d37-a1af-442e-8ce2-d145f01da334",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0184000f-7a5b-4642-af8f-068805dfcb9c"
        },
        "item": {
          "id": "d31495f8-9f61-4d0b-9cdd-9bae13bebadd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3a70bcd9-a6c0-4c22-b51b-17435ae0e12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2660f88-1efb-4651-b9e2-9c3c9c273cab",
        "cursor": {
          "ref": "fe403352-dbe8-4248-9224-6e27dcf4c4f6",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "95115c55-909f-4c25-98ce-12d8b6500482"
        },
        "item": {
          "id": "e2660f88-1efb-4651-b9e2-9c3c9c273cab",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "852e8896-cf26-46d6-bd0f-7f1f2e754e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65060b25-6baf-4d8b-a6e9-72435d70f53e",
        "cursor": {
          "ref": "ae6963ad-3eff-4cad-8ffa-b30879884025",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "953b83fb-d94f-425a-9bcf-13c63e64b1f5"
        },
        "item": {
          "id": "65060b25-6baf-4d8b-a6e9-72435d70f53e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bd8eb827-05b5-477e-ad6d-7f484291e3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73cfa0f-91f7-406e-982e-b86d71136153",
        "cursor": {
          "ref": "195a48a8-4e4f-4c5d-bd79-c729478c24c9",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "712c041f-9735-4eaf-a50e-36de7e9b55da"
        },
        "item": {
          "id": "a73cfa0f-91f7-406e-982e-b86d71136153",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "07b6507b-8136-4dad-b557-bd360af1d16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeebc510-f039-4768-9790-d22c7cac2581",
        "cursor": {
          "ref": "7300c47f-430c-4090-a05f-4c3cc1db54d9",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "994e2a79-a12b-4478-bf65-dc16b8e13cad"
        },
        "item": {
          "id": "eeebc510-f039-4768-9790-d22c7cac2581",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0fdaec77-3073-420d-9a25-20b7caeac9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c5896b-82a5-4f5d-aa17-6ee9c2b78361",
        "cursor": {
          "ref": "d1a8f7bd-a402-4368-9887-7ff6b218f039",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9aa9f8ef-f91e-4663-a08c-ffaf66bbb289"
        },
        "item": {
          "id": "96c5896b-82a5-4f5d-aa17-6ee9c2b78361",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "49f7f91a-9b11-48f2-8bf7-8a2bfb3d34ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffb4ca4-757c-4e5d-95c8-29f50861463c",
        "cursor": {
          "ref": "b742a6fe-7faa-457b-bee0-16e131802534",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "65996036-ce27-4f90-9dc4-c89bd22bcf42"
        },
        "item": {
          "id": "cffb4ca4-757c-4e5d-95c8-29f50861463c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8c2d14e7-6e52-4d60-aec5-5d6b8cc949a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1355e780-4e4e-4d98-ac07-ced7378bb12f",
        "cursor": {
          "ref": "9240cbaa-0cf6-43ac-8530-ea8159e61c4d",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2bb15bf5-cc23-4ba2-9608-7680e975cd83"
        },
        "item": {
          "id": "1355e780-4e4e-4d98-ac07-ced7378bb12f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9043dade-a50f-454c-be4f-3be00b2cc055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55462757-d3a3-4994-b671-60a2e782be28",
        "cursor": {
          "ref": "592a2a60-41e9-4e1b-8749-54f9b40dad27",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "587c7fff-8e42-41ef-a1fc-81af9e29c750"
        },
        "item": {
          "id": "55462757-d3a3-4994-b671-60a2e782be28",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4fd3c086-a3da-4dfc-b04c-5eca184da3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1373cb4-7f45-4a00-ad55-a690972aeaf9",
        "cursor": {
          "ref": "9ba85570-eb0c-44ba-a614-b962e74973fa",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bf68c553-c553-4a14-b86d-1d32387492f0"
        },
        "item": {
          "id": "f1373cb4-7f45-4a00-ad55-a690972aeaf9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2db20ab9-a5c2-427d-87e1-d2c29b494256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae32a9b-1b7e-4c08-b8eb-4864fd4170a2",
        "cursor": {
          "ref": "fadbd9ab-a00c-4251-a321-f75f4306bf34",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0e313fda-5b75-4def-aa8f-ed9b2f8d85b4"
        },
        "item": {
          "id": "0ae32a9b-1b7e-4c08-b8eb-4864fd4170a2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0dd2b192-df0c-4b11-a4d8-f2f9db19995f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118f0f75-0834-4b7f-bc84-022ab288b1e8",
        "cursor": {
          "ref": "b6f063fb-36d9-431f-83dd-9dfdbf122224",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "12b171a2-d181-4396-9575-7bceb3f65ccf"
        },
        "item": {
          "id": "118f0f75-0834-4b7f-bc84-022ab288b1e8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ddff0e03-59a0-4974-80d9-bb3e321cbaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e04ee3-51e9-4709-adf1-148dceee2e5e",
        "cursor": {
          "ref": "8cb458bb-2f57-46ca-a458-b21c7df8ed85",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "eb304d3d-992a-4bd1-bc74-7a4012001b8a"
        },
        "item": {
          "id": "07e04ee3-51e9-4709-adf1-148dceee2e5e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f6c8b696-9efb-4594-b410-30912420f8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529eaedd-6f67-49b7-a888-0dc2656c2d2f",
        "cursor": {
          "ref": "b383e66d-cde3-4b51-891c-b5304a0e7d90",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3c554946-39ba-4434-9c85-0fb90f83b56c"
        },
        "item": {
          "id": "529eaedd-6f67-49b7-a888-0dc2656c2d2f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4c42379d-1800-41f3-9b08-5e00c6347878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65aa5e06-9768-4820-993e-37707c06cdcc",
        "cursor": {
          "ref": "c4fcdeed-74c9-4b1d-a4a2-249c71be763e",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c8416cd1-e884-4154-a699-d701f3e7c7db"
        },
        "item": {
          "id": "65aa5e06-9768-4820-993e-37707c06cdcc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "56ea563e-0df1-4735-9d1b-be5ce5d07558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dec762-1026-4ff6-ad57-7e38077ca24c",
        "cursor": {
          "ref": "0a99034d-c9dd-451f-b60a-a1897451fbd9",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6471c83d-bb74-441d-a2b9-3466b16dbf1f"
        },
        "item": {
          "id": "d7dec762-1026-4ff6-ad57-7e38077ca24c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c9b1b819-3b52-4e54-a120-4cbbf7f3c5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abea795-a2dc-41ca-84a3-bffdfd603b67",
        "cursor": {
          "ref": "25d08fa6-5997-45c7-8a5a-33388c9e637b",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "38cc0055-2594-4ad6-b0b3-7270586d0be3"
        },
        "item": {
          "id": "6abea795-a2dc-41ca-84a3-bffdfd603b67",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9602fbb7-d354-45b7-a7bd-15106dc5e6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de2dfd4-1a6f-4680-94fe-142718d9aa0b",
        "cursor": {
          "ref": "c1a50ded-1110-4eca-b1ca-e5bad11e0c82",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e6cf7e98-fcc7-4324-8467-79f7da976f4c"
        },
        "item": {
          "id": "9de2dfd4-1a6f-4680-94fe-142718d9aa0b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "30245598-b104-465b-ad78-e4717a4ae225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9142b381-15f5-41a2-bf90-baf88c1c8ea0",
        "cursor": {
          "ref": "0a748860-68b7-4485-8a17-c7c05b62aec6",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7d6a324d-b8d1-460c-abe5-bfc4b5514e95"
        },
        "item": {
          "id": "9142b381-15f5-41a2-bf90-baf88c1c8ea0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "86c4ffec-a3e2-4a3f-98c6-f4b47937053f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0f5f22-ca40-4a4d-92ae-b598c8bfabb2",
        "cursor": {
          "ref": "a3749b04-087b-47fa-9696-70b23e633a15",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7265f8b9-a50c-468e-be5f-9287d4f55997"
        },
        "item": {
          "id": "3f0f5f22-ca40-4a4d-92ae-b598c8bfabb2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "94b3f5b4-b86d-457c-903b-3b03eb3ae4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50afcb2c-b49f-404d-8645-0bec2b0bc477",
        "cursor": {
          "ref": "98fab1de-d312-4b73-ab5b-5a01b63965db",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f3a9efc6-25d0-404f-832a-f63ce0ab3b83"
        },
        "item": {
          "id": "50afcb2c-b49f-404d-8645-0bec2b0bc477",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b4094270-b01e-46b0-a676-c1ab173827e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7316bb28-3b4f-4ea1-a9d7-ed1d6f64b822",
        "cursor": {
          "ref": "e813c038-d270-4145-80ad-2a8c557da32a",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0606d449-b48c-47e0-aca9-1caa282df193"
        },
        "item": {
          "id": "7316bb28-3b4f-4ea1-a9d7-ed1d6f64b822",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2c1a9dae-6939-41d4-bc1e-e1276d1127cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edffd922-cbfa-45af-a693-651c86c04c1a",
        "cursor": {
          "ref": "c740b8be-15cd-466e-991f-b7638cc8e2de",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9eeafa23-b984-4209-b3d9-e51f78c0a912"
        },
        "item": {
          "id": "edffd922-cbfa-45af-a693-651c86c04c1a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "923b4888-b50c-4d9c-a609-d2cd4e9fbc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7843735-3608-47d3-a363-e0f122f2902b",
        "cursor": {
          "ref": "f5d4ee07-0171-4f93-a46d-e39dc6bb050e",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ed13188e-3fb3-4bf4-8686-4dfbe2dc1335"
        },
        "item": {
          "id": "e7843735-3608-47d3-a363-e0f122f2902b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a89c8510-1734-43ff-b58f-414860c58d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf7597f-a36d-4bdf-be93-3989481500c1",
        "cursor": {
          "ref": "b3b449f5-edaa-4ccc-a0f9-7aeae5d78a66",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cf86c75f-4549-4f14-a8c6-72337eca029b"
        },
        "item": {
          "id": "fbf7597f-a36d-4bdf-be93-3989481500c1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ad230c66-1e9f-406f-b370-2d3b891343bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2b07e6-a716-490b-a1dd-60540552895a",
        "cursor": {
          "ref": "4928a470-c37a-4079-a2e2-e75af440915d",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f181ec83-7943-4712-bcce-0558eb6e8195"
        },
        "item": {
          "id": "1e2b07e6-a716-490b-a1dd-60540552895a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7c34f261-8f2b-4e66-8318-1607be414a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad38485d-b2a9-40c0-a617-d7bb5dfd9a08",
        "cursor": {
          "ref": "45faf872-d24d-4125-82e4-bb14e6748b26",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d54050bf-6f98-42c0-b590-0fb3528af8a6"
        },
        "item": {
          "id": "ad38485d-b2a9-40c0-a617-d7bb5dfd9a08",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "48667817-c932-4e7a-80a7-2d0219bcf029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dffac5-73fc-4b4c-b27a-1383954552a8",
        "cursor": {
          "ref": "097f8659-0abd-4fa5-9c55-b6e1dde82d1d",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "96408908-e114-4d35-bb26-8dce8317ded2"
        },
        "item": {
          "id": "c5dffac5-73fc-4b4c-b27a-1383954552a8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "944c5c35-d18c-4f64-b055-8238ad5ff311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4083186-de9e-4d9c-a6f8-8c4541b1c95a",
        "cursor": {
          "ref": "59a33203-dada-460e-b6db-6eec9a4f21a2",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "12599f68-cc9a-47e5-832e-c6418db85357"
        },
        "item": {
          "id": "e4083186-de9e-4d9c-a6f8-8c4541b1c95a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "257fb03a-11a6-4a23-a84d-e4dcfb169a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167bf5f3-86e9-4ac7-9c24-4e35d9614ac9",
        "cursor": {
          "ref": "1808ce53-f45c-4f78-ab87-bd19a3a1516c",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e3cca22b-9c67-4ff2-a18e-4d423df4a098"
        },
        "item": {
          "id": "167bf5f3-86e9-4ac7-9c24-4e35d9614ac9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5e5379ea-4497-4c96-88cc-cc1a749f8596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3159743-8db5-4a14-a740-7188075e91f7",
        "cursor": {
          "ref": "30f91f81-3e56-4f82-85e3-a27239eef13c",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "71f0fb25-16f4-4119-975c-63b5180b603f"
        },
        "item": {
          "id": "f3159743-8db5-4a14-a740-7188075e91f7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d680b692-1e7f-42f4-be70-845d5ef85c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2b8fac-0015-4150-a494-a3c7d122aa16",
        "cursor": {
          "ref": "0befffba-2501-4fb0-804d-69570e6ddc9f",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "54228605-119b-47d0-93cd-090ac401a4aa"
        },
        "item": {
          "id": "6d2b8fac-0015-4150-a494-a3c7d122aa16",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2665b78e-9c88-4174-b174-f2b404fde523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7560b32-178a-4a8a-921a-526bbecc0332",
        "cursor": {
          "ref": "11288963-4040-460a-82ee-deb7c5a91368",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ad3517a4-118b-4d6a-b119-80a004a098d8"
        },
        "item": {
          "id": "d7560b32-178a-4a8a-921a-526bbecc0332",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "08d17c6e-1040-48c0-a0bb-6a62a2575e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3782b20-bbd4-4993-9931-0176de9efb0f",
        "cursor": {
          "ref": "b6ebd3c2-0892-4530-a187-1ac9a75cb33a",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e5d62619-bac0-424e-bb30-b3f4a2732460"
        },
        "item": {
          "id": "e3782b20-bbd4-4993-9931-0176de9efb0f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c9d83bc2-7802-4511-bebd-23bd414c110b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8367bd71-6282-4f67-8351-3c5e4c2c6f79",
        "cursor": {
          "ref": "51a18855-bcce-4f63-a3e7-9cd5e2292604",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "648b94d1-aef4-4e84-9a1f-f34231c8c6de"
        },
        "item": {
          "id": "8367bd71-6282-4f67-8351-3c5e4c2c6f79",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c127fac4-bbd8-4aeb-aaaa-80b5e5fe224f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fde7f6e-7b8d-41c1-abf5-1be7efbdc28a",
        "cursor": {
          "ref": "f82022a6-66b9-466e-b739-a7d68c4a3d67",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f8fee788-891f-4533-8215-b724a5c3f7fa"
        },
        "item": {
          "id": "2fde7f6e-7b8d-41c1-abf5-1be7efbdc28a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "17591ca8-f62e-4eaa-b328-6f62553064af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52deb869-f639-421d-ad77-12867743ddea",
        "cursor": {
          "ref": "365dd112-df26-40fe-b939-4e721907ce38",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0cc74f24-01b7-43cb-9a6c-7d6a685e1feb"
        },
        "item": {
          "id": "52deb869-f639-421d-ad77-12867743ddea",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "231bea18-051d-45dc-854c-4cdbd03219ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22eda67a-82ae-4cde-a21a-b85ed9765ecf",
        "cursor": {
          "ref": "4d99b897-f54e-46de-b3ea-c528934fe603",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "db58e516-11bc-4722-9546-f202e13f0566"
        },
        "item": {
          "id": "22eda67a-82ae-4cde-a21a-b85ed9765ecf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2f8341dd-ad5f-4e8a-ac8c-e32a5e6edb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093efc6c-f48f-4ea9-af98-0a293f263fa8",
        "cursor": {
          "ref": "e2fe10bd-2433-4253-9303-bec51f84f0ba",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fbd5af3e-7ac8-4df8-880a-a6912c0f9d0f"
        },
        "item": {
          "id": "093efc6c-f48f-4ea9-af98-0a293f263fa8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "16680237-d61f-4f77-ae0f-184c36ab1eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8546af-349a-49cb-abb0-6042aa910cb2",
        "cursor": {
          "ref": "35b68b06-8949-4b56-b556-6e56ca545e84",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b31b2e64-e8dc-407d-80c5-79f378c3de29"
        },
        "item": {
          "id": "0d8546af-349a-49cb-abb0-6042aa910cb2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fd930668-6643-46cf-acd7-18c9d107e3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d5c53d-38e2-42de-b4a2-17a5ea042960",
        "cursor": {
          "ref": "6ab66c95-b6bc-497d-821a-1654435c235b",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f746b6f3-13f4-41bc-a670-22ca97149dcb"
        },
        "item": {
          "id": "e2d5c53d-38e2-42de-b4a2-17a5ea042960",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "68754bcd-ee5e-4cd4-9f65-7b874bf172fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe9655a-8702-445a-859c-d9f296350563",
        "cursor": {
          "ref": "10b051ba-5157-47b2-8251-3b87960a4c97",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8d738357-3cf0-48ac-9212-8bf1c62748b5"
        },
        "item": {
          "id": "dbe9655a-8702-445a-859c-d9f296350563",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ff77d1c4-acda-4b9a-8cf1-f4f91902a7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1245b6-375f-47d9-ab21-6ba6882e75e8",
        "cursor": {
          "ref": "727f6713-aaa4-4fc7-a14a-0cd021d20d7d",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e6ad5c63-9559-4e6b-a2d0-a5750819b010"
        },
        "item": {
          "id": "1f1245b6-375f-47d9-ab21-6ba6882e75e8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "47c5ec52-3435-4000-8328-1fed334dfed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81186eae-db50-49c2-afef-13ac02ef7365",
        "cursor": {
          "ref": "2204e94f-8e91-4d9e-919a-d290913fc312",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0a870fbc-fe3c-4f74-8d29-9c845b7c85ad"
        },
        "item": {
          "id": "81186eae-db50-49c2-afef-13ac02ef7365",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9284db48-e036-467b-a709-b6ebcb8333e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dd7045-d456-44c4-94fb-e04b79fee778",
        "cursor": {
          "ref": "f9e514d0-e006-4c6f-a31f-d0f3048ea980",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bcb15bbd-c147-4378-aa02-3c1a2c00382a"
        },
        "item": {
          "id": "66dd7045-d456-44c4-94fb-e04b79fee778",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a5fdc5ff-fe03-47f1-88df-6bbbca76be4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faedc4e5-180a-4592-ba51-841af9946125",
        "cursor": {
          "ref": "65e3ed6f-80fe-43ad-8618-b7953269c21d",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "07cd9aeb-310d-4d6d-84d0-e93d5fba271a"
        },
        "item": {
          "id": "faedc4e5-180a-4592-ba51-841af9946125",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b4af76fa-7157-4e28-b493-69bf32f68eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66a7aff-d081-4559-87d8-8b39af5d306a",
        "cursor": {
          "ref": "a2000fef-3b5c-429b-a2b8-da797862629c",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "48100881-f359-43f5-9f0b-c7afa18a8d9e"
        },
        "item": {
          "id": "f66a7aff-d081-4559-87d8-8b39af5d306a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "26ae2765-9f3a-45ee-b1bd-6a85fc0b3cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60115c4-e9c6-4f61-9251-31f0661d42df",
        "cursor": {
          "ref": "0f8c3cdb-4f40-4713-9897-be3008d2fb1c",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "803b9f1a-c952-4e30-a0be-7e6d3e07ffb5"
        },
        "item": {
          "id": "e60115c4-e9c6-4f61-9251-31f0661d42df",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "aae00b1c-4813-4ceb-9d26-b404f33bbca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fb2ff8-5656-434c-b292-4ee0224ed7c1",
        "cursor": {
          "ref": "e0e7f427-2634-4c89-b68b-b0bf54c371de",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dcd5780a-c6e6-4afe-96ad-58fa6bb1fa6e"
        },
        "item": {
          "id": "b6fb2ff8-5656-434c-b292-4ee0224ed7c1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8c87277e-cb8d-4234-a17e-2de793f9359f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2629b67b-1839-4b18-9169-fc056e1039ae",
        "cursor": {
          "ref": "4f8c1637-9249-4d5f-8245-c3a9993e0322",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "71fa27db-f0ef-4b63-bdd4-6439a97d76bf"
        },
        "item": {
          "id": "2629b67b-1839-4b18-9169-fc056e1039ae",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a868cff0-0205-4e64-8d11-33f327d3f62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5e7184-1385-47ee-8b0b-6f28f173b352",
        "cursor": {
          "ref": "d9f67231-f90f-4385-ae7d-18de11a18792",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c6707dfb-19c2-4f9e-b253-8493cb4641d1"
        },
        "item": {
          "id": "9d5e7184-1385-47ee-8b0b-6f28f173b352",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5bd10579-543d-4dd1-b377-eec3ab8eaa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaef364-0313-4f02-bb5b-3426e0307f13",
        "cursor": {
          "ref": "36a99c9e-bfcc-4a1e-afb5-67b7bc53ee1e",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5f9fd4fb-2983-4dfd-ab65-2eddbbe3c257"
        },
        "item": {
          "id": "daaef364-0313-4f02-bb5b-3426e0307f13",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "154e5469-6401-4f5f-8ee5-7e7d0b66dc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe1a890-e8df-4b0f-838e-347b5da843a9",
        "cursor": {
          "ref": "636a3b69-cee8-447a-a1ab-779e2d30737a",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "97b13584-c369-4d28-a011-343c962869cf"
        },
        "item": {
          "id": "4fe1a890-e8df-4b0f-838e-347b5da843a9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7a5cc65c-3fe2-480c-a7bc-e7e58715e106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3083a49-e59d-437a-b8c2-a066e8297e74",
        "cursor": {
          "ref": "d0002eb7-94eb-4d46-8b90-30b7fdec7559",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4449c52e-671b-449e-8282-71e639ec5462"
        },
        "item": {
          "id": "a3083a49-e59d-437a-b8c2-a066e8297e74",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1336ce5e-34f3-406d-bb7d-0703a75e20f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59bc672-678c-4042-8177-9fcbc0648774",
        "cursor": {
          "ref": "341cf164-ec5a-4efa-a554-b0754fc5128b",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4d799d56-d5b0-4f75-a01d-ffac346ac949"
        },
        "item": {
          "id": "b59bc672-678c-4042-8177-9fcbc0648774",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5e8b5af4-8362-40c3-8e85-7795e211b078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd91b578-0125-4603-a96c-f02a8e39a6a7",
        "cursor": {
          "ref": "31a934d6-150f-437c-8bc2-492e1c9f9cc8",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f280ee64-ec2e-48c5-981e-442e3e23fb9d"
        },
        "item": {
          "id": "cd91b578-0125-4603-a96c-f02a8e39a6a7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3bede8fc-88d8-4960-9f15-4129a0f306bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15b6891-e40d-4df3-9405-2edccb83a22a",
        "cursor": {
          "ref": "94d00785-07ec-4fa6-802b-697706991489",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "20c62646-2228-42df-8ff8-daf9deaf7396"
        },
        "item": {
          "id": "d15b6891-e40d-4df3-9405-2edccb83a22a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "189de82a-817a-49e9-b41e-98c81dc5c8e3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 339,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4179388-f289-463b-a394-5ad272f5cf18",
        "cursor": {
          "ref": "a1feea99-4d44-4398-99f1-78d5770d5472",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f06c99bd-9f2a-4ae6-b8fc-8470528de5dc"
        },
        "item": {
          "id": "f4179388-f289-463b-a394-5ad272f5cf18",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2972ec44-8b17-4e2e-987f-2bf15ee510f3",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9843d8-5004-4c44-b101-12d1fbb66827",
        "cursor": {
          "ref": "86e0b2f9-0cf4-46e0-97cf-2eeecfdd9196",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3005aee2-85f4-4970-879a-f49fa5e03a84"
        },
        "item": {
          "id": "3c9843d8-5004-4c44-b101-12d1fbb66827",
          "name": "credentials_verify"
        },
        "response": {
          "id": "51a96071-844d-4f5e-826c-281399974a70",
          "status": "OK",
          "code": 200,
          "responseTime": 2135,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "876fe455-3890-4643-83fa-faa99849e07b",
        "cursor": {
          "ref": "feebcc0e-0c21-4659-a8e7-54e6335f68cf",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b4c54521-3c16-4082-b51e-e224e1e8898e"
        },
        "item": {
          "id": "876fe455-3890-4643-83fa-faa99849e07b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a05cb033-7a59-469a-8613-a80a4c413032",
          "status": "OK",
          "code": 200,
          "responseTime": 1831,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "15395f57-e721-47b8-9126-5939e0a55651",
        "cursor": {
          "ref": "44ba910f-0967-4552-aab6-bc365a9c5432",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "67ec368f-6ba4-4e43-a9e0-0b02af34407c"
        },
        "item": {
          "id": "15395f57-e721-47b8-9126-5939e0a55651",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0011b2ab-22b1-40d5-9b95-043ee4c04835",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15395f57-e721-47b8-9126-5939e0a55651",
        "cursor": {
          "ref": "44ba910f-0967-4552-aab6-bc365a9c5432",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "67ec368f-6ba4-4e43-a9e0-0b02af34407c"
        },
        "item": {
          "id": "15395f57-e721-47b8-9126-5939e0a55651",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0011b2ab-22b1-40d5-9b95-043ee4c04835",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15395f57-e721-47b8-9126-5939e0a55651",
        "cursor": {
          "ref": "44ba910f-0967-4552-aab6-bc365a9c5432",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "67ec368f-6ba4-4e43-a9e0-0b02af34407c"
        },
        "item": {
          "id": "15395f57-e721-47b8-9126-5939e0a55651",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0011b2ab-22b1-40d5-9b95-043ee4c04835",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f342c7a-6ddb-48ce-a7db-0490cd69b07c",
        "cursor": {
          "ref": "b667e30a-ead5-4d53-8d5f-13b9de22420e",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "636244d6-4b46-402a-a6a4-43d1b3aec1bd"
        },
        "item": {
          "id": "6f342c7a-6ddb-48ce-a7db-0490cd69b07c",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a1c53af9-5d24-4cf8-b5e8-2bcf2d9a9160",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 343,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621f9bde-dbbe-4aee-af7e-60da6f0c1035",
        "cursor": {
          "ref": "3c5ec5f5-be3a-44bd-9717-78347f999154",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0502ec80-24d3-4c3b-ab81-ed2f86c3e119"
        },
        "item": {
          "id": "621f9bde-dbbe-4aee-af7e-60da6f0c1035",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0951c8c6-467d-412e-ae77-e04b8a81050a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621f9bde-dbbe-4aee-af7e-60da6f0c1035",
        "cursor": {
          "ref": "3c5ec5f5-be3a-44bd-9717-78347f999154",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0502ec80-24d3-4c3b-ab81-ed2f86c3e119"
        },
        "item": {
          "id": "621f9bde-dbbe-4aee-af7e-60da6f0c1035",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0951c8c6-467d-412e-ae77-e04b8a81050a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cf2fc3-476d-47f8-bb69-b8e2639cf165",
        "cursor": {
          "ref": "ea8e0197-5e81-4e3a-97be-2ad575cdd6d4",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a996f746-1ebc-43b1-80a9-60e51b2eac36"
        },
        "item": {
          "id": "d8cf2fc3-476d-47f8-bb69-b8e2639cf165",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0153df3e-81a0-42a3-9c84-33cafb9c5edf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 607,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881bb13f-3819-47e0-aa0e-93b2410f4c91",
        "cursor": {
          "ref": "94f6d3f2-946c-47fc-844d-c568a8a5983e",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0696c802-3645-4ad3-b81c-9f65bc3ae7d5"
        },
        "item": {
          "id": "881bb13f-3819-47e0-aa0e-93b2410f4c91",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8339799b-14b5-4db5-8e49-ced43c4bde43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881bb13f-3819-47e0-aa0e-93b2410f4c91",
        "cursor": {
          "ref": "94f6d3f2-946c-47fc-844d-c568a8a5983e",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0696c802-3645-4ad3-b81c-9f65bc3ae7d5"
        },
        "item": {
          "id": "881bb13f-3819-47e0-aa0e-93b2410f4c91",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8339799b-14b5-4db5-8e49-ced43c4bde43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1ab6e9-19bd-46fc-bd5c-1ffe4a64ac66",
        "cursor": {
          "ref": "94fb1f2d-3b3a-49aa-9d85-8f78c10aa4dd",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b299881b-bd81-4aa8-a634-e8ad3141823e"
        },
        "item": {
          "id": "db1ab6e9-19bd-46fc-bd5c-1ffe4a64ac66",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "47e50211-07bb-423e-844a-9797f1ed42ba",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 532,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}