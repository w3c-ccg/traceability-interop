{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8189831b-61a2-4861-8d83-403ee9ddc5c1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c798f0d7-c77c-4dce-a290-34c8c7c45a41",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c244bd1-f791-4efe-b42e-a9b83c132066",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8eb7d36d-87ae-4e78-b8eb-7d461a3062ff"
                }
              }
            ]
          },
          {
            "id": "674b9234-64a0-4d2a-a151-45df08e7b9cd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea0ebe3f-a249-44e7-978e-1ea57afff412",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "760f08c0-2a9a-4168-8c00-d7746739f68d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2357561d-ccda-45b4-8b8e-50f915b33b24",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6a7b0cad-cf3d-4321-a5bc-76eb47326327",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6aa3447-73ad-4cb5-bd6c-1130398cf43b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "584774b0-1f4e-4c20-85c5-356f9bec5bf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a94ee5e6-201c-4f99-ba10-17f09375449e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59af4015-678f-4bc9-860b-a98cd126bbb3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07033558-e11f-4ab9-99cd-cb7232531fe7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b0abe7d-9c81-4d88-89a7-99be1789b881",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0575f647-51ce-4760-bf7e-7ef425d9ff05"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8961d9ca-9eb2-4f4f-8694-c2daeb7c53c8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9592e852-c418-4266-a93b-eb1d33cdc0ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1c75ce8-ce8a-4f97-b8df-a58a29de98e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "815f85a6-61dd-4fe4-a60f-77de56f21058"
            }
          }
        ]
      },
      {
        "id": "c28c9ba2-97ea-46e7-b9de-b77c36b0f7fd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3fcae1be-4ae6-46bc-a66d-7792e2b5e99a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f649a78-abb2-4590-9252-99d2b5b24b30",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "baa52f1b-18a4-404f-a00a-70aeddaf6e71",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd437d4-dedf-4eee-ab59-3bc6f0c8135e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32280dc1-ccf4-4576-bdc7-553d26a05fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a55ee6-0328-425c-ac7a-03a992951804",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b30dcc-aff1-4777-ac14-f46bad8969e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "319cfc6b-9ae9-49fc-a06b-103365764936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9cea42-ffb8-4050-baae-2285c85363cc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd39ab9-e331-4038-ac07-aa8feb47b370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b70d0b6c-25bf-425e-a88b-87a5a49939ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "175d499f-313a-4634-bf52-f6b69e5c24ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b33ea5b-46bd-4732-9de1-34f6ef13a4e8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d54d8a8-b707-47ab-a4b8-d06ab70a77bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0267d5db-b7e1-47c9-b243-c10e84d76a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4a5eaf-5271-4aed-9ac4-70feea279ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6623197-ce87-4a34-b02b-8a1d1ed7769e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ca5bb840-57db-4504-b4cc-c6d79aea23b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57484d24-aac8-414c-9ed2-2fb556a0c89b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7a983c7-9501-426d-be0f-0833c1106f0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bdb9be66-4997-4d3e-91dc-f34679ecaf08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30e4b91e-1b91-45d8-a660-812378c5802e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fc6f5ead-b901-44a7-a315-4e83cb226994"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba3f0230-fcc1-40be-b4e6-a8c9b2798a9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fafe0370-6df1-4ce6-816c-1a52b1be396d"
            }
          }
        ]
      },
      {
        "id": "bc88b9dc-5ea6-4628-9499-4749cf470ffe",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e48c36c0-d480-4876-8772-033b7bbc2921",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c031cfb2-dad8-4777-8cb2-7722f5bececa",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1d74c7e2-15a3-438d-bc62-cfa39a019c62",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c57b5ef-8a85-4953-8091-f437bf9b3889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712ab6ec-8d80-439d-b060-b2d65faad61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266b9d4a-0006-4f2c-90fc-37401418f0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a556eed5-70a9-42fd-86a4-e8c805581bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce05a06-1137-4dfd-8333-935b5f172821",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0365c1d4-0172-4814-91b6-b1192622bf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4e0a18-8e2c-41fb-b8ff-903bb3381f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcf521e-3e51-4b65-9d7b-1018cfdb37be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "512a9e30-0105-45dd-b7d4-69fdae8c206a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4ca859-ea4d-4ca8-ac0e-0277e25ccb6e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae4dbdc-ed89-447d-8986-d4c7c31e93da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a561435e-27cc-4757-98ba-fb3bb682ea7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6acef7c-1491-4304-965a-5241b9e1fcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd937868-201c-45bb-9f2c-aeb2b1b86918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81921a73-7e57-44fe-9723-3fd5b3c0b7eb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b022e15-67d7-4a7a-8b63-98a4d5147f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25921695-d4df-4819-a11c-9749895e6934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28191b16-6cb0-4019-8f4a-3247771398e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45920306-fcfc-4086-a6ea-5c279500310a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23de9882-7805-4f20-9280-32dc7d489fae",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fee8c6-07bb-40af-8c07-734b1f1a13e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d503eea-2f48-4398-b640-4900c586e7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5078414d-2698-4c60-8d87-c3355e277ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "075a80b2-bf59-48a9-a51d-f8156b1672d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c6db5a-b1fa-4278-b772-ad1ac51b271f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a5c815-97c7-4855-85bb-98d668883fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49c4dec-2d12-4fc4-91a8-a2345b2bbd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1049036c-8d47-4c44-b804-ed8bac2263bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "977519e3-0ecf-423a-9f12-057d8cdcba4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821cd019-6a50-48ab-b4e6-c330e655b3e7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57667d23-899e-4e25-9a4f-513063e23a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb848f4-fd43-4d64-a439-6373403b1158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ea8c91-45f5-4ff2-8743-a7b9606fc228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e500b9c5-d843-482b-a517-a3e44122e861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e565997-66ed-451b-abe8-8fc7cb97d154",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514862b2-aaf6-4622-8e59-9e2766337ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3cacb37-6f13-436d-8557-c2480bc3d6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d429f0c-59e4-4d21-8f6f-edb78f925315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e83284dd-2095-47cb-86ea-a567985f1a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c446d6-8abc-490d-acc3-df8a5297002e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcab2d6c-d9a9-4a77-a0e1-e4cfc3e69ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96a2bb3-434a-4c20-a399-b65a27296f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8047f83f-f2eb-4da8-b0c9-752eef9b78ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf449ef3-4d46-45d3-b2c7-aa360ec924d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e18313-1625-4d4b-aba3-51e05f0425df",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8686d85c-8cd5-495f-bf3b-275b45809bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d63aab-e4a3-46ef-be27-bdfd58cadacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5c4690-9681-4322-8b30-c085e5eb5c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fd9b08f-66cd-4b21-b0dc-007a50a954ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d65eefe-38b0-4537-9804-7b645e52d0e8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bc1775-502f-4c6e-bb92-7199420d7769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72ca54f-13ee-49e0-88cf-a0269b4dee30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce941ce-177a-4080-bd93-e6ad92e5b01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee2141d4-76d4-4914-a561-70256a263305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55fe812-1dd1-4281-bb10-62cc6bd06bd4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a844d09e-0082-4d96-8e43-fcf139caacd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7143433-f6e3-43be-ad7b-444375f27272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c10413-e96a-437c-ae1a-7054cd6d17cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87cdfd23-9231-4e9b-a3ae-a4df6007ad9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e075fad-c7bd-4739-98c4-1f87241a4181",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc42c34-a309-430b-92e0-13edd72d9665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28f5cb3-b7e5-4b0f-95a7-0a248c21276a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2253085d-8415-40f5-b483-e6f99a1ca67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed1ab702-5432-4380-86f1-54cfe5a16166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9f2203-cf25-488e-b9f0-80141cf8213d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f65a922-d043-4ccc-bcad-f27beccbc6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7481e4-d23f-4552-8e6b-3e980f72e452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd5f431-bd09-4896-93be-0ec0bb7f2ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b2fd28e-fba9-4819-9c33-d9485554ec39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2c6e82-432e-421f-bde0-2b85ddd06764",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ea0dd6-9350-4fc8-9741-c7810bbd187b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8266d51f-b67b-441c-b589-5a15d0bdf1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c508e7-0d20-4107-9c64-e777eca3c20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0b2dae9-b911-4afb-92df-f47ffea7af08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11187884-4786-4964-ae62-15fb64ccad0c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaea65c0-b135-40e9-8c34-9303defae651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d6306f-d615-45f8-9237-0d6f42a1af72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fa14f8-ed42-48b6-95b5-6752ccba3320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8bac5e7-3eb0-47a6-b308-da5d478eb3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6ecaab-fc6b-42a8-834b-f261713268f0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56ff5c8-ed2d-4dde-9f6b-25a4bbfb7624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b381d7-9257-4004-879c-b3b6e68a17b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c176fde-d0b9-4b3c-ac4c-6d3d723ceae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "249dfe13-68fd-4683-b9d1-938589b200f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa15eb68-41a8-4439-88f4-0d284a96d1bb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70938c46-8526-44db-91f4-a9a456244da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4b138f-e4ea-4ed0-ae09-bd7a0ccaf1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27609618-e669-4ea5-a07e-619984f0a25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "145b8865-f32a-4507-a1ad-51d5bb620ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5150d2-9098-4adc-996d-21286e97e286",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578a07fe-450f-47ae-bb9a-29ad7c30cc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fa31d8-df64-4d66-9393-9412794a18ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862f4f0e-9b5f-4f9d-b910-af995cbc901b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1475e7c2-154c-4fa6-b384-238ed3b8b1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f11608-da08-4865-8b80-488a7af0d7c3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c00368-36e4-4182-be72-123162eec07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2674a26c-7f0e-4798-b405-0503d62fdeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e057c54-73df-4e7b-a297-84cc04af4d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "366fb55d-e4cf-404a-b32b-7f3fd703ad6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90631509-05ce-4325-85c6-27a4fad8abd5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4346df-bb29-4d38-9d05-ae9f81a45dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1dba60d-7801-4988-9be6-7ce81997674d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2976b513-2488-432f-8f07-037119e7a153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b9194f-69b9-4cdf-9f63-41629e6a8298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda1866f-5804-4c5b-82d7-c90d403a1ca2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7be2c46-7abe-4e97-8d3b-f1267ea3b51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9827094-b901-4739-aa00-56bb8e94959b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af33b8f-7374-4d98-8129-9ca1036befa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1714d80c-d4a9-4fe6-98b7-00809dff4ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba2a915-6ff1-4dde-b20a-de3a6728675b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9917bd-53f9-437d-9bfd-b04faf50c16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebeb03ef-08c0-4589-8e89-acfbab52178b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a023b2ba-ce25-40bf-b1e6-b79d5daf45aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aae77c52-fc63-4ce2-aaea-11495edfc6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0999dc67-1e27-4fc5-82cd-5f54fd72d938",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61909c4-1554-4238-a280-0f6a58ffd727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74939fd1-7a84-48e4-abb2-31be1115241b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67b972e-c513-4a1d-af40-419373b1eb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "72cb292d-905f-4667-84e0-bcb496d43bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7927b645-f728-406f-be13-a6367e495eb4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd716d7-0f29-47f2-b366-3a5745415da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4dc8d7-c120-40ae-a0cc-700e10452b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187bf5ff-0bc7-480e-b1a4-c51e0b4df49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0da6d9e8-d932-4860-bb91-2410da41fe3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5fd015-1d37-4a09-96d8-f6abc43d774e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9a1b71-23c4-4a18-8a92-bb83a676a481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffa2027-dcfe-4228-87ff-97c6b339dfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ebc355-67c2-4b15-bae7-9835a2e72b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b44bffb-2a8d-430c-aad6-9ef6dc869edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d91c742-baf1-437a-84bc-69ce8f259fde",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affe508c-fc8a-46ea-936e-bac58ace5abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3eaf17-9fb8-4b8a-9eb0-763514a90ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e47f12c-2c67-4a3c-964f-8e773f0adc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b91927d6-b969-4d85-9c19-1bee2f66da1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbd40ab-1c15-41b5-81c7-d92c449e5def",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b58d5a-a888-4412-bb03-139063878f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7986f92c-a6eb-4afb-afd7-77cf5a929605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bafa73-484d-4c9a-bb18-caf9f0ab2566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aaa5352-8bd7-4f51-84b2-86e226422ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b319513-795a-47e5-b6bb-efc65fd69d0b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9762e7-282a-4b65-8fb9-0740746ecf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbec8e3-dc88-4849-a304-fdc8ce6dc9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c9bf4f-3f59-46b8-9abe-380512664374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6625aea1-3da8-4ae5-8116-76567565c555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b732753d-5672-4ac1-b587-02d6f1bbaf83",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e32383-5a15-4f9b-9154-f56c1b78763b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7327ab-b50a-416e-b04c-45bcfd157074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b95857a-49f8-4d9e-b552-0d8f5405dc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8f95db-5481-4e37-b56c-5fd960811717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0794b9e5-74c1-47cb-a0a1-e023761646a9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631164bf-da17-4b6e-abc2-ce96ab060726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f602a6-1fe0-4b41-bf71-d8e9dcf7c385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fb3a3c-741d-45e2-a967-73afb12be22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e94ae42e-0059-42e0-af5d-8bfaebacb7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d7706b-6eaa-4ba7-96d7-41da3af9ca09",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4f87a4-6d05-48d7-9166-c79c72b6bf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0faec2-e2cf-4aa3-98ec-f79726ca4a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11999839-45f4-46b7-b489-ffde66b015aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1032cc2e-a01b-4d47-a055-40418d0e1f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d937597c-5aaf-4e7e-8c30-87d5142ca0c9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0d3936-5431-4fa5-b48d-1c0f4ada2dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebe3cd3-436f-4a2b-a4b7-8ac4b911a193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8d26ed-5b2e-4ba7-92f9-1a3757d75fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7338cf39-139a-4dee-8df0-6f48e5484aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59359a41-4d45-47da-8139-a469ca166744",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0493da0-88ee-45b5-98de-ae345c3701a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60dcb298-616d-4111-a5fd-250acde37de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d4bc44-8a19-486b-948c-cee08e143b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6655f7-a5ca-4d9b-a2cf-1ad98a30a983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca20fc0b-a6f5-4f90-81f8-7eaf89aa0bbb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f084d3-2a54-4744-83be-1ff2f77d50c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36253475-c6f4-4097-adb8-cd0777865fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee727c7b-f86d-46c0-8547-508a655b1731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "99368a2e-a06c-4208-a257-bde2c708025e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98efbe0f-1ec5-4a61-a285-f3c055c051ea",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e79da48-f172-479a-9514-8741645198b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3764565-6037-4098-b5b9-093092bbb055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdf8761-11f3-4f22-92c8-0bc533edd4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce7f02e-0059-4fe9-b898-04966c811aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe55b74-be74-4b9b-a39f-e69b00b448a2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aeba85a-8fce-4e47-be7e-0ad9eedd0f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6e10d7-cdbe-470a-8567-5cdac16a4244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8c17a6-80db-4e08-ae0c-0b5d8b2af4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a96b3af1-bf13-4721-b05c-b91c511fb57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bc0c07-7853-4cc6-bbd6-5695824353aa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6573a0-598e-407c-987e-c683ee70e934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675a2e89-de15-4224-aeec-c9898b614d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e721068-0275-4e12-993d-fcd608996671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac81654-949e-417a-a3e6-9f3818308dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205ebd12-3b5a-420c-8d3f-6fb50d0a4a5e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5a0ec8-b32d-4497-b3a1-eae85c237bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c374794-ae55-4f8e-86bb-d44b27fa4384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d6b7b5-b14d-438f-9e93-07b1d6c1ef05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "810131d7-bd57-4b8c-9f5e-b76ad33151a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fd7af4-4ef0-4361-b636-a661233ca3d9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56241de0-10bb-4765-acc2-430b5ca0a122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf24123-e547-47e4-b05b-01e603cf29ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b488ee8-037b-4ea8-931e-878fc96d1cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c04fd3ab-6af4-47bb-bb44-09f23d2f2e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5ce1b4-1642-40b1-985e-f085eb37b1cd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe813b5c-e73d-4a49-a874-128349aaf593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161fb90c-52cc-4915-bedf-75f53877fa04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a237a844-d8e2-47ed-ab17-ce72f2aac660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "11951eb6-eafe-4106-875b-b761d1021808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68711f48-34b3-4a1c-9653-13d866130e10",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e5ec98-4a07-43df-ba07-5945d87e94b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9880b2f-e5b3-4731-b584-c7c35491a139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9ad811-b51f-467f-b780-e24bcf5e342f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "06a61c55-f226-4070-8731-aa789cbeac60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f39393-ea40-47b9-943f-9f82bd69bb19",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ff89b2-e701-4bf4-9f87-f2b4590e1389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ecc44f-52e7-4b5b-b172-ca913b7576d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821a380e-950c-4707-9bde-d811ed74bbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb89349d-6373-4ee6-853a-329bd6b50f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8988003f-63ff-448b-9ee3-e6d600387d66",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc06d9f-b1b5-47d6-8612-5b43908ca522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0081d7-4a8c-4775-a8a5-fca09a8bd67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35177b2-5a3c-4dea-8b57-66adf331bd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf823dff-6f88-4750-8e3c-a4a8d83c22a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed54d9c-e90c-4d8e-b4a4-814b82749634",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cc3661-04d5-4473-a07d-ee74f02aabd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f004d11-c680-4aab-95ab-0838203f4a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1406f7d-8026-46c0-ba6c-14978b47de6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bddf9cd-166b-4825-87f3-5179939c2f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0ad455-00b5-492e-ad3c-6f400088389e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8770a698-5fb5-41db-8371-e1068e7707f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5a2a07-ac92-4d6d-abbe-049d0afc7ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9024ca83-7dbd-4925-a891-c9334119836e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2e0a80-1212-45c7-b477-3e941631e045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a642a4bb-cabc-4c12-be47-9c2196b969d4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788ff6e9-6574-400b-8190-7233022dd3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9849a2a7-89af-48e2-918b-75a2262d8793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4e8ca8-c08d-4dc1-948f-0cacc5238b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5ca399-b04b-4859-8731-ee525a0a2960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9531d84-f586-4681-ae39-0068fff60f66",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003ca996-bca0-420c-960f-9a6c85b5989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b7bdfb-2d84-47c9-86f7-e65c244ab50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b59855-50a2-4fd0-96b7-d3f00f48596c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9775dbc-cd32-4b04-8a0b-c5f6c97e30b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a993805-fe30-40f2-bbf1-3c1786a8277f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417795c7-5760-4555-a9a8-62ccfe192308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da14eee-eeed-40a1-a7b9-d72240769b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec988fa0-858b-4c85-96d4-b836fa0b4d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9c6d50-415a-4a78-bda6-ab75848cfca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c520cec-10de-4b3e-afdc-0b7ad35efd02",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995a77dd-da0c-4830-8203-2ac77d90c458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8aae93a-e463-4e14-a1f2-155ad1ac6abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbba2ae-419c-452b-952f-e966c74e648f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b87fe4-6382-4277-a631-4b072664afeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de7c72a-15bf-4ea9-bbde-af729b293f6e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47e84a9-b87e-4b01-b19c-511c0334395c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906fc61e-5116-4723-9b5b-796716d63511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4fad88-181e-4bc4-8ca5-05526586bd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "98432aba-31d2-4384-931b-36e5dde452b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a3823e-0423-4e74-8bd4-60e694d80664",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7a8204-b8f9-4491-b3e0-dfe2d397cf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5343a4d-04d5-4b50-92d8-ffda4ea402c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9982a106-e025-4b3e-b0b2-82d542724c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47fda8b9-c988-4632-9321-c3b6188b8176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a4a7d9-79d1-4be2-a231-be482013362c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9398c206-3403-4ffe-8727-c2e5e4f288f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5c3472-4513-4d7f-8c32-47bbee9a4ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220f2990-224b-40b0-8d4d-5d860bdf2a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b65da01e-9154-4eda-b49e-c7d8f0877302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301c4f39-7f54-465c-aa5a-53ca38e12ce9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e800ca-f9be-4009-8e6e-631d906717c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4221cc11-64bb-4a4e-a34f-7f16f2321b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89e1430-23de-41e0-84a2-b1a6af15861e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1559bdce-a139-47ba-93a4-a2de23c034e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b00738-7469-4e19-bb10-f2ca907d22f9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a99b86-4eeb-4701-a00b-154c48fc6c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e8093f-e405-4ce5-b8ce-b944a014e7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14ddfc3-da55-4955-b389-a571cbfb5b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d28bac2c-9aeb-478f-bd19-e1de9e351d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a5beb2-e06b-4920-83a1-90e08af721a0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a556b0-8acc-4d91-9286-ce15fe3e63af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28edcffc-b8cb-4110-9398-ee946de8e32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86b9fbd-f177-4a7f-81ea-d0245ddaaf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0666719b-44f2-4fd3-9325-109c7f494877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed54d9cb-583e-4eb0-804c-564008e5c78c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2f37c1-4480-4e0a-a190-8ca523916292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a077b2-8245-4de9-bc1f-2310d408c29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c074fb-1475-4d04-a9cc-eeb9b8e27d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "300f6988-a57c-4396-8960-bbb3ebe16bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcedff6-bbf5-4e4d-8357-1a3feab3bb54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b2cb49-b3f1-4f96-a886-9343c7b69682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4147e952-8a6a-48ea-b331-03e66065ef9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e8843d-3d8c-4a87-bbf8-a4d7aa7b0442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b32aae5-8c90-4ed6-a3de-f35933559592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266dc663-bbae-4e1f-8501-4f73c96d1ae3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe120e8-7956-4917-baa5-16fd109a577b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a009bf62-ca2f-4b33-9f38-0abc329808d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274d4d90-14ac-4444-9776-277ff1c897da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3dd7e3-28ea-454b-a557-a345264da440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c950422c-fd04-4777-bd28-8326d7d29725",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e011b6dc-8c96-4b0a-b38c-d8c021de39c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a7d89e-f8da-4ff2-8219-c2141ed109bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e45ca5-8b83-46d7-b0ab-5eaa816cf35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f41280ec-b9ff-45c8-ac06-963fc9fae6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c0c93a-87c8-4a74-9609-070ad796471e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994536cb-acaf-4a30-8983-5506b2122d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc818d9b-12c2-452d-aa46-14f10a3323ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc54eaa4-6522-44af-9494-d93efa668e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb28637-a4ca-4b45-8d48-2d0603b35386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe3a8f6-a688-43ea-b645-429aa9f2388f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef0a574-3da5-4ff2-88ac-77cf563ac9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdd400b-c6fc-451a-ae26-9b3a8d7c5dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83f997a-d453-479a-917b-5861514ce4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2880f84-66e6-4ca5-a6f2-98014bd8097b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a10b58c-f9dd-441f-81c4-c8414d1002da",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d142ee-2da9-4bd7-9d86-012f085244eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24976da1-0da6-480e-ae64-2a7cf3642d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798eba7b-14ea-4b76-8d65-8b5a58753b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccd67af-b232-4f61-974e-356ba2c7b282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e494c1be-d565-4cdc-94bc-e98f8deded0f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6b3573-a8c9-476c-91d6-bcbf42ce2b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d590232-e284-4baa-9bd7-91e1b17cc5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1805161a-5269-4276-a2fa-a46e742be5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14efc83-a049-4e51-beeb-f132af3c8985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65204b4-09ce-4567-ac52-f8b349253734",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41da30e4-825c-4faa-b541-958c14f0dbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e7dd46-58c3-4b19-a565-bb20a6eed70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781460f0-ea23-447d-b676-f5684c5546d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd60f7e-7ea0-4998-916e-d2c54492ba99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d8dc8e-02eb-4673-bfb0-1f5bf8473a50",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4742ccf8-22dc-4836-9b5c-198edf48bf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07bfee4-eae5-45fd-9d0c-21c58e5a01ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46563646-04e1-4f28-8901-fab068bb9526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd34a15f-7d8d-4583-a767-0928f4a2b837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc3ec9f-cd55-47e2-993f-6317dab09fb3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc130e7-9a99-4523-a2aa-8f84839d29ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999ba908-94a4-44bf-92da-566bb550867f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54d7345-06e4-41f9-8158-af32f05caee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45a95f5a-6b11-4b2a-8c64-622f465048fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71d7408-34a8-4055-8502-986c015dd294",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e289e0-16f6-4269-afeb-aab60f9b7142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8242e733-2c08-46a7-ac23-6080662307f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423f388a-5437-4442-bfd6-8820ff5de371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9534743-7056-45d1-9843-0ace1c73e383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a140e11-7abd-4a4c-a2b9-2ed42e3cd260",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce938c8c-be32-4261-8e96-20713db8e6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84755e9c-9c6d-4e4c-bee3-34bfbc101575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f65bc5-8816-4b00-b719-af0d23ee92ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbce7793-8bd4-421e-bb9a-5f2a590a318b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757dba14-c044-43fd-83b7-b68dfaa6472e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dc076c-510f-4a09-b811-de92ff608b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3969ab2-7869-44d5-a786-f61ac0c1f393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16f4d5e-afd1-4e2c-8ea2-8f9d1f8b798f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "181dd1dc-c99b-4e5a-8f11-e3e9496e1f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23637cdc-2c44-4bcc-b5ba-b187fdcfa801",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b088b617-c6b2-49a2-832d-331b3daed94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a245a39d-6f86-4b35-a095-29e547db8f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0468e857-56d4-40a0-a2d0-2e79cec76f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc2047d-346a-4810-af68-621c223d571b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd619d78-3f34-4333-b982-6d8c0b3ff863",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387f1030-a2de-4651-b3b7-156bc4207f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ea394d-93f9-47e7-985f-46b3352df28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd363e1a-4294-480c-b24e-6fe57f2bfceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb940cd-84f8-44a7-801a-25a1cee451cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca4df35-42f4-4236-b9fc-0d4cfe18b1f5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa64ea2-ca40-4c08-8211-6d13cda55d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294e750f-5414-4bfb-bf38-1caa9d26eb45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47db70d0-34bd-456d-9d8c-415b50203359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b72ee5f4-d3e1-4eec-9af7-b1135a04bcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d172f31-6b5e-4994-97ca-5162b4b91895",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c0c199-d5be-460a-98b8-4088fa6555d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a025aaf-f544-464d-9eb6-69c235a8482d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ecd7c2-bab2-420b-b0b2-fcd06e0c6df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bbffa8-2b78-452e-96c7-743730161d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174b8787-5379-4892-8a46-c81740ed2434",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735f1c3c-5a12-4e7e-8e48-697a2e4ff0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10b891e-c3e9-4132-ab49-52c0dfe5805e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caef4ba5-5dbb-433d-bea2-fe58ceb00cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52591e2-a70f-4da0-a334-e6ec1b31745d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f91195-7038-412d-8a67-bda931038e87",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be9780b-d643-4329-a375-11211fa43cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4422dc-3880-44e3-9f39-738c22e0c074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026ba8f4-8f2a-4821-baea-4c9fb74b5d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cde7108c-b3d2-455f-9ba6-cc6972254dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155508fb-bc9b-482b-bbbc-3e1ce865832e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77a0f00-5654-481a-b471-ac4eb6d7f69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703e8dd1-a490-46dc-9594-3ce611ea4ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da101793-65f3-4e78-bd0e-91c2ab9fed23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97ef970c-c78a-4d52-aeff-a14e7fbd73e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ff577e-c552-476c-817e-00db3736e32e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef94f94-fe4a-43a2-9f7c-519458dc6cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3870e919-49e9-46f5-9b3a-49416da13582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734e3c5b-2807-4ac3-87b9-329bd63ce1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9504f5-d6a9-4bb4-8e60-7ef3163180c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2f77d0-02f7-4b6f-bb61-bdcf6d7af6e9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc4d074-cc1b-40dc-a403-afa09cc3dc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f4a205-4975-4408-920f-aea842ec2740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e082b161-c9cc-4c5d-85d7-9fdbba74a31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2755a2b-91b3-4fc7-a793-3147a64ed8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2e9603-6c06-4ca6-8826-c57c1844a7bb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602a3eac-b527-4227-a3a2-f9834cd3e9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff208bf-3c77-46f0-a9db-455ff527ea38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7c3384-b69f-4fd9-a32d-056a61400fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0844fc-f028-4dd5-94a4-1d26e228e6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0351e5ee-a82e-498c-95c3-97ff27b37f84",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e910b34-ed53-475b-93b7-3fa7f5f470ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fb084e-bee8-48f0-b256-ae2da8489aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cedba9-fc30-4728-a20f-577b097b158c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "60fa12ad-c235-4f3e-a405-87b8a86bf41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b271ad-8078-425b-a9fe-c1e25fcf514e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6b7dca-0f00-4fc7-aae4-8f89c82587be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350e45a5-3919-4b30-812a-26e41769cdbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777ee42e-5d97-4990-9bcd-fd649e98a537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61327056-c683-4aeb-8a51-bc4891f022f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bdda63-96b1-4e6a-987c-39742503648f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8113ed6-0840-4508-88d0-83091e8f2d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b78c93d-ba57-43b9-8455-e97d92f37208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054a7331-fed2-4d28-a08d-b9a310d5bf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6fbe08-f390-4f1d-a75d-193f22b5e005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ef3d3d-a844-427a-84cd-c373b9923462",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe184b1-fdee-4465-85e2-4994c92074a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b97ffa5-6569-4545-b2ed-8b3a0c22d11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f034984d-727f-4859-b2b1-51871a4cd830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c63654d8-9e6a-4fdf-ae61-f6a6e5267771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fe32ee-21da-4164-82f7-6feee7255ce5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c21e90-7c81-415b-9777-32dad29c06cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25524762-71f5-4d14-8ac1-bd138a214ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5174258d-dc64-4301-8b7e-579feb0449b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52519ed7-2bd3-44f6-9be3-08122674ff95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5246697a-a743-412d-b209-73f9276e0a99",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c0604c-39fa-4e8f-af27-47a47d4be5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e372a837-bd64-4556-826b-6a7e894810a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398c50bc-9d14-43dd-8b99-d79e684ead14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e1eeab-1a36-4a7b-96f8-eb294175f73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c5add9-2b9f-41f9-b86a-3ab8a3d3b4e5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8231ab2-ba62-4cbe-9a82-f40207e60c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb70e5e2-cd9f-4528-922d-45e48be097f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dfb4a0-96e0-4cd6-9181-d21fd9e0032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d35a3a47-9ca4-4c60-bea0-a44ddb539adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d92a38a-bb5d-4271-bf15-d03f4a4c5477",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d9508b-f3a0-423b-b4cb-1965daa80d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f0be50-f238-4879-ac51-a950e74f7c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3d7bdb-2cfe-4a2d-b929-59d8bdb118bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "028fa00c-8e2a-49bd-9cfe-18c90c0781ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b6929c-c723-4dc4-a541-0dcd2b4b249d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0e80d5-b3d3-41e8-9f30-fd89e0c8bf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb3483f-7335-4db4-8749-f2daa2cc1661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6568aeea-764b-4ef3-81f6-90cbb8c6932d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d73265f0-6454-4c3e-8927-adc49d810dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7e378b-a1b7-46fd-82fa-3077c417e548",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b21cf68-57c5-4589-bb34-4955e1b3a296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3833ca0c-2c47-4f78-b673-cd5a58e5f96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b16d01-c0d2-4217-8c6e-b08a7a05e6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e06301-a6e9-48e9-9413-9a8c68326ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b616a1-6dae-41a9-9e6d-c06b12aea684",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7abd35b-675c-47e8-b0e8-b24d7f991e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c16d31a-838a-4eb6-98c6-f329c01b54a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901dbb9e-8582-4f4d-b5f5-bcb89b189b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1152b629-0422-488c-9c23-12e92226c636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae75a242-95d6-49fc-9822-a9f54de712ac",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6bf500-9281-4fb0-be0e-bd5b91ddb342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f1f27f59-86dc-4a3c-a7b5-11d888a28506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd82789-6f63-4cb8-b73e-0044df37e068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1689af6-795e-4153-908d-6a622da7232d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b287e8e7-ed9e-4e8f-8df0-61e09811390b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb3aad56-c247-4c98-911f-11c9b112d81b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cebf1d-6c73-4d36-a87a-d3749f255e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34a6621e-b714-4b33-aac5-69a62e9aa628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f3340a-b42e-493d-85d5-8573bd6855a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee7fec53-41ed-4aff-b2cd-3f4a64813d31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c30dcb8-bf73-4ba2-84c2-4bddb5d13bc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "466c469e-03f9-48ff-acf4-57918ca9ad60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfea9625-ec49-474e-8ff8-be7045aa19b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38584e23-00db-424d-9c00-751d2e480ad4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91c93921-890a-43d2-b7ff-08a81bb812c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d543a93-4bbd-4a74-9968-323f89e356a0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "95538554-c5f7-4e22-beac-ad59fffc4f05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c6b0943-cc1c-4d80-926e-f35969e26af4"
                }
              }
            ]
          },
          {
            "id": "58672184-565c-44a5-a469-dc9de0fed816",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9de09389-9f7d-4cba-a6e5-40c04e1e8ff9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "eb4e6e3b-bead-41f7-bfa7-67f47b5e0d2c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dacba5-aa1f-4bc3-923f-e2a675e63098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "75eed154-97c0-456c-951a-00657c0f40f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdc1e5e-f21d-4930-9053-10a7a50e99ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cb17ff-3466-4b22-ae4e-a93ff54a5513"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f4fd92b3-6fea-439f-80a8-d23f8fe3a6c7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29819aae-a796-41be-90d5-19cceb91adaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30b8bee2-ddf5-40e9-b21b-c5052245a310"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3310b5b-b7d2-4da2-9f2d-378ee10999b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "19dadd05-b358-4223-b304-b48672d5daa3"
                    }
                  }
                ]
              },
              {
                "id": "139b1f5c-8c28-4be8-897f-c5a7640c58e8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1f73575-9120-430d-a57c-704184077dae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7aaaefb-2c63-4538-a91f-7822ca93f18f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2692990-1b16-4f1c-805d-f35d48a7e14f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5c45ee6d-7b98-47f6-bda3-b89b10b26ff1"
                    }
                  }
                ]
              },
              {
                "id": "23e2e4f1-2fb5-4c69-8825-b51590143da6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8902bb3-35d8-430d-b8a3-c2779dcbacd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e0d8043-31f5-4f41-bece-df4f4f6ca0e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a08e9d85-1a58-41ee-b3b5-a27d8cb73a92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e35a99bd-dedf-4563-93b7-0ba14ff72e9d"
                    }
                  }
                ]
              },
              {
                "id": "bb5fe633-3f57-4e60-aabb-14ba10e2f4e2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f3b04a7-f99e-4d60-a83a-750b258c19ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2be1f5c-0017-4a26-9715-7826411b292c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b80b58ec-ebc4-447c-b4db-8635c980ed95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d4d853af-a315-4f1b-8668-9c0ae8a44365"
                    }
                  }
                ]
              },
              {
                "id": "696b47b0-2666-4ba7-a796-5607e2529aa5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "801075f2-c4d5-4a29-a04b-2c9a8cf565db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5481330e-01ec-4c05-b450-e34cc91ccda3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed21c6a8-483c-464e-ba18-529dc119a30d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "820965a1-4641-4aae-92a3-0e694fbacb05"
                    }
                  }
                ]
              },
              {
                "id": "b4120e91-2c9e-4f86-82f1-3a4189bdc6d3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad4a6148-acd9-473d-9144-4a4eafab0ab5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c720aeb6-0c85-4e1c-a657-8928b3c4b0fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f62a6912-a3d7-45b5-b8ed-01c8ce0d6d75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1fccaf6-310c-4203-8021-2d6a51dda039"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2306c8c-fab4-4fd8-b721-f3ab61fcb5a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72b0b302-cde1-4da7-9731-bf735e84ad99"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c30a7c1a-24d6-4b92-9eb8-b9e693d600f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "827c2a08-6ad8-4413-b7fb-71e77bf7b69c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "425342a6-10b4-46da-ba84-e3fa6850fe84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "58abff57-e518-4ba7-9e74-c12959a3539a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d451a6d5-720e-44f4-bd00-03f7fda1eb1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "182872e2-56e2-4b69-a123-5c9ca53280e0"
            }
          }
        ]
      },
      {
        "id": "5731221d-4759-4857-9815-ba2ac2cdcd7c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6c70a982-b57a-4fc5-8c08-90c3ef470855",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ae2a265-6561-4913-9c15-118cc651f31e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2dc3481-0572-4e52-b99c-d1439b9aac91",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3850ba22-30d9-4e8f-8e09-c47fa992be04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c170a39-445b-4b48-a936-f5eb43c9ec32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1001c2-6d9e-450a-a48e-3cb7c4af777a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9a7191-4afd-4062-bb2c-5a3a17cc4d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58aa5c7d-deaf-48cd-b51c-ec2d293bd336",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81b075c-1d0e-424b-b6f4-eb6ec4907e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c917e92-34df-4edc-8ea0-3cbcceded66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0477ed58-1826-4817-b5c4-4ccf1c2bc25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b176eb4-0b15-4c19-829f-fd132678a4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a2d53f-5395-49b7-880a-1b22a0dcf711",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7faacb9-04d1-406b-8997-4c004e75cbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c736bcee-14a6-4f55-8114-d7b455b314a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204e1788-432c-4d15-8605-3eab3bf66296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff4e8f1-3479-4cb1-9641-3ee86420dd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bccd292-cd1d-478c-9e12-35ba303af073",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22577235-8ed4-49c1-bdd3-d83b6322e9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df291e6-9a23-4205-997e-23180f9aa305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fd62c3-7b21-4a71-9e40-fe6b6f2f2eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "457d2084-c261-4b85-98fd-3e640ae8d018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c29067-928e-43cd-a4e9-a4e87e51a84d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ced875d-a0ad-429c-91d8-423e0e5ec517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e07dc6-7092-4dfe-8f04-15addb6db759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873d5956-b496-4dd7-9490-582c4b7ff0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec6f7f2-369d-4b0a-9396-35b6c3f10035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2330cc24-2369-42fa-97d5-ea51d7d1e987",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a859ce-53e7-48c1-bed6-0f98a1dc2ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0296c7-cdc4-4333-b7aa-bdca818acfcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb551c6a-342c-47be-9c37-47f53db06d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbca16db-cb1f-4524-a4ad-d9eaf38dcb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52447ca-4ac3-483f-a7b6-9100c75b5223",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5161b9-80e9-4cb2-81f7-97abe0698aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9667cd8-22a5-4805-a2b0-99c64d600736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a0df24-621e-4b73-a343-4d103b9d8424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de0304ec-1a88-4807-bf12-453de981b998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320bd99f-b812-4541-9927-0885c82cdd97",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3f8fe6-44d3-4009-9c20-7a49f280d842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cfef04-c765-403c-8b94-2f7b58faa21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c04b7a-b91b-446d-8f08-f9f0c71efbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dde04f-1c23-4cf9-8b23-a184350fed7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db553acd-dda8-427b-bf5f-7d42223d5ac1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db829610-2d4a-4e41-848b-2584c650fda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abdbf91c-d202-447d-bfc7-534136f36633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ad8aa3-660d-4cf7-806b-5dd050b3a409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba6e624-a20d-489e-a50c-b2d790ec4e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fd41e9-872f-4af2-8f11-98d3283d54fd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d85be4-cc71-4add-8361-d8b5adfc6acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1dc92dd-2aaa-42b4-ad11-43774032a7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d65540-6918-4616-a739-61a2543e4353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3b3094-a6c2-4b48-9802-b621d4477828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06069bb3-53d1-4d7a-aba4-75e5c66e2477",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe4ed5d-abbf-4638-8ceb-a649d69454ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f05f621-0d55-49e1-b234-176424e68d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e055c7-500b-45df-9d59-602c2251b682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a58444-227a-4cb6-82dc-4e1f9989b5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dae9cb3-1dc5-4a14-88a0-3f25003fec83",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38d27e6-1528-4c0a-b8fc-cb56c6db0699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1e4629-5213-4ee8-9744-51f4af0070e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec53fd5-b202-4a73-a0c9-8bfd168cf8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "110a3122-1e2c-4e77-93eb-e146d0f1bd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0aeb24-54f0-484a-bfcd-922f6efb71bd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed70c90b-9165-4578-8600-64bc4220a861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08313f11-6d3c-446e-8dae-768306603dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81feeb4a-b466-4d3a-b2f6-741a4e5ea003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a50dc82-a385-437c-8a53-4937a5c85a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94874825-5a01-405a-b453-b06de522a337",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed70ba35-8688-49c8-98e8-641c7d42eee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481cf156-9d0e-4e19-87d4-1000acf76820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b3ae30-17f5-496f-9e3b-a48e665686da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0957e015-79f0-40f6-b4c7-b39e56d4abae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03616b87-f348-407f-b728-ebdf5981af32",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a053db-2bf6-4db0-a84f-b70525d9721a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff21f20c-47d7-45a5-aa49-780ab777b1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc0c062-09a9-4090-ba92-a06b35876a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "592cdbe8-5aff-40fa-8470-bdaff38f3251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dea105f-5c27-4c45-bccb-858d5bbaf13d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363e6e0f-5a54-4324-b056-4057edabe0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1ff971-4fb0-415d-8e56-cd4f167156db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7b4223-52b7-4da2-a227-e86de66bdc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d339e7dc-ba06-4724-99fd-3ed305ddd88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37c4896-18d5-4c22-b88e-10aa2dc8ff11",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a8ae0c-8218-47a3-8655-611d626c9e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85139dce-bc3d-41fb-9386-9f937cd964a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628de3c1-73db-4f67-8d4c-21b8c17f5888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "60600ac0-5e23-4304-a170-6f66129b9030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62627bb4-74c7-4d5d-a9e3-6e5642e0bcb9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca4c9d2-bdca-4a40-9396-c30f6b388ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453b2e5d-b6c5-4034-a244-71022f2427a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3c2a8a-a6dc-4748-8068-2ab9e11aa646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e94163-5ac5-4afc-8124-980f46db6cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979bd9c2-7e42-49d5-b1d9-5664db3aee94",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22905468-9e99-4b0c-ba22-27452da7506e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3dca51f-03c8-42c9-a919-7756a8a8f9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132c9dbf-2af8-4ac1-93a5-d990aabf1436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c7e891-8226-47a5-be3e-04d257587436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc93dda5-a1c4-4831-94c7-4dbdd61531e3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6501607b-a330-4d6d-a673-9643c787f57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b036d8-67b4-4205-bf95-8b5c6b8ec520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f7d2e0-dee3-45af-8180-db15d344f3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60c5c6e9-10f2-4bca-85ed-ecb9520ef8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eddf4a-f85b-429f-ad19-460c6accdea2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb90f4c-d097-4d61-ad9b-f1563aefdf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b057baa-e58f-4db9-b011-697c6568b7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c14b867-ea9b-47a5-a087-de1a567a3348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52fed7f-f3b2-4d26-93d3-171b27332975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1936a985-4f30-4686-842b-14a72e016be3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc23e00-fe2c-48bf-94da-18f0a4e8930e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbfee9c-a4ee-4a9a-bd49-9ac7b46c2022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7d01d3-5602-44e6-85e6-3bcdb27d5350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2c2ce8-a6cb-41e9-8801-860442f7a616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2032224-f6cf-4379-acc2-a590512cb2e4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ad045f-21ab-4340-8136-614674160168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fccc279f-79f9-4d5b-8cc3-2b46eb26b0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26851dd-746b-41f7-a254-452e574f1a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22c5dd9-8260-49fe-8107-1b601aa17c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f39551-ae36-4225-a933-1c52bd85c601",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412b2d17-4b67-4e44-aadb-da74ad490d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9b4c5c-96d9-44dc-ba45-fc84545e70f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbceec64-462b-460d-a8ea-b796e760aba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb599926-ccce-4f46-8083-12f19bd90fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07be100-6fd1-4971-87ad-05252c0d5daa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17319ec0-762c-43a6-ae38-fdbaeacf3904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14187e63-6aa5-4b89-abc8-37a7f3279d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fcc22b-6264-4829-b022-6caec1d9936b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d78cc4e-11e1-4ceb-8dba-c51c4eaadfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5763c6-4e00-408c-ac91-ce57a458ddcc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0bc2dc-907d-449e-bc11-da7dedf2dc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f139b7fc-9982-4a8b-9f4b-899cc5f4b174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daace8c4-ecc0-443d-af63-8658f968a11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66069c54-5d2c-4db4-a739-f106c702934c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d60abc3-7c59-4fb0-93fc-fb155d666645",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19072684-1db1-4e7c-9c48-91f03123e0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255e5d5f-168c-4877-97b2-628f3229169b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19a8b84-840b-4378-870a-c4d534673819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5adfaa29-ec65-4227-b451-b1d0d64bb73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffa9d99-8b6a-47ae-80d6-49b59b177952",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002cc3d2-e27f-4538-ae65-af9c329c5f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa8624d-b411-40b1-8d99-ebd8e7d44f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca304d0-3b79-43d1-9938-d8723115f140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52e88d7-f821-41b5-9de0-6fb8d9cafdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4e5ba6-14e9-45ec-8d68-eca736e8f900",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba80298-c329-4edc-aba6-8c92433c2007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc003489-b0bd-4689-92ad-0134d569f227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c16920-8005-4c19-ae58-751ba77b0e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0de91e2-6b30-41cf-8924-35403f4ca94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e1916a-d902-4e14-8c3b-28bdc3ced899",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40a3c5b-5d2c-44bd-80ea-8187e0339f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356c0953-9754-498b-be8c-3e9ea26b673b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bb5577-9fce-4b05-b392-18cae812d827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1575eb-1a75-41ae-8394-0e2cda459962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edde162-18ad-4f22-8c68-5903889c0652",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c5c167-8e1f-4fef-b866-703dc0e421a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f636c216-5be8-429e-9044-a63a70d842ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2ca166-3c28-4335-86f3-226e7358861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "292ec3d1-fa9a-4068-82c5-ec37902242d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a00c73-1b68-4c20-96c6-15dc1f0815ec",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfcef15-a86a-4888-add9-36dfb765b220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb4563b-a713-4fe0-a3a3-91a68ec8d88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b76c6fe-4a11-470a-a6fa-4041913a4a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a54562d-b9c1-4e83-8b00-7e1c0fa689ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330bc4ae-20b2-477b-9f60-856ede087f2c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54178640-ba59-4586-ba9b-528e3545ef7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfc8b2b-a3b0-4d3a-bebb-3c3e5da294ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a96bde-2a9a-4ba4-8e65-6ad78712597b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daed4c90-21e5-44c0-ac14-0f5299caaf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303ec3b2-c8a2-4113-ac01-9148c1eb7611",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d431b3ca-eda9-44fc-8b08-aa709040af5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b1fc08-f921-4759-9813-67301e55431c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3437185d-9e9b-4ad6-8ce8-751a9055ca8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e25dd5-9bfe-48a8-bebf-58467e557d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1c1313-29d5-47a4-aa47-a4ee23c4c293",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998e6880-55f1-4819-8ae0-38680b3fc941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe7abf2-6f6e-47ae-90a1-d076fba6e518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cccc9a-a09f-4f51-9de4-26c4be42e75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d546d45-6696-480c-a302-c749626af9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286ee643-cdbf-43c2-8569-b9d3dacdb41a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019015ae-50e6-48c0-97a0-d49791c68e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2358335e-3a94-4607-a1ff-520b3e5b2e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73c3b2f-fe82-48e6-8298-952cdd65861b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccbd50f-8502-4c0d-ba33-99582a764cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9f823f-32c8-462e-80fb-fca0b549552c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb3b5db-c328-4044-b814-60992505ce1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e959111-e314-46ac-b24a-94a0df30f8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2de57d-00dc-4341-a12e-4115f39d994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16647d29-0b71-4ef0-a623-ed807d36be58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d106f71a-bc0c-48ca-8f1d-deff5cd01b14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e48ade7-097f-4ee9-bbdd-9e4f72cead3d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7f073a-44b3-4414-9fb9-64f3288e07c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "51d8dbc4-9c51-409d-8e25-36543cc4c093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e465be-aa1a-48bf-b164-2fe57adbc4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4ebf8ee-4d9c-4895-ab51-f49db853a3a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "462a0ce6-3ea9-4e47-9a85-1a2b9617a143",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "693e459c-1448-4ec0-a6ca-941314de8087"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56516612-c5a4-4dc7-aee6-d9ea67f6b381",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da5b684d-bd9e-443f-a125-ccba39d9ac98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e68ea02-0aed-4e58-afe8-3003c84efbbd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1d29bac-5c32-4b5a-9c0b-cd7ab3e02ccc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "335a6682-0b94-451e-9e30-bddaac9d526d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6831f99d-67c9-4cf7-adf7-e969ff0e3c5e"
            }
          }
        ]
      },
      {
        "id": "c58254bc-fd6b-4c2f-b9e2-e46712421d11",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fdcc5753-310d-421b-aae9-06b85cdc7b9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15fee464-d14a-4b23-b81e-954be5531fad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41939a13-06a8-403a-a26e-511f5e98b3ef",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636b914b-0fd1-488c-91ed-96a0e5dcab42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc5d0bc-24e0-411b-ada9-591ea35245d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb1d273-2266-4fcb-8a96-ce110a823310",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fe4528-b0f1-4223-b986-24c6889d0c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edb2924-486f-45f7-9c3e-fbc603be4f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd9ba06-f846-41a5-b8de-43123fa01019",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2426e34f-067e-4881-abdd-7d1d5ed68b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1550d44-265b-4393-8cd7-57739abf0be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0e2a14-86f0-4ed4-867d-9984970cbf19",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cbe2c0-f967-4231-9597-b2a051d471f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db91bb13-70a0-473d-bfd2-568c462e79f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d06917a-ae65-4e52-8a96-505f09c56697",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac2ed40-c856-4fd0-9cc1-c769ec511390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f9a9e4-9e9d-4d4c-806a-4dd2463828f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b5ebd9-a27c-49fb-bc12-d8dab3d6e24d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3775cbc-2614-431f-9b0d-08b491e19b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59c88e8-2ee6-4a00-89e6-090f5065e477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d241310-a060-4ae8-82ef-c3e6d0c8e0fc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8858c08b-6a7f-445e-ba68-7b05165a9bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5792888c-da7b-407f-a77a-c13e7ee28d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96acbf6-0a95-4493-a2e4-f84d0dec2161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b71fa7-b768-4d2c-b739-c349ffbd00b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ec2a42-d648-42a4-bc3a-55a04e22aef1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b4f76f-a5be-49f3-af22-8edbf72a6f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "775e304e-31bb-4422-bed4-21ab5f8a5dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165cbf04-0dfa-4fb8-b7fc-90107a27c80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4837221e-53ea-40ed-b9cb-f701c915fd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb300015-e5ad-4c73-9ecc-c8fd0d912e4f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b266fb5e-cdd1-4c9e-8ef1-148321c4c4df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f77379d-b7ce-42e0-8e3e-2df89c9d2bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd87d9e-cd73-4f2a-bc5d-baa976f49f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d04a67-d5fb-42f0-b4e0-0d4531eed561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cb028f-2155-4e3a-8687-567f5ff1ea25",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc63999-1d75-4a58-9afb-668e359be08a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63c38498-ad45-4fed-884f-6fc8ef01d97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490b1f26-a1c2-4839-add9-ba4ee1ede8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce160f2-10f2-4cb2-a6a0-12f65c46e800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c89e4e-4e0b-4031-baac-29d269fb88ea",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea895bb-6b72-4226-9bee-bb8393511331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c94302b-232c-4c34-86f2-52b2c1911e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da302127-9bb3-47fb-a25f-c886d6ddba3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a03c95-5590-4bdd-a680-78dc3e761f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72edb17-6535-4a71-89da-fc1ceebfeaa3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f23689-233f-4937-b016-67c031422612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3982bb9c-f92c-4339-9daa-15a3cfc5461a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36596de-8d3d-4732-ba0b-e6a2abff28d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4014259-a9e6-4ebc-b14f-21660cd6c6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c3f0ec-3ae0-4a04-85cd-93ef0db51029",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09100f2-1614-4e4a-83f5-f8c12fe388dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2431750-26ed-4c35-90bf-532accd494b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b674f799-2e37-4e52-b7fe-7543c40888b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbf0db1-2878-439c-a771-37390502efe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e90816e-5153-474b-a6a6-f74f7dc0e5d3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95f3876-97df-44c0-aba8-338749ffabc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b6eac5c-574f-497e-a526-05bee9cbee9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a8fb2a-3805-4c01-aace-ddc93447618a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca5f3a4-11e5-473d-9df5-c10638b68a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f336e0-2aa8-4bf1-bc55-82f1ca99fe70",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4371f8-9bd8-4eef-8780-9b9a9e55f2c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82b422d5-2797-40ba-9bff-4d95b3b01073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60039093-a42d-4173-a170-b309ba50af01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7403d2f-e7de-47cb-b62a-eee852d9da4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d2b7aa-2fc4-4102-99cf-26e7c09da675",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c276b1fd-d6c2-49cf-80ef-ca64e0b372ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ea7e276-209f-4117-abe1-5b61e1bc3fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d81f348-9d61-4fc9-b5e4-a2a680ce05bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9d5543-f26c-48f1-ae56-0c8ef75c1a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e294a214-3006-4c01-a066-bf1f51c40831",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87b9511-3ac7-4cb3-813e-a6567a14de4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fcfad0-92a2-4b66-9931-aefbce96b537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158453a2-8eaf-4da9-8426-1dd0ae6088e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae208a3-7d71-475a-a855-a753d361c47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446f0ffe-c5e2-4a97-bbe0-900b5a95bde5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3322940d-5883-4980-b6f0-83adad2886f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7894786d-a1ec-42d7-82de-9cb29cc2c44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75bda2b-3b6d-4345-aeab-12e2abe8b8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c561ad5a-cbd1-4d3e-81fb-46043e9a6272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93893d19-307c-47fa-a19e-e4e73964d3bc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1547f1df-bd9e-47a3-b705-4c08e2ab65e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff14c92b-e9aa-4572-a06c-e8d9d759286f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce5bb70-cfee-43e9-9d50-811543758414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f160a9-b4cd-4965-957e-96f99a06809c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5422036d-982e-4d25-9705-a9d4cfa3b50e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0eee0e-a783-4056-982b-6c7fe6b59ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de38d888-8e09-4bb4-92df-3b50539643b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19674acd-5646-4750-8bc0-07252745f979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42436a7e-70bc-49f3-824f-c1fd006be7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b4c3a3-2566-4238-ba40-8f283c2ac696",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9236def9-d025-4580-bfe5-cc0114afbfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fa02bf-f417-470f-872a-f7cfd638ba85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cd1e26-b256-4ca6-b433-7788c35f454f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6886475c-0b48-4e86-854d-1717d6d25038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b28795-4233-4cfe-9c1c-b86844f4553a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fedcf7b-9625-4b88-8225-c112be5b4940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70eb3c01-3efb-42a9-a3ba-afe1e40e50d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea36781-efe7-4f07-9584-d5078eb71611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b103b388-90cd-4c48-8349-3fcfd569ab21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e50721-665f-4544-9d33-6062f493faaf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d1fd22-cfb3-4972-844e-e5e4d779f7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bee0e0d-199c-4076-bedb-f1ac612e19cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab60fa5-22c3-45c4-a071-07e6d6b36413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e439d94-8035-4f50-ae1e-c7399071be6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f717a4e-7d32-452b-957e-fd299d407619",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c9c8a5-d486-46b7-aa51-645f3f511d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf312b68-906f-475e-86b1-c2e65641389e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0c3f2e-ca33-445e-a68a-090dceadc57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2202159-d7f7-4ca0-b641-885d6c5896f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67115d16-aea8-4908-a33d-f5e9a286c517",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9223b4-7a93-4dc2-9e00-ab89f8ab6637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a04326-f98d-432c-8f07-7b21c3d1ca03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652faeef-91fd-4ae1-b42d-9a30bfd841ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1546d41c-b51f-4e10-8726-49188d54e282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936dcf3c-7a49-4f98-95cc-73aecae3bf5d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af3c3e2-858f-40f3-a7ab-ba98ce9c98e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa3e245-e90e-490e-8076-a82b368f9ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674c737c-7c5b-4334-a96a-1d5341233657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16c4fa8-8e11-41d6-9394-f9eb58d75e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79159b6e-0759-4dd6-be23-97085978e106",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4477b1e9-0cfd-420b-9e29-2bb4c2cb0e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f02a86e-003d-4873-a4f6-cb9849e13643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc754ad-115f-46a4-b1c0-07239c7568b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f363f96-6d8b-4d5a-8ff4-328e1b0edb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95752e7-bc24-40d3-be22-8c211b5f3a08",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d8b4c0-1403-4b0e-8d38-6af7e83c8384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03910865-baf9-4c1c-845a-a558c0cc93b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4bb618-99dd-4fa4-8bac-2a5b3e0445b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e799763-ad00-4c4a-994f-8c88911989e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f58721-69a0-43b7-879d-f882d0e8e034",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dd2d7c-4ae8-4faf-a70d-b99e53c3656f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc95b0d-1e06-4b79-ac40-bb125dc88cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d92f4e-659a-40e7-b4c7-f02c2b97491c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a495be9-0817-4c45-925e-22019a16c414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b99b390-e8c6-4fc1-acda-0f9606b4ade8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a08e25-7970-409f-a7e1-105296760ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b5d2f7c-a6ce-49da-bd61-3b69a70184ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7e6861-229f-458a-93a2-a6a46d094c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a509729e-fb79-4b92-ae29-158e62f7bebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fc8069-7665-4e96-bd79-7bd7579b7104",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5d997e-4b16-4e05-afc0-6cc32cdb7de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d4da8d5-9b73-470f-89f2-bb2d7c98d5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa921ec3-a35c-4730-9988-cbfbbf91f722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d521ee55-410f-4d30-91d8-92379cca113d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da56485-33f1-48c0-b902-ece1a14a2454",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7515b221-119e-426a-b8c0-a96fffeb31d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7db2538-8701-4dbe-bf3d-33e1c96dd8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5309718f-d8a8-45b3-88ce-c7d9d7cd2ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a88794-9c50-4e62-a59e-35e0d93566a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c76b9bf-fe83-489f-87b1-779d57d91ff3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe17c44-4cf5-47ca-abcc-f9382900a948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c328748e-dbe4-4ae7-a219-b6bcdb879209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f93aee-0357-4568-a8b0-afd90dc92ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56f8193-9fc2-4d3a-8952-5b1233a1e872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358e068b-14ec-48eb-a651-a8c73da6e677",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52584e09-ad6c-4eff-8ffa-944b3508c37c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec6f7f7a-7c60-4dbc-b9d1-800715d27c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b081e86d-a0ab-4800-9a9b-f5f722d7f108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a47b6d-b64c-4c5c-a2fa-4e9a6e246b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b9c909-eaa4-4dea-bd4a-b8ba4d8afd4a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2b5310-e4f5-441e-91e5-ae18f4459678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1d9a69-e95a-4412-8507-bad13b091205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc2eba8-60f9-4519-a741-98ddd7d35ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8f3dd1-fc87-49da-a210-8c836d2cf252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a8e571-718d-4f98-86f4-5f327289d9f6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bd5600-e51a-4b67-b6b5-bcc66af9666c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076e3831-8559-4bf1-8a5f-6a4ad161736b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79caae5-0494-48b5-be3c-bb4ad3a3c891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b2f56f-bbda-46e0-b804-55c51c5fda8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7c2f55-ac57-40e5-aca6-23ab03cd2348",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f589d4a-fe51-4ee6-bdec-d1c4547eb7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4560087c-a261-4963-86f2-1a9d8e0e25f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0c7cf0-8f8f-4d6e-8644-1164b7448d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6529d27b-d2cb-4719-9654-3684197c4b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e14fe9-e38b-4069-a5b8-168b0b6a2217",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8185d9a4-8950-4365-b883-a01f03ad683d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c8e63d-c54b-40a5-9e9e-6b70e751e2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6341c405-076a-4804-bad1-fc31d5c13774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bed88c-10d7-44d4-a03f-03d8b69467f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835564b9-690c-43dc-81d9-50fbfd30c2c8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb41586-f3d0-4c55-ab73-ebbf2b324254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff6488c-baad-4d82-ad57-985dea39e846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b62c26a-71e1-4a77-a37e-fcfda38caaba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fdd84d-e066-42c0-9fe5-bbb3a92758e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad61da0d-0dc0-4b8a-9a52-4371b727eb4e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed6ad2a-631b-4963-b9dd-815beba21783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9180f443-0d87-4505-9ccd-d6c1c9caefb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970aef7b-5d76-4a8e-b122-8a1babe6110a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cabfe177-ed26-4463-9f44-6b7f303c9f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6e86bf-a503-4b4b-ae13-bff44ee68faf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3368560a-7087-4c68-8dcc-b62b4eb36a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2b0d89-bead-4422-bf54-875b17d493f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b41518-e55f-456c-ad82-64ac23769341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0ccd1e-1b94-4c5b-8f0d-11b84df2811c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26948071-2254-484e-9204-d3ead5b51f14",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6996e47-9aa7-49c1-8398-b1e920240713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6917915b-ac8f-4fbf-9d6e-508e8d65e182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96006d9-6cb9-47e5-b042-739919352cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61aa2937-ebea-4ef3-8254-1bb20033351b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3416102-56d3-46f8-88fe-8897c3b5b3d0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8260633-7cba-41eb-8dc4-bb441fe22629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e0e4a0-b7e7-4938-94ac-aec5d5035609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e8024e-a5a6-4de1-989b-855426dc7735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4df865-4c73-4204-af6f-a18c10016381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9c4f2a-f7fc-4493-afeb-734160242467",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c572ea-66b0-48a3-84c5-9d3fbe6a05b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7c9e9c-863f-4746-b8f2-7bd07c1237db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686ba280-d58b-4825-82a1-ea4e5db1f424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15989ce6-70b3-43fa-af12-a542d02c38bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd9b703-363e-4c94-b2a0-791038445347",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d012d442-e234-4c58-93aa-c99273502e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292955a9-35af-47d5-b45f-33ac8e83ffd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24ad64b-0778-4893-a402-ce09d57bb4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaff4ae5-76d6-4292-ab3a-513a921553a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8fbb75-f8e8-49c1-ac0e-b94e5f90421c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2206956-f604-44f5-9ff9-c7cdf10779d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c2c146-35fa-4980-8a87-7675ee4aeecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c68f50d-f6cf-46b1-95cc-c72f2dce2006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f06e755-5a76-44ea-8268-5042bf49da48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79f8c60-cae1-4ade-809a-54c42cdb276c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a8f28f-0d66-4fcb-8e7a-4d880f415422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90d9f05-dd14-4803-82c2-17fd40856595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33154209-ae47-4515-84ab-f8d2850f0a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1b1d70-3948-4877-b667-8555b9cc97ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f795801-d4f9-41f8-81d4-17f0e63c9c5f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b48269e-8a28-4d40-8e85-90416d2006d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93afa524-fd63-4026-aaa9-2900ab3e61bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031d6a65-d47f-4483-bf9b-a46418dfdd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9af56e-c76d-43cf-82db-8db2aa30bb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c6abe9-6569-42d2-b1c4-abd26a5fc5e6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b447a4f5-ee62-4455-9843-46dacb7bca87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673b6965-c51b-49ba-bf6f-31d517ff4ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7e3506-067b-43c1-b8fe-36f287095dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc37ac6a-abad-433f-b258-b6d87425e589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5acb74-933a-44e0-86b5-a0b1a8c4cfa0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d662cd93-6a32-43d3-94c0-5e506ce220c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd00bcc-5c17-4d93-80b7-d0e54b1783c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee69cbc7-f4f0-435e-b4b7-d8ed1271fa79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918afc00-072b-4950-99ba-2c3e21e9a159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c64ea7a-a327-4373-8282-ae7419f98629",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20ad747-b8a4-4c2b-8bfa-cddbc350d618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088ac4a7-2f57-498d-8f20-d47e57a85b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466f5371-3330-468b-b621-533d4733af9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bad2af3-9d8f-496f-878c-5016482477af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ebffe7-8a2f-4a73-9b59-d596035d7dff",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef86b87-3973-4013-8a5f-b38bd8e582c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fa0543-bb65-4a50-8d78-3fe1e36295c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ffa8e5-2716-475c-ab83-0df400751951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db14a019-a26d-429a-8975-5f60cea3a8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e9e50b-caa5-4ae7-ad65-b7141cea1636",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d1b1f4-11d3-4976-b74a-b1a259b79031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d8b0d0-b8e1-460b-9ec6-435a5d66577b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c0628b-e852-4ddb-957e-592cd4524cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d2bd7f-c89c-4ed9-b281-78cf65b0f3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e48b22-be02-4ea9-ab9a-eb78f2fa59c1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3b1adc-946e-4e9a-9f94-4295abb68579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781dd457-665c-4b23-becf-e82d60924173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697ef4cb-8956-4489-8025-c2bafd89d599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a42e010-c552-4eef-8c1e-51fbe075c19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cce030f-d433-43af-85d0-335cd392b05a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c462fa-2bd5-40fe-a096-f59bd92621cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87d20ac-d1a0-4c83-a799-e849afe10884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346862ee-f952-483f-89ae-894ee0d44cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611c9906-9c00-42a3-ae47-bad5c2d1d916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641516ad-6ff9-43b2-bf33-d5918427e2f0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263ef925-bf0f-4c0e-b0d4-566498a21d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde184dc-a9b4-4858-9b7a-b4d625c714c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4ecff6-65f3-4a42-886d-7d2e0de3d33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a61d61-3cc0-4b01-a1dd-4130151c8d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d91562-1791-4fdd-bdba-918df5abb589",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95fe025-8786-4d29-b1aa-aee7011b125c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642cdc1f-42f6-4f33-83b6-941ae5e4f5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b04a637-09bb-4465-9e46-2a2e3e090a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599c40ee-a395-434f-8e35-d0dd3b2bfa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc60493-d0ac-42a6-b69a-584c7d1bc766",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6513897d-8cec-4edf-95ec-fc1de3d18436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0942cca7-b8f8-4cdc-bc5e-e038480dd2f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b228cb-e37c-466d-8d90-957ba7127198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5bff736-3a9a-4e8f-8710-9e593053ee86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42fe21e-6a40-4756-991c-ab6c4029a89a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1463a0c2-bc08-449d-9a0a-86e7f8a32a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb62e05-e069-4be3-a21b-dbc1ffee46f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a7af03-b690-44e0-9fac-f192983e273b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ef13ec-372f-4ffa-8d50-eb256c465206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a676531a-7ece-4f26-b98f-b42e9769b16f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f82888d-3fdd-48ce-b0c0-c00b1b97802c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026e7164-5fe5-4377-bdc1-7c185247dce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35a66bd-4582-4160-a90a-c07701df5ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e533ad11-9b9d-4253-84d5-91ce623290b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6c64b4-4da1-4c8a-91da-1a06e1b90545",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7b9ef9-eef3-4345-9942-f4dcf6805abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6033f04b-8430-4c39-a280-c25c49fc2e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3860c33-0d44-4585-86b6-cfe496836f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e099f04e-4deb-402f-b407-15a10ac5ef6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f6f7a9-a62e-44b7-a432-ae3b582974ff",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f75fbda-8920-4cde-8b12-a0b20bb637f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c789d7b2-459e-4bee-9380-15a75d9b6e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9e7a3f-c2ea-4bc9-8e37-a42bef6fef6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ba4b8b-81d2-439e-88bc-5cd3f43c9782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac93ded-97e3-4bb2-8fc2-c5c290a91d7e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5100e6-b3a1-48b5-a1f1-5219bbca5e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64eaac4d-df90-464d-93cd-5bd8aed4efbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27749281-3886-489f-83cc-464d2ac18d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba161f52-c103-47ad-a1f7-8c1c47164658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1448c502-17a9-4d47-bd90-f92f50acc51f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84664322-9095-4bc5-9c92-3e821029acdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cebf4ca-d20b-43e1-857b-25a501be0c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11cc976-8cec-4b1c-b095-740e186b76e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc5a2e9-08f8-46fe-a1fc-fe5edab15101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2019d36-c83a-46ec-9c91-9bcb73a0f051",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2999bf33-9f30-4b1e-9b58-7ffc89ce173b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4651aaeb-6bbd-4504-a257-7b34106e744c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2811c5-de53-42b6-95c1-43a6c8ea37d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d49f1f-0095-4a50-a8da-857e12ef631b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e02293-cab6-48bc-93b1-fa5dacfaa36e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6767ac24-a7e4-47b7-9a78-3f52158f3a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14650308-1ebd-4c9e-976b-5c6cf524df1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca60bb7-fb2a-4592-bc36-34236f91a62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0066c556-bda1-41b1-a1fb-965e1df5da19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd1964f-6ab7-4b38-99fb-f03b90cc38ff",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772f64ec-26b4-4279-9d7c-2d70030eb69d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa9313a-c307-43c6-afd9-e3fbc44eb782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8db5a5-5dad-4f48-b8c7-186735ba09ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6a4210-3e89-469f-ac25-f26e632934cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c08b25-0c82-4d23-8d72-9bc052a3f00a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ce16ac-cdb3-458d-9b97-8c0a16de4b58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e20cad5a-da12-4471-a5ac-adb0b5307297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765b60b4-f21a-4b80-b2a4-8e7b2a00ae00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce601fb-1877-47a2-80d9-1eef6f81f21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094cd9b4-d11f-40de-bed1-8977c0a8a8ea",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51eeb43e-d589-4798-b0e3-97219151151e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76e9ded6-a1d4-42da-9989-a6e8d6441f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285181d1-e010-404d-8cfd-891c9127de46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3696ed30-7177-461f-acdf-45ba39f4c93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1595bcdf-8ec8-4ae3-935c-821ecd83c441",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19bea8a-ac68-4957-a663-f33af52d465d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a799cda8-cc4e-4611-a2cb-e3bef51509f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fb622f-a7ed-4ee5-99c4-7a94df57a5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b554bb81-0b89-4dab-bc7d-6acfadc31a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a29636c-a56a-4919-ac86-26e224795a39",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5151b8f-204a-42aa-bc46-6641682b0deb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a2a01e-7957-4b8b-8d3e-f4697029af67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d6b12e-aa36-450b-8b31-ade3ff687bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3becd62b-eeff-4c3b-8fa7-60e623f24966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd100941-3d5e-40a2-93f7-9270c08d2269",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747a9809-118d-4121-b86a-7e8df597d887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8562891-7f45-468d-bb46-d0ddc9c6d08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eee8744-9c3b-4199-9cfe-b717d801a2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8951999f-b27b-4f4e-bf70-335b07f44c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93108c11-5ad2-4f9a-b9bf-c19f4570994d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966cdc19-378c-4c5a-bc93-e6a43362f96e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20190708-1a71-4c73-828a-64ba2e7162dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8444c51c-48f6-4ae6-a820-f437da680007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776a37d9-5ea6-4bd9-aecd-d5b0145de261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f81532e-437c-4a1b-bf38-61c6973c4cb7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9058761f-5387-4d50-a1f6-828fe40b1169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afc7747a-74b8-42df-8b06-419f93117008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a7345c-9512-4789-a348-6cbfc39808a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81f10cb-80ca-4f80-b196-eed43791816b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a60d013-984d-4360-8de4-23a3fd65c413",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc810e0-505f-4d3c-a953-5fad2fec3753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "474bef79-cc26-456e-b74b-f051e074174d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "133568ab-5bd3-47b7-83ab-febe3d843204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1228927-5036-414c-99a2-6664a1d74d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b04bf87-6822-46ac-8e74-a082f39b6b6d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e1e21e-2341-43bd-a37d-708214113b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30a5ae47-0e98-405b-b564-d77add4dd889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d61473-df8e-4f09-9efc-50b94e7bccc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034ed0ce-4782-42e2-83b2-fa888c22e374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1d6e84-6077-47a9-9c59-e0bf2acd7e96",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a917b08-b52a-48cf-a2e6-0bc13d0bd9ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c27f9771-b8d2-4f4f-b3ac-a3c2699f8907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4082eb44-922c-4d7d-8865-af8a91fc02ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16f2c4b-e591-4531-ae14-7cb6ef1df359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f985fd2-5aae-444f-b307-7a7299bb6870",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70e8a5e-71cb-40e9-921a-facb7de6f898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8164112b-d0ec-45b5-beae-cc013ec35761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bed10b-087c-4cb5-976f-560432df2425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2d32c7-dc93-4bd8-99db-7306dc87158c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee604709-970c-4402-b5cf-7dcb4237fda6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c574ea-0395-4772-898e-b0ef3b5092ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cdfaa14-01e6-4361-b99b-bcfcc06b830d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a250dc77-84dd-46ce-b1ed-62c19a55b19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d737ccd4-0367-4647-aa00-5c076c2133b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aad35ad-5f82-4d6b-a439-4b921684da48",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991a6279-1643-4b62-b896-ebfa326ab7f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d582f844-f555-4a1d-9dd8-1474507fddbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02caa012-a82f-4763-bf32-8e9195ff5561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77532ddf-aa2a-4799-8139-aec3542d2199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9cfd73-db99-4270-a06c-550299e8aa2b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bf551b-cb14-455c-8c87-37041141a96a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2bc1ed0-3cbb-4f89-95d8-bfbcfd6055e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f7add4-ec1a-470f-8cdf-c856e4cfa2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f41621-efb0-4357-8b35-bd0d4907f83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d175197-b8ae-461a-9adc-0565440e53e7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab43005-4c76-4c78-b917-15386c6ffb56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28187b4f-b23a-47c5-88df-4f9198163b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d10fc9-b9a9-4e09-aecd-0bffc5c2d498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb03c5c-5e40-494d-8b20-c26f06d752d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c42926-8fe8-4595-b53c-34a6ab38fb23",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715c1f14-1fd0-42f9-876d-d9156ed95527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c2b3d74-0d95-4142-8aea-75a6bf8b499a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67f13ad-a577-476f-812c-23ca0bc69df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02c8c6d-9531-4e63-b1b3-0f354f4a7e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdd04fc-ac4f-44b8-b836-be4d766e1bd0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ae3f2a-380c-4578-baf7-1372816ba2ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5051a5-bce6-41a1-84ad-70b6d1dbc0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b0f812-c996-4dbb-b12d-215a22176148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e302d84e-b19e-4fb9-869a-943bc7d2defd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7628ed83-155d-4166-adf4-fb1012c43655",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52ab8c1-464b-48e3-b899-b8a341e775d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca9a59e-6c52-44f3-96e4-c314653d0a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dec259-6f04-4054-bba5-a5ada1a866c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccbc338-b2dd-44fa-b0d0-15a9c8de9c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698999bf-4a4a-4464-97df-d1989be68045",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc8602b-b40b-4da1-a868-4afc1ecc18c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "729d36e8-1873-4861-be10-d221acb185d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d70e03-fd43-4bcc-84a2-c4d9cf08e168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10175e72-b406-4c66-83b5-0552f7557209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68100937-8c87-4bf3-a07e-7a0d5a03ad6f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917a56c9-6ed5-4af7-a9c1-ffae706a0cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef4384e-8e91-49ba-865c-e04efdb26a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c052b73-8252-443b-97b0-aa56690169b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fad83c-1a88-4cca-8049-ba90bdc48d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aabf7b4-444f-448a-b217-098e00817259",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97ffa48-2893-45d8-ab6f-fb5f211d53aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d70219-f97e-4c47-aad1-d237fe104453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d787a6-5b5b-4d97-a397-38b93b244733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33036cb-2a11-44a0-b7e8-ab296d0ad9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8513b1d5-4d6b-4d63-9f77-ccee7055f871",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9d0fb7-9ce0-4ca8-b61b-0df78b36f044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ebb199-abc5-4532-a3e1-310d8eab3f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c173419c-3f9f-400a-b794-0d268badfd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e252b98-3740-4ec7-a95d-ac79eabfae14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a72e184-e4b3-404e-af67-2a06a5665daa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e52efc9-7953-4815-9364-61cb8c172dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c3b3ed-8f9e-473c-b331-002c6eb8b2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e8097a-0fae-4e5c-9b86-6e56e2ee3965",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f16ae32-b396-4354-82b3-19ee5a433cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ea5654-5aac-4405-88d4-f68936ec8985",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2c7d78-76ea-4c8e-9124-f7a8fcb2a339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45594273-50c0-430f-8cf3-d4431cabfe5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df98c8b6-a1d0-4220-bd29-8d2920cdd00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cf6548-7f5d-4924-af81-6723e7bdba4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbba3a7c-0905-4bfe-a160-e3609c409624",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f7b738-7bc9-4606-8d52-c8da5a0b1723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "378459dc-942e-4fd0-98cd-f91b5f36b5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093d6c1b-e3ef-4412-9910-3f5865d1b85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c26b95b-fbde-4f85-b286-c75dc6e64901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22ecc06-91ff-49f3-b76d-512d57e637e9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001ecdca-1541-4935-9d15-6d86e19b49b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "152258c6-ea3d-4af5-b996-608e3fa3ebeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebdf622-7a7a-47b4-a23f-8a5f4438c546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a299fb8-ec8d-47c9-a7d0-ce1a61bb24c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4db78b-1a0f-442e-b7c8-cdd6e2317ee8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293d4515-7bcd-42db-a8fe-84724e581e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0674f070-3114-4e36-9927-8ff9be3eaf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48060d7e-ef77-47e8-aacf-db76f76ae45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d27a744-6b17-43a4-8aec-edadabf5b5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5caa99-a4c1-4d34-95f8-3816944685fa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cdb3ed-72ba-45b6-8052-e9c7b37117c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6409ebc7-7e75-407e-b0d8-a97d673a47d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b42e34-6db2-42e0-be6f-a78f1affabab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91dbc266-dfa8-4196-873a-de086bbf05e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f053a77f-3c0a-42c2-81b5-45ba07141e8e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c1473c-9913-4cb8-b9bc-bf81a9327f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c836377-bf86-42c0-90bc-a6df75741236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4587816-bcbc-40b6-a6b3-4448534185c1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d9ae77-e49f-4aa3-82ab-f31ccc839f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a33113-bc43-4123-98a2-4018411432d2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df56bd6-b2d8-4b6e-83ff-460374f8eb34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c6b0e2f-228e-4d7b-86a5-eee2d2c5763b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d864c317-f48a-4cd4-a0f5-5ee9cd04ee2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ade1743-4b5c-4f19-8606-4e6c07f58bfe"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d25a2eb7-9b8d-4a42-8db3-b191070721cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cb54b20-768c-46a2-95cd-cf2fe1a0b7e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "754cc105-69f2-4496-9385-d6e1b363e74f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "514eb438-9c0c-430d-97df-3c2e1fe71b92"
                    }
                  }
                ]
              },
              {
                "id": "ff35301a-b693-4768-9c5e-c2f1ef2fac1c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41b71576-f944-4d65-8323-5856e1529fb1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba08f4a-30ec-4849-ae0e-33390abc8517",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "34967077-82f1-42fa-bf51-c16826e07261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36468555-c6a7-43ca-b9cd-f0443760b14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "798ca1ea-5116-49b4-a047-31a1de4ca633"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa8fac3a-4337-4c20-91af-697a94cd17ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "084e2984-78f2-4caf-8c24-dc812ad26984"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bae5b530-1168-48d8-b6f3-c0fd1b0bd99a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d23a224-ff12-43ed-b0d4-0baace3ca9e3"
                    }
                  }
                ]
              },
              {
                "id": "bc5fd041-7d59-4b9c-a42e-0ac5845da008",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b8f2ace1-eb15-4b5b-9ef2-65c234b528b7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564ee887-e676-4ffe-b10c-31eee38aa9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "29906226-3e4d-4f7b-b287-6c1f786880be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2923a4da-8728-4998-bd2b-2ec96832c572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ceb0bf-198a-4751-83f9-b1b324991567"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f1779674-e21e-4c2a-a6b2-669fc2c016ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "692d6a58-5aed-4a03-bef8-84ea430828fd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7aa7a923-8ca6-4962-8672-a25b84e6ed6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2c8a0b39-a37d-45e5-a74f-922e841a4218"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5e42eb7-110d-4c51-a960-0f48a7c44312",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88a00510-441d-45cf-b8ad-f4d1b3fb5acf"
                    }
                  }
                ]
              },
              {
                "id": "5ad43540-6086-4860-abfd-22043fd71910",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61ec6f07-a87f-4299-bfe5-1a6d12ea4739",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "daf24783-c788-41b9-bb80-dd15b61b0ae8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9439b6eb-1dfb-42c9-8be9-62303487b232",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e45dd4a-b8a8-4003-802f-44d2ef10bd5e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5efea46-4b06-430a-a893-dac52a4bf4df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a1aa0f13-be51-49e5-9624-fced438c1f45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59356077-a8dd-4959-adce-e4307a17218c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18b64bf2-6bf2-4359-a4f0-31f6d94ba044"
            }
          }
        ]
      },
      {
        "id": "08dad861-f076-4970-9c3d-a6c609c58b38",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e83131dd-fdfa-4d2e-bee0-b57081e21c4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31de3efe-7e8d-4feb-b3b0-51a3fa3b233b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "932ad816-11b5-484b-b539-de891b66deb1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d182df0-0b6c-4265-8b41-80932c66bdfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a5455a08-0fc3-473d-919a-63eb97ab9d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb86754a-2581-458f-8d7b-c55586a3e7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "648f9ced-7f7d-4575-bd1e-5fe3675c3870"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cab80d9e-21f4-4db9-a055-b786b2f51930",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96510134-5bae-4951-a5da-34e08b2645b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f153bf02-dbb8-4c5f-aa83-58ab0c475624",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40c17334-e1c0-4b78-8d78-28ce4e5d627f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "968eea0a-d8bc-42a5-b1b6-c50ceaa12126",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2f494278-8177-4af1-8eab-2a28eb012d7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a468f03-f40d-4cfc-b5f4-8a11c443f9ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28b8eb7d-e83f-4713-8028-7d3a21f95588"
            }
          }
        ]
      },
      {
        "id": "941c426a-a4f0-4a5c-a86a-2c2bbf251cea",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "eff247fd-ba26-46e1-ab5a-0865675d89f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c950672e-4a54-4cc3-b78f-dcc3b78dac9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c997b097-3965-4ccd-8a4d-f4f1c11efe01",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746d78f0-3d67-4503-aa68-d3bccaf85924",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dbf845e-d718-4fbf-bb62-5f1d557872c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9049d2-1c31-4005-8579-743b4af932a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b63d19e8-7c02-4a3a-b00b-8b2129e4545e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0976ebc2-4367-400e-9f4d-3d441651d0ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7893efcb-6aaf-4b2c-a58a-7b0ca8c425ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d5ade2d-80d1-4d93-9bf7-040945fe4da9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "828d5fd4-bcab-4324-955c-6430311b0775"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f12a72f-995d-4143-ab1d-e8dcf027ea8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "63e93522-e171-4737-9db9-4c39d49c1aa1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f37ce97a-b177-48ba-9a83-9f9fcce43cc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22a51f28-e163-44ff-a902-7585dd7b4412"
            }
          }
        ]
      },
      {
        "id": "258f3632-a2d9-40e2-9463-464df471d35f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7ae8101c-1150-4973-b564-525433e2c056",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c333f1a-681b-4c4c-88bd-0627d1937009",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "477ea6b3-86e2-4125-bb5c-029354e8c130",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b924083-ff28-4460-aac6-b265034b5574",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dd406d5-21b0-462f-8ce0-9dcf34a371cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f46a85-d95c-4907-b762-df80ef1eaf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5e9bcb0-9b29-4d9f-98d3-b81a6d2514c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c632bab-b900-43c4-9475-1212dfcf9dcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28206f93-cbc8-4109-9a8a-b88222ddc82b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06e991de-b47d-46e2-b6d4-e72846b9244b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f74e66b-bf73-4e0c-a737-911d0179f29e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0295856f-cb8a-4f2f-aaee-6e60f16f2c6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd1a611d-daab-4afd-9b5f-6c721828ed81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c78db09-4d2a-410a-9807-2db719171a88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41280ce7-bade-4d04-bace-8522878513f6"
            }
          }
        ]
      },
      {
        "id": "50a9a59c-a45d-4f7b-b9b0-4b9387aa2c03",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d0bd965-d5f6-4e36-8dd3-8be55bedd4b3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05aabe52-a588-4f55-b1c9-f71091b85821",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "09e1238b-3e84-472b-b14f-f96d076adc4e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a57df2f1-c16a-4c0e-a976-407ec875c01a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45ae2687-60bd-4c22-ba76-40660caf220d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.321428571428578,
      "responseMin": 7,
      "responseMax": 614,
      "responseSd": 40.47980901192247,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726620186035,
      "completed": 1726620197753
    },
    "executions": [
      {
        "id": "c798f0d7-c77c-4dce-a290-34c8c7c45a41",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "51f905c9-bac8-4843-b4af-9a98f6e7f199",
          "httpRequestId": "c071431e-3f00-4c29-b7f0-01d2fa1080cc"
        },
        "item": {
          "id": "c798f0d7-c77c-4dce-a290-34c8c7c45a41",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f2412666-d7af-4022-bf94-21d53d74bdb9",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 0
        }
      },
      {
        "id": "674b9234-64a0-4d2a-a151-45df08e7b9cd",
        "cursor": {
          "ref": "8edb12b2-3248-49c1-aea4-a6498e3b75f3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "19d1c4cb-158c-422b-9b0e-01f6f81fbb15"
        },
        "item": {
          "id": "674b9234-64a0-4d2a-a151-45df08e7b9cd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "74683231-8594-4c11-b00e-00d8b0b3c6d5",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 0
        }
      },
      {
        "id": "e6aa3447-73ad-4cb5-bd6c-1130398cf43b",
        "cursor": {
          "ref": "9193ec32-578c-4798-8ce2-53d9ab316de4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d8395e2d-f0ab-4d71-ab6c-6d308e94bd61"
        },
        "item": {
          "id": "e6aa3447-73ad-4cb5-bd6c-1130398cf43b",
          "name": "did_json"
        },
        "response": {
          "id": "b83781f3-df3c-40e2-bce3-c232b2185c41",
          "status": "OK",
          "code": 200,
          "responseTime": 205,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa52f1b-18a4-404f-a00a-70aeddaf6e71",
        "cursor": {
          "ref": "7af59e5f-d151-483e-8b69-39abe0cb2d4d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "74906d39-34ed-43f9-b92e-df1f5724fa7f"
        },
        "item": {
          "id": "baa52f1b-18a4-404f-a00a-70aeddaf6e71",
          "name": "did:invalid"
        },
        "response": {
          "id": "e9b061a4-da45-411b-8ec4-c0829d42c2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa52f1b-18a4-404f-a00a-70aeddaf6e71",
        "cursor": {
          "ref": "7af59e5f-d151-483e-8b69-39abe0cb2d4d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "74906d39-34ed-43f9-b92e-df1f5724fa7f"
        },
        "item": {
          "id": "baa52f1b-18a4-404f-a00a-70aeddaf6e71",
          "name": "did:invalid"
        },
        "response": {
          "id": "e9b061a4-da45-411b-8ec4-c0829d42c2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a55ee6-0328-425c-ac7a-03a992951804",
        "cursor": {
          "ref": "91dcfdea-8f83-4157-8408-7efe4c069e6e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6bbf72d3-00e0-42cc-a8ac-297f26841fde"
        },
        "item": {
          "id": "b1a55ee6-0328-425c-ac7a-03a992951804",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "09a1a0f4-b223-48d9-9f40-28a234bf9214",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9cea42-ffb8-4050-baae-2285c85363cc",
        "cursor": {
          "ref": "1dc51230-14aa-4210-a34e-43732449030d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f47bec20-6f41-4d2e-97d9-834c7d301010"
        },
        "item": {
          "id": "fc9cea42-ffb8-4050-baae-2285c85363cc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "691f8808-96bf-4c55-bd35-a6f6ec639059",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b33ea5b-46bd-4732-9de1-34f6ef13a4e8",
        "cursor": {
          "ref": "5b7c675b-8622-4aff-a333-d1de4514da94",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "68a49acd-a6a5-4c6d-92da-c08c87c00095"
        },
        "item": {
          "id": "0b33ea5b-46bd-4732-9de1-34f6ef13a4e8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fccfc65f-57ed-4a29-81c9-08b4dbdd3303",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57484d24-aac8-414c-9ed2-2fb556a0c89b",
        "cursor": {
          "ref": "9354625e-c9f9-46bd-88b5-5028fc5d2468",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "007214a4-4aad-4c1c-9736-e17c6dcc03db"
        },
        "item": {
          "id": "57484d24-aac8-414c-9ed2-2fb556a0c89b",
          "name": "identifiers"
        },
        "response": {
          "id": "459271a5-61e6-406a-921d-14977a1e6cdf",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d74c7e2-15a3-438d-bc62-cfa39a019c62",
        "cursor": {
          "ref": "dc84dcab-f434-4b40-9eab-ed3dbfe83534",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "235b68a9-4a9b-40bb-b9f5-807a95c7609b"
        },
        "item": {
          "id": "1d74c7e2-15a3-438d-bc62-cfa39a019c62",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d25506b6-0085-42a9-8dfe-4be1f474b568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce05a06-1137-4dfd-8333-935b5f172821",
        "cursor": {
          "ref": "b2293849-d14d-48bb-bf1d-8f8d77c94ae9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e420311a-95f1-459e-acdf-0075fac3d0c5"
        },
        "item": {
          "id": "9ce05a06-1137-4dfd-8333-935b5f172821",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f432fef9-66c1-403e-94fe-deb2c6271f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4ca859-ea4d-4ca8-ac0e-0277e25ccb6e",
        "cursor": {
          "ref": "45f6c103-695c-4517-ab2d-8d6dd9cefcae",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1444b389-1368-485d-817a-78d6536b134c"
        },
        "item": {
          "id": "ca4ca859-ea4d-4ca8-ac0e-0277e25ccb6e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9f6c7a49-e61c-4071-8e35-205183114858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81921a73-7e57-44fe-9723-3fd5b3c0b7eb",
        "cursor": {
          "ref": "c285e3c7-99db-499c-a6c9-4ee3d9b61dca",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e0388044-1457-4104-b1c0-bb1ee9bbdcb2"
        },
        "item": {
          "id": "81921a73-7e57-44fe-9723-3fd5b3c0b7eb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "79d79a42-be7d-4618-9a7a-f6b4973002ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23de9882-7805-4f20-9280-32dc7d489fae",
        "cursor": {
          "ref": "e2ec78d6-235b-48e1-8f73-8db41db50537",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "94327997-4813-4ba9-9f30-a8491005ad96"
        },
        "item": {
          "id": "23de9882-7805-4f20-9280-32dc7d489fae",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b387d634-e339-46e9-b2de-74d7b373b2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c6db5a-b1fa-4278-b772-ad1ac51b271f",
        "cursor": {
          "ref": "3372d154-e005-4b38-8e0a-b6a1077d35e1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e7d561c5-53f3-4b55-ad60-ef2dca5175a9"
        },
        "item": {
          "id": "19c6db5a-b1fa-4278-b772-ad1ac51b271f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "91e9c61b-66f3-4f90-9238-c5258f05849c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821cd019-6a50-48ab-b4e6-c330e655b3e7",
        "cursor": {
          "ref": "514e63b5-2bf2-4b1d-b90b-5bee21ecb19f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cd2ac13d-6fae-4c3e-aecf-6d34a6dc940b"
        },
        "item": {
          "id": "821cd019-6a50-48ab-b4e6-c330e655b3e7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4ac8382a-7afe-45ff-b5b0-f1130254b3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e565997-66ed-451b-abe8-8fc7cb97d154",
        "cursor": {
          "ref": "c1c0d4d7-7555-42c5-a9a0-efeaa2aa6585",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "521c5b69-b1af-4679-b9e6-9a0aa184dc37"
        },
        "item": {
          "id": "5e565997-66ed-451b-abe8-8fc7cb97d154",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "50756c5d-bc7a-4b95-b295-5ae2246c5f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c446d6-8abc-490d-acc3-df8a5297002e",
        "cursor": {
          "ref": "01254ad0-29fe-492c-ab6d-23160ab007c8",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3face375-172c-4616-bf77-68d81e27ab35"
        },
        "item": {
          "id": "41c446d6-8abc-490d-acc3-df8a5297002e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "496d5984-bdc6-46cb-95fc-90921e5d2924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e18313-1625-4d4b-aba3-51e05f0425df",
        "cursor": {
          "ref": "84f274bb-e797-45e1-a090-5aeaf53d7d12",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c5a9b71a-a795-4904-9e66-a0ccfa3e4944"
        },
        "item": {
          "id": "d4e18313-1625-4d4b-aba3-51e05f0425df",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c801cbd9-8e28-4505-b264-efac72c7fe80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d65eefe-38b0-4537-9804-7b645e52d0e8",
        "cursor": {
          "ref": "7e832cfd-f6da-43cc-aa48-87cc38afb605",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6aee759a-cda0-4867-8572-812539f4a420"
        },
        "item": {
          "id": "2d65eefe-38b0-4537-9804-7b645e52d0e8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3fcd378d-acf7-4c8c-883c-7694fc9acdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55fe812-1dd1-4281-bb10-62cc6bd06bd4",
        "cursor": {
          "ref": "c993eb48-1923-43de-92ff-dcbc9c7dfc4b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "69778e7e-83b3-466c-bbc2-46700457fba8"
        },
        "item": {
          "id": "e55fe812-1dd1-4281-bb10-62cc6bd06bd4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d5af7f8a-7616-43fd-89a6-ee0955c11dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e075fad-c7bd-4739-98c4-1f87241a4181",
        "cursor": {
          "ref": "5bcd2329-7dec-4f0b-87d9-2e93a324d695",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a493f0ee-f091-4bce-8586-c2a2e0149297"
        },
        "item": {
          "id": "5e075fad-c7bd-4739-98c4-1f87241a4181",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "58662d88-942e-4cb1-bd7b-637d8d92136e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9f2203-cf25-488e-b9f0-80141cf8213d",
        "cursor": {
          "ref": "4daae69e-77e0-449f-8ce4-6d98c4cdd790",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1b225273-6725-41fa-818d-303e4d798c8d"
        },
        "item": {
          "id": "4e9f2203-cf25-488e-b9f0-80141cf8213d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d978c720-fd19-4d90-a4c1-bed38465160f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2c6e82-432e-421f-bde0-2b85ddd06764",
        "cursor": {
          "ref": "739337ce-9ccd-4f01-9438-6cc432a68327",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "407a8712-1559-4ed8-b4c8-7b0d7035050b"
        },
        "item": {
          "id": "fe2c6e82-432e-421f-bde0-2b85ddd06764",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3cc424a9-7cd5-4dbc-b952-5f17fabc0feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11187884-4786-4964-ae62-15fb64ccad0c",
        "cursor": {
          "ref": "30db1715-696e-44bf-a69c-9ddb52835cc5",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c2dab5c0-f68a-4aa7-92c1-3b7ebfb25f56"
        },
        "item": {
          "id": "11187884-4786-4964-ae62-15fb64ccad0c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "07907c02-8f7f-42a5-a775-d7a9c8a1b89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6ecaab-fc6b-42a8-834b-f261713268f0",
        "cursor": {
          "ref": "cb766af5-10c8-489d-bd45-e2362add8535",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "efb9f2b0-ddd9-426d-ae1f-668ac7ba3bfe"
        },
        "item": {
          "id": "1a6ecaab-fc6b-42a8-834b-f261713268f0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ebb28124-9990-4826-a286-0cbef14087f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa15eb68-41a8-4439-88f4-0d284a96d1bb",
        "cursor": {
          "ref": "6d170326-0e6a-4f59-83c0-76fdd57cbbbf",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "143cd584-42f8-4b16-88a8-ba83276709f1"
        },
        "item": {
          "id": "aa15eb68-41a8-4439-88f4-0d284a96d1bb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d7fa539c-4130-4ace-a60e-be6c12221e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5150d2-9098-4adc-996d-21286e97e286",
        "cursor": {
          "ref": "d88a3a6a-4ab0-4b55-a868-9860f065a2d2",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f624ef77-8eab-4d82-9c65-d54442bdb070"
        },
        "item": {
          "id": "2a5150d2-9098-4adc-996d-21286e97e286",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7ff672b7-6869-4c10-9545-5f5e7fe30de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f11608-da08-4865-8b80-488a7af0d7c3",
        "cursor": {
          "ref": "8711bdf9-07e8-4086-83f8-3f3cb72a241b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c0a18124-9adf-4ca2-a748-7f80ffc9384b"
        },
        "item": {
          "id": "e4f11608-da08-4865-8b80-488a7af0d7c3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cb0202ff-1bc8-4966-a204-eec630745ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90631509-05ce-4325-85c6-27a4fad8abd5",
        "cursor": {
          "ref": "4dae62c0-4e36-44af-a77f-fd307a518674",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fef9b057-4147-4380-ac2b-752954ad14e6"
        },
        "item": {
          "id": "90631509-05ce-4325-85c6-27a4fad8abd5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ea2909ba-5ed0-4817-8dc2-8117b3fdd17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda1866f-5804-4c5b-82d7-c90d403a1ca2",
        "cursor": {
          "ref": "ff79bbb8-2a2f-4743-b15a-8316ed11bacc",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "376344d9-a72c-4ce7-bbf7-b4a4d4eb0c4a"
        },
        "item": {
          "id": "cda1866f-5804-4c5b-82d7-c90d403a1ca2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "74917cc1-4e2a-4f99-80a5-d2e1f15a1cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba2a915-6ff1-4dde-b20a-de3a6728675b",
        "cursor": {
          "ref": "04e7f52c-b21b-4930-89e6-5b931c2348ff",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8d8c6bb9-1163-4928-abcc-2627234449ac"
        },
        "item": {
          "id": "aba2a915-6ff1-4dde-b20a-de3a6728675b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "648fd4b5-46d8-478b-ade7-608df770912f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0999dc67-1e27-4fc5-82cd-5f54fd72d938",
        "cursor": {
          "ref": "22e2861b-8343-46a9-81d5-6933e0b67276",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "78e41fcf-7aa3-4fc2-87bd-a6f64902dc02"
        },
        "item": {
          "id": "0999dc67-1e27-4fc5-82cd-5f54fd72d938",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b0d6f1a2-0e73-4686-a5d7-232d71b3d098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7927b645-f728-406f-be13-a6367e495eb4",
        "cursor": {
          "ref": "215d02ef-2676-437e-b236-f20975f3dbba",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6f029476-2267-4cc5-99d5-65e8070f0f46"
        },
        "item": {
          "id": "7927b645-f728-406f-be13-a6367e495eb4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4d872ac1-5528-4f7a-b9cc-2b287b0011d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5fd015-1d37-4a09-96d8-f6abc43d774e",
        "cursor": {
          "ref": "6190ba03-f10d-47c0-9f39-1a747abef6fc",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "56a4e765-0213-4433-8af5-e73e63640f03"
        },
        "item": {
          "id": "4d5fd015-1d37-4a09-96d8-f6abc43d774e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0b4b22d9-a190-4b22-b3e8-4ad0b8a0dbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d91c742-baf1-437a-84bc-69ce8f259fde",
        "cursor": {
          "ref": "ad11a3fd-b959-4ee7-b5c4-747349b1e968",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5e9d60d2-e2cb-4917-974c-add5d5731e4d"
        },
        "item": {
          "id": "1d91c742-baf1-437a-84bc-69ce8f259fde",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0334295f-793a-49aa-99da-4193e64a6378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbd40ab-1c15-41b5-81c7-d92c449e5def",
        "cursor": {
          "ref": "c0061022-0dc0-49a0-8374-6d77acd3f127",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c0e85991-db80-4299-9d14-add08cc09226"
        },
        "item": {
          "id": "7cbd40ab-1c15-41b5-81c7-d92c449e5def",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "62d23e85-a391-4569-a1d1-7fbeb213bcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b319513-795a-47e5-b6bb-efc65fd69d0b",
        "cursor": {
          "ref": "950c465b-c367-48e6-a340-c5ae85d59156",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a99d152f-31ca-4a25-a609-5453fc2b703b"
        },
        "item": {
          "id": "7b319513-795a-47e5-b6bb-efc65fd69d0b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e723759a-290d-45b3-8935-f615aaedd4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b732753d-5672-4ac1-b587-02d6f1bbaf83",
        "cursor": {
          "ref": "00d23886-761e-4dab-b520-05db6a42c256",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6b7faeaa-883f-4088-8d36-63fe3efa124c"
        },
        "item": {
          "id": "b732753d-5672-4ac1-b587-02d6f1bbaf83",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5f267bf8-ef83-43b3-a667-b7861f72b0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0794b9e5-74c1-47cb-a0a1-e023761646a9",
        "cursor": {
          "ref": "500001e6-62b2-4bf8-95f4-67f1d09e10a5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9bd4e72f-fa5c-4abe-8089-dacc481c13de"
        },
        "item": {
          "id": "0794b9e5-74c1-47cb-a0a1-e023761646a9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "85dfccff-bbb9-4359-9052-4fde6e2108c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d7706b-6eaa-4ba7-96d7-41da3af9ca09",
        "cursor": {
          "ref": "4fabef2f-48c4-439f-9d2d-6504ebb7b59f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4b7827b2-361e-4383-9f99-03ee326834bd"
        },
        "item": {
          "id": "e0d7706b-6eaa-4ba7-96d7-41da3af9ca09",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b1bc7084-fdc7-4150-a1b7-bfc3aa9ecb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d937597c-5aaf-4e7e-8c30-87d5142ca0c9",
        "cursor": {
          "ref": "e3301bce-970b-4130-ad3d-ca071b3e1da6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6e18d565-8436-4db6-9d5a-47a1cc4e5c89"
        },
        "item": {
          "id": "d937597c-5aaf-4e7e-8c30-87d5142ca0c9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "77179864-4cbf-4354-bd3b-a22206842c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59359a41-4d45-47da-8139-a469ca166744",
        "cursor": {
          "ref": "eed235af-9ecb-4783-8fce-bf72273a35ea",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "77e7174a-fa1b-444b-8eb6-d04745e72fda"
        },
        "item": {
          "id": "59359a41-4d45-47da-8139-a469ca166744",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "91304031-e33a-4f40-8f25-7dbdb83d5c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca20fc0b-a6f5-4f90-81f8-7eaf89aa0bbb",
        "cursor": {
          "ref": "cb769f31-9be4-4d21-8ce4-23a137c8eb64",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "34320242-cc94-4bbc-9863-7a63b1968a0d"
        },
        "item": {
          "id": "ca20fc0b-a6f5-4f90-81f8-7eaf89aa0bbb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8f914e69-644d-495a-abe5-dfa446df4dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98efbe0f-1ec5-4a61-a285-f3c055c051ea",
        "cursor": {
          "ref": "327ad586-36cc-49ce-9ffa-cebaff70b096",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "68f8b431-82c9-4ebf-ba78-7bab8836ee7d"
        },
        "item": {
          "id": "98efbe0f-1ec5-4a61-a285-f3c055c051ea",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c02aed79-5eeb-4aaf-8974-35c529748320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe55b74-be74-4b9b-a39f-e69b00b448a2",
        "cursor": {
          "ref": "bda4c14b-7e93-4bf2-bd68-3408bce737f7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "671ef222-2c3f-47af-bb5c-d8294d4fc549"
        },
        "item": {
          "id": "fbe55b74-be74-4b9b-a39f-e69b00b448a2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9cb8a865-24ce-451b-bf1f-ede46fba2b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bc0c07-7853-4cc6-bbd6-5695824353aa",
        "cursor": {
          "ref": "954ac950-d2ce-460e-82e8-6f5745282910",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7308be08-0a2d-4bd3-bcef-636a2ddbad74"
        },
        "item": {
          "id": "e1bc0c07-7853-4cc6-bbd6-5695824353aa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "939fef77-a3f6-4f5c-97f0-f38056854576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205ebd12-3b5a-420c-8d3f-6fb50d0a4a5e",
        "cursor": {
          "ref": "6b1e2e74-4494-4c3a-a1e3-d8f73ee7f7fa",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "49c4a933-7482-4b01-9603-8b60f8c009e9"
        },
        "item": {
          "id": "205ebd12-3b5a-420c-8d3f-6fb50d0a4a5e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b318347b-6c9e-4145-8457-c5405bb90a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fd7af4-4ef0-4361-b636-a661233ca3d9",
        "cursor": {
          "ref": "c746679e-eca8-463b-b9ec-0e3215dde0c9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ddbadf3c-76a1-4551-957a-f79257be33f4"
        },
        "item": {
          "id": "a3fd7af4-4ef0-4361-b636-a661233ca3d9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ea3feb29-c6b2-454d-9095-d78b6ee3bbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5ce1b4-1642-40b1-985e-f085eb37b1cd",
        "cursor": {
          "ref": "2e14b187-6e21-4a39-9d66-8f21bedc5f59",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "209d05e8-de32-4b2a-aa4f-f1483800b6c6"
        },
        "item": {
          "id": "5b5ce1b4-1642-40b1-985e-f085eb37b1cd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e65738e4-a90b-4732-9874-888ee7eb4dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68711f48-34b3-4a1c-9653-13d866130e10",
        "cursor": {
          "ref": "c89fb9bf-ed1e-4ef6-a882-9692b7ca9d84",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ef024334-0b1d-4c3e-9e30-eb470e4e9127"
        },
        "item": {
          "id": "68711f48-34b3-4a1c-9653-13d866130e10",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e5ce5c95-3433-4f8a-8865-d3feef399ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f39393-ea40-47b9-943f-9f82bd69bb19",
        "cursor": {
          "ref": "4619c2c8-1f63-4b5b-8891-ff4572bc5054",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "123f9ec6-7c37-451c-b3a6-e32cdef3b992"
        },
        "item": {
          "id": "26f39393-ea40-47b9-943f-9f82bd69bb19",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4e8f6412-237d-45b0-bbbc-efd957dc5010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8988003f-63ff-448b-9ee3-e6d600387d66",
        "cursor": {
          "ref": "c9d08f96-5965-470f-a8bb-34ddb8ea1ee5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e6f79b3-f47c-43ed-b7fa-f324d2f8ed86"
        },
        "item": {
          "id": "8988003f-63ff-448b-9ee3-e6d600387d66",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9845dc01-9c8c-44a4-bf41-238f53c50331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed54d9c-e90c-4d8e-b4a4-814b82749634",
        "cursor": {
          "ref": "b47ecd88-c75e-4fad-93c5-afd5a08112bd",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1ed7d3ec-8ae8-4422-a42b-de7731c63b50"
        },
        "item": {
          "id": "fed54d9c-e90c-4d8e-b4a4-814b82749634",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ed998955-7ab1-4858-a757-4983e15789f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0ad455-00b5-492e-ad3c-6f400088389e",
        "cursor": {
          "ref": "467c813f-490b-4c33-83ac-07495dfb42ed",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7e5961a3-bc2a-4415-bc68-3e5ba0ab3ab1"
        },
        "item": {
          "id": "3b0ad455-00b5-492e-ad3c-6f400088389e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "77a922f5-a021-4961-b812-5807cbfd5a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a642a4bb-cabc-4c12-be47-9c2196b969d4",
        "cursor": {
          "ref": "008af392-e304-49d3-8534-04217386c97f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7520b6b4-1cf6-462d-adc6-82ec06029a2c"
        },
        "item": {
          "id": "a642a4bb-cabc-4c12-be47-9c2196b969d4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "839c9ae7-d903-4d0e-a851-798a4ae02249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9531d84-f586-4681-ae39-0068fff60f66",
        "cursor": {
          "ref": "63b84809-e6f7-4b8d-a958-af4fcea2ad2f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0c017d73-8163-4494-99b5-235ca45b024a"
        },
        "item": {
          "id": "c9531d84-f586-4681-ae39-0068fff60f66",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a4514e8a-ef2a-4287-b922-c65aae5a9b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a993805-fe30-40f2-bbf1-3c1786a8277f",
        "cursor": {
          "ref": "213cfbc8-89fb-4a4d-b301-070d417c17d1",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "952cd254-451d-43e5-a3fc-022efc224b5d"
        },
        "item": {
          "id": "0a993805-fe30-40f2-bbf1-3c1786a8277f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "20df4fa3-e52b-494b-89ed-83e83072e718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c520cec-10de-4b3e-afdc-0b7ad35efd02",
        "cursor": {
          "ref": "50a280b9-2a00-43ad-b0d5-4f86a4841f54",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "43909f03-f8b4-4ad9-b679-b5710ba908cf"
        },
        "item": {
          "id": "3c520cec-10de-4b3e-afdc-0b7ad35efd02",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6998b3e2-7420-409c-872b-f7cb708f4456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de7c72a-15bf-4ea9-bbde-af729b293f6e",
        "cursor": {
          "ref": "ace94100-0f78-446c-8c37-acac2f759d1b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "858241a0-49ab-49dd-b9c6-cd1c9d053ecd"
        },
        "item": {
          "id": "5de7c72a-15bf-4ea9-bbde-af729b293f6e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c52863cc-30d4-4b4d-bacd-a4a96b937b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a3823e-0423-4e74-8bd4-60e694d80664",
        "cursor": {
          "ref": "4bc21b50-61ba-4005-98f7-87de2518023d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8e4a9a1c-327d-4bb1-858c-730b8d820cba"
        },
        "item": {
          "id": "00a3823e-0423-4e74-8bd4-60e694d80664",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5904a942-ff76-4f76-a74b-65981d2a70ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a4a7d9-79d1-4be2-a231-be482013362c",
        "cursor": {
          "ref": "717a3acf-54b1-4435-b4f4-8387ae5df825",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f8f4d139-3dcd-4df1-b90b-9099fb13a4ce"
        },
        "item": {
          "id": "11a4a7d9-79d1-4be2-a231-be482013362c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "42488b40-0094-4546-b47d-c0145b6eb5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301c4f39-7f54-465c-aa5a-53ca38e12ce9",
        "cursor": {
          "ref": "031817c3-9a94-4b4a-9d40-acf21c47c8ea",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "49f894cf-0172-4ea4-9031-5ba3595cda47"
        },
        "item": {
          "id": "301c4f39-7f54-465c-aa5a-53ca38e12ce9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "95137654-70bc-4085-940c-c28ba7b3a455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b00738-7469-4e19-bb10-f2ca907d22f9",
        "cursor": {
          "ref": "210cd23c-6b75-4164-9464-9215c7bb7e2e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8618a7f8-ba6e-42eb-ae70-66b1ea843284"
        },
        "item": {
          "id": "a2b00738-7469-4e19-bb10-f2ca907d22f9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "53c1811c-9cb2-451c-b381-99a3aeb363de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a5beb2-e06b-4920-83a1-90e08af721a0",
        "cursor": {
          "ref": "601e307d-a2bc-4f45-abc1-b5fd24c25904",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fe6e9a2e-6402-4651-99cb-7ab49638f572"
        },
        "item": {
          "id": "b2a5beb2-e06b-4920-83a1-90e08af721a0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7b25456e-e53b-42f9-a471-5d74988c8f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed54d9cb-583e-4eb0-804c-564008e5c78c",
        "cursor": {
          "ref": "c33bbb9c-3c99-4894-ac3e-47acbfc48f99",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ca464fcd-920a-4a39-9667-b3fd1d1a73a4"
        },
        "item": {
          "id": "ed54d9cb-583e-4eb0-804c-564008e5c78c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "53decb4d-58f6-4794-9dd3-018f0fcdaf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcedff6-bbf5-4e4d-8357-1a3feab3bb54",
        "cursor": {
          "ref": "146c6f3b-9111-49c4-a1d1-5b12e4d9d917",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a4f1d28d-4c9a-454c-82f4-5b8597773252"
        },
        "item": {
          "id": "3dcedff6-bbf5-4e4d-8357-1a3feab3bb54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "41b88edb-50df-44a6-9a04-3070e8a6a656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266dc663-bbae-4e1f-8501-4f73c96d1ae3",
        "cursor": {
          "ref": "ba7c0b70-eefd-4ae7-95e7-aefa92495a45",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2f2e547a-0d82-432e-b568-ca028c2be3d7"
        },
        "item": {
          "id": "266dc663-bbae-4e1f-8501-4f73c96d1ae3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "036289db-6ddd-44fa-a03d-68f68b06e4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c950422c-fd04-4777-bd28-8326d7d29725",
        "cursor": {
          "ref": "1e343402-ecc0-47bb-98f4-a2a67acffeaf",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eff334ff-6c4c-4c39-b397-b39b743b7c38"
        },
        "item": {
          "id": "c950422c-fd04-4777-bd28-8326d7d29725",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e5d28bd5-65bd-4f08-a0be-840c9c81d179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c0c93a-87c8-4a74-9609-070ad796471e",
        "cursor": {
          "ref": "fee295a1-c717-47d9-909b-8cd70d00432f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "78e08140-d9c3-4eed-8325-2abcc2871e2a"
        },
        "item": {
          "id": "59c0c93a-87c8-4a74-9609-070ad796471e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d33e7649-71cf-4a61-b5af-eb1e3a1015ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe3a8f6-a688-43ea-b645-429aa9f2388f",
        "cursor": {
          "ref": "fd8cd990-9c4f-479d-a318-64a0e4c1906b",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3feb0997-d907-4831-a5c6-7280468f35cc"
        },
        "item": {
          "id": "7fe3a8f6-a688-43ea-b645-429aa9f2388f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d2c074f0-9cc5-44c8-bd74-3f7bd64587ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a10b58c-f9dd-441f-81c4-c8414d1002da",
        "cursor": {
          "ref": "aa243d3c-6c86-4973-bb70-09f5dd226f0e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "437ec2ca-0c71-41bc-9e42-fd2af0a995f1"
        },
        "item": {
          "id": "8a10b58c-f9dd-441f-81c4-c8414d1002da",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0da158ae-89da-46d9-8756-206bbe26b083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e494c1be-d565-4cdc-94bc-e98f8deded0f",
        "cursor": {
          "ref": "f997e10b-a86f-4b02-9f51-1141e0800d36",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1f76fbec-3190-4bf8-9f6c-ca32dd7f0985"
        },
        "item": {
          "id": "e494c1be-d565-4cdc-94bc-e98f8deded0f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a2529e6a-26fd-44c7-b08e-23d14db7794a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65204b4-09ce-4567-ac52-f8b349253734",
        "cursor": {
          "ref": "0767d39e-5fd7-4ad1-88a2-6c482a5bdab6",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7ff0f2bd-e40b-4b3d-aefc-456a103340e2"
        },
        "item": {
          "id": "d65204b4-09ce-4567-ac52-f8b349253734",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "250b2272-dab7-4f3f-a4da-06645a32f7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d8dc8e-02eb-4673-bfb0-1f5bf8473a50",
        "cursor": {
          "ref": "f7ca93aa-3d4f-49bc-93eb-870530de7e87",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a66826a4-9b72-468a-af2d-be1ed37daa31"
        },
        "item": {
          "id": "49d8dc8e-02eb-4673-bfb0-1f5bf8473a50",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6dfbf0e0-9ab0-45ec-bc66-389a0132abdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc3ec9f-cd55-47e2-993f-6317dab09fb3",
        "cursor": {
          "ref": "74b5733d-974c-43b1-b866-e081c1ad480f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7d4f2b07-61f1-4f47-9569-3365a8307d62"
        },
        "item": {
          "id": "8bc3ec9f-cd55-47e2-993f-6317dab09fb3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f55d48d0-2e36-4486-a980-b16bed5fe689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71d7408-34a8-4055-8502-986c015dd294",
        "cursor": {
          "ref": "d5f7ba88-313c-4395-9aaa-ded8556262ce",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0421be35-ecd4-4bc0-9395-e8d3eb3c89b2"
        },
        "item": {
          "id": "d71d7408-34a8-4055-8502-986c015dd294",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0fffd9c6-31a2-420b-9c56-6d6d76d9862d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a140e11-7abd-4a4c-a2b9-2ed42e3cd260",
        "cursor": {
          "ref": "8c91a3b7-a151-413d-af01-67d3b8f600d5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "516cbfc5-d666-4373-b795-126d42c609b8"
        },
        "item": {
          "id": "8a140e11-7abd-4a4c-a2b9-2ed42e3cd260",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9ebd06cb-421e-468e-8e0f-93fbf1511a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757dba14-c044-43fd-83b7-b68dfaa6472e",
        "cursor": {
          "ref": "1d5a2321-8c17-4311-80e7-7fe1e3531eef",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "34218f79-68c0-4424-a009-272ec7a9bdf3"
        },
        "item": {
          "id": "757dba14-c044-43fd-83b7-b68dfaa6472e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b225f759-f0a6-46f4-9243-b6af7d97bfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23637cdc-2c44-4bcc-b5ba-b187fdcfa801",
        "cursor": {
          "ref": "cdef29dc-9fd0-4ccc-a631-086ed1d1f477",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5c1f4658-a0ea-4408-b7bc-a4b3e1ec7aec"
        },
        "item": {
          "id": "23637cdc-2c44-4bcc-b5ba-b187fdcfa801",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "afe09ea7-d7fa-4563-b432-ce8fc1a1ed97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd619d78-3f34-4333-b982-6d8c0b3ff863",
        "cursor": {
          "ref": "aec28606-f054-4ce8-9b2f-76d35eff73de",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "286c4097-5e11-421f-945f-12f176e7aa4e"
        },
        "item": {
          "id": "fd619d78-3f34-4333-b982-6d8c0b3ff863",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "41510bc4-9933-4f50-8d0a-efcb0dd9c837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca4df35-42f4-4236-b9fc-0d4cfe18b1f5",
        "cursor": {
          "ref": "1db615c0-d9d7-4a1e-9d29-a0373e022002",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ddec7718-2c15-4bee-b2c3-024192edbe4f"
        },
        "item": {
          "id": "3ca4df35-42f4-4236-b9fc-0d4cfe18b1f5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7e8e217f-eb49-4d5e-bac4-63d6f9e9b83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d172f31-6b5e-4994-97ca-5162b4b91895",
        "cursor": {
          "ref": "7364cc66-48c6-4eb8-a538-791a3de814c1",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "68c069c9-1abc-4ea0-97c2-08fc1a9ce0ea"
        },
        "item": {
          "id": "6d172f31-6b5e-4994-97ca-5162b4b91895",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "74d80286-0da7-48d8-b34f-866095bd1838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174b8787-5379-4892-8a46-c81740ed2434",
        "cursor": {
          "ref": "d6ae095e-c375-4950-a919-42ef25a8335e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8190ae1e-2c61-47d2-a863-0c8b729550a5"
        },
        "item": {
          "id": "174b8787-5379-4892-8a46-c81740ed2434",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8cf3c2e6-231a-4607-a863-e78837d112ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f91195-7038-412d-8a67-bda931038e87",
        "cursor": {
          "ref": "4afd7793-724f-4c9d-827b-99bd362abb1e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c11b11c2-0e14-47fa-8b73-d139d09900ac"
        },
        "item": {
          "id": "84f91195-7038-412d-8a67-bda931038e87",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "202bb5a8-0efd-4289-820a-5956e376b106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155508fb-bc9b-482b-bbbc-3e1ce865832e",
        "cursor": {
          "ref": "a4fdd00d-2c98-4822-9883-f03bbe28ec28",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7b6efd75-cf7c-461e-9dff-a6a07b129cfd"
        },
        "item": {
          "id": "155508fb-bc9b-482b-bbbc-3e1ce865832e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d7f7c1e1-6506-4447-9087-742878dc6846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ff577e-c552-476c-817e-00db3736e32e",
        "cursor": {
          "ref": "6f0f7c48-343a-4c0a-9e92-9146ffe187f8",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2cd14dda-bfb9-479b-9d3f-8138808e978d"
        },
        "item": {
          "id": "19ff577e-c552-476c-817e-00db3736e32e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3a730b70-790b-4978-bd61-6f4c33dcec24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2f77d0-02f7-4b6f-bb61-bdcf6d7af6e9",
        "cursor": {
          "ref": "0728cf40-4a53-4399-b843-4b9474c143e4",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ed3aeaac-5843-41e3-aaac-2b127e978e5d"
        },
        "item": {
          "id": "fb2f77d0-02f7-4b6f-bb61-bdcf6d7af6e9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "317920a5-fa9e-49a1-ae46-70158b79f187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2e9603-6c06-4ca6-8826-c57c1844a7bb",
        "cursor": {
          "ref": "f5fc3ca9-a37f-42be-bd90-628384912f8c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "70da497c-0efb-48d7-a3c0-060c07bbc155"
        },
        "item": {
          "id": "7c2e9603-6c06-4ca6-8826-c57c1844a7bb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "13cde8a0-7cfd-4123-af01-b3fd8596869a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0351e5ee-a82e-498c-95c3-97ff27b37f84",
        "cursor": {
          "ref": "0d32ac31-b347-4273-8141-bf387d028a4f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cab47ac1-5dc1-41c7-a517-f8ddc51cc8d5"
        },
        "item": {
          "id": "0351e5ee-a82e-498c-95c3-97ff27b37f84",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cbcfcd3b-5cec-4b4e-9d28-7aa1e88c90c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b271ad-8078-425b-a9fe-c1e25fcf514e",
        "cursor": {
          "ref": "03c38922-e497-4818-9000-f14066036f9d",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e78c6883-bc65-4a5d-8840-c5bcbe7fd965"
        },
        "item": {
          "id": "e9b271ad-8078-425b-a9fe-c1e25fcf514e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cd492ede-f17c-433e-ab02-b5c7a18067de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bdda63-96b1-4e6a-987c-39742503648f",
        "cursor": {
          "ref": "9582fc6b-e39f-40df-aa28-ec36fe587c67",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fbc33392-2bfa-4f62-9bcc-e6b0b9febd40"
        },
        "item": {
          "id": "e0bdda63-96b1-4e6a-987c-39742503648f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "706b06a1-254b-4ad6-a444-646af51e2cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ef3d3d-a844-427a-84cd-c373b9923462",
        "cursor": {
          "ref": "d4c9db75-bee7-41fa-94d0-fc6fe81dfd02",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b8e894db-e5d2-4fb4-a90c-6a64bd8dfb3d"
        },
        "item": {
          "id": "44ef3d3d-a844-427a-84cd-c373b9923462",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "92983632-6f1c-4099-a705-f7c9d230a006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fe32ee-21da-4164-82f7-6feee7255ce5",
        "cursor": {
          "ref": "bc3cb3bf-1beb-409d-933f-a0124edbd1d7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "96300c10-dc73-474f-af0d-e7c6a2c8636d"
        },
        "item": {
          "id": "28fe32ee-21da-4164-82f7-6feee7255ce5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bce8b677-dd02-433c-871a-d24d45681157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5246697a-a743-412d-b209-73f9276e0a99",
        "cursor": {
          "ref": "e9c78afd-911c-438c-9fc8-42d6686abcdb",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9b9de949-e5b9-492a-84ef-2c330b9d29df"
        },
        "item": {
          "id": "5246697a-a743-412d-b209-73f9276e0a99",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "09c6b6dd-e142-4cee-b96a-5a91cf187fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c5add9-2b9f-41f9-b86a-3ab8a3d3b4e5",
        "cursor": {
          "ref": "bed1e222-b165-4113-bd01-6886e4cd5d5f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6bebb23a-85e0-42c4-80a4-47f6ae2c586a"
        },
        "item": {
          "id": "86c5add9-2b9f-41f9-b86a-3ab8a3d3b4e5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7cbed1d5-9ea2-496e-924c-9829a0437205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d92a38a-bb5d-4271-bf15-d03f4a4c5477",
        "cursor": {
          "ref": "2cc814a7-cd9f-4e8f-b814-0f7759900d6e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "71dce192-b487-4b6b-82de-a588ba0695ec"
        },
        "item": {
          "id": "0d92a38a-bb5d-4271-bf15-d03f4a4c5477",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ee650de5-0839-4e99-8983-5f1d6c647a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b6929c-c723-4dc4-a541-0dcd2b4b249d",
        "cursor": {
          "ref": "0284a089-6272-4de8-80b0-a2c111a6de82",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "41bc0a08-edd9-4485-bbd3-22c2f5c03328"
        },
        "item": {
          "id": "46b6929c-c723-4dc4-a541-0dcd2b4b249d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "244396ad-0ce4-4073-8848-5fabb84f7d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7e378b-a1b7-46fd-82fa-3077c417e548",
        "cursor": {
          "ref": "6e12a9a7-543e-45d9-a12c-876bb3d03619",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "23eddcf7-25d1-4c43-834f-29ec18136c2d"
        },
        "item": {
          "id": "0e7e378b-a1b7-46fd-82fa-3077c417e548",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6b0b666f-b28a-4d39-bba0-966074e673d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b616a1-6dae-41a9-9e6d-c06b12aea684",
        "cursor": {
          "ref": "d3d38f9b-b7a8-48ee-b8ef-d98cff6be555",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e14a3f1d-3d62-43e8-b90e-63ceb1448fc9"
        },
        "item": {
          "id": "b6b616a1-6dae-41a9-9e6d-c06b12aea684",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "84027d78-45ff-49ea-8232-bc2bd81bf7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae75a242-95d6-49fc-9822-a9f54de712ac",
        "cursor": {
          "ref": "605a95b2-2237-4bb9-95e4-a86c0fe04b40",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fe120e25-ecec-4c4c-9098-ac66f9451efb"
        },
        "item": {
          "id": "ae75a242-95d6-49fc-9822-a9f54de712ac",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3b4efac8-6521-44c5-849a-167afa064479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3aad56-c247-4c98-911f-11c9b112d81b",
        "cursor": {
          "ref": "75ca8d90-0c1f-4cca-9cdf-1223996edc3e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "42b6c445-7c18-494a-b2ff-b71b83e8fd2e"
        },
        "item": {
          "id": "eb3aad56-c247-4c98-911f-11c9b112d81b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9264c35e-0ed4-4bcc-8d84-bfd0b2ab6b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4e6e3b-bead-41f7-bfa7-67f47b5e0d2c",
        "cursor": {
          "ref": "b7d65e3e-b180-4e12-9087-0f40732300ed",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "15250876-e9d0-4345-b270-c84ed1772f3e"
        },
        "item": {
          "id": "eb4e6e3b-bead-41f7-bfa7-67f47b5e0d2c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c5025897-c436-4400-ad12-267df554526d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f4fd92b3-6fea-439f-80a8-d23f8fe3a6c7",
        "cursor": {
          "ref": "0a26f5a1-868e-4746-9b16-3fd93b420e75",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3491b96c-a914-46cb-a4cf-1e828174e428"
        },
        "item": {
          "id": "f4fd92b3-6fea-439f-80a8-d23f8fe3a6c7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aea5267a-4e59-4eb9-9bb5-3e7541cbfd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "139b1f5c-8c28-4be8-897f-c5a7640c58e8",
        "cursor": {
          "ref": "60b1215e-97ed-4160-ac22-a0fe82c594e9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "666c7e2d-6c15-4ec6-9828-bc4533e35857"
        },
        "item": {
          "id": "139b1f5c-8c28-4be8-897f-c5a7640c58e8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2c4df857-ee0a-4094-876e-9288b3c1d5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "23e2e4f1-2fb5-4c69-8825-b51590143da6",
        "cursor": {
          "ref": "23a2101f-63ee-46f0-bd7c-7a92c82f99f0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "189ee50f-46f0-45f7-a387-f316e7d61fb2"
        },
        "item": {
          "id": "23e2e4f1-2fb5-4c69-8825-b51590143da6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "05b84c75-8a88-4dc2-8036-0f540034801f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "bb5fe633-3f57-4e60-aabb-14ba10e2f4e2",
        "cursor": {
          "ref": "007e802c-c88c-49ae-aadd-03dedc26b1b1",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6c779bfa-29a4-454a-a584-b2a39a26a88d"
        },
        "item": {
          "id": "bb5fe633-3f57-4e60-aabb-14ba10e2f4e2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0a876122-9e20-4986-a7c4-e7cdee02aac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "696b47b0-2666-4ba7-a796-5607e2529aa5",
        "cursor": {
          "ref": "347f0c16-4ad4-413c-acd7-7a0518000c69",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9f0c7e68-97b0-4675-a223-345d7b05a3ab"
        },
        "item": {
          "id": "696b47b0-2666-4ba7-a796-5607e2529aa5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3eb38472-772c-4fa0-ad41-b2f4c085a5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b4120e91-2c9e-4f86-82f1-3a4189bdc6d3",
        "cursor": {
          "ref": "95cf81da-5908-407a-bd5c-e57d2b036295",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b2596298-5a07-4dfc-8679-0c45e6745606"
        },
        "item": {
          "id": "b4120e91-2c9e-4f86-82f1-3a4189bdc6d3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ff8e8586-7c98-4402-866d-e2644ab4728c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c2dc3481-0572-4e52-b99c-d1439b9aac91",
        "cursor": {
          "ref": "91bdc40e-d469-4a71-b210-f0502d539871",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b7e7b8e3-f452-41c8-9873-5c35f23a4276"
        },
        "item": {
          "id": "c2dc3481-0572-4e52-b99c-d1439b9aac91",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5526527f-8141-4adb-a1ec-f92a1704ea6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58aa5c7d-deaf-48cd-b51c-ec2d293bd336",
        "cursor": {
          "ref": "7b019dae-f3ed-494b-9cdc-29a2ba74bacc",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9c4f701a-ab61-489c-88ab-972d862b33cc"
        },
        "item": {
          "id": "58aa5c7d-deaf-48cd-b51c-ec2d293bd336",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e46411c5-6043-4ac8-a61c-99c2e25d7ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a2d53f-5395-49b7-880a-1b22a0dcf711",
        "cursor": {
          "ref": "66a24cc0-5d7e-4e7c-9133-80335e983548",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "37c73644-bd8c-4905-b760-b87446c01e2e"
        },
        "item": {
          "id": "53a2d53f-5395-49b7-880a-1b22a0dcf711",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "02b56d58-3ec9-42ac-b25c-1c7ae5cf5084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bccd292-cd1d-478c-9e12-35ba303af073",
        "cursor": {
          "ref": "c04b681c-a66f-4a4e-8897-351a0c33556b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0f64d8f6-5f2a-41c3-8ed3-356db66bb7db"
        },
        "item": {
          "id": "9bccd292-cd1d-478c-9e12-35ba303af073",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1c2a93ff-09d7-4977-b6c8-5c60e6fb8ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c29067-928e-43cd-a4e9-a4e87e51a84d",
        "cursor": {
          "ref": "f1f10e02-65fd-4335-8175-d8772ffee04b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "784e1e5a-5c6f-4b91-b732-76d09bcd5427"
        },
        "item": {
          "id": "a8c29067-928e-43cd-a4e9-a4e87e51a84d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cff01c63-b67e-4a68-b51b-6ea3130fe539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2330cc24-2369-42fa-97d5-ea51d7d1e987",
        "cursor": {
          "ref": "aee7af18-5462-445e-bdfd-92fa6baf798d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "53968ec5-7f47-4bcf-99a6-20b128b93eca"
        },
        "item": {
          "id": "2330cc24-2369-42fa-97d5-ea51d7d1e987",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bb8390a1-9d44-4beb-9b72-66e625fdbd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52447ca-4ac3-483f-a7b6-9100c75b5223",
        "cursor": {
          "ref": "1fd41721-2f60-4542-b9a3-533927f63e40",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "447247bf-35ad-4d1a-80df-f091049c2b0c"
        },
        "item": {
          "id": "a52447ca-4ac3-483f-a7b6-9100c75b5223",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "68217c40-2ea2-47a8-aa4f-b63657ef55cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320bd99f-b812-4541-9927-0885c82cdd97",
        "cursor": {
          "ref": "6b458f21-aa71-430e-8e18-b8427704a9b8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "09ceb1eb-7d82-4a9b-b107-1e1a8aefc157"
        },
        "item": {
          "id": "320bd99f-b812-4541-9927-0885c82cdd97",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0dbac694-36b0-46c6-a196-92f88a7ad633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db553acd-dda8-427b-bf5f-7d42223d5ac1",
        "cursor": {
          "ref": "6be40f7d-8f6f-4f73-bfb7-e3f3f6491473",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e4930238-d262-4672-a550-66bb9c67f3ba"
        },
        "item": {
          "id": "db553acd-dda8-427b-bf5f-7d42223d5ac1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "835627a6-8822-4326-b59b-b22989637902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fd41e9-872f-4af2-8f11-98d3283d54fd",
        "cursor": {
          "ref": "10b0e930-d26d-416b-8a53-2cdb732c68bf",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "408fba22-453e-4fad-95d8-cc2e1859b8a4"
        },
        "item": {
          "id": "91fd41e9-872f-4af2-8f11-98d3283d54fd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4c87f8f7-05e0-4c52-9d13-fc5f3c86fd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06069bb3-53d1-4d7a-aba4-75e5c66e2477",
        "cursor": {
          "ref": "71cdfb9e-408a-4ec0-acba-f6dcd3bac081",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0fe914d5-5a41-407f-8889-31472cb778be"
        },
        "item": {
          "id": "06069bb3-53d1-4d7a-aba4-75e5c66e2477",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a8ae9a41-0a75-432a-ae95-5d0659065d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dae9cb3-1dc5-4a14-88a0-3f25003fec83",
        "cursor": {
          "ref": "c3677739-daa1-4e08-a6dc-6162ec07a81a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1b40c3c5-54af-44b8-980f-1e9b7f38c493"
        },
        "item": {
          "id": "3dae9cb3-1dc5-4a14-88a0-3f25003fec83",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5e35a787-75bb-45c4-acc6-fd6f4c2a20d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0aeb24-54f0-484a-bfcd-922f6efb71bd",
        "cursor": {
          "ref": "f9fc46af-82cd-4074-8b54-bd00789b641d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "75657aad-f0e2-4781-bbc0-9a85374dd677"
        },
        "item": {
          "id": "ca0aeb24-54f0-484a-bfcd-922f6efb71bd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "97d5940d-a81a-4b2a-8c26-b59f4fc5d279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94874825-5a01-405a-b453-b06de522a337",
        "cursor": {
          "ref": "239a40b9-d0d4-4ce6-ae10-2d52f275cfaa",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "41a0e7a8-f78a-45c2-87c7-4a365d21e34b"
        },
        "item": {
          "id": "94874825-5a01-405a-b453-b06de522a337",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "73004dfa-80db-4448-912f-ee5b56a3beb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03616b87-f348-407f-b728-ebdf5981af32",
        "cursor": {
          "ref": "5d031152-b4ce-477f-afb7-00d08c912747",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ece99256-e2b0-4cb0-97a8-433961d24d3a"
        },
        "item": {
          "id": "03616b87-f348-407f-b728-ebdf5981af32",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ae16d184-be8e-4743-a08e-407783f56bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dea105f-5c27-4c45-bccb-858d5bbaf13d",
        "cursor": {
          "ref": "791a80d2-8445-4b27-8cb9-8a6a05110a20",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7b9e0f83-27d4-4876-8a29-93dd71daa8e5"
        },
        "item": {
          "id": "5dea105f-5c27-4c45-bccb-858d5bbaf13d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "60d607ba-4143-423a-b539-1b087f3450cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37c4896-18d5-4c22-b88e-10aa2dc8ff11",
        "cursor": {
          "ref": "bcdec402-7792-4ab8-b6eb-6dac30037b5c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "95616da4-f1c6-4ff9-bbf5-11305932c9a9"
        },
        "item": {
          "id": "f37c4896-18d5-4c22-b88e-10aa2dc8ff11",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7bdcbc96-9a3a-471f-9765-4a3da48affb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62627bb4-74c7-4d5d-a9e3-6e5642e0bcb9",
        "cursor": {
          "ref": "9d2b1a7c-e284-4767-a08c-bd41826e6587",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ace74787-fe73-4917-8594-534968e83951"
        },
        "item": {
          "id": "62627bb4-74c7-4d5d-a9e3-6e5642e0bcb9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "51b97a50-bc52-430f-a077-073eae9f0970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979bd9c2-7e42-49d5-b1d9-5664db3aee94",
        "cursor": {
          "ref": "1b717af2-ebf7-4b46-beba-4e91942de00a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e6a63b77-bf8a-41d4-bfa2-e13444d72174"
        },
        "item": {
          "id": "979bd9c2-7e42-49d5-b1d9-5664db3aee94",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "92021509-58ff-4453-82d2-870054c4382b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc93dda5-a1c4-4831-94c7-4dbdd61531e3",
        "cursor": {
          "ref": "81ccb36a-811a-4971-90ec-3809197b25d9",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7d93654f-a8d4-498a-8020-5b9af498274d"
        },
        "item": {
          "id": "dc93dda5-a1c4-4831-94c7-4dbdd61531e3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a8c18335-e792-46a7-a7a4-4f2ddba34ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eddf4a-f85b-429f-ad19-460c6accdea2",
        "cursor": {
          "ref": "26e5953c-f2fd-4ac2-bd48-25a91ea2aa4d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "700482bc-9947-420a-b52d-8607ca48f0ca"
        },
        "item": {
          "id": "a4eddf4a-f85b-429f-ad19-460c6accdea2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "05d68f1e-d751-408e-a260-ff7d4bc4e3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1936a985-4f30-4686-842b-14a72e016be3",
        "cursor": {
          "ref": "d838b688-fde4-4321-acbf-c86a8a0b9076",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3d42840b-258c-4714-a1d0-fa820b06ea2c"
        },
        "item": {
          "id": "1936a985-4f30-4686-842b-14a72e016be3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "79033054-bcdc-419a-b1ed-5a3a06dd2730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2032224-f6cf-4379-acc2-a590512cb2e4",
        "cursor": {
          "ref": "35e93011-d9eb-4d22-826d-fcd9b9ceb620",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "84f867e4-1b0d-4f17-9c60-afd3b2984dc6"
        },
        "item": {
          "id": "a2032224-f6cf-4379-acc2-a590512cb2e4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4667c56e-b12d-421f-99f8-03b8dd7044d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f39551-ae36-4225-a933-1c52bd85c601",
        "cursor": {
          "ref": "178c1084-5db2-40b5-9ad5-79411569dea9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1f373dd1-8449-41e2-9f05-d58bfed7fcf4"
        },
        "item": {
          "id": "66f39551-ae36-4225-a933-1c52bd85c601",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eefe5f3b-ec1f-44b0-9286-4de0732670df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07be100-6fd1-4971-87ad-05252c0d5daa",
        "cursor": {
          "ref": "d85288a7-c303-4fda-9288-22b85bda833f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3466d69b-c842-4d7e-b56e-f241f0015481"
        },
        "item": {
          "id": "f07be100-6fd1-4971-87ad-05252c0d5daa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cac1d3cc-8bcd-45e1-9099-bd4ee861cacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5763c6-4e00-408c-ac91-ce57a458ddcc",
        "cursor": {
          "ref": "36d77a83-2362-4b74-a2b9-70f299a4347b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2abc4941-e78b-4a37-b4b4-7ef4ef87b539"
        },
        "item": {
          "id": "cb5763c6-4e00-408c-ac91-ce57a458ddcc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2073c5d2-c71b-4b8b-aff6-a3ef155b3f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d60abc3-7c59-4fb0-93fc-fb155d666645",
        "cursor": {
          "ref": "41954498-5ce2-4f7d-8ac7-cfe80645c160",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0579e0ed-08bc-43c4-9585-49bde0618d9b"
        },
        "item": {
          "id": "6d60abc3-7c59-4fb0-93fc-fb155d666645",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0003dadb-069e-42cd-a5cb-95014355a2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffa9d99-8b6a-47ae-80d6-49b59b177952",
        "cursor": {
          "ref": "176e5545-b076-46ac-88a4-4014039238c6",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8950075c-9e02-4e8f-8ba0-12e90f5d2327"
        },
        "item": {
          "id": "cffa9d99-8b6a-47ae-80d6-49b59b177952",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "31dafedb-1168-44d0-b35f-f465d6c0d217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4e5ba6-14e9-45ec-8d68-eca736e8f900",
        "cursor": {
          "ref": "c4af4269-f02f-4a61-b37c-34cc71a286aa",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ed24f0db-1d89-4b68-afde-bda5c0aa42c8"
        },
        "item": {
          "id": "2f4e5ba6-14e9-45ec-8d68-eca736e8f900",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "af4894a3-fa33-4f35-a2d2-9464e9503858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e1916a-d902-4e14-8c3b-28bdc3ced899",
        "cursor": {
          "ref": "508ece78-bcdf-4917-9f82-e66aa26a07fa",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7f74be0b-b4e4-40d4-9071-b005c282040f"
        },
        "item": {
          "id": "a1e1916a-d902-4e14-8c3b-28bdc3ced899",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2641ad08-9ef1-495f-b89d-d381bc3aeac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edde162-18ad-4f22-8c68-5903889c0652",
        "cursor": {
          "ref": "44384184-e33d-401b-a0c3-4f91f05ceebc",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a980c180-59e1-48c7-8eb0-4140e85296c9"
        },
        "item": {
          "id": "1edde162-18ad-4f22-8c68-5903889c0652",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d851af43-3e20-4842-92e5-58e729413dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a00c73-1b68-4c20-96c6-15dc1f0815ec",
        "cursor": {
          "ref": "b9e15b0f-1d14-49c8-8a39-399a77af7114",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d3b581ae-28af-426a-bd87-7931338f02fc"
        },
        "item": {
          "id": "c7a00c73-1b68-4c20-96c6-15dc1f0815ec",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f3450382-a36a-4968-99f5-0c367f1974c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330bc4ae-20b2-477b-9f60-856ede087f2c",
        "cursor": {
          "ref": "0a7ddf0b-4fef-4aff-858e-e402430e490e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a76d8792-475d-40d4-a3bd-c8f16b8540b1"
        },
        "item": {
          "id": "330bc4ae-20b2-477b-9f60-856ede087f2c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "82690b77-3242-464d-9974-3c3b382d1a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303ec3b2-c8a2-4113-ac01-9148c1eb7611",
        "cursor": {
          "ref": "2e7693f0-b327-44e2-ab0c-dc25574ca0dd",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5a251e45-5781-4476-a778-794286e5a152"
        },
        "item": {
          "id": "303ec3b2-c8a2-4113-ac01-9148c1eb7611",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "54953f61-8b64-4275-a73e-af4dff5334cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1c1313-29d5-47a4-aa47-a4ee23c4c293",
        "cursor": {
          "ref": "80448c4a-a250-485b-a909-12c27e1f0706",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a30b1fe0-3dab-4332-ae29-7e8edf25e14f"
        },
        "item": {
          "id": "3f1c1313-29d5-47a4-aa47-a4ee23c4c293",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6023ff24-57d7-407a-b4eb-d32aa5bcbf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286ee643-cdbf-43c2-8569-b9d3dacdb41a",
        "cursor": {
          "ref": "bc1b975e-47ed-40b6-b3ce-493eb1279ecf",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a0769b41-77d7-4edf-b1c6-8691c55bca26"
        },
        "item": {
          "id": "286ee643-cdbf-43c2-8569-b9d3dacdb41a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "be76b88c-5a9e-4e23-abac-31ec2fd33c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9f823f-32c8-462e-80fb-fca0b549552c",
        "cursor": {
          "ref": "dc55795e-d272-4845-bff6-e0dd26c81039",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b8dc8022-4a49-40ee-8859-cd15d44d408a"
        },
        "item": {
          "id": "4c9f823f-32c8-462e-80fb-fca0b549552c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e5c4da8f-7a80-4b80-a9d2-7f45cef189f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e48ade7-097f-4ee9-bbdd-9e4f72cead3d",
        "cursor": {
          "ref": "d3050302-332f-4009-84b6-fdc8135d4454",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "eb09b098-f144-4096-8f20-095955446d10"
        },
        "item": {
          "id": "0e48ade7-097f-4ee9-bbdd-9e4f72cead3d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7eb06dda-f045-41d0-8f79-b0f7c688cda1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41939a13-06a8-403a-a26e-511f5e98b3ef",
        "cursor": {
          "ref": "c86c637a-0488-4ef5-bf94-241f2c2b7cfb",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "65659b68-4e18-45e7-a148-aaa2b4d60736"
        },
        "item": {
          "id": "41939a13-06a8-403a-a26e-511f5e98b3ef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "90a3bcba-373d-4ae5-8a93-00bc422f7767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb1d273-2266-4fcb-8a96-ce110a823310",
        "cursor": {
          "ref": "4fd26a94-4f5b-4e15-9c65-328281696b8d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ab07c495-d761-4d5a-ae66-390b5d10f596"
        },
        "item": {
          "id": "ccb1d273-2266-4fcb-8a96-ce110a823310",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8ba132f6-a705-4d26-9aa7-f70f0258d5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd9ba06-f846-41a5-b8de-43123fa01019",
        "cursor": {
          "ref": "816fac60-bd77-457b-9488-7bb46243f1cc",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "292f0694-ce4d-4620-a7fd-d7dd60bca6da"
        },
        "item": {
          "id": "0bd9ba06-f846-41a5-b8de-43123fa01019",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1e15ae0f-134b-431b-8f5f-e6261ed287e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0e2a14-86f0-4ed4-867d-9984970cbf19",
        "cursor": {
          "ref": "1069d8db-d200-4734-b0b0-c8cce921adcb",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f2315c63-f67c-4833-b828-009da207951d"
        },
        "item": {
          "id": "7d0e2a14-86f0-4ed4-867d-9984970cbf19",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "49ce9437-1be9-44cd-8c66-72a099248c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d06917a-ae65-4e52-8a96-505f09c56697",
        "cursor": {
          "ref": "13355df3-b551-4afe-ac6d-bc8a5ca28892",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a0c7daa4-59bb-4309-9d11-034fda17c849"
        },
        "item": {
          "id": "4d06917a-ae65-4e52-8a96-505f09c56697",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e651fbea-a7a5-471b-a5c4-3feda30f066f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b5ebd9-a27c-49fb-bc12-d8dab3d6e24d",
        "cursor": {
          "ref": "90149663-3b32-4897-951c-dbef2c980a84",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "23ade858-fdbe-46c2-8cae-7289ffa6a0dc"
        },
        "item": {
          "id": "44b5ebd9-a27c-49fb-bc12-d8dab3d6e24d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8eb52ce9-d8ae-4ce6-830a-f61a9a9a9d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d241310-a060-4ae8-82ef-c3e6d0c8e0fc",
        "cursor": {
          "ref": "00198285-57d7-4ea7-979f-462ac43d6386",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "575e713f-29ee-4822-bd3f-906f2048fdbe"
        },
        "item": {
          "id": "2d241310-a060-4ae8-82ef-c3e6d0c8e0fc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "957fa839-efb5-40c7-9da9-109800f6adaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ec2a42-d648-42a4-bc3a-55a04e22aef1",
        "cursor": {
          "ref": "13d7db9f-302b-45f9-b597-c47a26ec76f8",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1cdf6487-5918-4d96-b129-84ebe9dc4f25"
        },
        "item": {
          "id": "f0ec2a42-d648-42a4-bc3a-55a04e22aef1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a878ac8a-ac19-4a0d-b878-e2550a9296e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb300015-e5ad-4c73-9ecc-c8fd0d912e4f",
        "cursor": {
          "ref": "9727374a-45b8-4485-8155-0593d87e8b05",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ddaaee04-d93c-48ea-b273-8f9a83cd36ce"
        },
        "item": {
          "id": "fb300015-e5ad-4c73-9ecc-c8fd0d912e4f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4b41e68c-b181-49be-98b2-a52f0ad82e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cb028f-2155-4e3a-8687-567f5ff1ea25",
        "cursor": {
          "ref": "404db1ac-aded-4844-9bd6-31f7439ba798",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e6ed6082-6aea-4f68-8c05-064999262ab7"
        },
        "item": {
          "id": "00cb028f-2155-4e3a-8687-567f5ff1ea25",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9a079632-c6cf-4881-a663-bf0988b16bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c89e4e-4e0b-4031-baac-29d269fb88ea",
        "cursor": {
          "ref": "32b4e294-1151-4c06-861b-e0e9bc373b88",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "610f23f2-cf17-450a-8974-7793de2f644e"
        },
        "item": {
          "id": "e1c89e4e-4e0b-4031-baac-29d269fb88ea",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8e453a00-138f-40ef-aa29-aad15f6e3c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72edb17-6535-4a71-89da-fc1ceebfeaa3",
        "cursor": {
          "ref": "c3e198ff-849a-4661-9240-74558a1f5bd2",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ef8ddd15-920d-4817-9a85-f27e247eab78"
        },
        "item": {
          "id": "c72edb17-6535-4a71-89da-fc1ceebfeaa3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e4199994-cfba-4dc1-9fba-fbdeb536fcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c3f0ec-3ae0-4a04-85cd-93ef0db51029",
        "cursor": {
          "ref": "aeaabd3c-47a6-41e2-86cf-bb40096bc6d3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bf613a51-1d2d-4d2f-a28c-6d676df65d86"
        },
        "item": {
          "id": "c0c3f0ec-3ae0-4a04-85cd-93ef0db51029",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "53fe76c9-5cb7-43a4-a897-1063bfe7b9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e90816e-5153-474b-a6a6-f74f7dc0e5d3",
        "cursor": {
          "ref": "dc77a43c-0710-4352-8470-eb4b63ec4150",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e0cc3c93-0aa5-476a-84dd-5277a16af73f"
        },
        "item": {
          "id": "1e90816e-5153-474b-a6a6-f74f7dc0e5d3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3a76b1d3-3e90-4f3f-87b0-a2ed7cb74fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f336e0-2aa8-4bf1-bc55-82f1ca99fe70",
        "cursor": {
          "ref": "f06708f3-9ea3-4672-8427-caeb8a648cc3",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8f8ffc2b-bbf6-4c6c-a661-25276833884c"
        },
        "item": {
          "id": "d7f336e0-2aa8-4bf1-bc55-82f1ca99fe70",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "aa391e01-3a4e-49fb-8cfd-c3c009b08d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d2b7aa-2fc4-4102-99cf-26e7c09da675",
        "cursor": {
          "ref": "64b4896c-b73d-4a31-ae33-e15e17e3805d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8af546d7-b0ac-4003-8a51-2042e80bda74"
        },
        "item": {
          "id": "b0d2b7aa-2fc4-4102-99cf-26e7c09da675",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "36306dc6-123b-4091-8571-48623a10a678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e294a214-3006-4c01-a066-bf1f51c40831",
        "cursor": {
          "ref": "944e5805-8a27-4332-9bb1-a601306162c3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b33bea91-3d0d-407a-b025-8c8315dfd476"
        },
        "item": {
          "id": "e294a214-3006-4c01-a066-bf1f51c40831",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e540ec95-9d69-4461-a28e-f111131966ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446f0ffe-c5e2-4a97-bbe0-900b5a95bde5",
        "cursor": {
          "ref": "f1463d84-6b38-48e2-9e28-3db2515c5fcf",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d13c0bb4-c1b6-4e6f-a9fd-38519dfbb91e"
        },
        "item": {
          "id": "446f0ffe-c5e2-4a97-bbe0-900b5a95bde5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "56e47834-25d1-43e9-8d44-59def876842e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93893d19-307c-47fa-a19e-e4e73964d3bc",
        "cursor": {
          "ref": "af6537f1-d9db-43a1-81ce-6b105c82a874",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "99fec31a-562a-4114-bcda-5db1546db727"
        },
        "item": {
          "id": "93893d19-307c-47fa-a19e-e4e73964d3bc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "82d53d2c-a1e5-425d-91c9-330295fd8550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5422036d-982e-4d25-9705-a9d4cfa3b50e",
        "cursor": {
          "ref": "7857b472-7e59-4042-a992-0621c4200c3b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f88f707b-bf93-48a6-b0c3-6cab9fdd377b"
        },
        "item": {
          "id": "5422036d-982e-4d25-9705-a9d4cfa3b50e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4f7d40ca-c4cb-475e-b54a-12697ecca957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b4c3a3-2566-4238-ba40-8f283c2ac696",
        "cursor": {
          "ref": "9b38c8c4-c8ee-4b56-91ef-019d984998b2",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0e3d492b-f58d-4e02-addd-e6c590e1cbdc"
        },
        "item": {
          "id": "90b4c3a3-2566-4238-ba40-8f283c2ac696",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6f582b5d-f877-4d9d-8961-9f1d2c2f5846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b28795-4233-4cfe-9c1c-b86844f4553a",
        "cursor": {
          "ref": "ac1f6144-89ea-4ebb-9dac-620eefb84683",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e42ca4da-e41b-4a2c-bb82-adf773a385fa"
        },
        "item": {
          "id": "e1b28795-4233-4cfe-9c1c-b86844f4553a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "57e15403-4a3a-4b0a-9a5e-560633fb54a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e50721-665f-4544-9d33-6062f493faaf",
        "cursor": {
          "ref": "d5a4f8e3-ee92-44bb-837b-fcff10fd552c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "027c05a2-8e02-4819-86c2-76cd29dbc539"
        },
        "item": {
          "id": "e4e50721-665f-4544-9d33-6062f493faaf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6307fe20-4714-4cdf-a8a5-3bc1fa25430c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f717a4e-7d32-452b-957e-fd299d407619",
        "cursor": {
          "ref": "7c1a57fa-6c27-4641-bccb-153fcbe8c1aa",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "40128722-30b0-45a5-99d1-0609e511cdd4"
        },
        "item": {
          "id": "6f717a4e-7d32-452b-957e-fd299d407619",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "882fb6f5-0b53-4a69-ba55-75c771a232e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67115d16-aea8-4908-a33d-f5e9a286c517",
        "cursor": {
          "ref": "542a7ab2-ee49-40bf-b513-e593819638f8",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f6c52ef5-4e9d-4330-a3f0-05f96b9f54fc"
        },
        "item": {
          "id": "67115d16-aea8-4908-a33d-f5e9a286c517",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0b8f828f-3358-4eb3-bc59-ca0e93f894d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936dcf3c-7a49-4f98-95cc-73aecae3bf5d",
        "cursor": {
          "ref": "e972864e-256a-4631-a237-881796536f67",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ceedb5b7-4fd4-4c1b-b335-a3c68c6c7d56"
        },
        "item": {
          "id": "936dcf3c-7a49-4f98-95cc-73aecae3bf5d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b3df5851-773d-41f4-bd16-47ce6a26dabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79159b6e-0759-4dd6-be23-97085978e106",
        "cursor": {
          "ref": "169d6503-3865-49a8-b71f-cc9dc2976fb4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "406fa471-eefd-4b90-b422-6638557f8526"
        },
        "item": {
          "id": "79159b6e-0759-4dd6-be23-97085978e106",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "93dd5b1b-53a3-41c1-b860-e501a6608607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95752e7-bc24-40d3-be22-8c211b5f3a08",
        "cursor": {
          "ref": "5eed3275-00f5-4b2a-9ab0-0d6a73aaac04",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3f2ac797-6e51-4f4a-af41-6415b59f74a7"
        },
        "item": {
          "id": "f95752e7-bc24-40d3-be22-8c211b5f3a08",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b501d4d3-a201-4d09-8872-5b6445916b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f58721-69a0-43b7-879d-f882d0e8e034",
        "cursor": {
          "ref": "e8660495-f0d3-4e3a-b478-e22d249dcf67",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "05102fae-17b4-410a-8c0f-df3164af4616"
        },
        "item": {
          "id": "23f58721-69a0-43b7-879d-f882d0e8e034",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ea880769-3a89-4b45-b532-957b5463bd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b99b390-e8c6-4fc1-acda-0f9606b4ade8",
        "cursor": {
          "ref": "8feee763-f829-42b0-ab68-5c73bc49834b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2d633b40-ed18-4db2-963f-37a0f618a48b"
        },
        "item": {
          "id": "7b99b390-e8c6-4fc1-acda-0f9606b4ade8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9c13f219-1db0-45b5-ba69-80dd8e3d7b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fc8069-7665-4e96-bd79-7bd7579b7104",
        "cursor": {
          "ref": "7eb39d2d-7a3a-426a-b2e2-7409a2fa3428",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "106b9d96-9c92-43c4-8114-a7bbf967246e"
        },
        "item": {
          "id": "42fc8069-7665-4e96-bd79-7bd7579b7104",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5ab06b32-2bb0-4421-aee8-4b7bcc2ed529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da56485-33f1-48c0-b902-ece1a14a2454",
        "cursor": {
          "ref": "4d8372e5-cc02-47f4-ac54-5b5430c9833f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "27ac6a9c-dbf0-4a8a-89c5-63aee2c48b5d"
        },
        "item": {
          "id": "6da56485-33f1-48c0-b902-ece1a14a2454",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "341a582b-d987-43bc-9c44-066eb6591ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c76b9bf-fe83-489f-87b1-779d57d91ff3",
        "cursor": {
          "ref": "1e345151-588e-4ddc-9dc8-da9e0d83cdc9",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7b2118d1-2e0c-4b89-b92d-089cae340318"
        },
        "item": {
          "id": "6c76b9bf-fe83-489f-87b1-779d57d91ff3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "281c96ec-17d6-4385-abc4-5472df12f29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358e068b-14ec-48eb-a651-a8c73da6e677",
        "cursor": {
          "ref": "838f85d0-ca0b-4fd3-bd78-81c38e10c222",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7e7081c5-8935-486a-9c75-5035f68f654d"
        },
        "item": {
          "id": "358e068b-14ec-48eb-a651-a8c73da6e677",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "36447bd2-a6d2-4a5c-944e-398a3353feca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b9c909-eaa4-4dea-bd4a-b8ba4d8afd4a",
        "cursor": {
          "ref": "254ad9b4-4bc2-4a28-b008-540e30388040",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d6a913e0-b139-4fbe-9d72-46d969258a0e"
        },
        "item": {
          "id": "e0b9c909-eaa4-4dea-bd4a-b8ba4d8afd4a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5d2b26cc-70a9-497c-a92e-da5cc214a48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a8e571-718d-4f98-86f4-5f327289d9f6",
        "cursor": {
          "ref": "e6dcaa43-5936-4005-9c28-e5d968cc4dd1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ef43348c-5b64-459c-8a13-7e4669b4ab1b"
        },
        "item": {
          "id": "35a8e571-718d-4f98-86f4-5f327289d9f6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "defee927-3ac9-4998-a689-2955606bf518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7c2f55-ac57-40e5-aca6-23ab03cd2348",
        "cursor": {
          "ref": "98bb1786-4118-4669-bb88-4d702dbb4049",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ff9b5129-c494-4224-ae03-25fd8b5b770d"
        },
        "item": {
          "id": "ed7c2f55-ac57-40e5-aca6-23ab03cd2348",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "688ab562-828c-40cf-9d0a-c63526ecab87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e14fe9-e38b-4069-a5b8-168b0b6a2217",
        "cursor": {
          "ref": "68e2a44f-6788-4f86-93b1-a0f7609e14bc",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "23354e5d-25d1-49ea-9f21-a2e324597167"
        },
        "item": {
          "id": "87e14fe9-e38b-4069-a5b8-168b0b6a2217",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "136a3da7-5b7e-417d-8050-a0750c3ebeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835564b9-690c-43dc-81d9-50fbfd30c2c8",
        "cursor": {
          "ref": "fab7d438-6666-41d7-8dac-47b3074e93d6",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f63b682b-0872-4689-bd2f-0e70732047cb"
        },
        "item": {
          "id": "835564b9-690c-43dc-81d9-50fbfd30c2c8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e14a11e9-4b14-4171-89a8-f19bd995aa9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad61da0d-0dc0-4b8a-9a52-4371b727eb4e",
        "cursor": {
          "ref": "3e6823d7-89b9-4830-b504-5f90ba899605",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d9be59c8-51dd-484b-a1b9-b755e5abe580"
        },
        "item": {
          "id": "ad61da0d-0dc0-4b8a-9a52-4371b727eb4e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "77f7d11d-ffba-4eff-9542-dac28b662428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6e86bf-a503-4b4b-ae13-bff44ee68faf",
        "cursor": {
          "ref": "a2b37f06-213e-4fe4-b5d7-38c0839d2130",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ded3841e-faf3-439f-af3d-69b9df71cace"
        },
        "item": {
          "id": "fd6e86bf-a503-4b4b-ae13-bff44ee68faf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d7a1d732-7ae2-43af-a54b-a44cb3b31dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26948071-2254-484e-9204-d3ead5b51f14",
        "cursor": {
          "ref": "4ca3a07c-2057-4a03-8a7c-6dd687fd1944",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "734c8481-148f-426d-8a7d-ed8cfc199de0"
        },
        "item": {
          "id": "26948071-2254-484e-9204-d3ead5b51f14",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7ca4f769-f2e4-4539-9a0f-4ea012b8451d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3416102-56d3-46f8-88fe-8897c3b5b3d0",
        "cursor": {
          "ref": "6c52d071-1c57-4d85-b37c-aa546fb87459",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9260970a-cb1b-4247-9ae4-2072f995f27b"
        },
        "item": {
          "id": "d3416102-56d3-46f8-88fe-8897c3b5b3d0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "617b1c6a-893c-41e2-ae59-b2b91eec9ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9c4f2a-f7fc-4493-afeb-734160242467",
        "cursor": {
          "ref": "e4dc8cef-dba7-44f5-8e73-c1d33670e4c1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "72038e55-6bd6-4b1b-a0a6-226881704010"
        },
        "item": {
          "id": "6c9c4f2a-f7fc-4493-afeb-734160242467",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2e058aaf-64ea-4dff-993b-c59e6f726019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd9b703-363e-4c94-b2a0-791038445347",
        "cursor": {
          "ref": "85cc2fa8-6179-4684-be3f-934634fb4384",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5552206f-f58b-47bc-8964-e9d931281af0"
        },
        "item": {
          "id": "cdd9b703-363e-4c94-b2a0-791038445347",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c0be9235-b2f1-496c-97b3-32efa2ce3fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8fbb75-f8e8-49c1-ac0e-b94e5f90421c",
        "cursor": {
          "ref": "2370171a-ff80-4684-8183-509b8126df5b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "09fb2505-698c-4cce-be2f-0b43eadd3fbf"
        },
        "item": {
          "id": "4b8fbb75-f8e8-49c1-ac0e-b94e5f90421c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b3834f2f-a75e-4067-b404-e313ed3bc5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79f8c60-cae1-4ade-809a-54c42cdb276c",
        "cursor": {
          "ref": "9b019481-d695-4be5-a05f-4a685ab06c93",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ced319d5-a975-4849-9114-96f0e0e4109b"
        },
        "item": {
          "id": "d79f8c60-cae1-4ade-809a-54c42cdb276c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c8d8ff1d-bdb1-430b-ab1a-b988b49ac8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f795801-d4f9-41f8-81d4-17f0e63c9c5f",
        "cursor": {
          "ref": "fc5e2fce-4816-46b3-a1cc-93ff87c0d213",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e71d2b87-b7ac-462c-b5ae-4004014f36fd"
        },
        "item": {
          "id": "7f795801-d4f9-41f8-81d4-17f0e63c9c5f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "afa0c9a2-f953-486e-8c0e-db1f0588c11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c6abe9-6569-42d2-b1c4-abd26a5fc5e6",
        "cursor": {
          "ref": "307c27b9-e501-4fa7-89f8-0e29ccafd382",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "54badd21-c708-477a-a69e-e74fe86dfef4"
        },
        "item": {
          "id": "77c6abe9-6569-42d2-b1c4-abd26a5fc5e6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "af0b772a-d46e-4ed0-bbdb-fae92fe99d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5acb74-933a-44e0-86b5-a0b1a8c4cfa0",
        "cursor": {
          "ref": "11872fea-a7a0-4349-9dd8-ef903a24a8a6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "88c8e47c-e715-470b-8fba-94da50b948b4"
        },
        "item": {
          "id": "bd5acb74-933a-44e0-86b5-a0b1a8c4cfa0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ec6a9fd1-26b0-43de-914d-abe911637c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c64ea7a-a327-4373-8282-ae7419f98629",
        "cursor": {
          "ref": "2f0eea67-9351-48e9-953b-fdf237cfcf9a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9c7f4e98-e17a-4cad-8dc2-7bd19abb015c"
        },
        "item": {
          "id": "9c64ea7a-a327-4373-8282-ae7419f98629",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d77b89f8-38dd-4bf4-810c-617706a70cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ebffe7-8a2f-4a73-9b59-d596035d7dff",
        "cursor": {
          "ref": "093fce01-252a-4125-9431-cf3acfcad882",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fd453c87-73c1-4b19-8b88-ba2ee2fd8230"
        },
        "item": {
          "id": "41ebffe7-8a2f-4a73-9b59-d596035d7dff",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a7d847ba-173d-49d3-aef5-e05105626f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e9e50b-caa5-4ae7-ad65-b7141cea1636",
        "cursor": {
          "ref": "5324aa5d-4794-4d33-9350-385814e13d25",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b2ce77e1-faf7-44ed-9ea4-517a7b4ab751"
        },
        "item": {
          "id": "64e9e50b-caa5-4ae7-ad65-b7141cea1636",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4ce08198-65ec-4b7a-9131-d8a3fcf21af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e48b22-be02-4ea9-ab9a-eb78f2fa59c1",
        "cursor": {
          "ref": "aa1e47fc-1a47-4352-9bb6-2ed071da747a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "483d4963-9380-4344-8e94-0873a4dff182"
        },
        "item": {
          "id": "47e48b22-be02-4ea9-ab9a-eb78f2fa59c1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bf310df6-4c61-4706-b9c9-cb8117b1bc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cce030f-d433-43af-85d0-335cd392b05a",
        "cursor": {
          "ref": "b4a46b7a-28b3-49eb-a687-809fe08c61d5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d4d7c7d5-8fc9-40dc-b23d-7e1698a5853e"
        },
        "item": {
          "id": "0cce030f-d433-43af-85d0-335cd392b05a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "64d939ee-6916-4b72-a087-6d0bbc54bd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641516ad-6ff9-43b2-bf33-d5918427e2f0",
        "cursor": {
          "ref": "8ade0cff-acab-40ff-98f3-112a10ae30f2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4b49adeb-e399-4f43-a1bb-87a2883ab7a3"
        },
        "item": {
          "id": "641516ad-6ff9-43b2-bf33-d5918427e2f0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2fe5669d-299e-44a2-8bb0-e67647643b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d91562-1791-4fdd-bdba-918df5abb589",
        "cursor": {
          "ref": "70a8d44c-17ff-40ad-9bad-222fc7df9f3a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "719f5b01-4f74-489a-8810-3edda36d4fa6"
        },
        "item": {
          "id": "f2d91562-1791-4fdd-bdba-918df5abb589",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f32d7ec8-c981-4cdc-bce1-e3f211b31639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc60493-d0ac-42a6-b69a-584c7d1bc766",
        "cursor": {
          "ref": "71e844f0-3814-454f-83b6-63ce5b1a5e82",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "75e03163-4fdc-4807-9cb0-9f43735121c7"
        },
        "item": {
          "id": "8cc60493-d0ac-42a6-b69a-584c7d1bc766",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f826f146-13af-4511-8f5c-b77132a8a1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42fe21e-6a40-4756-991c-ab6c4029a89a",
        "cursor": {
          "ref": "d417a76c-9c42-4de8-8e78-3d7022ce5753",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f0f8f05a-fe20-4409-a76b-53fabeab7163"
        },
        "item": {
          "id": "a42fe21e-6a40-4756-991c-ab6c4029a89a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b251806b-57e3-4ce2-ac9e-9a0ded1c3af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a676531a-7ece-4f26-b98f-b42e9769b16f",
        "cursor": {
          "ref": "222ab4b6-721e-4ee5-b3e7-2472e401dea3",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "00ea91af-c57d-4104-ae7f-c7ae55de5477"
        },
        "item": {
          "id": "a676531a-7ece-4f26-b98f-b42e9769b16f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "03bb9f47-fa1b-46d7-aff6-4b203fe30d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6c64b4-4da1-4c8a-91da-1a06e1b90545",
        "cursor": {
          "ref": "4e1d04b4-9855-44ef-9eb0-15c44315abf0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dc7f2f23-d434-44ff-9255-5059150050bf"
        },
        "item": {
          "id": "1c6c64b4-4da1-4c8a-91da-1a06e1b90545",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d5d464e6-d807-4f6e-8ed2-5481d039e6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f6f7a9-a62e-44b7-a432-ae3b582974ff",
        "cursor": {
          "ref": "83c67599-a534-48a4-8ef4-217c934d851c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "73ab557f-150c-44ae-8651-939cf6a31a18"
        },
        "item": {
          "id": "46f6f7a9-a62e-44b7-a432-ae3b582974ff",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a4b75374-5fa7-4a28-961e-54eabfaffccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac93ded-97e3-4bb2-8fc2-c5c290a91d7e",
        "cursor": {
          "ref": "675f49d1-2c23-4e81-b219-d07d5f271aa1",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a617dcfd-693e-4c3a-807f-c5db1fce4bce"
        },
        "item": {
          "id": "6ac93ded-97e3-4bb2-8fc2-c5c290a91d7e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3bccc435-acd0-4a5c-bb1d-a857e799ad5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1448c502-17a9-4d47-bd90-f92f50acc51f",
        "cursor": {
          "ref": "528ddb66-ba3b-4b25-b19b-ed03fc05bf46",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1e00b8e6-001e-4b2a-967e-cc47896b34b6"
        },
        "item": {
          "id": "1448c502-17a9-4d47-bd90-f92f50acc51f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "03752492-5ecb-458d-a9c9-ab2e416b229e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2019d36-c83a-46ec-9c91-9bcb73a0f051",
        "cursor": {
          "ref": "1b005c72-8578-4f5b-ab2f-2aee35201773",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d8ec9df3-b8c3-468d-8445-f0d3e98d2f19"
        },
        "item": {
          "id": "e2019d36-c83a-46ec-9c91-9bcb73a0f051",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "17e08dfa-326d-4524-b59a-de97f03dbd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e02293-cab6-48bc-93b1-fa5dacfaa36e",
        "cursor": {
          "ref": "8a83e273-0a02-43fc-9f04-160f3a934d81",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e74f916f-ed79-4fbf-b3c1-82a6dd536067"
        },
        "item": {
          "id": "b9e02293-cab6-48bc-93b1-fa5dacfaa36e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3956e8eb-b604-4ea6-a5d5-6a23841b1107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd1964f-6ab7-4b38-99fb-f03b90cc38ff",
        "cursor": {
          "ref": "e2122137-5b05-47c1-b3b2-d7e0173d0370",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4c2fd751-a152-447e-906e-e623551c94d9"
        },
        "item": {
          "id": "4fd1964f-6ab7-4b38-99fb-f03b90cc38ff",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "702ca44c-ccef-435d-bab6-6635fc022541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c08b25-0c82-4d23-8d72-9bc052a3f00a",
        "cursor": {
          "ref": "ed452ddf-2010-4361-831e-1ad413983637",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1bc61ca8-8589-4216-b079-04b6c62386a2"
        },
        "item": {
          "id": "c6c08b25-0c82-4d23-8d72-9bc052a3f00a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5648969c-8a31-4585-b0a2-f085d8a4c3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094cd9b4-d11f-40de-bed1-8977c0a8a8ea",
        "cursor": {
          "ref": "5d5d61aa-26a6-45a3-b861-4b73c4280f1a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e1f6d8a6-be54-4172-841f-b6e312fc64a3"
        },
        "item": {
          "id": "094cd9b4-d11f-40de-bed1-8977c0a8a8ea",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9b30fcb5-0f07-4e80-b03c-3c9a0a5f2e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1595bcdf-8ec8-4ae3-935c-821ecd83c441",
        "cursor": {
          "ref": "0c765b9f-537f-453d-9892-e6b2e835a3fb",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "98e88b9b-9715-4da8-b4b7-4e7c685fd0db"
        },
        "item": {
          "id": "1595bcdf-8ec8-4ae3-935c-821ecd83c441",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "857ba2a5-fd63-4906-9bad-944e23b4d4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a29636c-a56a-4919-ac86-26e224795a39",
        "cursor": {
          "ref": "ddd24444-7b1d-49a1-86d9-8f8c727877a0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a1dd2449-9627-41d9-bdba-2e2dd8785e3d"
        },
        "item": {
          "id": "8a29636c-a56a-4919-ac86-26e224795a39",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4bf9bc54-7758-45d8-af77-18e8ebd66646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd100941-3d5e-40a2-93f7-9270c08d2269",
        "cursor": {
          "ref": "86397397-8f5e-4d68-940e-9c56759951cc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7145f45d-e739-407c-bb7f-0c541ff04e4c"
        },
        "item": {
          "id": "dd100941-3d5e-40a2-93f7-9270c08d2269",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "10c3584a-c84d-4669-9a26-ee24d034fffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93108c11-5ad2-4f9a-b9bf-c19f4570994d",
        "cursor": {
          "ref": "49b47a20-4446-4a8f-8072-473390a2cd98",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e4e4a19f-b6c1-4f50-ba78-b23068732f22"
        },
        "item": {
          "id": "93108c11-5ad2-4f9a-b9bf-c19f4570994d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2bb81acd-2aa5-45d2-8427-256d85e76197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f81532e-437c-4a1b-bf38-61c6973c4cb7",
        "cursor": {
          "ref": "ddf926fb-a6dc-4589-815d-915c93d285f0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "831573be-79e3-4ae1-8af7-6c73aa3b0551"
        },
        "item": {
          "id": "2f81532e-437c-4a1b-bf38-61c6973c4cb7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4c68d421-b628-41c1-a220-8d3b2837c6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a60d013-984d-4360-8de4-23a3fd65c413",
        "cursor": {
          "ref": "6e5d71b5-90f8-4a59-b840-e433245260c6",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8dd2b91b-fbc0-4aae-98a7-a7abfad25b1f"
        },
        "item": {
          "id": "7a60d013-984d-4360-8de4-23a3fd65c413",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "00ab612f-7585-4310-ac12-24d043491e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b04bf87-6822-46ac-8e74-a082f39b6b6d",
        "cursor": {
          "ref": "dddc4185-6c15-4133-bfda-bc42574226b1",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3e84659d-487c-482b-8697-dbdaf588d77b"
        },
        "item": {
          "id": "7b04bf87-6822-46ac-8e74-a082f39b6b6d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8f5cf596-4bf7-4630-9a34-35b9159a5c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1d6e84-6077-47a9-9c59-e0bf2acd7e96",
        "cursor": {
          "ref": "af779d5f-c729-4dd7-8dec-11b1d51130ae",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a2096ce8-581a-4236-87f7-7f50ee15ae66"
        },
        "item": {
          "id": "1e1d6e84-6077-47a9-9c59-e0bf2acd7e96",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "63bbbd9c-b211-4e11-9c74-b82158d47bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f985fd2-5aae-444f-b307-7a7299bb6870",
        "cursor": {
          "ref": "bb819806-d152-45fc-9cab-969d859021fb",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2115774b-281e-4dfb-bc2d-e0251b92aeb6"
        },
        "item": {
          "id": "6f985fd2-5aae-444f-b307-7a7299bb6870",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b89f41cf-5878-4ab6-8878-c155ba7ad418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee604709-970c-4402-b5cf-7dcb4237fda6",
        "cursor": {
          "ref": "741e681e-4f65-4a1c-b03e-b15414fe37c1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d7e3ca4c-c0e4-4b31-9b44-43dad7e0d391"
        },
        "item": {
          "id": "ee604709-970c-4402-b5cf-7dcb4237fda6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b19acc55-6d92-4fd2-b0d6-50c04d2f4c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aad35ad-5f82-4d6b-a439-4b921684da48",
        "cursor": {
          "ref": "04f58da2-46c7-4fda-a203-b04555aa2cb5",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a234aa6d-5a47-4ab5-95c2-3abea0825b1a"
        },
        "item": {
          "id": "2aad35ad-5f82-4d6b-a439-4b921684da48",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cb1fd9ff-6e8d-48fb-b228-7568e5b48f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9cfd73-db99-4270-a06c-550299e8aa2b",
        "cursor": {
          "ref": "289227c1-e198-4201-b782-f9f5ebff8e28",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "349e7b1c-e066-41b9-8afe-eb6023063d5d"
        },
        "item": {
          "id": "1b9cfd73-db99-4270-a06c-550299e8aa2b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0ae0a9e1-f0d7-4ff2-8826-8f0072bc86f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d175197-b8ae-461a-9adc-0565440e53e7",
        "cursor": {
          "ref": "5d0bf828-e339-490f-b093-71d370452c74",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a4c0a56d-f95f-41e8-9739-8b104ccf2e9a"
        },
        "item": {
          "id": "6d175197-b8ae-461a-9adc-0565440e53e7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b8577d1e-a743-4a03-8ce1-7424c3226de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c42926-8fe8-4595-b53c-34a6ab38fb23",
        "cursor": {
          "ref": "c7020c65-2ae7-484c-bc99-4a5b1ee2e4f4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "93cbe713-d354-484e-9d16-8a98f622e4ba"
        },
        "item": {
          "id": "38c42926-8fe8-4595-b53c-34a6ab38fb23",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "abc2b948-e7fe-4038-b676-bb415718e5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdd04fc-ac4f-44b8-b836-be4d766e1bd0",
        "cursor": {
          "ref": "ae3fa51b-095f-4aa2-a6f9-de8565fe68d3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ed731de4-351e-47f3-9efd-75f37129726c"
        },
        "item": {
          "id": "dfdd04fc-ac4f-44b8-b836-be4d766e1bd0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "43526426-bc11-4267-9370-2efa37863e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7628ed83-155d-4166-adf4-fb1012c43655",
        "cursor": {
          "ref": "f4af8b93-69cf-4a0a-9b50-9dfd30fbd981",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2a07a6e2-1125-4944-90a3-b0ff3e906aec"
        },
        "item": {
          "id": "7628ed83-155d-4166-adf4-fb1012c43655",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f5c00d51-2d5f-463c-be44-43e94c40a9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698999bf-4a4a-4464-97df-d1989be68045",
        "cursor": {
          "ref": "dbd5c90b-3dd5-4699-bdb5-e5f6ec0f7f8b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "819d203d-93a1-4eef-9854-38f0c79c172c"
        },
        "item": {
          "id": "698999bf-4a4a-4464-97df-d1989be68045",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c188bf2c-f87f-4277-a79c-b581b1fdd277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68100937-8c87-4bf3-a07e-7a0d5a03ad6f",
        "cursor": {
          "ref": "368be00b-b924-40d1-b4ec-a70b7666ba93",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "739f62ad-d5ff-4b1c-b398-ee3dc4571b1b"
        },
        "item": {
          "id": "68100937-8c87-4bf3-a07e-7a0d5a03ad6f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7bc76346-3e4f-47bd-bcea-589812aacd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aabf7b4-444f-448a-b217-098e00817259",
        "cursor": {
          "ref": "2c38015f-2407-4e9b-ae9f-151181691c08",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a210e057-5913-4c54-961b-b154c0618221"
        },
        "item": {
          "id": "3aabf7b4-444f-448a-b217-098e00817259",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9c5f9a18-707c-4d67-b235-b3eb4c999530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8513b1d5-4d6b-4d63-9f77-ccee7055f871",
        "cursor": {
          "ref": "18be98b3-2840-4e8f-acea-79ebc2fc4a2d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cbbc0a60-13d7-436a-b36b-46f2309bdf61"
        },
        "item": {
          "id": "8513b1d5-4d6b-4d63-9f77-ccee7055f871",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "16e9b06f-e54b-4a08-beac-78e116e80d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a72e184-e4b3-404e-af67-2a06a5665daa",
        "cursor": {
          "ref": "24902bdd-42a2-4565-bccf-a26a4ca30f3e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a8f7030d-9b5a-423e-b1cf-c2520570dfd0"
        },
        "item": {
          "id": "1a72e184-e4b3-404e-af67-2a06a5665daa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1d9556c2-a4a2-4a37-8091-c2577d83f8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ea5654-5aac-4405-88d4-f68936ec8985",
        "cursor": {
          "ref": "78ade15e-157f-4a53-95cc-c567cdaf11d7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "59b72c01-0579-4ff9-be70-af5ec489a65d"
        },
        "item": {
          "id": "23ea5654-5aac-4405-88d4-f68936ec8985",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "16653378-f92b-42f7-b0fd-85a57865557f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbba3a7c-0905-4bfe-a160-e3609c409624",
        "cursor": {
          "ref": "bd64dcb6-d9ee-4f3b-9e7a-49458204fae0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d7ad93a8-962b-429e-8488-42e73f31624b"
        },
        "item": {
          "id": "fbba3a7c-0905-4bfe-a160-e3609c409624",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5d62a643-1b89-432d-97f3-a84ad36c3c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22ecc06-91ff-49f3-b76d-512d57e637e9",
        "cursor": {
          "ref": "73de7ac2-2b60-478a-a16b-b17605f36f6c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "084b2445-397a-4456-8b81-6d0577b824ed"
        },
        "item": {
          "id": "f22ecc06-91ff-49f3-b76d-512d57e637e9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0cc7ed16-697f-4254-8901-bd1dfa9ef098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4db78b-1a0f-442e-b7c8-cdd6e2317ee8",
        "cursor": {
          "ref": "18ce2f42-fc30-4c4a-8254-0c09744892b2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a1f16954-31bb-4a81-b482-2b81f695f992"
        },
        "item": {
          "id": "2a4db78b-1a0f-442e-b7c8-cdd6e2317ee8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eb828fa3-eca2-4915-8676-bfe0745757bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5caa99-a4c1-4d34-95f8-3816944685fa",
        "cursor": {
          "ref": "adf276a4-56c8-44e0-beb0-e15ce92fb253",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9703b3ab-295c-4f18-8369-d00fa979ad0f"
        },
        "item": {
          "id": "4a5caa99-a4c1-4d34-95f8-3816944685fa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "230ab5a0-e37a-4031-ba18-88d36597410c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f053a77f-3c0a-42c2-81b5-45ba07141e8e",
        "cursor": {
          "ref": "b9578291-529b-4b99-96b1-52be59777d55",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9ba95e1a-ca49-48e1-85f4-c9cea7199ac2"
        },
        "item": {
          "id": "f053a77f-3c0a-42c2-81b5-45ba07141e8e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "18a6b6dd-ae6a-438b-8ad6-c882b2e64a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a33113-bc43-4123-98a2-4018411432d2",
        "cursor": {
          "ref": "e300c0a4-3162-401c-b1e3-1feb4ad93328",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1f1266ed-ff2f-4e8a-a562-ec8a7694857a"
        },
        "item": {
          "id": "48a33113-bc43-4123-98a2-4018411432d2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cce60b43-0f06-4683-9ddb-c21db12b9daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b71576-f944-4d65-8323-5856e1529fb1",
        "cursor": {
          "ref": "9b525d3e-43a8-4d6d-99cd-391d9e18a346",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f1e074d7-104e-4bbc-ad7c-127db841e119"
        },
        "item": {
          "id": "41b71576-f944-4d65-8323-5856e1529fb1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "478cb03d-35d2-44dd-8595-2cd7e3b3a697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f2ace1-eb15-4b5b-9ef2-65c234b528b7",
        "cursor": {
          "ref": "d9d8efb9-1427-4ed9-af21-869234246657",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ba3db4cb-bf6f-43d7-b398-bf8ddb05cf97"
        },
        "item": {
          "id": "b8f2ace1-eb15-4b5b-9ef2-65c234b528b7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "813e097f-f6cd-4340-ad89-83f1c42b3839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "692d6a58-5aed-4a03-bef8-84ea430828fd",
        "cursor": {
          "ref": "f7d77587-109d-4d43-b390-92950f4e7fec",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2bf3e986-9c2b-4db3-b390-2a203bf618aa"
        },
        "item": {
          "id": "692d6a58-5aed-4a03-bef8-84ea430828fd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "310bfad2-23ea-4568-89cc-e7b7e4dcde17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "5ad43540-6086-4860-abfd-22043fd71910",
        "cursor": {
          "ref": "642f96d5-89f8-409a-a003-cb0d92e18e02",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b909f471-6983-4d0a-971c-2f965fac4aba"
        },
        "item": {
          "id": "5ad43540-6086-4860-abfd-22043fd71910",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "db907b81-33d5-45c2-ba9e-1451f688cad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "932ad816-11b5-484b-b539-de891b66deb1",
        "cursor": {
          "ref": "d8368605-9007-4cad-8b0a-b1ef0c7b33e6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "20236f83-ccae-4183-87be-ab184b8b3cd3"
        },
        "item": {
          "id": "932ad816-11b5-484b-b539-de891b66deb1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "71e43773-de19-4dee-9dcd-9218c85a2593",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932ad816-11b5-484b-b539-de891b66deb1",
        "cursor": {
          "ref": "d8368605-9007-4cad-8b0a-b1ef0c7b33e6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "20236f83-ccae-4183-87be-ab184b8b3cd3"
        },
        "item": {
          "id": "932ad816-11b5-484b-b539-de891b66deb1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "71e43773-de19-4dee-9dcd-9218c85a2593",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c997b097-3965-4ccd-8a4d-f4f1c11efe01",
        "cursor": {
          "ref": "5f70f8ee-b778-4739-894f-66b64401c9db",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7d1c3180-3d41-4d3b-8626-700d42a14261"
        },
        "item": {
          "id": "c997b097-3965-4ccd-8a4d-f4f1c11efe01",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "768e001a-4e22-40b6-b84e-a0308e2036d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477ea6b3-86e2-4125-bb5c-029354e8c130",
        "cursor": {
          "ref": "5d2d297d-edbe-4cea-99f6-58553b3aa0e1",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4042b273-ee52-41a5-bb15-20eca7a43762"
        },
        "item": {
          "id": "477ea6b3-86e2-4125-bb5c-029354e8c130",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bd4cab13-7915-4f18-afe6-edc9508db598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}