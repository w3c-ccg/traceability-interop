{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9736b902-23a8-44db-a92c-4070f2ac1a43",
        "name": "Clear Cache",
        "item": [
          {
            "id": "69110e1e-7ded-4b43-a534-70e3ba0e3602",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29656751-cb13-403b-8731-868d8465b864",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a5411c08-335a-46d6-b240-f3a79e7ba94a"
                }
              }
            ]
          },
          {
            "id": "d42ec278-7b3b-4b34-a75f-a960f34615ed",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8201760e-6b61-4769-8f97-fd7823979eec",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2ecd204c-c354-4e5f-bd59-c95865af80d3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "efa9eac8-5b47-42c0-b5d7-d22449d25e66",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5d8a99cf-5c13-4728-ba4c-76849c1a2596",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a46fdd2-1055-4fd6-9cb5-6a06c14a333a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0909921c-e9cc-4d64-b655-9231d8b9fec0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c0fa459-9c5c-4a73-bc5a-604d21c60a77"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8db0c2ae-de2a-4280-97d6-e24885fd0c6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32ca89da-ec0e-4c8e-9a90-de0abae0932e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cefe012d-c961-4c2b-a05e-04a79e36019d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75e5af60-3520-4b20-a49a-784c95b98c02"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe90a230-2e0d-4b81-a6fa-801cf2d3905e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "09c699a6-6cf3-459a-9885-7d1ee73641cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "110b82ca-94c2-4bda-abce-e4a976ce4ec9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afc47b7f-8a19-490c-ac7c-b84fc7621327"
            }
          }
        ]
      },
      {
        "id": "d6131d28-3abd-430f-9182-0964eca6912c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7edbd574-be29-421f-81c1-c3ef862e1792",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73a6a90f-e03a-4e4e-b9b8-8e27dd18f0b4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a00dfb2-4ef0-416b-9bfe-fae5d17b4aa0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c495d69-7890-403f-8f02-d32bb357fae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96c9d4bf-6a3b-4b78-8699-eeed5c3075b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c30aa8a-973e-425d-8ee6-9d4948702d29",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a284c4a2-aa06-4810-bcec-d50b3714d26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70f1b64c-df9c-448e-8077-f2dcd233b0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae84eb0-b93a-4979-93e7-64ed610b34cd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2e296c-eedf-4666-8cba-6c2cfe14de77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75b634c3-80ac-468d-bbc1-78c3e51cd84f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "595241c5-07f0-4a75-9398-eff8fb83cb87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfef0631-e7ce-45fb-86cf-f901792fe0ba",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67c2df4-b9b5-404a-8abb-34a611dddd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af7363bc-e029-4b83-9013-3b500faea58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdc6357-b14f-4dce-844c-42e26beacfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c25b1f3-ed86-4ad9-a967-f9b983f8b709"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0fd9c244-3d69-42a7-94ab-5aa62b7fdd84",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cba1e684-9c7a-4806-898d-4f2b2d6fa965",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0a63f55-2925-4822-b68f-143af914ca58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fe687aa1-c969-4f06-8555-4794169e01ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "277a675f-b56e-44c8-b1fa-7f9ed9825919",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ee6ef9b9-ed05-40f2-86f7-a690ad4097a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39c7d19b-119e-479c-a712-0cc5266af7ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d7b058f-45a8-4b1f-a7aa-2dd0f2d3b25d"
            }
          }
        ]
      },
      {
        "id": "71c3ce04-d8a4-44b2-97fa-a1cb865335b9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c65184fa-d43f-4bf6-b67a-351a8ea597ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c998a32c-b4e4-419b-b051-31dd62abd3d5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4fe9037a-fe28-4db6-92ce-09adadac6cfd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27d55af-4cfc-4320-bce9-857312ebbfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef385f7-466b-4e49-a152-76b821e5a0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13b64ae-9037-4a1e-877a-217ffd58b560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "840bad71-ca4f-47b9-9128-c0128e984c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfd61a6-8bcd-47d4-abc7-25da0d6069f1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c718d3a1-d100-4377-890b-89f719560f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84af692b-56f3-4ec2-bf1f-1e177075869f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c390c0-e164-4250-9c23-0ccd3d7eb16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8080cf9e-332c-4d17-810b-1a97193013ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfcb04b-ac68-48f3-8452-2e29448ff44c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19ff4e8-9a65-4e02-8992-870b31d7ab6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1974c67f-9e50-45a7-b982-3818e2c3d1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c42af0-d2c4-468a-aaff-fd00a8647eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f941d8c8-cafa-4299-bdff-dca09ffbb15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae5d41d-062e-41fe-aa2f-077b4a4f8d0c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3bb7c0-a952-4f4d-bfc1-54a7ec9e6d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7164ae-9b63-409b-b425-d2d5522f52b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb471678-c181-4b8a-b83a-c0f59ce27313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b8e2cb9-0c80-4f07-88a7-e686e2268fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc63d5b-5f84-4f24-b37f-d5501c1f5e0a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643f0624-1989-4d66-a38c-3a90e84e2075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003db69f-2d9b-4e59-9554-7c1e503bf800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e530f25-904f-48d3-aefd-e166dbf39aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb0ffd38-b589-4557-a54c-ed48f3e6c005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f963c9-bc1e-4baf-9bfc-ea8faf1ff560",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd319ba-b1a6-4686-9548-79245d2a0c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b6140b-ee27-4328-bb6d-701e37344564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f02cf8-1df2-4b28-a7cb-298034f06494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f63aecf-cdfb-418b-8fdc-55c4c8a58a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6293996d-8693-4075-a934-105c4a6e0a51",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58831e8b-88ea-4882-9b25-c5e8e7771754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171575a1-f8a8-464c-985c-f1702ae44303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d682834b-b499-493f-87d1-f1e964c81a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "897c1dc3-dedf-40c9-b485-c438fd909a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e916f9-44e8-4834-8bdc-757c83f809e8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018b503b-1515-4cc0-ae69-cfd2854bdc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd9ac5d-e95b-4c46-9228-e58e46229eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a476aaa-1329-4d80-a728-291b2de76d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "554b72f5-d780-4a73-b6df-dd87e1d0a816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9c9368-9e58-4957-86a9-8544f70a4507",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71bdd85-58e4-42e7-b68a-1550435b6656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759d9d6b-b387-48b9-90d4-a7e9d56a0721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e3473f-92f7-4552-a9a5-f287b48043fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "437f566d-949c-49eb-a86d-03173d96429b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a053484f-be1e-49e7-83e0-3bd9a03e87e9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec73cce6-ffad-4b6b-8685-73dc0820f1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b47498-6653-49f1-b43e-cb627d43a776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48147c0e-46a9-4628-a3b4-3e431e047e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5a7567d-f958-4243-84ab-ad5e70cf0b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c50e8a6-f76a-4824-a27b-e5aeac80bc3d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e961f1bb-49c1-45e4-9f62-22015feead13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa84384d-e3c8-4f47-a383-4b9eb8d83de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8afec0-c80a-4582-bca7-a36c37e32052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4725fc3-2422-42b6-82e8-31b2f70559af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b35f113-d52c-4bdc-8a68-635d06deb214",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e79ad18-b68c-4c09-b914-4247fa7805f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d585fd83-eae5-4a7b-998d-398dfc95eaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93942a6a-8058-4751-98af-f6ca4054d2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffbb9668-0265-42ee-9e6d-0d5d939c89fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb420ce-02b9-4896-b9e8-08f976b06d74",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a13bfc-0fc6-4863-9d69-4430c8d71746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631faa5e-7a59-4f1b-87fb-2f776de87014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1641546-4e79-43ee-993c-14abf19794db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6db088fe-9e7d-4b49-b882-ca9e4dbada0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2307bfa6-2f22-4276-a0e5-07a884d9380a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f684cce-5716-4489-856c-479d1cee96b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7f8580-a618-4f32-a720-0fac36661656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d191fac-ef8c-4c01-baca-22f19ce8b674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d3d107d-146a-4c94-91d3-b94c990e53db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2c825f-2a6f-4acd-9bb0-2b6745119567",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62eb48b-1379-4634-81b2-1b4c4b88da0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67864565-22bc-464b-be72-c9bff6e8b49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3534c8f4-a653-48fc-bd90-471e527fb236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "531e2c2b-b2a9-4b5c-a1eb-8c6482a59cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c832c32c-6d38-484c-9df3-9ca2d0347d31",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f39c1d0-09f7-434c-b647-6cbd6d216389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229e2261-070f-42de-b26a-d0608e9ac0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b995f5c-0c92-4517-ac18-6cf6faab4791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38602204-a3ce-46c5-8a4b-a60c1519c09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b157a6-5709-4901-9fc4-de9376c23106",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fecdcff-67dd-4b72-90c1-901f1dca0d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a364e32-4ac4-40d4-929a-4fe0ccac5622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac8878e-f9da-455e-966c-6401564e1714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c388ee3f-072b-42d5-a2cf-32ad3725187f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdc0dee-2c06-4c90-9131-45f36c1815a5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19eea1ea-1cee-40c5-899e-4f946dfc1a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f2eed8-48d6-4068-879c-8a761a852c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a527179b-3aa3-415a-aa0f-2538bccbb936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "722707fa-00d7-4960-ba67-a74e00e362a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e817e87e-a1df-42e3-9121-b70354abcf2f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ba7cff-3cf0-4c4d-8180-a724b95fb971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a2d637-6e38-46f6-b6d9-6b71420a5187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfc0730-3526-4332-8b91-d6483fb25fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae571f72-0e06-4e8c-8c6c-36f80d9c98f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef1170c-7058-49bf-938b-c5f35d66b368",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02ad903-123e-4f62-92f1-08395942ebe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8997bd2f-fc42-4dea-98a2-2caefa57f55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945bc28f-724d-4934-84e5-0394d48a9019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f79d069d-fbdf-4358-8e32-cff8640425f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd64906c-9b8e-48f9-983d-59e2a0db2bc2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc8ac3f-e54c-4414-9b60-2fbb80502275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce892ad1-1a8f-4ac5-8edb-c917eaac0f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51364a7-cb98-47c5-ae36-e22eb558f9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6aa3b08-0fa7-4c34-8eea-c95618969a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6136cdf-ca7e-4c20-8cd4-483728a09921",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8b80df-4e82-4024-a6ab-72cf58b435f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b68c791-c720-43a5-8a0b-eee95a2b882c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d75351-5903-46d1-b93c-7c86d2547362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "135725c3-56fc-4fe3-b4d0-487a77d4ad27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09539d5-7d29-4642-a7bd-9585de9bc97a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4211a28d-21da-4f45-af62-41ed1cfc6c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8511c766-c732-414e-88ec-699221d68608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81d82ff-dca9-4c8f-b4af-1a62a36d0d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d25ef1e-24d3-43c9-9d25-0603d6c82b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855c73da-8317-43c6-bc16-7d1f7d9f781f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a144399-c817-47b4-ac17-26944c692b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af41e48-f548-48e9-95f1-19b629ecac95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9aac430-1818-49fd-8064-38c876512a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a869fce-f206-4df8-be73-28be5ee8612f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b1543e-e527-4e3a-83d7-abdc3079f7d1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19405c9-114f-4a8b-8539-b1a7d9f09006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12f0c47-e1c5-4a63-bc15-34cda569dbff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91a5d91-ed5d-4bb9-aacc-a2955c446943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a22e7c0b-52e9-449d-a3f7-dff68796882d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d6ab86-9ff7-4e1c-bec4-b305ecb7fe2e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43960f30-2784-4303-8454-3381d8971b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268d9d9e-98c5-4ff2-8d71-2805b5c69d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1307117c-ccf1-4c33-a356-95286bfdf441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c08053c-f278-4640-a791-fff720b71ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534f9778-6bb9-430e-a559-9b4f1e8a98ac",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a482451-0430-4322-9136-828f52483eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb28317-2b12-4441-8294-742f7dfcbb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8af0e64-f0aa-4bb7-af76-a07d67c37afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0380f070-2444-4c3a-94b8-a936075a589a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e216523f-ed98-4550-8c43-acc7c967b5c8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd5ee63-0a50-4168-96c0-82e8d15e29cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b83e67-1766-4a12-8a55-66feab4c93a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da55ddd0-4822-4722-9d5d-51b07fc08ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd83be78-7d7a-4cfe-b9db-b95b93eb0a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd99fa1-bd34-4812-af04-408a60f29040",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c11a418-432d-4f3d-b0b3-6b95b21ba041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4a2415-e0d4-4f69-a103-13041c9986d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbfcaa6-b839-4247-a41e-e9633860abdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "620f87d8-eeac-4681-9d04-d30e71784ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5722510-65e0-49cd-b621-e7e64e06c9f7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bc3ffa-4b1b-4d24-9511-2a370bf06a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e53b7e2-ed2f-4559-bfd5-47831aa96f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ed1dba-1314-40a4-ae45-9fb40beffaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3db9b30c-64db-449a-9198-ebf9e5a3ee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedbc2d9-f763-4031-bd87-05b0f6de6d39",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbca653-8bc9-454b-9a0e-e6dc73801c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37368cfa-0116-4379-8605-fea67341dfe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ed50b2-381e-44e6-aaca-ae3f5d47edd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71db0f7a-1773-4433-8939-9d891454426e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f8ed39-6c62-43a9-8b0a-0044117b4309",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f76e25e-fc64-43f4-bc6b-9f0796ca3a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542968b0-ab6c-496d-8051-7f28d9c8b612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69946450-cc00-4f48-9e3c-a7273faf8e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc10236-a8bc-4115-a5ec-57667294085f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50afb56-fd76-44a7-ac2b-e0b30b78dd67",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2827bf-6207-4c53-9d00-7cec51097242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126d487c-aa51-4007-a718-566272d9edd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2296448e-1bba-46b7-9b68-a6f43ccec3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72b600bd-59fa-4de2-a004-b59861d95f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3fd7fb-9eb7-4f3b-96bb-d58f27d0e71f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f0d8bc-d3e7-45e7-839a-dea749e3c16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71b989a-aae8-4911-802c-d213ba2d9d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565ddb4f-b43f-4792-9178-9a54c8980747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba2af30-38e0-4cb2-94fa-befdea56ed26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b76ace-bdc6-4b8e-8f42-fbf6bdc8600d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a4d6ae-09c2-49c7-a95c-40008f838d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee4f733-dda9-4192-ae91-291be88c9247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9d5aec-5cc8-4124-a31d-eef8048f0eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "032e73ed-fc48-465a-8dab-0238603544cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3111b5-e9d6-4ae7-8da9-e57c85bdc2bf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278e3fbd-5f49-4b40-b490-ff56d39bc6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8db83e6-3fe1-4310-9159-003fbcd4a919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39cf2bf-bb51-4138-85cc-0bec00f06ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d96b330-31b2-4e92-a8ee-8daeeacbe36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0753dd0c-6f8d-49b8-b274-74b04b4591c7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ce475a-5e18-42ad-ad21-47da4c539739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928eb747-9b1a-4b53-a9ea-e5863ae7bf27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1abba8-5c22-496e-b6d8-6042c925a95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d71482-006a-4392-8dcb-f70c3680d2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e70f78-9bca-419a-bb10-40794779fa95",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e91436-3ecb-4870-8ef3-19ebf0e65933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f09421f-f2aa-45f4-a5cc-948ee364c5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b755059-abd9-46a6-bdbe-678d392bb0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "75cc0740-fcea-47aa-919e-4a388b92bde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e033fa6-2d04-4462-8b6a-61fa1d9d5694",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c598711-7263-4823-9747-ea2a3236f517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644159a4-5a40-4d16-ba42-8d0aa9909923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93959500-9099-4f2f-b67c-2a19700c5bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1948cd8f-2fdf-4528-bebe-c2062761dd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e482c940-078a-4622-8cb5-4962d304496c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d73302d-2600-4b6d-9424-2d30448c155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f064d968-4d55-4b9d-8ce8-4f3ef825cf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0d2b00-a2b8-4294-b9ee-5dd3b5d1050a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff4fcb8-f0a3-4b73-902b-f30855ce5b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defdb64d-32d7-4c3f-adf2-53c3f822981f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acc86b4-638c-4ef5-80b5-0cc57c5c1454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2535d8e-b333-416b-970a-3880fcc81ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3596da8-958f-4b26-9a24-08d6c753bf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a4acca-cd13-4af6-9fd4-4d2782626b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1866045e-9de5-421a-a28e-a5d2996d8513",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25801519-294f-4f04-8225-b7b3f054e476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfc91c8-8c04-4d06-9d6a-ac5c830cb0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555626ff-9602-40ea-b3b9-43e669e5f4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "20eb4825-2b11-421e-9708-9101111501a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd307c8b-12b9-425b-b329-50152fa62d15",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92b4b0e-4350-434a-84c2-a051d2186dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ba9c2b-0a99-4d9c-8763-aed358d6c70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8769a108-d1d5-470c-b986-54400c8eb572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bde279a-1404-4a44-add9-1683db0f465d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb97272c-7060-4840-ae4e-90afd4482aee",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb76c46-274d-4ede-8649-6ddf0ea7109d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bba850e-9f7a-4770-98c3-cbe9424857df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a5b54e-d4fc-4d30-b30a-906ae1205313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "69a09f5c-202c-4d4f-82be-e0dfb91e022b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16f1e68-ff52-4c9d-800f-1aa12d5bd539",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379635e5-0ec3-4ef9-89b0-b7603bc9b47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64129577-bd70-42fb-b8ff-6a0efd971171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2011fd92-8495-4ce4-bdce-657687248c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "661b41d6-bc02-4c78-a1ef-1fd83536fe0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddb9eb6-ea01-4672-9747-129c10ab4c98",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ab734f-181a-4523-b5a6-f69d27de0f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbb7a93-892e-4f14-8261-82b6bcfe6244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684c1676-2946-47e7-9364-7a669fc928fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9704a240-6acd-497c-b282-a68cbf78c959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761ac61e-d30e-48aa-97b8-353627fdc552",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38361e86-3926-4f48-8d48-560acf234dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be036cc2-2198-4a3a-9041-2ef3f3773902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a316634d-e18a-4826-afc0-7dbe510c6294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3216d915-0f21-477c-b3e7-2123c8eddab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b495d3f4-7f82-473b-944a-a919ac5ab7ca",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd6300f-091e-41c8-9376-788cd459cb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cdc74f-2af0-43c3-bfd6-0e7ab69943e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ce9c34-7770-462e-a2bf-e99667907654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "081138a7-39f3-43c3-8ebf-7176029d1da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65d809d-b20b-4f89-b581-02ebeb390656",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb132efb-ee68-4658-8e30-9dbecaf675e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b514d9-84d6-473e-b879-0f15dc2b85fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b191637c-b143-49f9-92d9-fadfc98b91b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3425c964-a10c-4fb4-a148-74f06b2c2079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bca7e96-cf61-4aa3-ad50-ee80353b472a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53702be-e978-42f1-9d84-c6cc8da8d3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb58c1cf-d617-4ce2-8ed3-cc6ec1e84615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf43a31e-bc75-4ebc-aa36-f22bc3566405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25bdb3fe-ce87-4072-bb03-48a6411cd46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e50538-d878-4492-b7db-3af04582c6d7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e958f72-1785-4188-a2b7-1089c4d94ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e9f2e7-34eb-4708-9729-ecf6e619d9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e2c84f-1925-4442-9622-2b9f32e92608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3cc3c2-95c3-4362-ac9c-26937c6ff570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edc475b-f928-43fe-a59a-2dd170fcfd36",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9d2fe8-baac-4108-a0c0-33d567e5c49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2539ab8-3f66-41a1-865c-cff8d1351284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853cf55b-c7cd-40e2-b1d6-e89728246b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b48dc7e-b686-4b1d-8b86-918e33872e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f40885d-031f-403a-a7bc-35ce29488033",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249b5892-c701-4ff9-9ccc-8eaacc4e8ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458293b7-2fd5-449b-a312-e3a9206c13fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fdc7f4-f849-4268-b867-d86d9078d77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e1ef0d-aeca-4845-9cf8-3365bd4cdbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e05a3a-e11b-4e74-a833-c550b3854ef5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a65b82-dbb5-44bd-82b9-a88709c16b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1429a7-7d18-447c-b124-36cde3c1217a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198fafbf-25d1-4467-8919-b45057a50295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd6d239-f722-4e2e-8468-e291d430fa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e260b8ae-9fdc-46df-ae49-aae2babedb74",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e69c310-b7cb-4bf7-a255-718e23a39816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5d3c23-3fdb-4a66-8b3d-a4746978d915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a84414-f7ac-430c-b31c-3a64bd7bc85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "645e5de7-4295-429e-a4d7-d31c13fa857e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc15355-1fdc-4822-8a8e-0ceaf52a5a01",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbfacc7-5689-4c2b-8a22-568d47effdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6afd1ad-2fc8-4201-9fd6-f6ddc8782ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d66899-7ad4-476c-aa83-988e47e4b6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd0eeed-9446-40cb-be28-e84d17394953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a08016a-42ea-4872-882e-7d9851282876",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4b7b79-9dd4-47e6-87c3-271df64b51b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998a892c-a003-478e-b5db-fd25fefb43ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a4a607-767b-48c9-a27f-2fb9375b5cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f776100-6db1-477c-989f-40831eba22f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecccc58-5dc2-4dfc-98d5-c55acbe9ad7e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10445ca-b1e0-48d0-a24d-337562fce5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfa4b7a-7696-4085-b439-381b39ab2169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2525c25-0ca4-46ca-86a3-d9add81b78e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eec9bce4-8249-4fd0-a5ec-1a2fd01b0bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d828423e-318c-40cc-a8a8-aa5fe0b0e379",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c83f56b-3350-468a-9bf2-469fd04fefe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffa1a51-9be3-4320-8ac2-5a93882e310a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae405d6-df68-4d90-8a44-5ede37123755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "86bf521b-63bc-4170-a2ac-6364f285bc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d38ef29-9fed-42db-a8d9-ede2f7fc43f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6390cad2-fd17-47db-8471-8657e7db87ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672a98fa-0b96-4aae-a069-3eeca197a4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23517d39-ada2-4a9f-a540-16046ba2a7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd18de77-1eb9-4b70-b215-d9ea4d42fdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549d164a-5d9d-4bf9-8387-fb66426a358f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5d01b1-199b-4fd5-9edd-a287e25a6b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7de12a2-0224-4cd2-aa37-af77febbc36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff581132-46c1-4290-b83a-ad907fc1ec5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c87b0909-ee88-4bf8-80d6-f775ec79d7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20032ee3-6022-4edd-a838-ddb2f2ac2e79",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648c8b49-881e-4a7f-a43b-9b4ea76ef988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7e9fc2-1866-4050-a8d4-1a25fe7ebd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa857042-c2eb-470b-aa41-01778b4ed18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8351812b-3d16-4647-80e3-cd07c31b9037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db94766-8ed3-4867-90f8-274e97a0f2bb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5765e7f1-d4b3-4f24-88bb-af3e4c3cd723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62edd9cd-3c07-49cf-8caa-0b7b310152ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1107932-1e68-4daf-83ed-8afcc76a05c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "242b3ecd-e322-4ad1-a7ec-07cf375d0bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61703c6e-cb77-435d-8538-24bd45d4148b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11af325-19cf-462d-bb71-fc265209e99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6bd98c-1992-4a0b-8936-01c8922f60c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be2e94b-a4ed-4b92-82d7-6002ae28a976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb02ad9-af11-4f39-970d-ea6ee0b1ed9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d8942a-fd6d-48e2-8c82-69b3c45977c5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649b0bc8-1274-403b-9e92-9f92032106fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b32618d-d961-4e57-88ec-2ac3ae3b741c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4994e762-2f4e-4ad0-a5d6-b6acec5fdf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5856067e-0300-432a-bc9d-d8103857f518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29f4683-f5b7-4056-86bf-fa1d970b3584",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693a71c3-8be9-4547-8b40-eb970991860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19ba869-50d5-4524-b6e5-c9156320aa21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b7f46b-9ad2-4590-8df6-68a6fef2cef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "676b0bcd-a85a-4369-8551-1ebb7c9d2259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e89402-80dc-44e7-b093-f93278f3c5f2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93656fdf-f2b5-4caf-afc8-8fb50ffc70da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b82fda-8576-4a88-8b5d-3c5adc0e6b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4c5b64-416d-449b-a2a2-df2d75d51c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e74330-6b75-42d6-9d25-5b38dcc4a2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233da76a-38b3-46df-a631-de4e10a7b54d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e5607c-21d0-4f16-8d56-aa74128ad936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0fb1f4-5438-4b79-84b1-627748211826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bc51f2-9472-46c3-a94e-bf14534570b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a109ef7d-dd8c-4744-816f-b7e3b2b6e3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1186a2-c4d4-487b-8876-ef1278c8ddaf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf793683-25ca-4b27-8cd8-7962862e66e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1fbd2d-cd60-408b-b734-f8a79dcbdee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382d660d-c047-47f1-a6be-a14bcbefae25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "048d37cb-421f-44eb-8335-6456af9d211d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031824ef-d964-49ca-b0d9-f9e3b30a0500",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8efd57-dc43-4c75-b471-c6be92709675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716a6249-7c33-46e6-b949-c31b4571e42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c65f35-8d9f-4770-97da-275f2c1b4b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "949f246f-b659-4f65-b720-29fbc19ffefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77176c1-d73e-4b5a-88a5-2eed1b039d9c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a15fcd8-3a21-41b9-b0e0-6e20d193c481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4813de0-5098-4821-af63-e13f0e0bafa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93c15fb-bcec-4591-9efd-1308a6666ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5420af-95a3-464a-a469-b92045e245d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dbf011-7c1e-4120-8f8b-c06addce5349",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8ca079-95d6-43b6-8672-db657c688007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4de942-2352-44c7-bb8e-1471d8bf719e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51049f95-3def-40cf-9fc7-0f40d64955d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d413169-f7d4-4ab8-bd9b-891768a6fc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4deea09-405e-4fbd-afd5-7d94c65700cf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afef8674-717a-4f7c-bf42-c3057f0f560f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6346a9f3-2a4b-4718-8ca8-cc018eab6d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52614731-1670-4f51-8251-b48eee3e9ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "885b0593-f144-40e0-b624-e01d225324ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2528764-81ff-44be-997d-86b1abff4763",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86938f05-b3f2-48dd-a2d9-cd5d7b74c2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c724681c-8646-4787-812d-a7b98b4bb229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed387104-aea5-4438-a679-32ab2f1069aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dccec2-9eae-4edf-bdc7-28b6b0f259d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3acd13-bba5-4789-a0ce-0966114dbddf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d51ad5-a37e-4181-874b-daee5def8629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dab830-0b60-455e-bec4-b294f017318b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f794d4ef-34b1-493e-85a6-3fbdcb41a4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40590248-6567-4cf2-bdfa-cef1912fb8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f70d15e-895f-40a3-8313-03bd569cd99f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafe00d3-0afb-45cd-ab34-4aa199364f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb76716-e93a-4dd4-9924-1f3620b5d33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcf21b8-1ab1-4889-8a8a-a2a106b9b710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbac6ab5-e387-4213-9d55-27bde8618e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b1352d-51cd-4fe8-9210-b5c79bd313e1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d11154a-74e6-438b-8691-aabe3ffc03db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c91aab-e9cf-4c78-b3de-776d090d7b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2904c879-93fd-4e94-8431-47c2125110ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1869f28e-2167-408d-aae7-2156e8ee6243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2311961e-a7cb-40ad-a56c-b79527d3a694",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c766cd34-f17c-4723-ac74-edaa33aafa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c540b058-d016-4f3e-a1a2-23e49daccb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0516915-2a2a-4267-be43-863d3df4bd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b65e90ea-be81-49d2-99ea-c45502731ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccd988e-06b1-412b-8971-765ec518e5ac",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3949b4cb-6235-45e0-852b-e08fe8f94258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcc74ba-902c-407f-b140-8de708a344b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa76e94f-e91a-4a3e-b03a-dc782b19dc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae75ffe-d760-46e8-a36b-dc64345d15d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81a1f00-7eca-445a-b45a-506c699946e8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b6a1fa-9eed-4189-b407-b0ef725a00a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e469d5ac-3c80-4004-ab81-60f7773a5662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a467d1bd-46cb-4ced-8c29-70549bdd894d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f399a4a-402e-41aa-8c0e-1532af9b2b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0537b070-8cc3-4efe-996b-e26417b046d7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d652ca-871b-40cb-bbcc-2cfd0354f5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d3e5eb-630d-4dd0-a1dd-299bf60264f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c10b98e-8920-4f62-a0b5-ed4870991f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a558ed-4352-4a4c-ac51-d4477b3ac8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acfb684-4fd4-41f1-b66d-2feaf908ad7c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fab0df7-e151-4b05-a207-037c07b03a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83233f0f-8c4b-420a-886a-9439f18dadfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc66e8d-f742-46c1-b689-0a8ba10e1cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85969d8e-2340-496d-a4d0-60a41f842bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea182a35-4e10-48d5-a3a2-1f2d3435e210",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bec0e3a-6b0d-4443-9b55-90caf2a658ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2283b00f-a651-49b3-a363-04f17633064f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946da702-1eea-4500-ba3a-72ed23e96811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88315b1b-0a00-4756-ad5a-4f2cf1dec4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3c1a72-6d29-4fde-b240-23ebe0af35ec",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9daebf-3cb8-45c2-ba60-cb4af4ca0098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cab16e3-098e-43a5-a1d5-aa996b365edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b303c8c7-2d45-4aa8-bb0e-0dbde164c08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c2f05b-6c9b-4f20-805f-e8930dde0e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fe7348-6f93-41c8-a792-bef26114650e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd33c30-4712-4b82-b171-6217a7b0cfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4927e8e-c8e4-42e6-8793-ddf2f6d61990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1381bbeb-02f5-445c-bb1d-fc149a007f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74d9790e-1f15-42d3-bced-3aa392224fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd07d82c-bba6-4eb6-a6f1-8800d9184e04",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88855924-1051-4175-b990-2df9867506d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c2d375-eca4-431d-866d-1f5271d1ca03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75501a31-109b-4d3f-b3d1-a98f16c24d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c387059e-c0db-4e6f-aad8-72b1f7563dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9055be64-6e74-4b4b-be33-23382f169a87",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e9868b-32db-4a27-af30-63acf9e1ef89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b702068-3e55-4723-a238-57fdd2b2feef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453cad4b-dd12-450f-9b1a-ae5e50ceef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c487a323-7f23-4a09-a8ec-975ba63ad5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983c0294-9ecb-403b-b000-80d41ad43f51",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1619a78c-974a-46ef-ad2c-1d67cac4bac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fa993b-fbd2-4748-9b6e-90fec41800cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c55696a-81f5-498f-b1bc-1b39b9941528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "44adf80c-abfa-4604-aee0-31e0c35a9d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbf65b4-32c7-486c-bb13-b8cc84b059af",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cc4379-3841-4698-9f93-004f03ffdd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9564ab7f-42b9-48ab-bc97-cb135c14a900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825ac0c6-225a-4524-95ca-7e08d3dccc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "05683fbb-fe4f-4923-9239-1994f2f078e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f5824d-83ab-497c-81c0-3eca974c5b05",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6000bf5b-f7bd-4181-a648-3de8e961eb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7743b008-f564-4f63-928d-dbcaf3a4fe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4e7c7f-beb9-4689-81a3-7a150a347d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6044bd-936d-4a31-8b42-68d19a94db16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d66a49-6214-40a4-afab-77cf3e83c349",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e7fce5-b3dc-483c-84b0-0c1de226ba45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a541c6f-da67-4b62-8d69-1a3c4712f405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b440fbb0-8700-4a36-bb73-1ec5d51769c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd640d4d-15c6-4446-aaf2-e45a9d4e16f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94588b55-8736-429f-a8ee-dfbbc00605f6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a274fd1-52d1-4dd4-97f9-daa39a26e83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9f72349-7e1c-4934-849e-ad15ed6f4864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98d35df-40e9-484a-8ec3-7633d2ffe64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6915f0ce-4e86-4334-82b9-98da8e01ea6e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8b284d6-7a71-4f1f-8d14-fbf05fbdfb7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "841b486a-8386-4705-9e64-1c56c6a03dac",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d8c7d5-a2a3-4d1b-bc46-35f098e7ce83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17d8c9df-2e08-48f0-9903-3b0a58411f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec07d82-7cf6-47ba-b75a-35c2441ba56f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2dd036e-4495-40c1-a3b1-2b8a19477766"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3663f699-80f6-4de5-8d3f-d2a1571a00ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f26fe99-2674-4674-9e47-9c1553168f72"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25c69dad-0002-4f3b-826e-fa3ed1e4510a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91ea0c41-5569-4763-b661-b5e8bc2737ad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "24fb2931-e5c7-4ccf-9b1a-d7176cf9c919",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc8b7ec2-6a18-4945-9b4f-f361c7272ffc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37ab9dbc-196e-40ff-af4d-bffe4f238575",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ea29622-9964-4a27-99a7-8ceb0bde08ca"
                }
              }
            ]
          },
          {
            "id": "41b8fe48-28a4-4d22-b06a-28818776ec8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd2a534b-39b7-4eb2-96c1-b1dc39b206bd",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fd9814e7-48a1-4529-956f-4a24d1299d34",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611b357c-863a-4e43-a8ba-b7154e4e9844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d688b82f-2c51-4dc9-955d-ab53f3979eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0fc1e1-6b30-495d-92f4-129ab0114ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c55137-1828-493a-9fbd-fbc49e9aa51d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8ef9315-56e2-4ea2-9713-d8e58e6e41b0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0578a7a-8898-4907-89ec-f792855b0765",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f41dcbb4-1607-4a68-ad9a-d49992289ab9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56691d65-4afe-4963-996c-d2214226b68a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09ef1b28-5877-4664-93ec-418bfd08cfe4"
                    }
                  }
                ]
              },
              {
                "id": "b9de209c-4971-4c98-81d3-c6cd000deb6a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "673ca337-0936-495b-9013-bf040daf0f5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4eb0c67b-7e04-42b5-9f5b-a1a883c5cc71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad702adc-850e-4b40-b49e-c91456979990",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3dc74b81-11a8-421a-9fd0-88a03c92eebd"
                    }
                  }
                ]
              },
              {
                "id": "70a22431-978b-442e-9f16-0376accd77b8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ac29449-d2dc-49bf-84a2-cf12a22e3432",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2031c3e-7c2a-43e7-a30f-a6bee79eff05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c22d3fb5-7a3e-4938-b221-4883396cafb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4c114e1-10e6-4ad0-8563-7121e97e478e"
                    }
                  }
                ]
              },
              {
                "id": "4c0ba44b-ae98-4b24-9334-e829ad26858a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c26ead73-c9a7-4938-a9d8-265603608bff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a15efa6-3e9d-424c-8b22-b290973ee95b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a5bf9ae-ac55-415e-b61a-3d695473e246",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6062d7c7-d6f0-49c9-966a-daba90ddbdd3"
                    }
                  }
                ]
              },
              {
                "id": "fd82c191-aaad-4701-b368-fb302e005827",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06065772-0253-4cbf-9898-246db233a2c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c539d227-0e1b-43dd-9b68-95e21aed8d7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cae6b585-b0ba-44a7-b4bf-0f2988ed0044",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9804acc3-ede6-46fb-af27-62504d21cda6"
                    }
                  }
                ]
              },
              {
                "id": "a431881d-b1e2-45a9-a5b3-dbbb05ef91b0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2b996d6-3b78-4394-923b-ad88299e1e6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cde27f9b-9030-4f1c-9324-f1e9642d66e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d76151b-c124-4ba0-af39-2968facdd9f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5d8c2fe-ee73-4820-a060-4c14e739c46a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "161339e2-2d1f-4aa2-bb8a-8427a461f15b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6607062f-bc01-4cc0-96ea-3f3ede89974b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "395c32a1-c158-47e9-82b8-2c6c29fc7e27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9eb328a-9ffb-48e7-9cea-5e8b921f0364"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f072108c-e256-4fc4-8e47-f25740cd8409",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "723d237a-f05a-433a-85f8-fed410f70d8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4338b419-317c-49c7-94dd-f8711759bb17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b3ed2c7-0e56-47e9-8ac8-36cbedb0b753"
            }
          }
        ]
      },
      {
        "id": "84064796-e0ea-4220-b24a-d813a2241127",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "807853c7-a324-4a4e-ac43-e573adfadf72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83b9054c-fb71-4e91-a7f2-41125334fa9a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c36ba188-7710-4706-9a5e-722872c084b8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa6b103-7669-4353-865c-8ce6595dfacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd63982b-8343-416e-862e-5fb4acda88a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b917e0ed-006e-45a4-a5fe-1eaa0107bff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e79570-ab51-48e6-b97b-e374b9336762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97936d7-77ac-4e18-9785-c4610d3191fb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92830dd4-4f2d-4a3f-b560-3250c74c4c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73059dd8-1683-47e3-a37f-e305d62147b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5fb03f-b40f-400d-b63f-09fdfdb5c640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9fe61a-52fc-4fe5-9db8-019f8357b757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7f8d1f-b7e1-4192-9104-efd71a1953d3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b606b7b-6d8c-440e-a026-38a6acafc557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2b67a7-3e35-4886-95d7-65557ae0f4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17b740a-23b1-40f9-a1e3-be146e7ec1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0911d370-d80b-423e-8ce0-3a17a02c7911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d527c33-21b0-4cf1-af7a-27b3c8003056",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2da9738-2bad-401b-b046-733f701f4945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9f5e54-63bd-4cb0-8660-ce5ab152d4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9f7bfb-4c42-424b-8a10-b751f0f29a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "815c818e-fed1-4e68-9565-d8336587d9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934a0e86-4db2-402f-aafb-9d1eb944b6f0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95d3c15-9f88-41b5-8391-17421ca187ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cafedd8e-1c81-4885-a3d5-020695035442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da52bbca-aef9-4bbe-8b21-c40d1723d5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "497b7fca-882b-4063-a2e7-79db654fc6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17278410-af95-4dfe-bace-5044ac6a55fb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702792e4-57f0-4cca-8595-c0dde62cbe65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d4a293-fd65-47e4-9c3b-a128e6d39804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9699739c-1398-4852-a98b-6eb0f1bd0ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2d206d-12c7-49eb-94e0-74c3cd51a702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4568ee5-6086-436e-9d8b-ed5751464673",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d422121-62fd-49d3-89de-47de533d67c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99335ff6-7062-4036-882c-4c596b05c3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d56fa7-5c84-4dd5-a312-ec2914b4ef10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "746d6eec-bf3c-442d-89e3-14fd93fb3095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f338e92-2110-45c2-9d5e-ff27d048baa6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c55a90-95b1-487b-9a67-be20e035446c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01be5068-86fb-4675-bc10-224e2847b09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898548c5-e0d9-497c-97b3-779ce493b428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16f7f5f9-3931-4741-b2a3-3216cb76a2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba1927d-8f2e-448f-9592-7de74c78e352",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3046d02b-42fb-4129-bcb8-580ad45bab1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c193b904-c766-45d8-b3fc-7559f4c47042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31479e7a-62a7-45a3-8aa9-b4d75eafad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ed5314-8582-4c72-9188-ed01ca4167a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ba543c-3ac0-4741-82a2-addf124f7254",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c723b7-4427-498f-b795-504b780dbc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894315fb-58b0-4524-8c83-75a496ea64b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778e26a6-02b5-4988-8927-5e0d442140b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87fe4a81-4d7c-4828-ad6d-95e3589103dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52ea1f5-823e-46e1-a22b-0f124fb27fb1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e7abc4-65d2-4735-b6f4-37fdd5020d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ca2762-9eb2-474e-a2ab-3473d8f383e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780e3459-0613-4b90-b7ed-d46a3463ccb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f04c5b5d-1587-43be-b74e-bd2c4d8e0dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00241fc-981b-47f4-99a4-2a07af024f04",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b20c4a3-d333-4d21-b148-4bc9e3dbf682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec7cf6a-f9d2-490b-a073-ce067a75b893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51107bb-b26d-4ff1-aadd-d1fca77ff4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a23b7c-1b5d-4d75-a2e5-15f46ef0a7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2216f2d8-b702-4757-98f5-5a523a7a3527",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae05df29-cb22-433d-b8db-26e150eb4f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efa7772-5d2e-40d1-bdfd-d2919ae0718f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f666a4ac-fbf4-4380-93b7-e7a957229973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2a2930-1e58-4845-94e3-368f654893b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c8d9c1-d28d-4258-979f-ccd1bd9e42b0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cb5815-ebe4-4917-bf22-e6165b992f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd64a41f-9466-43e3-a833-d97c0d9e9153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e137473d-a7ef-49d2-8e84-6419db9f83fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "00976f02-9692-40a4-b385-454b762120de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1cc566-7154-4a87-8a36-87f331655ab0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2f506b-80ce-4f25-b02e-55a65e351471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70698252-2d7e-46c0-bdfb-9de42549886d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f40e31-a7b8-4a0a-ab54-fb90066b2731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "562860ce-adb6-4eae-87d7-313bcc7689dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d9afab-f1ee-48f7-89a7-6526a29796eb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796c4c8c-cfcf-400d-ad32-cff80d5b7bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f61f55-eaa2-4d92-8e62-17e8b63ba0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1f7358-a792-43e3-a1a6-d75e0d776188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "282c2fd8-0d4a-4dc7-95fb-5ce121c2c7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f35c089-86a4-41eb-a6c3-fbea9a2f1ae2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efba83ff-65f7-4d92-9096-e3b9227d5ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed00b11-d6fe-48f0-a9f8-ed0d99654843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a404fd83-dbfc-4d86-863e-f699a79cb349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee159cbd-6349-4981-b3e8-137d993b9bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00679e7-ed51-477b-93ad-15f6acf62875",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb6e338-856e-4f9b-95b3-25930ae39ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3ac434-c60c-4208-aa07-341384bd631a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e534bd5-e11d-40f3-841a-5593edce7653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfc6108-b9ff-4abc-a440-4886e9e7ab7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2adc81-ac22-4341-9007-0a4d8ef6ab0b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed9ce62-6290-4663-bf3a-9d4285fdc189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf54fd8-59a6-4c2e-8ebe-07e7aea0732b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c329da77-2583-45e7-abac-c8a3f0bd45aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f16610-29c6-4571-aaa8-0537d3e46c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15acea0-8fd9-4326-b19e-712421adb5cf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dec2424-56df-4d63-ab21-c7591a3a8230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d58aa3-3542-4d8a-9ab6-489d1bf60a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5991c510-d4c2-4b37-8772-b35cca652ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "161215aa-00b4-4808-b6ac-1fd88d118716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f82042-d463-440c-b871-477cb122e057",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f3d08e-659e-49b5-a422-3241ed1fbba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546f7c92-ba94-4aa4-9238-cba27584da0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eef3ad-71de-4b06-b8c3-ed795aed9049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26491ce1-0148-4be8-82f6-1ff5d1a2b89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7eae88-5f9e-4054-bf27-518efe27af72",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2b25a8-d687-4b81-bdf9-6d0adba68a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de9badf-b71c-49b6-85fa-084dc79c5a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c7d21a-62b2-4530-ae94-0f4c4ec9f7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0a713c-3e12-4f54-b94f-d19cdfed0fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06bb8f6-6594-450c-907e-d259552866d7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d54285-7e02-484e-ba65-c6f3086f7349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055a77d8-1017-4a8e-9171-a7de0d84c302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f62110-a77d-4cbf-ad8d-4c0364ef90cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5efe0a19-295e-4005-83a8-5539c0e73c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e4915a-0600-4391-ab6d-a710182ecead",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbea58ac-0916-450a-93e0-bb3e0c96662b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8cad78-2273-4eb3-b098-9fa973ccc1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301668d8-0edd-4227-95e1-1e14f3fb8206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af3a3f3-b31b-46f2-a689-e80dd811deb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b1654b-cc21-4215-a568-a2568beb60ef",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3007dc-2cc0-49d5-a625-005d6f1d2573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e002547-5f09-4057-abec-98455647105e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e45bb4-b9ab-4558-b4bc-670dd96cd8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1259b274-a78c-4c7f-98ad-e8b295ffbaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a96c5b5-7298-4c94-ac16-5c8b9c663df9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c75c09-486f-423d-afd1-b0dd8378ca39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d576dda-3f53-47a8-be01-7b9e620ba1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd379122-01ac-4898-8163-8b4e1f1ac8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8cf753-9895-40ad-b3fe-16a9e17d68cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8d0285-32f7-45d1-b669-d9cf62cbecd9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772f1578-961d-4847-b09c-3c3c058d95fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ee8ad1-e30f-4d51-a579-a8df15defb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72da12d1-0ac5-49ef-bd92-90540044598e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e493ec-c5a1-4fa7-a963-3858421ee8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f088df-4a89-4c5b-9d65-ad9c694cfba8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440aad12-5e02-457d-946d-1e63d5a8dc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e1fe7e-3264-4756-b6f6-f23cd9d1d13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d8b8e4-19fb-402a-a470-c10cf752dc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccf5ee7-a69d-4d13-8da2-9466f37a4c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3582f2c-1df9-44c2-9974-73d66d3f807c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e276e05c-8f9e-461e-b469-12e7053f21ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f739f59-df8f-4423-bfbd-d84d2649dbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c9d3cd-1967-402f-99b6-bc258f8a1632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0a562b-5ac4-4f8e-8f17-180e7b386bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a723dfb9-9727-407d-91a0-dbbea4560cfa",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20759e6-35c4-4ac4-b54b-606c0c627207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897ed1e8-1678-4834-8a7e-8bf656dc8f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894a51b4-73c9-4946-a40b-5d7892d181ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5940953-ec70-44a6-a3b7-0a90c464db4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53877889-dc41-4227-ace7-6e9717e95a97",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610f7eb6-a7ce-4f8c-ae77-c2b40ad18927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba34069-4e24-442f-96ca-666034272d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1fb176-0a6a-4431-8389-72d37747f61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f38942-e08a-4357-9913-e0a6f424ca01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4201bd17-96ff-4371-a1fb-f7b9d1efffdc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a4bc0a-aed6-41c1-9847-705073e30084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71af9765-8041-4553-9fcc-6a458c0ad450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1e861e-7448-4fa6-883e-5595a5420454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d7ff1b-2c3b-4484-9cfa-44495a2e4d27"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90ebaa94-822d-4c00-a735-e925ed18951d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46700546-f3b9-42fd-a1d2-b7d3857ea949",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405402f0-10a5-40e4-bd5c-cdb1374f3f1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c31da2-c0c0-4a2e-9ae6-fdbfc23df15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6937b5-509e-41a2-a93d-d79f1281e275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dccea047-0bf7-45a5-ae8a-9183e45074e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3f95c92-73dc-41cd-9abb-ab9a3fdd5743",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16be78de-f58a-4e69-8875-ee989620d6c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "876d517f-01f9-44b7-8b8e-d56c00fcb679",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6846bdc-5c79-4767-bc1b-0159e67c2913"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d15dd3c7-502a-42a8-a0ab-042bbb561988",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7eebe66f-a7aa-4aa3-aa19-54ea47e7b5f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbb8c063-422c-4b9f-92f4-47b0e4682294",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b55dfebc-c609-46b7-8eef-34c63450e2ae"
            }
          }
        ]
      },
      {
        "id": "9a8911fa-cc00-456a-99fa-49d67723aa34",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f8ec1b60-8556-48a4-ab95-c217bc597879",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de16fe89-52ea-43be-923f-1bf464e94fe4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f3441f76-8295-4360-9dc7-a39dab661a9b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2249331a-dd84-4cb1-b517-7ed57d4cc9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e095e757-7ada-49cc-9ea0-edf2abce0950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e79e4ce-dcb6-4309-ab12-5e2ad91d28bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da3cd54-5a0a-4505-9f9f-9ea497044334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896ed15b-be43-4c7e-92f1-09f76b76e13d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd0e5b6-3583-4af8-b82d-9d5712330077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b4870a-bbdf-4b72-8712-eeec789ccd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9ac789-cc52-490a-8634-2dc0f9780551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c290fd7-8636-4692-a9e0-96899129278c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a18815-21d3-401d-b9d2-5fc50c78a868",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144c1551-7590-4597-9121-a4261a869d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5d290e-399b-47d5-adbc-8e084c4b658a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bd1c61-f7b0-4def-ad18-48e7e4aab04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee287223-a984-4584-aa9c-9272a9741184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda4b19e-cc39-4507-8cb0-b1cdc4b66590",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9322561-608a-440b-8474-53b7dd48daac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3b9915-a4e7-492f-a554-303c787f09f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3df417d-e774-4c44-9d5b-259ddaa09300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa01b0f7-899d-4921-8f14-8d0071b6a4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e52cba-13f9-43e1-ac9f-223754e7262b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0187d01-1591-4270-b8cc-0e82945fde4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5795dec7-5d67-4f7d-bc45-3e133903a2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c173f775-c7c0-4c00-9fd5-a2ff88d2e6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09635fa7-c16f-4a55-83d4-82734dc43773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a425929f-df70-4ebc-a906-1cd29a62619d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed8b46a-f3f2-48e1-bcdf-769de32e3e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c36a3e-587e-4be8-9ab7-fb235d408190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63753a68-bde9-457a-8a8d-e731e9d5b05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d058689-d646-4c96-a045-2967395a7b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558c4210-4dea-49bb-b9c9-68871d3795d8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8814e4e6-cb08-4c67-a2d3-fab2ea4a3926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900e0eb5-2edf-482c-a706-c043d372e614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970dc030-21cd-4bf5-af17-bac2e1ab0804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d8ce13-9805-419d-a267-2777d5492fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5f2050-353e-4f8f-99f3-715d1521e4ee",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f556d6ac-6e8d-4165-9fd1-bea3a6efdb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3cac7a-815c-43e4-a0e1-f773c259ab07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18d9b1c-e751-42e8-8a6f-db100265196c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "976e15a9-1988-48ca-86e7-155fcca470ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54b796a-d7ff-4448-8877-3b93a026a30a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8031f07-cf98-460e-aa10-b88e3f0fdb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24a487e-29b9-48c4-8eb9-58f2367bd48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c672f189-a7da-4ca4-ae2a-3bc42425460b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff2765f-c135-4c79-b515-35198ad3d2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c954bd4-d2ee-450c-af85-693d977b01a3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24711449-6313-4f81-b375-4309e650d2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f07794b-8574-4861-b1ce-e9b175e95f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d70fb88-f55f-43ec-bab7-38b7b10adee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11a4cb4c-a694-405b-b690-a44a2c18797c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4684d1-d6a9-4502-85f9-2049c60e80f8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f652ac-7fd6-4843-9ea9-72a0c353772c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ae8487-3880-44f7-a007-86f114776399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de923318-bffa-4573-b15a-6eeac1fdb984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "15a0b643-1b35-47d0-a236-394889ecba29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f51248-1352-4b43-aff2-7f71fc48279c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424e6c11-c017-4954-a82c-6a18cf4c122e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd512d4-cce6-413e-9af6-16b482c29be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906e6679-9b6a-487d-8bfe-31773542d131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68bf401e-5737-4ebc-9aa4-56828cd0310d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d857eaf2-a403-4a81-bc1f-897c0196f861",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b56ce2-2245-4979-af62-f8885b113c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51662d0-382c-4a68-9074-5b52b9d2ae53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9f9f4d-a2a7-41c9-aa4a-112280003f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4a1ad2-2d2e-4241-984b-4990a3c75f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d0d2b8-c0eb-4f43-8722-d69cd07a7ace",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf784d7-5812-472f-82ed-5f19f304c564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bbe631-6a11-40d1-8f02-7b5aeb53d222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90fef9c-276a-402c-b957-696700cf13bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b362bc-7363-4da3-8a5a-66098e10f75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7c76f4-bbbd-41b3-922b-715403992625",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c820f65-d075-4759-b67b-6e0a9ce2507a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ac9b58-2738-4e16-9b19-5b07d23b815c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d019fbb8-8906-422d-a52d-881fc70652b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bf7e98-bf0d-4797-a89e-0ca58ecd1712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e404ff72-58ea-4fbf-b6e3-d5cc2c8ba95e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ce6c59-1558-4fe8-b520-3b21abc6d1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a694cd-ba74-4c6c-972e-5f213f65bcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223d9e75-aeac-4f20-a5c6-3ada7792e05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1abdbb49-8a1b-452d-9279-2d591b439d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7465d8a-eaf3-4265-bced-05072429e9f5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633b514d-5ab7-4bb3-a0e1-d138f9a6d905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9c37a4-12aa-4b4c-901b-d4c3251e130e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3820bcd-c320-40ab-835c-2ef7836acb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e68a3674-17f9-4e58-a47e-a17544db76c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6dd694-6bef-4dd6-9196-c850aeeef058",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ef78b9-2d4b-4a1f-8b4a-a189e346c111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c6a11f-3c61-410d-afb0-dede4343c697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061e4698-999b-4add-9858-adc649616043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11be0252-52e0-4182-bf3c-4f09af4949c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32c9179-89c4-4c09-a9e9-0db98429a78f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca7d6b4-3f4b-495f-9cb2-dbda893663e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0a59a2-c59c-4a6d-9bdb-78665cefff0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159a5109-3302-438f-9bd6-68b979485115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d8b794-923d-4c8e-aa82-76c26cce5f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7440f148-4ebc-4404-825d-e5424deefb27",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5a12cf-f5bd-499f-98f6-ac85bc260ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dff67a-ea96-4a0d-8a89-c70b1c089412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b88de8-a3bd-440b-8139-56142c52e725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2fbeda-b30b-4f02-99f1-0f3e6e28fccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11565d6e-d4ab-4408-803f-a5f49a62cc61",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eef151d-9b6d-43e7-acec-0ab73fb31435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da8038e-497f-4983-b6be-5ce2f3590ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f225f7-45c1-4500-a61a-684b39dd11fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e2200c-7060-4814-b84c-4b03fa6feeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c36d17-a223-4888-8a88-b264b0fea29b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b45988-3a3b-4ef1-96f4-d7b0d9f1d5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe914a5-ed18-46f7-8191-a02f5b117044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c467b65b-934c-4fa7-bf3a-5590668fc976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "150790e6-1a99-4541-8cd2-54057e68510a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae500333-bb21-485d-aed0-ca25a44b5f35",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8990dc-723c-43db-a0cf-28a4bd1c880f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd4b895-3252-45e6-937e-619092e0173a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0985e19f-fa3c-4af3-b24f-fe064360925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd10316-b69e-4fd3-9ffc-5d403c68416e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0dd42b-b873-44a6-a68b-8cc51c48bade",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d713c7ba-399b-4cb8-b992-2d9d1d06b6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f69724-a1e4-4df4-ab50-03e7108b6891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8b9c52-ebed-43b8-9bbf-a696112bbf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df65a4d-9dbe-46cb-8eb1-c926e7f6f5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22510f63-dc08-431e-bc15-e595cfe90c4d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f91665-ec11-4b12-abdf-3fbc332154fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8214800-cc37-4025-822b-c458ebce9a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c23220-8509-4b8c-98e0-2ccfcbd7146a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a744107-82fa-4808-8520-2e8ba80de921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7abcea1-24e4-43be-93c5-5df59917f4f6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8b2046-62a7-49a1-8d6b-16dde7e849ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3254969-6ae7-49aa-abdb-db9944980784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42c9a9f-7614-49ea-a2f2-65f9842a666c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ae2e06-e4f3-4236-9450-81c27cb17055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b444603b-aed3-47ae-9fb3-899ee25ba7a4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19c07da-9c2a-4949-a1ad-9c630d6e7ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9de4a0-dc8d-442f-a59f-d1af9509a64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d884fc3-cac5-4ae9-8935-bea5a331db78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c65d83a4-177a-426e-a58b-7f75f7c045d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f2b001-d54d-414a-a52e-b1080a9ca5bd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2c3ae6-3f4a-4abe-9b32-ca45c3a8cc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237004bf-f3c2-47d8-a55d-7f005d916a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e709dc-1afe-4897-8dc2-b8233801ff55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "929880a7-5bcb-4cc0-bcfe-229bf907c608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6781ecca-14f8-4510-9847-f472db3b64ee",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f57a3d7-ac9a-42cc-b8a6-9fa20200d6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855de428-2ef6-427e-b42a-a0f266c058d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425fbb69-ed3d-45f9-9a0a-5d58e7a60a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38360999-5f84-4a1a-8fe9-edf386c76e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a684f448-7fd4-42d2-b03e-43320bba2441",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aec6996-deda-4e8f-8fe1-968f64e54266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e985ed4d-7f18-4412-8121-744eb86ae749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df3a09a-13c3-44d3-b97a-7008741a4835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8702fed-791a-4ab6-858a-43d7fd401bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e53499-4cba-4401-9b29-2aa7f839a80c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7665662d-5b4c-4001-b902-b2c2057c0008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de50dc5b-9add-4c33-b47c-fe777d47d9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5090beb0-ef2c-43d5-94be-2eab4541134f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c6f42a-2390-4c98-80c7-53cba58a14aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1753c17-b371-4cb4-af01-ae8d8f51b7c2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e8415b-3486-44f6-bb21-1fdc9872a4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c22f27-608d-402e-a86a-88bcb1a8a2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4e91c6-bccc-46bb-a370-6eba53fb4161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "becb3aa7-02fa-4918-a020-1e9b56ee9516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6613c7b-4ae0-4c9d-ae52-a8d3ccb4e531",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2fb318-eebd-4de1-b1b4-5ded7c5991a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e318a08b-a405-4146-a74a-97a412eede1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17763e5-9f4c-49d4-a99f-c14a821cd95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6c40ae-817f-4505-987a-9e5bc4a161b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ae4044-7b0b-4632-b7d1-55cbccae2f75",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d61ff4f-3b68-40a3-9039-185b397bb2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9556d3-34a8-4f18-a64a-c1393d89c69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a2bdf1-c494-46d0-8e1f-ea320b521a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a477bd-8165-4224-b20c-f66028a54fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37d14e5-1d65-48ee-b11d-c3afc4124248",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811c7e7a-30fd-4507-b644-58340f5e559a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ed6155-153c-4987-a44e-5694115e21c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec25687-a250-41a2-9d71-7b78166c8fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83b206d-087b-4b18-98d2-82691371c13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c92e51-843f-4e93-8d93-3c280c488391",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cf49a6-96e8-4391-ac85-3778a0fa5b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cb4ac8-c523-4064-8d9f-a8f4b6c81d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962a4a7b-57cd-4739-96d8-e26712c40ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "697303d4-232d-41da-aabf-76f6ef942ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80dfca3-d303-4ae2-acf8-1722289fa0b7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb91d73-5cec-42ce-b152-2ae047aab992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab33bc2-8497-46df-a372-588fda553d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e01e11f-50f5-4959-8e3e-2cd749f85509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86031818-f274-46d5-936c-db4c8b8069e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e642aaf1-44e9-44ba-9242-75450d095c56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0bffae9c-c323-4f3c-9197-bb87d8a4f35b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34725db0-c264-41d9-a762-dfb8e01aec93",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9333f0-0b9f-4002-9630-03579e3bcc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57575dbf-4132-43b8-ab32-8e2f4266a00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66396a8c-9c76-4100-877c-585740848fce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2263d76-646d-4311-ba9a-08b6f81699c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf01c961-6404-467d-929a-10611ddde3ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff5d2e1f-e025-4c16-8db6-f82f1adc83f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b61dad0-5dc1-4338-a8ae-1992648c2901"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b8e3e6f-bde7-44c8-ab65-dbf1629494b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2556ef10-ba09-4a88-aac5-04e8882e7bb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1efa9ddb-c78c-43d6-843d-e7a73bcb0d33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10e2b170-043e-4ba4-989a-e5bdc80e5c90"
            }
          }
        ]
      },
      {
        "id": "6e89bf64-397d-4df5-bf2e-c7ccd73f8edc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1f0b5375-327b-4957-af6a-44cc96898ed2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4cdc8a1d-30ad-4b83-8cc0-945b6b85afab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "972a2304-358d-4139-a0cd-4e139a393d14",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aee4ced-5b56-4bfe-9fd4-d0a9898fa576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431c50eb-748b-4f5f-8caf-2d9d57f6529a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6ac525-c1b6-47d4-a638-45ff8626b295",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9d43e1-a11c-4dc3-b9dc-9962a8edf9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6da7f5c-520e-4424-b2fd-1338385f3401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75553c2c-073e-454e-9084-b6ee41ca53d7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aa924f-570c-4eeb-beda-a2ab021a5ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864c00c5-166a-456d-93e5-8393a3eaef8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f837cde-a928-4a55-a3ac-578cd0742129",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a360db-7558-413c-9a6e-34d6cbe6d9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd39578-a78b-4a36-880a-a643a8cda1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301e0197-3b09-4de4-8e89-38088d54def8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13db8953-ca9c-4338-a350-14328d41bc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c362fba-fb0c-4554-a0bc-ce21ff55c308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c485c90-209a-4c9d-ab53-dd244750a800",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed20fa3b-191c-4c3c-a774-2bbd65e3dd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e2417d-ca4d-4f5d-a783-0f56380b6d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f380c26-4f0b-49b4-866f-f9a932cb8598",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2371e920-40a5-4ddd-92db-7aab36ea320f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb52ccd4-5037-4892-b54a-4a6de45c320b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c667027a-b876-4391-b845-af611b159fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ac08ae-9f06-42ab-b40e-4e0623631705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4cc433-f827-4122-a8d9-79c62a684a7a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecdcfa2-3942-43df-a52a-91670e789df2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f45cc5-11a4-4fa3-9bc2-21f7dc4aafb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b76532-d35d-4d42-92e4-e2d0f1fef85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74943ba-ee62-44ff-a5f6-6944db26256f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fac3d7-b665-4ddf-9fb1-2bc4856974ca",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b8ef44-2c76-4c18-a461-dcfe05d97c87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a4636a-a227-4b75-872a-bb980379a50a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fe4637-d51b-451a-9c58-73eba1f524a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b214b3-e265-4d26-9569-e56f72381a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be96114-f5c7-4eb0-a013-5c9db9dc4d61",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40af95ee-78f3-4315-82e9-10ff8c0745b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4301968-a406-4c27-a491-d9a897d994ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eb7fc0-be00-49bc-8c57-4e604b965305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d002d54-fb2d-4f78-a307-4824f0a190a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dea5bd-0550-48c2-b637-59a73c75b485",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46d643c-64e8-43ca-a67c-037ffa9ea29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c08c9b-4989-44b8-aa59-1ac8c33f7ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc4ff56-14e6-4eb6-8ec0-a298e456875e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d647cc-8ff1-4923-b573-52cb8aa55696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c12f986-845c-4f00-8554-a876c1d85b47",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79260b51-0dd3-44e1-aac0-db5aae8f2c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50757cb0-6254-4943-aa0f-30583d2996e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c7f493-b004-4bfb-9c6a-fb8d191f5aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfb733d-8da8-4354-8f81-198df8df6e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2387e7-4aa6-44eb-aa68-2b3a2fafc755",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842e667f-21d0-431c-9d51-c961e8da35dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd316b8a-a080-4c36-8ecd-336dd76f96e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896f77ab-f2a0-44ae-9893-023e1077e77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42532147-27f0-498f-a0a0-4e950eba7019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617e6be5-1b5d-4b6b-9b5e-3c8367eddb9f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa85ff3-f766-4342-8422-bb63321f7b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "608f5c0e-e908-47ce-a0d0-3d64b37f717a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dee9a5b-8ce6-4344-8208-015704867a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921735de-406a-4216-895f-60e4e51bde30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e14212a-3d0f-4857-9ead-fb39f3e0aa63",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bda3c1-0889-45e4-a19b-813d82602a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd43ac6-ff3a-4f5f-8f75-12c3e91c0506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db24ceb-bcd9-4c75-b48f-7d826cf4e102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1c8583-9fa3-40a2-bc30-66617a7e7d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10ebda8-a0a5-4da0-b00e-26225540edf1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349b42fa-92ef-4eea-ab23-9f8f3d12c199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10c228f8-c34b-44dc-88a9-44d51cf6053b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aea301a-f8b7-482a-ac61-7555c636dd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117c9621-dd3a-40d5-92d5-f8cafbe484f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12442440-0ef8-47c9-9ce6-240356bf26e8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d69fc3-aa7b-4272-90dc-d4c66475b417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7788197f-ff23-4040-9ea4-dc22324f9e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92269a1-2dcf-4811-956f-e61f854a006b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50320855-1062-4ac2-9496-0939d9aa66de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae09b5f8-f11f-4564-a9ed-a010ae0ff19a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22fd139-3140-4dc9-bdf6-f62f6773aafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c2c644-aa10-477c-af35-aa46a4a659c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ae49c8-fc65-4b2a-bb4c-b26ad56e5d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e125e75b-fa67-49ba-8dcd-b5cdf0f28c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f73486e-c527-4c68-81da-0b78fea8c4fb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d91d72-e410-4815-b7e2-7f91652bcd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7c6e65-7b8d-4cc0-8cf2-cfbe764c04fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f817cbf-398b-4898-86a0-66105cea668e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da27e804-fa0b-403c-b232-9d23f401d150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b457693-032b-4f68-8d68-fcff4f834d04",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab76e5f2-8750-42fa-aca3-22948c8b26be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f57354-5877-401e-9050-578221f3448f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffdc259-8bb2-432d-ad0b-4c1e90758e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dca5d33-6cc6-442a-a06b-4e775ffe4046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5201697-f618-44b3-a120-791d59bebc4b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7db45c-2f32-432e-bc9a-269c2cb5b85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc12dca-b4e4-4283-91c8-79b000084123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a946360c-e1ef-4367-b423-c8a0bdf244bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac80b17-b336-4ace-855e-7bccbbe4573b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ccebb7-733e-45d7-be96-cc76f6f6c9aa",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4001beff-8f3f-4c30-afc0-8fb70de8194f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1d12ed-9555-4c60-9554-57285362d563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3b52e7-e5a1-4be5-9c43-866b7cd1e9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2721fa54-e34b-4bea-af89-fee54f377e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13efce3-d4c5-48ef-b666-e1e69de6f6e4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c875aea4-75ab-4eb6-9d8f-d55da9e6d635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a403d0bb-e113-4336-beed-770c229727f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9402823f-624c-4140-88a4-5cfb53e40da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46353927-2b02-4a6d-8d21-435d5f97390a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5678c1de-16ff-44c4-8bb2-98c82feafa71",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85b06f1-cb1e-4b5f-940f-40332344d749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ffe421c-b51c-44b4-8de4-c24326d80bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41a8ab3-013b-4fc7-a60c-6a7389c47319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bac257b-ff75-456b-9caf-32777798a43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c0c019-0b1c-44f4-849b-064d3825a562",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2911838-5b51-41d2-8a98-d43c3f506cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a221383-9bb8-4efc-a12f-8b0982465c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165cd79f-6618-4cd8-abd0-255e078af5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c9907c-e8d9-4986-8d11-e5fc03d889d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abee176f-333b-425d-8526-efd95cc2f4b6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93842db7-4e67-40b8-b9c3-7ee09d3d75bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f539f74-3775-4c54-885d-52de4ab86899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e84359-e188-4df8-ac89-a5c42550a406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44308192-26b7-4232-b05c-f43aa5313599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5f0510-a9aa-4a80-b772-000006099c41",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74cb357-7a56-463d-9748-28465aee19fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "370c94a2-f070-4869-995f-37385889bb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a692ea1-484e-404c-b8f8-95d1216fd006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05ddf12-6f76-4ed4-926a-f473a813756f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7031276-e176-4b5d-bb6c-6885cd255ca4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dc6777-7b8c-4612-8662-cb2ef83f8c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5095cc6-c1a1-41ed-8d45-fe679b062b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6321609d-fe7d-4d2c-86bb-6de8b4b89611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03b5535-1e48-498d-86c3-9aee46a4a40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b8b5bd-dc74-4687-9d71-4aeb790b4be6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9ade93-7177-4f40-b9e2-3c4b03446836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be1a9917-3bc6-45c9-b241-0fc75cf2965a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e891768-1fda-4ea1-8668-ca349ec17699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9197b0a-3cc3-44c3-8ac6-08cc199d6794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35045170-32c6-4791-add4-c77ebbe45bff",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03c4695-1f04-42c5-b08d-9a25cdddd38c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ce4e7d2-82b1-4b21-acc9-7e3cde1c25e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b42a6d-0933-41cb-a81e-ca71f475779b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc45622a-1faa-4ff1-a9b7-56b1adec4ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494cad5c-6b1e-4c70-b111-0256c6d9a539",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a705294-d6ae-4b6b-9df1-5cb235efa827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2187a05-ebb8-41e2-b61f-fbff030bc933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09faee80-5784-4f83-a028-68f8f0073a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e179488b-e26a-42f1-bbaa-66d553e7e01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66af80a-3c29-4519-add5-103e249d34b3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f1b298-1e18-44e0-b9b5-e101258d3455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dfa2750-4366-490c-a37f-9d17a81160f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828274df-14fe-4324-b47a-37ede31cec98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6a324f-f199-47ee-8437-aed5abc927a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19e22bd-29b3-4215-8223-252ed8032e50",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95652f72-9c26-4053-bd9f-a53ed1070396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df6a9d95-b81d-40ef-bcdb-bfa882024ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2a012e-6d2a-4d73-8d4b-ecd65923220e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7afc222-b8ca-4476-8be8-92c4a7097e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63125f3-ab30-4576-ad10-838877b7d965",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29774383-bcb0-4adf-95f3-4488624e25ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62962b7c-c9f6-4166-b048-6c153d970fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc200f5f-3576-4cda-b0d0-a07f60a737f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb78900a-cfdf-454b-94aa-f7c14852f04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60360a27-2cf7-4a60-8a82-9b0b2bc1c223",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22a91e6-4baf-4a54-8f84-8f80a4159b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a5c86d-c898-4b70-b277-994ceb0f7158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656ec112-4bd0-4681-b8ba-f4b84a7ab50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167a1ba7-c08a-47df-bd04-3da2e95c6197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800214db-1a2b-44eb-bf01-94dacd98fab8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc50e17-09c3-481e-b009-5d40c1a3af4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83878960-8219-442a-9e62-f8d015500860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa2d2ca-b7ca-44e3-9e35-93ef1faccd01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f079e8b4-7d6b-4c5d-ab4a-9252423fe18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b90da6-9372-4367-8914-f9d091522e77",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f3ecc3-0116-42e0-a745-e9495e2ba4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8fc55e-94bc-4893-8276-a76bd9a6adbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99149db-4713-4cdd-9abc-ed0e11e31dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cd0470-c2ea-4631-ab1b-28fe39c4492f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9edfd96-44ac-41c8-942f-7a688ccb2399",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9ed6cb-ae79-4b42-adbb-6aba185eb5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ba5d9a-be52-4985-a3e6-9ecab6362eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4799607-0c09-464a-aef9-b022d4051aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbc9542-e1fa-4267-889c-9c06387f9f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c96fd5c-5c43-4d23-b591-946c5743f08d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454166f5-8150-4f19-8d67-0702a98c3cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb79e52-0a4e-4bc7-8b83-90722ef92e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba59174-c7d7-4854-a498-26e7eff7f77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde6929b-3958-49ae-8645-29d15d2ee1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad140c2-65e6-4f85-8925-5652073ae529",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4132fa-0c38-4441-a6a1-43cda51e4419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd831d3-bcec-48cb-8419-4096d252b7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eff9f24-c90f-4c76-a2b6-028381eb8fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e367b8-f0f6-4ea5-b8bf-24c144150dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156ff5e9-a9bf-4c74-b4b3-1e50bfa7215b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b1f7c9-780d-42cf-96f9-8246f59787bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa0fd14-1eb4-4dfe-998c-c76152575c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ccd273-94fe-4043-9e73-a8836b26f52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52668aff-ac7a-4485-9b9f-1fe83481bfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d0981c-333f-4623-b8a6-9e741a0aa6cb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ab8a37-817d-46c0-96ea-ac54c1520c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b7d9b8-40b1-4319-aa7a-053434393ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e7c721-d60b-4dad-b582-ee579ee684ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca4238d-4618-4fda-86c3-ab3a99a355e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3e801c-b3d3-4c48-b4e2-177b021b2598",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462eb823-b695-4139-af4b-562e3bfa23ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320c1c0b-4a6d-4f90-8859-e403c532e5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6527d2e9-58a5-49ec-b484-6438b3e38571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5244dfa5-d65d-4f47-b409-0281bde71fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8c6491-3656-49ff-81f6-08a21d47aaf2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac081a5-9674-4a5b-92c2-ad52535bed51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b942309-e180-40d1-8045-fbf6e8a4f7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6420dff2-e980-49d4-8158-e0a95f91d142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d9e830-53ea-46d5-8563-432f730e4f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecae1cd7-97b2-4b71-af95-8dfe62361c0f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6577ae5f-6573-4ecb-8eb2-121bc37c5012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd75614-a5b5-4a65-a3dd-d900e245ed56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f477b72d-3d53-4345-bdb3-ae23f287c352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eac2cbc-a9ff-4ce3-8bfb-d3bd5249a33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349d22db-2686-48ba-97b1-2162f07a03be",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4edc96-6068-493d-b980-f43b9b91bb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db34b23-d885-4211-932f-e2626fb53b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ee78d0-cd2c-4265-8228-545eec30339a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2378c7-f0c8-4ec1-845f-00843f7c183c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d0191b-a82c-4f97-9600-7da52bbaa6f2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dafa7a3-6ac7-4e3e-91fc-160de3ae9da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36ff085-a71a-458c-9b2b-206bcfa3e7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8aaaab-4470-43fe-a30b-0261189b23b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6729d801-4126-4600-8cec-6de0b2c995c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410d41db-9acb-43b4-924e-8ccfe614852b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7015ef2c-fb9e-49af-90ba-2319b10b7ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86998c8d-72b4-4ba1-beb2-3747e2e20908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfe90cb-7a01-47b3-981f-44344d7c2588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf51805-0b92-49ac-8515-0b9c52955094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121f46c2-d0db-41de-a1b7-d66b24ceb660",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa0e735-7ce9-4068-ab0a-dcd7208e68d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9646f4-09cc-417e-b03e-87ec567dcf24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e123830-01a2-4dbf-adba-e84ea921a1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757ecddd-8c50-484d-92fe-fba35d64b485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868ebe7d-5963-4c38-857a-e572a06882b8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f99b51-c58a-48ca-8a96-521cfa94d6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02591166-9d10-41e4-a601-4e102d6b349f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c5c432-9868-40d9-98f4-7a566e4ca822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3f81b7-e722-4ee0-aa64-c3de7372565f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0704d8-3d3e-4ec5-b65b-0a2783b47287",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7deec3-47c7-4eb1-aa51-b4ca7eb5eead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73bd457-30d9-407b-b0f7-3c8c4c4c0ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d50b7c4-28a6-404b-a987-1b49c6dd723b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2160e8-6046-4b35-8270-1932f7f62a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5a0cdc-36eb-431b-a73a-a67ebb4f17a1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce7c73a-5d08-4d22-b17d-c34ad6f49976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8096d5a6-fcd7-4851-bcc9-740c236c3e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dfd78c-31d3-4dbe-bd93-00ae11c59031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524f0e58-a83e-4edc-9772-0cf855bc2d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1e29af-278b-4bc9-8546-3b1565eacf82",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184addb3-3bde-4355-8744-1ce18def6fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5b960c-fd85-4c02-936e-c2a103f06d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953a2bff-0c53-46a5-8a65-e4838a6ea979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d93d44-6b8c-4ea3-aa5c-3a920b86646a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8601934e-fb26-46b3-a98b-83cd56dd5c9d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601c2fa4-aa34-4f2e-a312-548649653e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0285c9f4-da4a-44eb-b2ea-6bed1a52a998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65928b3-cb58-4ae5-818d-efed0a2d2102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a60e06b-450d-4b88-a992-f920b78d032e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeda9fff-66f0-45a8-b263-7e589f59314a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6467fd0-0300-4893-8fe4-8276712f9239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5f6608-f495-4f5e-a3bf-f2e0aac9173e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007ec53c-1aee-4305-96d6-895a6e4c2afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587500a7-95f9-43e6-996d-6ac0fd83c7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee936a2-394e-4fea-86fb-3051d8c31d7c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2598296a-c991-4ff7-8a56-e5bfa5ef96b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f8b662-cc7e-4ffa-bb36-46e53784ae72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1531192a-79a2-4215-8a7f-ee9d91bcb9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cc727c-0ca3-414f-8398-3d6b10922baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9bcd15-f4e4-4a9f-8f3c-d3ca2dab7118",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e59ced4-92b7-46f2-8229-337433c5745f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800c6ea3-7cab-43ee-9d50-4ff4ac1273bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf8d7df-547d-48ab-a89c-a035edaee6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc970937-ccdc-47b7-a199-42bcd8487c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30731458-48d2-4c0a-b222-c06490222472",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85aceff3-87ab-4107-9c5a-e43f63ddc798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9d5eab-7ef7-4357-8401-d2cb28c73868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ea25b1-d019-42dd-9100-0abdb8409c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8003ebfe-0235-4371-b446-8d700dd13796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b537fd12-b76e-4e37-8480-5218d36ded08",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed53ec8a-6fb8-47f5-bab1-e4c4d77e4845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3548901f-3f5a-4def-861e-a8ac02dcdf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1872f7cd-cfa5-4336-908b-32105a46c810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fee1c30-af78-45c2-a513-de7a365af2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501796bf-94a9-4724-a8e9-59022a94a18e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3ef477-3093-4df1-bc7f-ee03d366dfc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f5a642-bf6f-40cd-8b02-e0456be5d052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7ce90c-4447-4d89-9a63-64d695d767d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa12fe5b-6d83-4a52-9143-d27fad23a8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5bce6c-0704-4ecb-b6a7-a6cba51395b3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18e3477-4973-4bb9-b7f3-f6d74eb9d05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2a64a7-ac99-4747-81ea-e5578e30a06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36a0ee6-93c6-4a46-a97c-4412ef2fd924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee01edbb-c168-4062-b883-3d77299be54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd681e4-2505-4f21-888a-96494817bb0c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927e6ffc-4c09-4ab1-b4b3-2c2b9ee58602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb641cc-991c-4290-8c38-68b5089a9879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a14a82-b5f9-4d7b-968d-3d75522c16a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d75d3b6-1624-44cd-81db-220bd4c56aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f660ff3b-368c-4d7a-b05d-4fc85fb11eea",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627e4304-5668-4f3b-8885-30b235b1afed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d9f261-4a4e-4581-8ddc-495c2d207db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1976a4da-ef1a-4268-a435-2d245577d757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560638f9-6a4a-4dc0-9eaa-5e45a4fea362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4fab46-8f52-459d-bee9-d6e8f4244ec4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49c7976-f430-4e6d-8e66-8e27c268a93b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c36d2c-3805-4d78-be85-9c2039ce6b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e51a7aa-7684-4b65-a420-5f3885fd9269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c968e7-4c0e-483e-84b5-498171bd2b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8863bf1-9c98-4798-a6c0-e135f424f159",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747e46e2-bdb2-4713-87fe-2ee65ac4bf4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbbdc6a7-84a9-40b9-b78c-6b7e0f081b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "174f2e5c-4e65-40b1-9ce6-3c759f24b733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e3bb76-79da-4b99-896d-5f02aaea0e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8340d1c6-df1b-4e75-9fd7-917a2d160fbb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220652d8-8a07-4289-82a9-07cd075f548b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe7db364-3507-4e34-8823-65294b027216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcddcc47-ec10-419a-b98b-42125601653f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a8b372-f270-4ba1-bae3-1a29d2cbbd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e085da-cae9-4b75-be41-82512590919b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a14d36-0089-4eb1-b32c-55b7cf569aff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0089f5e-ad19-4427-8af8-d2aaef23d065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb5a008-0aa9-41a5-ab39-d3c0f4623f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92449ece-c735-4af3-b7f2-e8f3896f0169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cc764d-2d51-4096-a733-a9b2d9563423",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5c41ab-39fd-4800-95a4-9010dbf29aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e375e2bf-2df3-44f8-ba39-ed7c50e8dd1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d1a7fd-ab80-46f5-87ca-4db18d807898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5e7035-510e-4571-99e7-045d196b3813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5f1e11-d9c6-4f72-a99c-274a394e740a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee1d385-f2c4-4acb-8951-1a11ab069872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e7edd95-e845-4b90-a968-80e7cea88073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f3ffc6-5f44-423f-a12d-b24357fcf39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edfa27df-39e2-4abf-85f7-c8113e063ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046f9bd6-c4db-4ef3-8cd6-90942da70f40",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e867595d-fcf2-4a56-87ef-8031637949f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d6bd612-8ad6-4102-99d3-a9e71c83691c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0c9dbd-ab82-4332-9d0f-e5db1f091ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee2c7d1-4f8b-41b1-bc47-b7e10d72f347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6ccc84-ceb9-4391-8b6a-e32d12ffc074",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38519853-96ed-4df8-8cc5-a6cacc6637da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d3a596b-bf38-4233-b87c-00023cf20705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a71e7e0-80a1-4316-92fd-20933c05f307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5088929b-d050-4021-a404-e5023a315a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a45f776-1386-4864-9881-83d4186821e9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d1adcd-007b-4a8b-9057-0357e14ad22b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf4df69-ef7a-4bfb-97c0-76ac4179ce18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0320b04e-eed5-4d58-913e-14d65deb3b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc06311-2f85-4a07-9e31-0444daed2cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8fca96-53c8-4e78-bee0-a0fd460faf44",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c2c35f-8a78-4fef-853a-ae6c5f0af55a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e39413f5-056f-43a7-9a7e-3860a75dbf29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722353d7-c4a7-42b4-aa13-d0e7b433d9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201cce6e-9d1e-43c0-becb-2956917155b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a09ee6-78b0-4bb6-b98c-6f369a32eb9c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3570bc2e-6491-481f-ad05-fb1d4d4fb09d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbcda501-d6a1-4388-b0a3-327ac806da8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe32d603-162b-4190-b9db-c887db4d0241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3a07da-d7e7-4071-a3f5-ea916e99a996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bd451d-feb2-4738-8992-6e50f759a14e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea87efe-d5e3-4aa1-a249-eb91ac1b638f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab55f696-e65e-4a6e-b372-d9c78eb2ad38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dddaa31-cb27-4bdd-bc8a-66539fe48777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992dba8a-f36d-4f5c-b522-fa00d12c6994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9feadcfa-1202-436f-b615-712752993ca2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334b0322-ffd6-40b7-8df1-3ea2b9b84331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbb90c4e-7a90-4976-a313-212a4cd3ba88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64742d50-79c5-441b-814f-52b09fe81e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "becb0df1-8933-4a8c-99b2-7f40bf284f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68231e15-9de1-4916-9fb7-6f9cccf704b8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938c63e6-94d6-4ee8-9a0d-b1bf91a4b19f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2858e6a2-57ba-45cd-9e63-4327cfbd5f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709ec919-6ff9-42ae-90e0-6d638ed58674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b40404-0085-42d7-b48d-0d94b8611ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4728cb-5969-4c07-9c6c-949e8d26d298",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be5050a-5045-4f9b-a1a2-5252b1e30c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca66446c-3b2d-4655-bfac-18aa428a48e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a32ce3-784a-4f6e-96bb-3d0875b348e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40dd59b2-7bf6-449a-9dc8-a4f1c26a5bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e01d291-9d8b-488a-8c5c-91533ca77fd0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a0de78-eeb3-4781-bc11-c1cce509c066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43be7f63-8fc9-4616-a5b7-10d9679713fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b16be0-f007-4d43-8461-bf06c06c505d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ca5325-c605-4b98-8455-3395e618e43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f4fdbd-260b-488e-9a8a-5c22a1ce4fe8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ad91e1-c892-41cb-bc82-f458ab08d718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2cad214-0913-45cd-8659-a4c4c3e46f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe457316-3171-4252-9bd8-bf74fd16b421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2e7fbd-f7d3-44dc-907c-3e838ecec30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27495b4b-247a-4d90-b9d7-15b6f249b807",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9dda97-97f8-468b-ab40-b0aa41a51219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a11c2c-144d-42a6-822b-c894b5a173a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1712094-c349-4e78-878e-b84484a23879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7228afb6-2a2a-4835-b24d-82c77643f215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326876c7-4708-423f-870e-536c993f6838",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d369c2-a604-48f5-bf45-9c938ef10341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03dbc960-abdc-43e2-bb6b-1bb676242b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5002ac-bdcd-4e03-85bf-6ed4676842ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bcc20c3-dcd6-4709-b9fa-eb84b8682bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab39be7-56ac-43ce-8774-38f9d74e5db5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2def1ed2-77b4-4c9c-af43-6a34c3d807e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac502c8-6d83-4ab5-a55f-70ff020697c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b81e190-d454-4c6b-8719-e931ea08f7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcea383-eefe-4374-8ebc-824feb74d259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e6a4a8-21bf-4a16-87b8-7bb889dffc7c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1404899-5e43-4c94-9df8-e7cd034b6817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1101c434-ad04-4b52-bdfc-ed1a61ae06cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b408c6fc-fbc5-4b83-998f-fd4b7310fe83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7485fbd1-f29a-424c-8cc1-2757731b5f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce5f055-6f94-4765-8e30-f7b54ac5596c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa5428d-cdcf-4660-a58c-812e60fde6cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cdefe6a-9070-45cc-b7b3-20ef7d571542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0520df8-fbb9-45ca-b1cd-a0049d2b9192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d34bcb-b1f1-4600-b444-c7204f4d6961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a942367-af83-4d29-881c-7fdc76690fd4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45513f4-6086-439f-bee8-3462bff2e316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad9df3c-a5e9-44b0-9fcc-7fa7c49bd3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a28778-2939-4856-a0f1-93a20c0327a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49dec10e-1538-4d48-9114-b801285ce88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b7e91a-2d79-4f7a-897b-5e0a3348f5a8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bf1104-1b8f-4ee1-909f-cc0891d0eb90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2969a5b3-b37b-4aa5-964b-1aaa7a327802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909a9a3e-9504-4539-9d4a-98a79a1411b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288280f6-86c8-460d-92dd-6a1ffcf39c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7219ef-99c3-4fc2-822a-68870fd2da3c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df63d32-eed7-4909-b818-739718871456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0832dd25-26d9-47bc-b298-2348c7e77ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77496783-11ff-4116-97ff-905b4b33ac6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1db602a-e18b-4d99-b434-09f503b43675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece8220a-5d25-473a-8f41-59ae63d80770",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31485ba5-031b-4799-a49a-f2eadb43b549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c5722ed-4e63-4c6e-91c5-81b95054f93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8880f97b-0f9e-4cdd-bfb8-08b712931890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c708974e-4735-49e8-87c9-00cddbff3d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d47612b-9005-4a47-8ea0-b8480f0dd378",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a489bc76-661a-4220-97fb-370f40af0fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0651c34d-c939-4ae6-ba4f-21509d955350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b1ad3d-6440-4060-b9f3-8ba247af3b3f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a12668-f1d9-4f1c-82a1-0778028c4dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c59ad17-a22e-4be2-8d0e-97164d8ad80d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fb52d0-b411-4a16-8868-940baa564c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2a73683-4a89-4211-a8be-7baefcfcbdc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afb7693-147c-47ab-93e5-d5f3b400e17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae3a6be-563e-4474-8ffc-a20d1e01ce87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf5ef78-bf9f-4403-b89e-3ec8b91f6837",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4483838d-43f1-4713-ba31-b97f9d393830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f0e9474-72cb-445a-9a71-03d91358f886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775e23b6-2a77-4d6a-8080-90940060d00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30431ecb-4a33-4b1f-a7b8-8f65755e0609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14df275e-ce0f-41db-b135-1f6f5ff549b6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8355fce8-5839-4cba-9cb3-667044226d80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75749f18-b169-4a41-bfe5-2490fe996423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6f2827-7c56-4f81-a779-260435da4fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e14780e-431e-428f-b0c8-7899edc5f599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1d0e92-9eb7-4625-b09e-06dd15395231",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c73038a-362b-4353-ada5-9912cb9bfe18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df4ba398-dbb3-4814-a26d-c934acd9ab85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1773fc36-09a1-48bc-986d-0b6d88f439ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3782804-ad5e-4b37-adee-1a6aea569c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1680b6-a0d9-4e3c-968e-5bdd9feca052",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a91ef25-9ce5-47dc-8e6d-3824e9676ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdb7a2e1-1b5c-41e7-b12c-0bb187ee1772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3068848-1a15-4777-85ba-952f5f2a5ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26d5076-cc9c-4f36-ab91-8a112b7800f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f759afd2-6311-4e63-85a1-f4a7bcbb5d1e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1425717-c80f-4902-b8eb-bee5ab75e74e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17690985-7611-4fe9-a87d-b9d2d8b7c0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf6dd2f-bcac-4039-ac55-89ec4bb8c6f5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797ddca1-7c88-4af6-8842-716bcdbbaf0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa902027-0a7d-42c0-b35c-9feab60121bf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8f25d3-65be-4043-bcd5-51437de9b254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "653553a5-e1e6-48a5-adfb-2d6cadf200ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6992bc7f-44ed-41b0-8e61-4d827f6894bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879f8389-4b27-42dd-aafd-0e9620418560"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c252756-60a5-46d5-b8d0-733a448c2634",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea4cd48f-2977-43e1-aa60-da01e985e22b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0836c2dd-7a6d-4fc9-b5e9-5cde51ba54d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff43624a-2b84-468f-94a9-fec0a2c1f50a"
                    }
                  }
                ]
              },
              {
                "id": "4a1ea082-7c7a-47d2-8cb0-a315c864eadc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a8fb2c7-5f84-4bcd-b9cd-b086801b38e4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a488f6f2-809e-46d1-89fd-ba01ce3319eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "481f7981-3220-4944-bb4d-def2aea02db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69533ed4-ce04-4374-84bd-47b2a63dec1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3239e48-c544-4608-8aab-4a822cd6617f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c58b0ea4-0352-48e3-ab6e-41b365a123c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81be8906-772e-4bb5-a7e8-b6db3bb2d4b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de239c86-4836-459c-a6d7-5695d723d4e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c045058b-0dd0-4d4c-9042-78e7627e1f4c"
                    }
                  }
                ]
              },
              {
                "id": "2da038fb-75ba-4ff7-a114-8ac967f10dbb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f5d43dc2-b8f9-4511-b6be-038c3011f706",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64df720b-9601-435d-b00c-22321f7ba679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b15d108e-4680-4f5d-8154-cf0360d92472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25f2c5b-5b85-4c65-aa2e-40f987821ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b979822-0575-4d60-aa09-6873113555c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ebd77f9c-5413-41be-aa5c-081bc6b6cc75",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2c3f22a-cb23-4e1d-b857-737a9ce1e43a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7448eb8b-01b0-4bd2-8b9f-45f6e58cdc43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ab0adfdf-9a86-451f-9c5c-0767818a67bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "197a55cf-6a0c-4a20-82ea-f886eff7c401",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b25d0cb6-a061-46f7-a5ed-751c51b34289"
                    }
                  }
                ]
              },
              {
                "id": "098f0c60-ff95-4719-9735-b43cba10e88a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "036d8f7e-a3e7-4ac9-bc47-d6362c417ca7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e391ac6b-d410-42a2-a63a-4bb07c8b6d9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b12b934-dd27-429f-b4c0-21626052242e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8534625d-0a15-4773-80ee-a0c633cab373"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0a7b94b-b25a-4654-ad11-11fb039bb3d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "723d917d-d4f5-4a26-99e2-238ebfc78048"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e44ec6b1-e172-49be-8089-25333d9838bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28bdf239-d1dc-4b7e-992c-79327c72a741"
            }
          }
        ]
      },
      {
        "id": "bf8760d8-9014-4a8c-8fdd-171a22dfe038",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a460a775-aa5a-4df2-b318-59408f20d64f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08df54cf-2886-476e-9ea0-6560328cdee5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0491581-6697-437d-a24a-7e447e706cdf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6b299b-3775-4407-9508-0c2d9f00f4da",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ed8536d6-8574-44b1-82e9-1c25f1e5c0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca51b34-229f-47f8-ab1d-2e630f4fed83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80d4dc8e-6628-4c69-9b7b-fc8e19c63a7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b84874b8-3cce-46c3-b1c1-c28e71d1486c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23ed90bb-3200-4f01-a442-82e56030b5df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c18ad96-e9f6-4a96-8002-330b009792df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89de9be0-dad5-4e71-918e-7c640819c520"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7fef854-c603-4ab9-9f33-63b899a87be2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "973b3b12-8faa-4f11-9d8f-48322f78364a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dc7509c-1e75-4949-ab83-3692d9067da3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f362c3d4-6781-47b1-88c4-59ef841a62e6"
            }
          }
        ]
      },
      {
        "id": "e02ebe74-ee39-47f6-abc4-eb2f974df12a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5bdbeaad-6a8e-4922-9de9-00806bca6a3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47118b0d-07ac-4d13-89d1-d208aedbebc6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "122cd700-587e-4ca8-aa43-d9d44230cbb1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97fd366-c16a-4119-984c-0b7f5ccf9891",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dd06478-68bd-4fd0-94a1-14c3f8986ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803201f7-768b-4d58-ad35-2a3728fe6fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc11a809-df82-479a-b8e5-7333cb5adc83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63f67f2e-1b1b-43f6-a43a-3116c0df08de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "054add10-4a4f-4249-9d62-60c6cfb65161"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e64060ba-a873-4f0a-92c0-082700782694",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c7ca4e4-e3d9-4723-a022-8fd0984ef379"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a076edf-1ded-4bdd-9ff2-eb962b946fbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "315890dd-b711-4cc3-8223-db599eb0c12f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66b59c04-0cb8-4fb6-ad79-e845a93a32a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ae377ae-a8b6-4b9f-90f4-8d850ad1d480"
            }
          }
        ]
      },
      {
        "id": "adb4ef4e-d988-40b7-9695-aa2db0dbefea",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5306f121-a2df-45f1-b2ce-a3d0725c8fc6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28472252-ecda-4190-b99d-a894256536d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d00262ac-8265-4e7e-9f7c-a47642df869f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027eed89-e056-4098-84f9-35920338e609",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5a8a039-f9bf-43aa-a344-a237fc83604f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea834a4-613e-4f41-98c0-d7d82df5ce61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3436bde4-ff1d-4405-b4f7-9b61e5d03eaa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bed6574c-e830-4cce-85c0-eaa3207e2f5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87bfa4eb-e35c-422e-8b3b-a93b74ddc69d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ee8af87-02e2-4b52-b081-b5d057c774c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ecbb545-0815-4f4c-ad57-8302d931e928"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ecdaf47-f799-4c1c-93e0-f3363a2c4302",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ebe4f247-e52a-4986-9f3e-06227dab9116"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ae94035-a168-43b8-b251-77d922182581",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae97cc18-5b0c-4e2e-99c2-2e46181004de"
            }
          }
        ]
      },
      {
        "id": "11bbffdf-de5e-4da8-94bb-6bf61cab2f1b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca023c43-63de-4ec9-b64f-0e883a9d7175",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9f40c5c-65fc-464b-86ad-ec9b5cab5274",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "87c8fdbe-faa0-4c31-b365-5b575d6b6c7c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a57be027-f629-4105-92ff-cda3c0218d47",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afe7e963-a013-47a8-88d5-e5f110ad0712",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 72.82105263157895,
      "responseMin": 5,
      "responseMax": 492,
      "responseSd": 32.89845480743027,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708907728083,
      "completed": 1708907757991
    },
    "executions": [
      {
        "id": "69110e1e-7ded-4b43-a534-70e3ba0e3602",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "26088ac3-0400-4187-9a95-e32a7b8ff9c4",
          "httpRequestId": "5dee5558-f07e-4d0b-a570-4a5c2f4f9cd0"
        },
        "item": {
          "id": "69110e1e-7ded-4b43-a534-70e3ba0e3602",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7f2d9ae1-2677-4192-acef-c1ab7f348e21",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "d42ec278-7b3b-4b34-a75f-a960f34615ed",
        "cursor": {
          "ref": "4d133141-2ef7-4bb5-b6d6-4ef50e7d04c2",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "321453f6-33fe-4615-bb8d-ded6f881cb72"
        },
        "item": {
          "id": "d42ec278-7b3b-4b34-a75f-a960f34615ed",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "890e3d94-2692-4238-8ce2-ad58c817dce8",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "9a46fdd2-1055-4fd6-9cb5-6a06c14a333a",
        "cursor": {
          "ref": "2d5b135c-bf7b-4288-8ca5-3c3b24f885ad",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bc691084-e62b-4e9d-a7ac-7ddc197944c0"
        },
        "item": {
          "id": "9a46fdd2-1055-4fd6-9cb5-6a06c14a333a",
          "name": "did_json"
        },
        "response": {
          "id": "2db5a39a-a36a-43be-a7d7-a15c8c6c0797",
          "status": "OK",
          "code": 200,
          "responseTime": 325,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a00dfb2-4ef0-416b-9bfe-fae5d17b4aa0",
        "cursor": {
          "ref": "4c173dfc-eeae-4e4d-bd10-6dd0cce93e79",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e14679e9-fe77-4ec4-a567-de6a21044a9e"
        },
        "item": {
          "id": "4a00dfb2-4ef0-416b-9bfe-fae5d17b4aa0",
          "name": "did:invalid"
        },
        "response": {
          "id": "588a6467-faf0-404d-addc-e18f076bc3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a00dfb2-4ef0-416b-9bfe-fae5d17b4aa0",
        "cursor": {
          "ref": "4c173dfc-eeae-4e4d-bd10-6dd0cce93e79",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e14679e9-fe77-4ec4-a567-de6a21044a9e"
        },
        "item": {
          "id": "4a00dfb2-4ef0-416b-9bfe-fae5d17b4aa0",
          "name": "did:invalid"
        },
        "response": {
          "id": "588a6467-faf0-404d-addc-e18f076bc3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c30aa8a-973e-425d-8ee6-9d4948702d29",
        "cursor": {
          "ref": "ec3a0872-f5b7-4a54-9fe9-079d59cd4484",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7d10090b-4d72-445b-9f7f-f328128764a7"
        },
        "item": {
          "id": "5c30aa8a-973e-425d-8ee6-9d4948702d29",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d1d5d0fd-1bde-45a7-b306-25f18c4b0f55",
          "status": "Not Found",
          "code": 404,
          "responseTime": 180,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae84eb0-b93a-4979-93e7-64ed610b34cd",
        "cursor": {
          "ref": "5553e158-8f98-4faf-bf0b-294e5b5abeae",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3a469eab-f423-4563-af3f-fb4f1e64237c"
        },
        "item": {
          "id": "aae84eb0-b93a-4979-93e7-64ed610b34cd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "30a506bb-6611-439f-a5cd-cfa02a7ed4d9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfef0631-e7ce-45fb-86cf-f901792fe0ba",
        "cursor": {
          "ref": "9dd322fc-7b67-4624-9281-11de770ee45f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dcc0ebc6-481f-418e-936e-7aaeb7845474"
        },
        "item": {
          "id": "cfef0631-e7ce-45fb-86cf-f901792fe0ba",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "50cd4317-c316-4637-ac65-3393ee7b3e33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba1e684-9c7a-4806-898d-4f2b2d6fa965",
        "cursor": {
          "ref": "c8eec1c7-add0-4e79-b6c7-20061594cf56",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e1673b1e-4fea-4ad7-b3e5-00ac06a0921e"
        },
        "item": {
          "id": "cba1e684-9c7a-4806-898d-4f2b2d6fa965",
          "name": "identifiers"
        },
        "response": {
          "id": "f618c832-bedc-4c2c-b589-55156ed02356",
          "status": "OK",
          "code": 200,
          "responseTime": 140,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe9037a-fe28-4db6-92ce-09adadac6cfd",
        "cursor": {
          "ref": "e64213d9-2cb9-4234-b009-c4e15225c933",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ee0fa681-ced9-4644-97f3-162790758dbb"
        },
        "item": {
          "id": "4fe9037a-fe28-4db6-92ce-09adadac6cfd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e90d74e0-4530-4539-a7b1-2220aecff9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfd61a6-8bcd-47d4-abc7-25da0d6069f1",
        "cursor": {
          "ref": "2b827f39-9a1f-4233-85e4-bb5805ba01e2",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2b02f327-a325-43ac-8582-afc5bfc1aad0"
        },
        "item": {
          "id": "ecfd61a6-8bcd-47d4-abc7-25da0d6069f1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f6847ba8-1340-43fc-8770-e0a374b19c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfcb04b-ac68-48f3-8452-2e29448ff44c",
        "cursor": {
          "ref": "0423feae-d9cf-4d98-bc02-9189c405a7be",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c03110fc-b339-4770-9dde-d7cfc0967f2a"
        },
        "item": {
          "id": "8cfcb04b-ac68-48f3-8452-2e29448ff44c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6936a3c6-a1dd-4590-af24-e43fdbff146c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae5d41d-062e-41fe-aa2f-077b4a4f8d0c",
        "cursor": {
          "ref": "cc81c7e7-a7a5-4605-9553-c7a20504b95a",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bbb656e8-137b-4632-a827-18c1056c17b8"
        },
        "item": {
          "id": "2ae5d41d-062e-41fe-aa2f-077b4a4f8d0c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "290d3925-68fd-4365-85a3-c3f65fd0e255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc63d5b-5f84-4f24-b37f-d5501c1f5e0a",
        "cursor": {
          "ref": "866faf85-54ff-4b86-8d1c-698e3e74a920",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "84d7c3dc-b9e2-46a3-84ae-f667f163adb1"
        },
        "item": {
          "id": "8dc63d5b-5f84-4f24-b37f-d5501c1f5e0a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "265376a2-d315-43c2-9ef0-fb4e8b4dcc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f963c9-bc1e-4baf-9bfc-ea8faf1ff560",
        "cursor": {
          "ref": "0fce2394-3ad3-43ef-a1cc-707fd6987b36",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "032cc019-a664-4edd-841a-a8c7c62242f5"
        },
        "item": {
          "id": "f7f963c9-bc1e-4baf-9bfc-ea8faf1ff560",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "310989e8-9a30-4d6b-830a-3cf4094d1a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6293996d-8693-4075-a934-105c4a6e0a51",
        "cursor": {
          "ref": "69eccc82-4f6f-4e0b-81c1-b89b052333b6",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d68e19ac-17d2-4303-9953-adef6ddf7be9"
        },
        "item": {
          "id": "6293996d-8693-4075-a934-105c4a6e0a51",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a3a80d4a-202c-4f0f-85dd-8658593a714d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e916f9-44e8-4834-8bdc-757c83f809e8",
        "cursor": {
          "ref": "a9588ec8-b90e-431d-aae2-7e4d0c522cfc",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "048f8de8-6935-467c-9589-eae7e0009329"
        },
        "item": {
          "id": "03e916f9-44e8-4834-8bdc-757c83f809e8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "291c1d3d-a517-4bdc-a717-74cb6ea690b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9c9368-9e58-4957-86a9-8544f70a4507",
        "cursor": {
          "ref": "03866a80-6393-4a62-b111-905743aacb73",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fd60171a-8122-4c5b-9bdc-c0cf475bd02e"
        },
        "item": {
          "id": "5b9c9368-9e58-4957-86a9-8544f70a4507",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f90b7e70-ea61-458f-b2d3-d4d3741566dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a053484f-be1e-49e7-83e0-3bd9a03e87e9",
        "cursor": {
          "ref": "219e74b9-aa4a-4ce4-96cd-c59dd84aafc3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8dced47a-fe68-4a49-bad6-1264bfcb3c18"
        },
        "item": {
          "id": "a053484f-be1e-49e7-83e0-3bd9a03e87e9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8d8b1bc5-42b7-4bb7-ac14-5e77f63948cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c50e8a6-f76a-4824-a27b-e5aeac80bc3d",
        "cursor": {
          "ref": "62141d03-0a0f-4766-aee8-d86342e0fa90",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e751b719-67d7-44a4-b39e-249fd269f1e7"
        },
        "item": {
          "id": "4c50e8a6-f76a-4824-a27b-e5aeac80bc3d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ee2dbb90-ff2e-419a-81d9-2047f10c4a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b35f113-d52c-4bdc-8a68-635d06deb214",
        "cursor": {
          "ref": "1ee572f2-60ae-460c-be9d-0fc9aba1e687",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "637632ac-1721-4666-a3d0-f793b34b3878"
        },
        "item": {
          "id": "0b35f113-d52c-4bdc-8a68-635d06deb214",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3cf70efb-1310-4d81-9bd7-e7fbbed020c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb420ce-02b9-4896-b9e8-08f976b06d74",
        "cursor": {
          "ref": "915b9fb1-0a5c-4589-b518-8d8db4c5acc8",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c83c3862-477c-43bb-bdeb-2bef394225b5"
        },
        "item": {
          "id": "6eb420ce-02b9-4896-b9e8-08f976b06d74",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f7fbefbd-d9b8-46cd-91bf-26900a43ab43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2307bfa6-2f22-4276-a0e5-07a884d9380a",
        "cursor": {
          "ref": "16bc338c-9501-4651-9562-6029166712bb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d870aee1-c25e-4841-92e2-95282e181243"
        },
        "item": {
          "id": "2307bfa6-2f22-4276-a0e5-07a884d9380a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f6abdf3e-fa10-494d-b830-d39bcd06f8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2c825f-2a6f-4acd-9bb0-2b6745119567",
        "cursor": {
          "ref": "63cf627a-130f-4b30-8e81-10353835da82",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "78f93947-52e9-457a-90cc-169dd05ec141"
        },
        "item": {
          "id": "0a2c825f-2a6f-4acd-9bb0-2b6745119567",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d190839d-a4ca-4cc2-a46e-c892608c34a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c832c32c-6d38-484c-9df3-9ca2d0347d31",
        "cursor": {
          "ref": "ef7710c4-af00-46a9-bbfe-27b9c70cf452",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c436c88d-c2f7-4c3d-ab43-f055bed7639a"
        },
        "item": {
          "id": "c832c32c-6d38-484c-9df3-9ca2d0347d31",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c16b3cbe-fe21-4b50-a12e-532b3f11df52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b157a6-5709-4901-9fc4-de9376c23106",
        "cursor": {
          "ref": "b5d8851b-f70f-4f07-9ad7-ebafe7e39d92",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1ea76536-6223-459a-83e3-9f05a3a680c9"
        },
        "item": {
          "id": "b5b157a6-5709-4901-9fc4-de9376c23106",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0300702c-172f-48bb-ad90-4ff88f2514d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdc0dee-2c06-4c90-9131-45f36c1815a5",
        "cursor": {
          "ref": "d80bcfbf-f074-4528-9a72-a3b8a1efca68",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "57b60842-e4fa-4465-9e0f-0c66f7184421"
        },
        "item": {
          "id": "ffdc0dee-2c06-4c90-9131-45f36c1815a5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cbfc3eeb-eea5-4204-8c5f-ad9f4f81a073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e817e87e-a1df-42e3-9121-b70354abcf2f",
        "cursor": {
          "ref": "fbf5d419-ff11-4082-a42d-e74af7218d5a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bf798cc3-4355-4fd4-9cce-9a5846803e63"
        },
        "item": {
          "id": "e817e87e-a1df-42e3-9121-b70354abcf2f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8b686c2b-484d-446a-bdac-855021ad102a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef1170c-7058-49bf-938b-c5f35d66b368",
        "cursor": {
          "ref": "351a4e53-b661-4b4c-8db5-2cdb9608fcd8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b221231f-2fcf-4a19-a916-be77fd6e2e3b"
        },
        "item": {
          "id": "aef1170c-7058-49bf-938b-c5f35d66b368",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a22e7aeb-e2f6-4f56-b788-254c3182d82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd64906c-9b8e-48f9-983d-59e2a0db2bc2",
        "cursor": {
          "ref": "eb73ab92-7ea4-476f-8655-39b787a6646a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5654d299-2adf-4318-a085-af3ad0e85875"
        },
        "item": {
          "id": "bd64906c-9b8e-48f9-983d-59e2a0db2bc2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d47e9f89-4bee-4a3c-92bc-53a24c87f481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6136cdf-ca7e-4c20-8cd4-483728a09921",
        "cursor": {
          "ref": "701f4a50-0bcd-4963-8845-1214fa5cd898",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2cd94222-9866-43c0-8d5d-f6e24bef9b32"
        },
        "item": {
          "id": "f6136cdf-ca7e-4c20-8cd4-483728a09921",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "30c2e6c3-7091-4748-96cf-346ef0059e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09539d5-7d29-4642-a7bd-9585de9bc97a",
        "cursor": {
          "ref": "d5d2e84c-7306-40ff-956a-d9447c87be9a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "443e8af3-8865-45e8-9659-2201be19ffae"
        },
        "item": {
          "id": "c09539d5-7d29-4642-a7bd-9585de9bc97a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5e4a089e-809b-4d20-a897-40c2c66f3136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855c73da-8317-43c6-bc16-7d1f7d9f781f",
        "cursor": {
          "ref": "a7dbeb6f-aeb3-4d47-b90c-f3608d3c8d02",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "447a35bd-1b51-49f8-bf65-3b6542026e8e"
        },
        "item": {
          "id": "855c73da-8317-43c6-bc16-7d1f7d9f781f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "69f196ef-3e68-4784-beab-8237e523d2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b1543e-e527-4e3a-83d7-abdc3079f7d1",
        "cursor": {
          "ref": "2a29a0a0-88bb-400f-9434-2f373f3e29a8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "03572c5e-c305-4a3c-851f-530217f1b65c"
        },
        "item": {
          "id": "42b1543e-e527-4e3a-83d7-abdc3079f7d1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4e3833fa-cd9e-4abd-9bb9-ec7413babd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d6ab86-9ff7-4e1c-bec4-b305ecb7fe2e",
        "cursor": {
          "ref": "f5d39db3-390a-4dfc-90f2-c0e84195ea71",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4cc3cc1d-cbc1-48a4-b9f1-d782440e6c27"
        },
        "item": {
          "id": "f1d6ab86-9ff7-4e1c-bec4-b305ecb7fe2e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "00420c19-654b-4b66-8108-eda04b306479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534f9778-6bb9-430e-a559-9b4f1e8a98ac",
        "cursor": {
          "ref": "95d589de-03b0-4649-bf4b-11451ef6a539",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ffb11248-788f-4588-8b5b-667876759275"
        },
        "item": {
          "id": "534f9778-6bb9-430e-a559-9b4f1e8a98ac",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "94a73063-88fd-424a-8274-9f2240e7ce19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e216523f-ed98-4550-8c43-acc7c967b5c8",
        "cursor": {
          "ref": "7396f578-7ddb-4d81-adb1-d08367a83ceb",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4bcc6a79-ca29-44eb-82d9-b55be85c8258"
        },
        "item": {
          "id": "e216523f-ed98-4550-8c43-acc7c967b5c8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "179054c7-7874-417c-923d-efa98a145e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd99fa1-bd34-4812-af04-408a60f29040",
        "cursor": {
          "ref": "5a810d12-0b7c-429d-9354-a837a48c3fe4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b6c9abb1-6dc9-4a76-ba53-7b3cbcf3ffc2"
        },
        "item": {
          "id": "9fd99fa1-bd34-4812-af04-408a60f29040",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "88fe455b-f7ee-4a31-8908-36e530972668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5722510-65e0-49cd-b621-e7e64e06c9f7",
        "cursor": {
          "ref": "18e805af-1b69-448d-a2ab-e5e3f8494618",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a9ab317b-a289-4616-86ce-c91385ec4e9b"
        },
        "item": {
          "id": "c5722510-65e0-49cd-b621-e7e64e06c9f7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d2e8e115-158f-4f39-a668-938f5cf21ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedbc2d9-f763-4031-bd87-05b0f6de6d39",
        "cursor": {
          "ref": "f67765db-9a9f-4e91-a952-92305527b0fe",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0dc849c6-3a43-4af0-9bbd-64e91dd84021"
        },
        "item": {
          "id": "bedbc2d9-f763-4031-bd87-05b0f6de6d39",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "480ba22d-39b6-4ec8-8590-b932765ab2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f8ed39-6c62-43a9-8b0a-0044117b4309",
        "cursor": {
          "ref": "ed2389e0-c41f-409a-b513-ecac28a860c7",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4c2c5b56-2c92-4f9f-b402-b15b7a731429"
        },
        "item": {
          "id": "05f8ed39-6c62-43a9-8b0a-0044117b4309",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3f25faad-db83-4f64-a8ec-3731e683ca96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50afb56-fd76-44a7-ac2b-e0b30b78dd67",
        "cursor": {
          "ref": "54a87411-d59f-4ca4-bfb7-f3418994973a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "03c8238b-4b9b-47f9-b631-46c9dfdb3652"
        },
        "item": {
          "id": "e50afb56-fd76-44a7-ac2b-e0b30b78dd67",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "26cea406-18e7-4d26-a9ad-861dd71ea22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3fd7fb-9eb7-4f3b-96bb-d58f27d0e71f",
        "cursor": {
          "ref": "b40bebd1-4963-434d-a2f3-18af71f3e97c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0bc32e21-d537-43d6-87cd-aa4fed88a6b1"
        },
        "item": {
          "id": "bd3fd7fb-9eb7-4f3b-96bb-d58f27d0e71f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0e3bdfc9-1ded-49ed-9f6d-6c1f14b57b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b76ace-bdc6-4b8e-8f42-fbf6bdc8600d",
        "cursor": {
          "ref": "f19907c9-c112-45e4-a1b4-e0e3229e2ece",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2af46762-4921-463d-81e3-4876f881723e"
        },
        "item": {
          "id": "76b76ace-bdc6-4b8e-8f42-fbf6bdc8600d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "786e2559-e15f-40a6-a8b7-1d18b1216cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3111b5-e9d6-4ae7-8da9-e57c85bdc2bf",
        "cursor": {
          "ref": "cb7a0850-6cf4-4fe2-9629-000ae5131a27",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "96604a9e-4eb3-4345-8618-65b3c8b4d804"
        },
        "item": {
          "id": "3e3111b5-e9d6-4ae7-8da9-e57c85bdc2bf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3b91d3db-5b56-46bb-be12-4acff04d3e0f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 97,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0753dd0c-6f8d-49b8-b274-74b04b4591c7",
        "cursor": {
          "ref": "3de92c00-bf0f-4af3-bf1f-a63f1e8aaca2",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "04d1bf8e-4de6-4d8c-b3fc-b1c8f7a21896"
        },
        "item": {
          "id": "0753dd0c-6f8d-49b8-b274-74b04b4591c7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "74048b47-33dc-4ca6-a1c8-490107015569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e70f78-9bca-419a-bb10-40794779fa95",
        "cursor": {
          "ref": "b45991d6-f375-484c-9586-2c1fbc395976",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "119d0283-ded4-4ae9-8ff9-43d7b10fffcd"
        },
        "item": {
          "id": "11e70f78-9bca-419a-bb10-40794779fa95",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "97f6a82b-741c-4539-ae65-173b57cdb7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e033fa6-2d04-4462-8b6a-61fa1d9d5694",
        "cursor": {
          "ref": "55c8815a-fc5b-4835-ad40-52f5e1fc5a2d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "54c2c66c-f8ba-4e9d-8fb4-dc8a38b3ace3"
        },
        "item": {
          "id": "1e033fa6-2d04-4462-8b6a-61fa1d9d5694",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "107dc6ef-7664-46e6-aff7-8eff3c26cf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e482c940-078a-4622-8cb5-4962d304496c",
        "cursor": {
          "ref": "1d7aaa79-9b78-494f-8100-8553ada3a9bf",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c404ba05-81a7-41f3-ab21-7fd974476e80"
        },
        "item": {
          "id": "e482c940-078a-4622-8cb5-4962d304496c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ea0cfeba-08aa-44be-9d17-c71fa8f6935b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defdb64d-32d7-4c3f-adf2-53c3f822981f",
        "cursor": {
          "ref": "1c523c41-b710-4a9b-ad29-7524148bf849",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fdff6853-83b5-4c81-bdad-27a8fe689305"
        },
        "item": {
          "id": "defdb64d-32d7-4c3f-adf2-53c3f822981f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f49f2056-24c9-45ec-849b-e2e514f027ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1866045e-9de5-421a-a28e-a5d2996d8513",
        "cursor": {
          "ref": "5e75bd6c-1ebd-4d96-8708-05e94e3124af",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "43204f6c-2678-4eb9-9bef-2923e0c919a0"
        },
        "item": {
          "id": "1866045e-9de5-421a-a28e-a5d2996d8513",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "61444cec-b3d4-4730-a46a-0d62e0a0cf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd307c8b-12b9-425b-b329-50152fa62d15",
        "cursor": {
          "ref": "8e1b8fea-7245-4418-bb75-4bbb18803c48",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f33504c0-ea0f-40bb-ad32-d25da443ea8f"
        },
        "item": {
          "id": "fd307c8b-12b9-425b-b329-50152fa62d15",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "83c16798-4466-4f33-b321-68e52a79d225",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 83,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb97272c-7060-4840-ae4e-90afd4482aee",
        "cursor": {
          "ref": "e6302037-5582-4e4d-a2b3-5d586dba3eb5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b77c1d9e-5f53-4424-b06c-cc661d40417f"
        },
        "item": {
          "id": "bb97272c-7060-4840-ae4e-90afd4482aee",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fb5fdbb0-5d9a-4a65-8d34-f43d7f79cc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16f1e68-ff52-4c9d-800f-1aa12d5bd539",
        "cursor": {
          "ref": "31a5b180-a5f9-4527-bb72-b56a558962ce",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d13c1417-4ec3-42d3-ba17-b54983abe6f5"
        },
        "item": {
          "id": "f16f1e68-ff52-4c9d-800f-1aa12d5bd539",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8708d1d1-3931-473f-b249-14e71e060ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddb9eb6-ea01-4672-9747-129c10ab4c98",
        "cursor": {
          "ref": "acdb3358-87d7-4ec1-bc46-2989aea382f5",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e45d40d8-2700-44c8-851c-55eaa5b3fc5b"
        },
        "item": {
          "id": "3ddb9eb6-ea01-4672-9747-129c10ab4c98",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "292e4666-58be-4654-b848-61fd6f38520b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761ac61e-d30e-48aa-97b8-353627fdc552",
        "cursor": {
          "ref": "4a3dd04a-be39-4102-a447-8d67290f7db9",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4a2c7700-5623-4340-be17-8ac2f7e5d2de"
        },
        "item": {
          "id": "761ac61e-d30e-48aa-97b8-353627fdc552",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "77eaaee1-3f56-4652-9b8a-a2ca0b5dd84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b495d3f4-7f82-473b-944a-a919ac5ab7ca",
        "cursor": {
          "ref": "d4ca4410-d86a-4fe5-80e8-11122353f7b7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "88c2847f-7cde-45f1-abd5-5f9f6c4d0cc6"
        },
        "item": {
          "id": "b495d3f4-7f82-473b-944a-a919ac5ab7ca",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "50ca37eb-715e-4a02-a2f6-6c6d38a51d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65d809d-b20b-4f89-b581-02ebeb390656",
        "cursor": {
          "ref": "11959bed-59a1-462d-9974-ead1999ffd69",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "09b2425a-5549-4336-92e6-f12ef90acd44"
        },
        "item": {
          "id": "b65d809d-b20b-4f89-b581-02ebeb390656",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ace20298-edf3-4c18-af73-0c6a06f8b39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bca7e96-cf61-4aa3-ad50-ee80353b472a",
        "cursor": {
          "ref": "78e8e73a-dabd-4b8b-8f04-b33db9562321",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bcce7cb3-dec5-4a87-8c26-21d99fad5060"
        },
        "item": {
          "id": "1bca7e96-cf61-4aa3-ad50-ee80353b472a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "39bc054b-589c-4a54-974d-ccee8e1c30b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e50538-d878-4492-b7db-3af04582c6d7",
        "cursor": {
          "ref": "03cf3aa2-ba20-4863-9fd6-fbe92681da9f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3e57cb63-a16b-4819-8403-6c1a4c267e18"
        },
        "item": {
          "id": "e0e50538-d878-4492-b7db-3af04582c6d7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cd2c9f99-7c4d-4b67-b963-577e52f2177c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edc475b-f928-43fe-a59a-2dd170fcfd36",
        "cursor": {
          "ref": "6d506bf3-10bb-40c0-b5dd-010b3e32eedd",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8d892b09-8c2d-49f9-8312-d89739963fc8"
        },
        "item": {
          "id": "7edc475b-f928-43fe-a59a-2dd170fcfd36",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7ad27e30-04dd-4655-aff3-6ca02fd721a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f40885d-031f-403a-a7bc-35ce29488033",
        "cursor": {
          "ref": "185d942d-cf3c-4547-bcaf-e45f4854f4f5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "caf72d86-e0d6-45dd-b910-1fa225d0ec5f"
        },
        "item": {
          "id": "9f40885d-031f-403a-a7bc-35ce29488033",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "69c621f4-fe84-467b-b215-2a10c3a089ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e05a3a-e11b-4e74-a833-c550b3854ef5",
        "cursor": {
          "ref": "fa33ef08-cc8a-4000-b217-012ebf551b53",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f4a6c675-6988-4931-afac-1fc167347a50"
        },
        "item": {
          "id": "95e05a3a-e11b-4e74-a833-c550b3854ef5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0da1a065-6ee9-4d8e-b6dd-9b5fa6cd3af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e260b8ae-9fdc-46df-ae49-aae2babedb74",
        "cursor": {
          "ref": "384ef22d-2f5c-4e08-bb65-aff9cadf7bfa",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3e9ab867-8fdf-4ced-be4e-3c02dc16d78e"
        },
        "item": {
          "id": "e260b8ae-9fdc-46df-ae49-aae2babedb74",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "df449835-0285-486c-a8f2-350de535c624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc15355-1fdc-4822-8a8e-0ceaf52a5a01",
        "cursor": {
          "ref": "3130c22f-90de-41f1-a16d-14c58d0217a8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "eb34bf9d-bb3e-4816-9ae2-5274799f6088"
        },
        "item": {
          "id": "7fc15355-1fdc-4822-8a8e-0ceaf52a5a01",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "15748fc1-b686-4786-9087-9467dd515753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a08016a-42ea-4872-882e-7d9851282876",
        "cursor": {
          "ref": "76f1ab6d-cc0f-436d-8f9d-e3af3934b9b5",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bd2fbed2-a89d-45aa-b632-2c530d6b3758"
        },
        "item": {
          "id": "1a08016a-42ea-4872-882e-7d9851282876",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3159ddd0-3cc9-418d-bd51-a1ce3b37b014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecccc58-5dc2-4dfc-98d5-c55acbe9ad7e",
        "cursor": {
          "ref": "0db96bb4-e2f6-4664-8b04-3aab9f5e54e7",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bd772305-5589-4e4c-865e-6b017f4d30b8"
        },
        "item": {
          "id": "5ecccc58-5dc2-4dfc-98d5-c55acbe9ad7e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c4308fcc-0571-4d07-87ea-3657a21a85ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d828423e-318c-40cc-a8a8-aa5fe0b0e379",
        "cursor": {
          "ref": "60886976-6e12-4251-b4bb-0045c037d893",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d5614dfd-8884-4f4f-8cd1-840f8789e230"
        },
        "item": {
          "id": "d828423e-318c-40cc-a8a8-aa5fe0b0e379",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5cc14acd-f089-4b73-94c6-287109a2d6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d38ef29-9fed-42db-a8d9-ede2f7fc43f8",
        "cursor": {
          "ref": "e30ec5bb-5e67-4051-af96-cf4be02236ce",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "140ff4b0-55c4-443a-98b8-b1fb5d2344f1"
        },
        "item": {
          "id": "2d38ef29-9fed-42db-a8d9-ede2f7fc43f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b95b7258-d166-422d-8fd0-0e245fc60225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549d164a-5d9d-4bf9-8387-fb66426a358f",
        "cursor": {
          "ref": "5e419397-0d43-4acc-96c7-9ebdd23b015b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "717d5212-d7bc-4008-a5d0-82198bbd6951"
        },
        "item": {
          "id": "549d164a-5d9d-4bf9-8387-fb66426a358f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d6034dd3-e415-49a2-a248-ac07ecd9a234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20032ee3-6022-4edd-a838-ddb2f2ac2e79",
        "cursor": {
          "ref": "d572c0a6-e3d5-4b63-a952-596fa6d6e8f7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2a29973c-7214-4990-b1ea-be483eb430d3"
        },
        "item": {
          "id": "20032ee3-6022-4edd-a838-ddb2f2ac2e79",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3a909163-f0bb-467b-a2fa-180ece2dbe7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db94766-8ed3-4867-90f8-274e97a0f2bb",
        "cursor": {
          "ref": "89981d32-b0cc-414d-af37-e4128866f86e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0bf9a455-409c-4f2e-b0ec-051d887883c0"
        },
        "item": {
          "id": "3db94766-8ed3-4867-90f8-274e97a0f2bb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2f8d0401-97b5-4907-b511-0e5066adaab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61703c6e-cb77-435d-8538-24bd45d4148b",
        "cursor": {
          "ref": "8944bdd9-b450-4bc3-ac30-d5a1f3300619",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "629314e1-198d-417c-964c-dca0a570a09b"
        },
        "item": {
          "id": "61703c6e-cb77-435d-8538-24bd45d4148b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6122ed74-c468-4b07-828a-6416bdfe8f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d8942a-fd6d-48e2-8c82-69b3c45977c5",
        "cursor": {
          "ref": "f1f7d078-33a9-4b39-acc2-cab3d3eb8d46",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bfc6808f-6383-4552-a170-7113e3635370"
        },
        "item": {
          "id": "a2d8942a-fd6d-48e2-8c82-69b3c45977c5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "07ab3f2a-9671-407a-b783-f66f135a4353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29f4683-f5b7-4056-86bf-fa1d970b3584",
        "cursor": {
          "ref": "9a875eb5-ad2d-4686-a507-d0ebf8fa39a5",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d2e4a32c-d3c5-405c-8c25-f2a1995fc733"
        },
        "item": {
          "id": "b29f4683-f5b7-4056-86bf-fa1d970b3584",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "660583cf-73f6-4ea9-9e16-16cbeece71e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e89402-80dc-44e7-b093-f93278f3c5f2",
        "cursor": {
          "ref": "cb82440a-6b40-40b7-994b-d04dcd729420",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "258c7346-1679-4a8e-98e9-266318ca8509"
        },
        "item": {
          "id": "d2e89402-80dc-44e7-b093-f93278f3c5f2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5f6dc06d-5835-43a4-9e03-34bde200e1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233da76a-38b3-46df-a631-de4e10a7b54d",
        "cursor": {
          "ref": "f7a94cb4-4244-40c5-8412-a87089d7bae8",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6857c34b-c7ec-4d5c-bbfb-eb1550e583b4"
        },
        "item": {
          "id": "233da76a-38b3-46df-a631-de4e10a7b54d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "84b995d0-0180-403b-9ab1-0b966d618413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1186a2-c4d4-487b-8876-ef1278c8ddaf",
        "cursor": {
          "ref": "0992ee11-09d3-4ee4-af7d-7711e88ca1ef",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3e05caf7-b3b6-4987-a4db-bbee88df106e"
        },
        "item": {
          "id": "ac1186a2-c4d4-487b-8876-ef1278c8ddaf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "14a828ab-4d28-4b79-88d6-722dd7be99a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031824ef-d964-49ca-b0d9-f9e3b30a0500",
        "cursor": {
          "ref": "af2ac0ea-85de-4591-b959-ca4c0dc2a06a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "68cd7ad2-9b65-4a95-93bc-81d26ec3cb58"
        },
        "item": {
          "id": "031824ef-d964-49ca-b0d9-f9e3b30a0500",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1c168a4e-ef98-4335-9596-6f447c48ea0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77176c1-d73e-4b5a-88a5-2eed1b039d9c",
        "cursor": {
          "ref": "4c3edb3e-8dcf-439c-842a-3bb4016756dd",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8ddb55ce-a65f-444e-b301-a653b683fed9"
        },
        "item": {
          "id": "f77176c1-d73e-4b5a-88a5-2eed1b039d9c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4afcdef7-5067-4e61-aec9-c7093e29ccd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dbf011-7c1e-4120-8f8b-c06addce5349",
        "cursor": {
          "ref": "1962931c-20c8-4a4a-b8ec-3aab6a333870",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6d1a21ed-773d-439c-825e-19409521fb2e"
        },
        "item": {
          "id": "88dbf011-7c1e-4120-8f8b-c06addce5349",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a62fae33-b0ae-476b-addb-9ad39042c87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4deea09-405e-4fbd-afd5-7d94c65700cf",
        "cursor": {
          "ref": "8758b576-99e3-43a9-acda-5a5efb9ab785",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a6c29e0c-5dab-4502-ba58-da1c95eaac55"
        },
        "item": {
          "id": "c4deea09-405e-4fbd-afd5-7d94c65700cf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9d0b4269-99d7-4bc5-866c-511c93dc3b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2528764-81ff-44be-997d-86b1abff4763",
        "cursor": {
          "ref": "2bf81812-1b91-47b6-8b0e-0509f1e50e6f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6fa6ec84-1263-48a1-a59e-c1284c396fc6"
        },
        "item": {
          "id": "c2528764-81ff-44be-997d-86b1abff4763",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "aa07504a-ccb6-4c30-bf61-b490204a1d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3acd13-bba5-4789-a0ce-0966114dbddf",
        "cursor": {
          "ref": "c7b2d5d9-fe76-4cbb-86a5-764b1c18dd73",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2d2982c0-a018-41e7-82f3-c3d637a5c23d"
        },
        "item": {
          "id": "da3acd13-bba5-4789-a0ce-0966114dbddf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c5c49618-3ca9-4a4f-8fff-fcc283ac6539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f70d15e-895f-40a3-8313-03bd569cd99f",
        "cursor": {
          "ref": "ba907429-bb11-4663-b691-a593f67efd06",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "710381fd-8ed3-44a2-a439-44eb2abd0fb3"
        },
        "item": {
          "id": "0f70d15e-895f-40a3-8313-03bd569cd99f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a75a280e-99a7-4d6e-a6c3-1ba195a75049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b1352d-51cd-4fe8-9210-b5c79bd313e1",
        "cursor": {
          "ref": "5738da88-21ba-4950-88a5-0220aeab3697",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4dca7fe4-27ec-4806-82ff-48c2a89646a8"
        },
        "item": {
          "id": "79b1352d-51cd-4fe8-9210-b5c79bd313e1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8bffd601-cc13-46a0-bff7-6ca40df9a0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2311961e-a7cb-40ad-a56c-b79527d3a694",
        "cursor": {
          "ref": "14bb58b0-1a8f-4ff1-9029-e1f01e25810b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "66b36519-f0a2-44c3-a243-eb10c968a6b6"
        },
        "item": {
          "id": "2311961e-a7cb-40ad-a56c-b79527d3a694",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "33f2f57c-4f96-474f-96d1-4d9e0b3a5766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccd988e-06b1-412b-8971-765ec518e5ac",
        "cursor": {
          "ref": "91f336cf-f71a-4abe-8f34-46c8de053ca1",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "342748f1-f4ae-472f-934c-6b0d1ae473ff"
        },
        "item": {
          "id": "0ccd988e-06b1-412b-8971-765ec518e5ac",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d1f00207-6636-4108-9159-6f1d9b34b488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81a1f00-7eca-445a-b45a-506c699946e8",
        "cursor": {
          "ref": "8425334c-7cb9-44a2-8608-b36de76a41d1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "357eb972-7d84-400e-a2f5-643434b452a7"
        },
        "item": {
          "id": "f81a1f00-7eca-445a-b45a-506c699946e8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d99b5879-7d05-4f64-9e75-f456a4f1b508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0537b070-8cc3-4efe-996b-e26417b046d7",
        "cursor": {
          "ref": "0cac227b-e5ba-44d9-aa8e-43d5d9fdeaf5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b3f0d265-af7e-4ed2-a1ac-c79e54e35ae5"
        },
        "item": {
          "id": "0537b070-8cc3-4efe-996b-e26417b046d7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6f4573d2-cb71-41dc-a480-952e6ab27160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acfb684-4fd4-41f1-b66d-2feaf908ad7c",
        "cursor": {
          "ref": "7a44ad5c-b889-4d17-b09d-a07ec72fc4b5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5ccdf28d-11ed-49c8-bede-8a8886c5c111"
        },
        "item": {
          "id": "2acfb684-4fd4-41f1-b66d-2feaf908ad7c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d87db0be-4658-410c-b750-a3d4e0b2f215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea182a35-4e10-48d5-a3a2-1f2d3435e210",
        "cursor": {
          "ref": "4255d1be-f4f7-4f6d-b04f-eff14109d1f6",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3206167a-b0f9-47bc-b7da-53d3c1303beb"
        },
        "item": {
          "id": "ea182a35-4e10-48d5-a3a2-1f2d3435e210",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d0d82729-1c9d-44e5-b5a3-ee8c4ad405f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3c1a72-6d29-4fde-b240-23ebe0af35ec",
        "cursor": {
          "ref": "630e35fc-66e8-48a8-9186-9659592b772a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "15ca427c-e862-482c-85de-661d6624e7d3"
        },
        "item": {
          "id": "cd3c1a72-6d29-4fde-b240-23ebe0af35ec",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e787df1f-c063-4f5c-ac4b-3665faeaae28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fe7348-6f93-41c8-a792-bef26114650e",
        "cursor": {
          "ref": "a34afdc4-4562-4d6b-977a-8ccad8338e2d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9d5557fa-2edd-49a1-9f2d-3eec9fe4cc1c"
        },
        "item": {
          "id": "97fe7348-6f93-41c8-a792-bef26114650e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a5062bbf-1c6f-4e5a-9067-cc28e6c00bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd07d82c-bba6-4eb6-a6f1-8800d9184e04",
        "cursor": {
          "ref": "725f89d6-d520-470e-9c13-bc3b70b3e3d9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e88d4a8a-5304-4c47-ab9c-a4ed93576325"
        },
        "item": {
          "id": "dd07d82c-bba6-4eb6-a6f1-8800d9184e04",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8f8da3e9-cf3b-41da-8cda-427c00bb99a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9055be64-6e74-4b4b-be33-23382f169a87",
        "cursor": {
          "ref": "09dd3506-561e-41ee-b223-e9ad11b36de1",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "61401579-f329-4e5a-b908-94606f7a7259"
        },
        "item": {
          "id": "9055be64-6e74-4b4b-be33-23382f169a87",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8f7492ea-d8e9-4026-b224-4ce19412c87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983c0294-9ecb-403b-b000-80d41ad43f51",
        "cursor": {
          "ref": "49b531c1-1b9c-440c-b9eb-f05a2023c0e3",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f593f760-4c9c-4e73-847a-ae89720c27af"
        },
        "item": {
          "id": "983c0294-9ecb-403b-b000-80d41ad43f51",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d3d29d46-fa7f-4671-8131-f9090f57f02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbf65b4-32c7-486c-bb13-b8cc84b059af",
        "cursor": {
          "ref": "d65f0ea5-e8de-4f48-83a2-2af80311c83d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5a289061-8542-4589-8bf9-bf98d76c8d4c"
        },
        "item": {
          "id": "fbbf65b4-32c7-486c-bb13-b8cc84b059af",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f6a3177b-951b-429e-b9c6-726ddb995dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f5824d-83ab-497c-81c0-3eca974c5b05",
        "cursor": {
          "ref": "71eda327-53b5-4c04-8b2f-d3fbccff13dd",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bc9c0763-ca90-40b5-9bcb-ee0063c03df9"
        },
        "item": {
          "id": "00f5824d-83ab-497c-81c0-3eca974c5b05",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b5c575cb-0f1e-46b7-8f58-fea7e3504b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d66a49-6214-40a4-afab-77cf3e83c349",
        "cursor": {
          "ref": "075f5238-1e24-4fa1-8c96-94dff7d1ba54",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dbc59773-f562-4c38-b8ae-83e4b9d16cdc"
        },
        "item": {
          "id": "54d66a49-6214-40a4-afab-77cf3e83c349",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a79149ba-5403-4d60-aa31-8b055faf57ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94588b55-8736-429f-a8ee-dfbbc00605f6",
        "cursor": {
          "ref": "f4242f71-4213-49e3-abba-f884f97479ce",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ee9c356a-81b1-47aa-8da7-e90ef6886d55"
        },
        "item": {
          "id": "94588b55-8736-429f-a8ee-dfbbc00605f6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3d03471f-4b3c-4669-ab82-595ef8751bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841b486a-8386-4705-9e64-1c56c6a03dac",
        "cursor": {
          "ref": "dfc8b323-f6a6-4ed7-9e24-39e7213673fe",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3dc55743-5910-4dc1-abb5-cd1aa877aa1c"
        },
        "item": {
          "id": "841b486a-8386-4705-9e64-1c56c6a03dac",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b54a951e-0e1b-4da5-a047-6013a1c4f738",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9814e7-48a1-4529-956f-4a24d1299d34",
        "cursor": {
          "ref": "d1ecc953-4549-45e2-a34c-70bab6c19fed",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a69588e0-0a8e-4141-852c-2523b69f0e9e"
        },
        "item": {
          "id": "fd9814e7-48a1-4529-956f-4a24d1299d34",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b0c2e385-10a1-4376-9d9f-7054987e170d",
          "status": "Created",
          "code": 201,
          "responseTime": 115,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ef9315-56e2-4ea2-9713-d8e58e6e41b0",
        "cursor": {
          "ref": "cbd0aa5f-a81b-4a8a-bcac-8a142545ece6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "07c1f6e2-908e-4903-8024-59ab05ea4e45"
        },
        "item": {
          "id": "f8ef9315-56e2-4ea2-9713-d8e58e6e41b0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e2769162-4e1c-48d5-89c1-e04122dca3bb",
          "status": "Created",
          "code": 201,
          "responseTime": 492,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9de209c-4971-4c98-81d3-c6cd000deb6a",
        "cursor": {
          "ref": "bc140e30-0cfd-43e4-a0fa-d90b29ddadaf",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9f778b70-c579-47ce-a54d-291339deaa4a"
        },
        "item": {
          "id": "b9de209c-4971-4c98-81d3-c6cd000deb6a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "97f4d2f7-007d-4f6a-9e2c-1bf805aa3127",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a22431-978b-442e-9f16-0376accd77b8",
        "cursor": {
          "ref": "3946816d-02af-4064-b45f-19ea472f840d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a649c07a-96bf-46ba-8be9-28fb9990dd42"
        },
        "item": {
          "id": "70a22431-978b-442e-9f16-0376accd77b8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "312e8618-1246-4093-b7f2-2869f1e30e76",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0ba44b-ae98-4b24-9334-e829ad26858a",
        "cursor": {
          "ref": "7753bc15-54c0-46d5-902b-2fb99c3b9bc4",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8431031c-7e18-4ab9-a6a6-117e58b17831"
        },
        "item": {
          "id": "4c0ba44b-ae98-4b24-9334-e829ad26858a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ea5cd175-d69d-4b34-8c97-aaac5a197025",
          "status": "Created",
          "code": 201,
          "responseTime": 95,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd82c191-aaad-4701-b368-fb302e005827",
        "cursor": {
          "ref": "5c719762-9b76-4cd8-8340-f8876d0474b6",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "896b3486-5920-4720-b2c7-83c3a3cefe1e"
        },
        "item": {
          "id": "fd82c191-aaad-4701-b368-fb302e005827",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6391b96c-cd4b-405a-bee7-6970ee3d46ce",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a431881d-b1e2-45a9-a5b3-dbbb05ef91b0",
        "cursor": {
          "ref": "e016c234-c39a-42b6-afa6-4d920ac42938",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ff792822-72bd-430e-b72d-b4423eb840da"
        },
        "item": {
          "id": "a431881d-b1e2-45a9-a5b3-dbbb05ef91b0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "43cdac6f-1d33-4d58-ac55-4d32e732564e",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36ba188-7710-4706-9a5e-722872c084b8",
        "cursor": {
          "ref": "81b49566-4bd1-4e4d-8086-6cdff9ed1fa5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c6bc810e-0d85-49e4-b926-d2e680210858"
        },
        "item": {
          "id": "c36ba188-7710-4706-9a5e-722872c084b8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3d359510-28b8-4484-95e9-348ea4614688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97936d7-77ac-4e18-9785-c4610d3191fb",
        "cursor": {
          "ref": "20f7bd95-df9c-4857-990f-60c6aaf1f43d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "48474556-12b0-4ae4-8125-05459ffbc642"
        },
        "item": {
          "id": "d97936d7-77ac-4e18-9785-c4610d3191fb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a1fca5b9-5c02-43d5-8eab-c2adc47cbe17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7f8d1f-b7e1-4192-9104-efd71a1953d3",
        "cursor": {
          "ref": "95f9002d-8eac-4a2e-9653-827e6a53dc0e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "98590d9c-612e-4618-9ee2-fc27be02f0f3"
        },
        "item": {
          "id": "8b7f8d1f-b7e1-4192-9104-efd71a1953d3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "00e16efd-d7da-488f-bdd3-ea85f604daeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d527c33-21b0-4cf1-af7a-27b3c8003056",
        "cursor": {
          "ref": "3d4d61a5-c2e6-4a81-86d9-ee71db6646bb",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ec6d2803-b451-4692-a484-f7df4e9b1b9e"
        },
        "item": {
          "id": "0d527c33-21b0-4cf1-af7a-27b3c8003056",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "40a0e836-c651-42fa-b8f2-470612d7806f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934a0e86-4db2-402f-aafb-9d1eb944b6f0",
        "cursor": {
          "ref": "05891ad6-6a9d-4387-907a-3b4a63483abd",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c72e2141-2a29-4c68-b339-f047aa8042de"
        },
        "item": {
          "id": "934a0e86-4db2-402f-aafb-9d1eb944b6f0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4a42f5ce-40c7-43e6-a6ff-ca9d4f860f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17278410-af95-4dfe-bace-5044ac6a55fb",
        "cursor": {
          "ref": "26863a5b-8e3a-44cd-9654-d6a5eeb06f84",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "adf2670c-c990-4dd5-96e3-9cfd5b291bc5"
        },
        "item": {
          "id": "17278410-af95-4dfe-bace-5044ac6a55fb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7007163a-94ea-464c-92ff-cd69a915ce98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4568ee5-6086-436e-9d8b-ed5751464673",
        "cursor": {
          "ref": "5129f656-9f16-4433-9e82-0d63b50eea91",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0bda3cfa-9841-40b5-b79b-e479bfe607f6"
        },
        "item": {
          "id": "a4568ee5-6086-436e-9d8b-ed5751464673",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "19d71c81-f82f-4f5a-916f-f2f39579135b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f338e92-2110-45c2-9d5e-ff27d048baa6",
        "cursor": {
          "ref": "545449c9-3be9-4c8e-a4bb-349ed2c88952",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cd46aef5-3523-41e7-80a3-5df6110aea15"
        },
        "item": {
          "id": "2f338e92-2110-45c2-9d5e-ff27d048baa6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c2c78105-15aa-43a3-aa3b-1c7dd6bd1b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba1927d-8f2e-448f-9592-7de74c78e352",
        "cursor": {
          "ref": "53a28e08-b490-4a53-bdd6-ae8b3dded4ee",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "13cee3f1-5454-4ecd-9ca4-2e97608e557a"
        },
        "item": {
          "id": "7ba1927d-8f2e-448f-9592-7de74c78e352",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3eb70a0e-3980-4270-a008-b20487fecac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ba543c-3ac0-4741-82a2-addf124f7254",
        "cursor": {
          "ref": "bc8bf666-75b0-4d12-b8ef-a5d375775541",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a0aa091c-6eb6-4a85-90f3-3ed1f385ccab"
        },
        "item": {
          "id": "a3ba543c-3ac0-4741-82a2-addf124f7254",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c880996a-b7b5-46cd-91dd-4759952cd407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52ea1f5-823e-46e1-a22b-0f124fb27fb1",
        "cursor": {
          "ref": "486f408b-7f2c-4753-ae28-f6594dfd1a8f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3013b6c6-9c7f-4fcc-ba4f-dbbbb0b4fa1c"
        },
        "item": {
          "id": "e52ea1f5-823e-46e1-a22b-0f124fb27fb1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "227ec090-17d0-4e97-9462-54f640efc301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00241fc-981b-47f4-99a4-2a07af024f04",
        "cursor": {
          "ref": "08265e06-8de1-4368-b2af-9b7184987802",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f6f7522b-61b4-43fb-9969-f03a90d13a79"
        },
        "item": {
          "id": "a00241fc-981b-47f4-99a4-2a07af024f04",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b820bc2d-a204-4e3e-a272-6ef388e73e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2216f2d8-b702-4757-98f5-5a523a7a3527",
        "cursor": {
          "ref": "a341e3a3-c597-448b-90a6-65790398d03c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8e4e91d9-f53b-4026-a0f9-1fc79df98af3"
        },
        "item": {
          "id": "2216f2d8-b702-4757-98f5-5a523a7a3527",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bb2a7e02-2871-4051-818f-5dfc7f61330a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c8d9c1-d28d-4258-979f-ccd1bd9e42b0",
        "cursor": {
          "ref": "6264a1bf-e618-4c83-8200-4bbb284d4d1a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8168636c-ec1c-4c57-b1c0-1fb0e0f99bb8"
        },
        "item": {
          "id": "33c8d9c1-d28d-4258-979f-ccd1bd9e42b0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "13d89faa-c637-4dda-96cb-73493c476671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1cc566-7154-4a87-8a36-87f331655ab0",
        "cursor": {
          "ref": "267ba651-829b-4f8b-a43d-3f1749e1b3aa",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2af690d7-da1f-4134-a9e8-919987e23415"
        },
        "item": {
          "id": "3a1cc566-7154-4a87-8a36-87f331655ab0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "36b89759-5bc7-4cf7-9192-f890410c7cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d9afab-f1ee-48f7-89a7-6526a29796eb",
        "cursor": {
          "ref": "3abffad1-39ed-4df4-85dd-defd9fb5bf0b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "481a071e-7841-4446-823c-c33f6978ff28"
        },
        "item": {
          "id": "72d9afab-f1ee-48f7-89a7-6526a29796eb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0e169ba5-b523-44ad-bb40-1e222be303f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f35c089-86a4-41eb-a6c3-fbea9a2f1ae2",
        "cursor": {
          "ref": "fd5e4429-7d0c-4f9b-a674-2efb1156cf7c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a8921635-8ed4-453f-bd2b-ac7deaa5b046"
        },
        "item": {
          "id": "6f35c089-86a4-41eb-a6c3-fbea9a2f1ae2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "82efa31c-4e54-40ad-9f28-57dcce842ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00679e7-ed51-477b-93ad-15f6acf62875",
        "cursor": {
          "ref": "70bc8935-c95e-4ea7-8624-1df2445a1fb7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6ad8115e-be9b-4807-81fd-a4c66adc5276"
        },
        "item": {
          "id": "e00679e7-ed51-477b-93ad-15f6acf62875",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3b8b207b-8463-4bcf-a039-e65fcae39b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2adc81-ac22-4341-9007-0a4d8ef6ab0b",
        "cursor": {
          "ref": "05065ad2-47bc-483a-b763-f945fdfdc1c7",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d27e2f1f-b9d1-4df8-ac7e-57335db3e51b"
        },
        "item": {
          "id": "2c2adc81-ac22-4341-9007-0a4d8ef6ab0b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c6e3cac5-61ad-4ac5-89c7-f9b7c507fdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15acea0-8fd9-4326-b19e-712421adb5cf",
        "cursor": {
          "ref": "436c609f-2b5d-47ff-9a44-9ccee9c1b901",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "40900c2f-3ab8-4c70-9844-3ce1a87c8e82"
        },
        "item": {
          "id": "c15acea0-8fd9-4326-b19e-712421adb5cf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f4a82cae-6f91-4010-8c9b-b8d024c851d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f82042-d463-440c-b871-477cb122e057",
        "cursor": {
          "ref": "32be4b33-8a96-401a-a405-472e2df7f2fa",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d4922861-6048-418b-9102-85f1cdde51d0"
        },
        "item": {
          "id": "46f82042-d463-440c-b871-477cb122e057",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8084f0b7-1d30-42bb-b203-ef40dbd201ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7eae88-5f9e-4054-bf27-518efe27af72",
        "cursor": {
          "ref": "5280618a-9a33-4178-a340-115de9587cb1",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6b32b703-c669-4305-b820-fc934f6312b8"
        },
        "item": {
          "id": "2e7eae88-5f9e-4054-bf27-518efe27af72",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9a2f7b67-d69e-4999-9db6-c57fd536c7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06bb8f6-6594-450c-907e-d259552866d7",
        "cursor": {
          "ref": "47bf53a8-f81d-49e4-bd8d-8240f7b49ef6",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6799e418-5cd9-4533-945e-cb970413777d"
        },
        "item": {
          "id": "d06bb8f6-6594-450c-907e-d259552866d7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6ec50d68-1755-4cf0-9f8c-da4ed4c150a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e4915a-0600-4391-ab6d-a710182ecead",
        "cursor": {
          "ref": "a084e608-75ac-4e71-a811-076dcfb6e06b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "41093e5d-7400-4b76-80c1-00ce97714a49"
        },
        "item": {
          "id": "06e4915a-0600-4391-ab6d-a710182ecead",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7c9fa63a-1f5b-4466-89a1-65c17936d384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b1654b-cc21-4215-a568-a2568beb60ef",
        "cursor": {
          "ref": "a7d2b814-e5b6-4fca-9c25-57a1a3d677aa",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bdded2d5-a600-4c29-8861-d0e3a7b9a92c"
        },
        "item": {
          "id": "e0b1654b-cc21-4215-a568-a2568beb60ef",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8aa14198-f67f-4668-8c4c-17dd937bf7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a96c5b5-7298-4c94-ac16-5c8b9c663df9",
        "cursor": {
          "ref": "c809a7fb-2032-4b29-96f8-fcdfea03525c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "365703c3-0b2d-4c86-88b3-91f2f5a233ca"
        },
        "item": {
          "id": "8a96c5b5-7298-4c94-ac16-5c8b9c663df9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3cb8083d-7560-44b1-861d-bb311ffc96bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8d0285-32f7-45d1-b669-d9cf62cbecd9",
        "cursor": {
          "ref": "e13f7765-50ab-41cc-b444-c59f2d645e2e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "de8b7a2e-79f2-4a1f-a393-4bad78ae639d"
        },
        "item": {
          "id": "7d8d0285-32f7-45d1-b669-d9cf62cbecd9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c82c6b9c-be04-4a63-86a7-3e2d50e0e1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f088df-4a89-4c5b-9d65-ad9c694cfba8",
        "cursor": {
          "ref": "6428ee52-932b-4f30-99bf-df520bf6bbfe",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a177f561-823e-4259-b6b1-b66a4798f57a"
        },
        "item": {
          "id": "c3f088df-4a89-4c5b-9d65-ad9c694cfba8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "450e479b-b22e-4988-99f7-ce0f57e8aec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3582f2c-1df9-44c2-9974-73d66d3f807c",
        "cursor": {
          "ref": "6bd0e0cf-18eb-497e-9a0e-a1b4b4d72655",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "51e54927-7abf-4e5d-8ac4-cad3f6b8a7f2"
        },
        "item": {
          "id": "d3582f2c-1df9-44c2-9974-73d66d3f807c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "91022d0f-75cd-427f-8bea-5a10e11e832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a723dfb9-9727-407d-91a0-dbbea4560cfa",
        "cursor": {
          "ref": "ab0a6aa6-daf9-4262-95ab-39fd7065ea45",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d24636b3-55f4-457a-a447-a6c79aa10383"
        },
        "item": {
          "id": "a723dfb9-9727-407d-91a0-dbbea4560cfa",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3e37405f-9bbb-4116-bd6a-1240d18dd1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53877889-dc41-4227-ace7-6e9717e95a97",
        "cursor": {
          "ref": "a5f41a52-a1b9-4998-b2bb-13853d03f60f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c90910e4-a4c2-4b3a-af05-f6bb5fb6f94b"
        },
        "item": {
          "id": "53877889-dc41-4227-ace7-6e9717e95a97",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "867f3d14-200a-44c8-ad1a-f8d5bcad5b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4201bd17-96ff-4371-a1fb-f7b9d1efffdc",
        "cursor": {
          "ref": "02f81a74-16a8-409d-a464-d32777cc34bc",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ddd888b2-19a8-491e-b2aa-e0dbc8b6f05d"
        },
        "item": {
          "id": "4201bd17-96ff-4371-a1fb-f7b9d1efffdc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b5d48139-e444-426c-88b0-256aea096b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46700546-f3b9-42fd-a1d2-b7d3857ea949",
        "cursor": {
          "ref": "1ace9d18-ab29-40fb-975a-cfb629c8ab15",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "601eac8e-3bca-483d-81e3-48df5a68bf86"
        },
        "item": {
          "id": "46700546-f3b9-42fd-a1d2-b7d3857ea949",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f1a7245c-432c-4883-a40a-02deda702f56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3441f76-8295-4360-9dc7-a39dab661a9b",
        "cursor": {
          "ref": "38b17bb7-7987-44cd-b281-1e3001b8ab47",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f24a74d8-f74d-453c-bd79-467b5902d302"
        },
        "item": {
          "id": "f3441f76-8295-4360-9dc7-a39dab661a9b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ff493375-040b-415b-8fc1-301fa15fb4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896ed15b-be43-4c7e-92f1-09f76b76e13d",
        "cursor": {
          "ref": "e856b1a8-036c-4d69-b762-c2d119e7a023",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "db2b1400-81c1-4492-9ec2-7ef36fb36ad2"
        },
        "item": {
          "id": "896ed15b-be43-4c7e-92f1-09f76b76e13d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "566ac683-6a8a-43f8-8de3-a274c7642b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a18815-21d3-401d-b9d2-5fc50c78a868",
        "cursor": {
          "ref": "7c72daff-af66-449d-b03b-32dbc16572c9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d4d9fcae-46e5-4a2f-9a53-4434188cfa2d"
        },
        "item": {
          "id": "07a18815-21d3-401d-b9d2-5fc50c78a868",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "71a5acc5-3783-4803-b2fc-705227d2a590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda4b19e-cc39-4507-8cb0-b1cdc4b66590",
        "cursor": {
          "ref": "040a1eca-711d-4ebb-8c9b-c528c35dd5a3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "eb9b6ff2-1931-4831-b8a2-306e4f382b3b"
        },
        "item": {
          "id": "cda4b19e-cc39-4507-8cb0-b1cdc4b66590",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "73522e17-7e6e-4a44-a034-a13c766c0494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e52cba-13f9-43e1-ac9f-223754e7262b",
        "cursor": {
          "ref": "0d5e785b-59ca-4463-a328-9b8a593295bc",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "72232847-c4af-4b7d-8cb7-81e9056fa515"
        },
        "item": {
          "id": "08e52cba-13f9-43e1-ac9f-223754e7262b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8e566c08-5dcd-4dbd-9c86-5543053d6d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a425929f-df70-4ebc-a906-1cd29a62619d",
        "cursor": {
          "ref": "44067939-98e4-4b86-94fb-c428eb8ab7fe",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1cfdea14-2ba9-403e-aa65-9d75da6d3e04"
        },
        "item": {
          "id": "a425929f-df70-4ebc-a906-1cd29a62619d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dfae4434-83a4-49be-b9c5-15b9650b136b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558c4210-4dea-49bb-b9c9-68871d3795d8",
        "cursor": {
          "ref": "d1287541-ee01-4598-9c74-d077fd190c55",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7f990fcf-a03a-4927-8933-a3127f69f222"
        },
        "item": {
          "id": "558c4210-4dea-49bb-b9c9-68871d3795d8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7723f7bd-8a4c-4394-9f40-eb76628c5802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5f2050-353e-4f8f-99f3-715d1521e4ee",
        "cursor": {
          "ref": "29619888-a153-4b9d-adad-1c0fd8eb5d29",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "742d596d-9cd8-4250-bd45-f0a951997fcf"
        },
        "item": {
          "id": "9c5f2050-353e-4f8f-99f3-715d1521e4ee",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c9ddc38-63f6-47a0-8fd3-849e7f4e3c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54b796a-d7ff-4448-8877-3b93a026a30a",
        "cursor": {
          "ref": "959a51cd-85ac-4627-8023-8b7ae7f4e402",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a5105bad-803f-46d9-9054-0673b6654496"
        },
        "item": {
          "id": "b54b796a-d7ff-4448-8877-3b93a026a30a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "37be735d-6ce6-4eb4-ad35-3318923d6dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c954bd4-d2ee-450c-af85-693d977b01a3",
        "cursor": {
          "ref": "fd81495b-7e66-4708-a602-c4d1d302291b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "71baf268-b7f8-470b-876d-205416700ebf"
        },
        "item": {
          "id": "8c954bd4-d2ee-450c-af85-693d977b01a3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f22a6e6c-95db-446d-ba77-0c4c74e1229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4684d1-d6a9-4502-85f9-2049c60e80f8",
        "cursor": {
          "ref": "070674d2-d908-41a7-a333-84fdc8be81a9",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "23bca0a4-657d-49ca-8fff-8a7e5223ee4c"
        },
        "item": {
          "id": "5d4684d1-d6a9-4502-85f9-2049c60e80f8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "267c8f78-c7f2-4d28-aa64-e8c530bad08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f51248-1352-4b43-aff2-7f71fc48279c",
        "cursor": {
          "ref": "0043162b-8d2c-4ecb-9fa6-2b3ebf0413ce",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "72976f74-d16b-46e5-964e-d04fd4638cd7"
        },
        "item": {
          "id": "12f51248-1352-4b43-aff2-7f71fc48279c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b2683f89-5181-4a15-8c26-167726b63e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d857eaf2-a403-4a81-bc1f-897c0196f861",
        "cursor": {
          "ref": "ad16f386-4192-4b18-99a2-2acf1b1c1a57",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2e178c82-a9d3-45d4-ac88-4e9e36cef49b"
        },
        "item": {
          "id": "d857eaf2-a403-4a81-bc1f-897c0196f861",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3a59ab0e-9b21-4a7f-b800-47749d36aa17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d0d2b8-c0eb-4f43-8722-d69cd07a7ace",
        "cursor": {
          "ref": "fb82cb89-86d2-494e-a661-db06eb0299a5",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "40a1158a-abfc-4b4f-b465-c68793178aa9"
        },
        "item": {
          "id": "68d0d2b8-c0eb-4f43-8722-d69cd07a7ace",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "24dd121f-997c-49ea-92c9-448129699310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7c76f4-bbbd-41b3-922b-715403992625",
        "cursor": {
          "ref": "b204bef3-af3b-4603-bc11-11f3af691b05",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "690135f3-ef7e-428f-bb2c-42256b786d2b"
        },
        "item": {
          "id": "1c7c76f4-bbbd-41b3-922b-715403992625",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "95e60fcc-2958-4139-86b1-c136b08b35cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e404ff72-58ea-4fbf-b6e3-d5cc2c8ba95e",
        "cursor": {
          "ref": "7e4acd12-eb11-4b1e-9037-aee688a0f111",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "31151159-597d-49a2-bf8f-4c1823e77f96"
        },
        "item": {
          "id": "e404ff72-58ea-4fbf-b6e3-d5cc2c8ba95e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "15f74e5b-56e6-4c51-b637-94649ae961b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7465d8a-eaf3-4265-bced-05072429e9f5",
        "cursor": {
          "ref": "55897734-fb8e-45d8-a4ca-a2579449229c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e56b1d15-23c7-40a0-be17-ee41075172f3"
        },
        "item": {
          "id": "b7465d8a-eaf3-4265-bced-05072429e9f5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "af8bd257-6e6d-4b9c-8bdb-8014de35f078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6dd694-6bef-4dd6-9196-c850aeeef058",
        "cursor": {
          "ref": "4c4057c7-6629-4e95-b473-64a5970229e4",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d8aefd6f-d4a4-4394-bad2-a01446bbebb9"
        },
        "item": {
          "id": "2a6dd694-6bef-4dd6-9196-c850aeeef058",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "08b0784b-b443-4f3c-bd61-5090d1d873f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32c9179-89c4-4c09-a9e9-0db98429a78f",
        "cursor": {
          "ref": "d7893a78-9f75-43d1-8b06-59fe86403b4e",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cc75cb0f-a5bb-44d3-b5e4-22c3d220eb6a"
        },
        "item": {
          "id": "d32c9179-89c4-4c09-a9e9-0db98429a78f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0e7e25f7-a839-4d71-a175-56c2aa5882de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7440f148-4ebc-4404-825d-e5424deefb27",
        "cursor": {
          "ref": "af70d8c5-e868-4000-b4b3-fa8901bfef3f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e8417aa3-a71c-4a15-8bb6-47c17d4a2b8e"
        },
        "item": {
          "id": "7440f148-4ebc-4404-825d-e5424deefb27",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "82a91258-0063-4748-8620-f76f3e53947e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11565d6e-d4ab-4408-803f-a5f49a62cc61",
        "cursor": {
          "ref": "07e0b58c-a826-4190-9552-4a769670d302",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "509f2c48-ae74-4581-b100-b62bf68d3e33"
        },
        "item": {
          "id": "11565d6e-d4ab-4408-803f-a5f49a62cc61",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d1d7a516-2c14-44a3-9f90-f2817effab7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c36d17-a223-4888-8a88-b264b0fea29b",
        "cursor": {
          "ref": "6bd5afd0-4a5c-4028-9c9c-7f6a0844862f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2c5971b6-71b2-47fc-98ea-f520029cffb2"
        },
        "item": {
          "id": "a5c36d17-a223-4888-8a88-b264b0fea29b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2267d006-f1db-4b10-9080-c0bac6420cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae500333-bb21-485d-aed0-ca25a44b5f35",
        "cursor": {
          "ref": "744caf0a-5045-4da7-a347-6887d969ea62",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "467ad0cc-699e-46c8-92ba-5f0bb1ffa864"
        },
        "item": {
          "id": "ae500333-bb21-485d-aed0-ca25a44b5f35",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "50b6b649-202a-4178-a40f-78a791e453bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0dd42b-b873-44a6-a68b-8cc51c48bade",
        "cursor": {
          "ref": "de0ab60a-9c32-40c8-81a5-d19043e6c9e7",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c35a5fe4-dadb-449b-8be9-b2efd26ed137"
        },
        "item": {
          "id": "8a0dd42b-b873-44a6-a68b-8cc51c48bade",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8fbf5d80-c838-4bca-91c5-8e18262e1a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22510f63-dc08-431e-bc15-e595cfe90c4d",
        "cursor": {
          "ref": "e456a994-bf5e-43b4-9b2d-f4b4b5051161",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "68f7ea64-1d47-42aa-b1d5-5290abc94db5"
        },
        "item": {
          "id": "22510f63-dc08-431e-bc15-e595cfe90c4d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7c5ff5c1-8a1d-4eb0-9907-e7eca77e9a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7abcea1-24e4-43be-93c5-5df59917f4f6",
        "cursor": {
          "ref": "e0bad317-2aee-406c-8a6b-8f01b9950ced",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "011f939b-e058-401f-9d84-1573048ea419"
        },
        "item": {
          "id": "e7abcea1-24e4-43be-93c5-5df59917f4f6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4249831f-8120-41a2-80dd-4a45b6c53216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b444603b-aed3-47ae-9fb3-899ee25ba7a4",
        "cursor": {
          "ref": "366baf2a-855e-4497-aac7-f8b8ad524275",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d8310169-34a8-49e6-ac77-eb632fe29164"
        },
        "item": {
          "id": "b444603b-aed3-47ae-9fb3-899ee25ba7a4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "725f89a5-36a0-41aa-b5bc-0d35be3b7597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f2b001-d54d-414a-a52e-b1080a9ca5bd",
        "cursor": {
          "ref": "7e6ea42a-b5ac-4596-942d-e6b0f07b5449",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "04be79b1-409b-4649-861a-1242f0d0c670"
        },
        "item": {
          "id": "a3f2b001-d54d-414a-a52e-b1080a9ca5bd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "40d962f8-d897-435e-9916-c9c47f32019f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6781ecca-14f8-4510-9847-f472db3b64ee",
        "cursor": {
          "ref": "5e525751-c8de-4b1b-b79d-4fb45d429dc7",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8be6a023-ea71-4d04-b250-3e13aa1efc6a"
        },
        "item": {
          "id": "6781ecca-14f8-4510-9847-f472db3b64ee",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "05f0fd27-3248-4a8e-8031-aa00c80a1053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a684f448-7fd4-42d2-b03e-43320bba2441",
        "cursor": {
          "ref": "a1bddc71-ed96-4a5d-b786-a1962d3c3330",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "58109efe-227c-4a9f-b1b5-22466c1147fb"
        },
        "item": {
          "id": "a684f448-7fd4-42d2-b03e-43320bba2441",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5e5a444c-87da-4580-93ea-6331563d1daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e53499-4cba-4401-9b29-2aa7f839a80c",
        "cursor": {
          "ref": "21f5355b-a15d-4c2d-9e2c-53b0621e9481",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "15f7c97a-50c8-4841-9759-ba1e207ad886"
        },
        "item": {
          "id": "90e53499-4cba-4401-9b29-2aa7f839a80c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "01ab47fc-a626-42f6-973f-eeabd340a432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1753c17-b371-4cb4-af01-ae8d8f51b7c2",
        "cursor": {
          "ref": "73bcd8c1-e426-4fa6-b261-62a64f44c655",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "eb692a72-c42d-4b4d-b35f-dab85dabce74"
        },
        "item": {
          "id": "e1753c17-b371-4cb4-af01-ae8d8f51b7c2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "85ef02e5-515a-4103-ad3a-cdbd2b56ff5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6613c7b-4ae0-4c9d-ae52-a8d3ccb4e531",
        "cursor": {
          "ref": "2c154e0c-6614-43a2-ac5f-e893f2d567d2",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "490004f3-66c2-4659-9050-5b509c769dc8"
        },
        "item": {
          "id": "a6613c7b-4ae0-4c9d-ae52-a8d3ccb4e531",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "eee8c812-877b-460f-bfdc-09e11cf9bfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ae4044-7b0b-4632-b7d1-55cbccae2f75",
        "cursor": {
          "ref": "0f1f1276-64c1-4c8c-9c6c-8488e1c7fc15",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fa864cda-e365-4d13-9508-6d96f753c86c"
        },
        "item": {
          "id": "20ae4044-7b0b-4632-b7d1-55cbccae2f75",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "94887c9a-253f-4b85-a459-b6bfba9c6bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37d14e5-1d65-48ee-b11d-c3afc4124248",
        "cursor": {
          "ref": "e34f6aa2-ceb9-4178-af0b-c291e8625878",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "37313038-645f-41ae-82b1-fd9252569320"
        },
        "item": {
          "id": "f37d14e5-1d65-48ee-b11d-c3afc4124248",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "184c6533-10cd-4682-a722-7e5ab58a1d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c92e51-843f-4e93-8d93-3c280c488391",
        "cursor": {
          "ref": "cbffc429-011d-42e7-b283-6ace7abb0dbe",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e0f1b924-036a-455c-9ddb-f779a799f5cb"
        },
        "item": {
          "id": "52c92e51-843f-4e93-8d93-3c280c488391",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "75c8abbf-e7aa-4f32-a147-b9f257886321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80dfca3-d303-4ae2-acf8-1722289fa0b7",
        "cursor": {
          "ref": "64ccd596-fb31-4ca7-9e4c-68592aa2b08d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9ee97156-ef26-40f0-9f28-4ea19d439482"
        },
        "item": {
          "id": "a80dfca3-d303-4ae2-acf8-1722289fa0b7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c3c281cf-8a04-453a-b905-6cff4a40cb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bffae9c-c323-4f3c-9197-bb87d8a4f35b",
        "cursor": {
          "ref": "edfd6bc2-db04-4c52-9042-847435b9aaea",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cfa6fc34-4340-4763-8d47-bdb1993978f8"
        },
        "item": {
          "id": "0bffae9c-c323-4f3c-9197-bb87d8a4f35b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "45935f0e-abfd-4ba9-8cd5-31c8ffa25303",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972a2304-358d-4139-a0cd-4e139a393d14",
        "cursor": {
          "ref": "b842f071-82f9-4e3e-8d61-4ca74638905d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cd550217-1c19-442a-b579-441350500902"
        },
        "item": {
          "id": "972a2304-358d-4139-a0cd-4e139a393d14",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "82730ca5-e986-4144-b4c4-19b97b023cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6ac525-c1b6-47d4-a638-45ff8626b295",
        "cursor": {
          "ref": "4ffec0fb-e62a-42d9-b4cc-a818e23f95d4",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f21fbbab-47e4-4ffa-8a6e-3f3a3a388992"
        },
        "item": {
          "id": "0d6ac525-c1b6-47d4-a638-45ff8626b295",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e77875ea-2822-4ad8-806d-9df0753d6deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75553c2c-073e-454e-9084-b6ee41ca53d7",
        "cursor": {
          "ref": "96f0bb78-b918-411a-8c90-a79f8e7ab9b6",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cd26725b-b663-4b54-b2c4-c747f3b7111e"
        },
        "item": {
          "id": "75553c2c-073e-454e-9084-b6ee41ca53d7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f6ce4246-2652-44a2-a617-5268968db6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f837cde-a928-4a55-a3ac-578cd0742129",
        "cursor": {
          "ref": "e1359fa4-ddd8-4494-832e-a8a076c19c26",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a13ad383-66f6-4933-8703-cfbad9ec988c"
        },
        "item": {
          "id": "8f837cde-a928-4a55-a3ac-578cd0742129",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "db15713e-e774-4763-bd1d-3ac4b5fed9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301e0197-3b09-4de4-8e89-38088d54def8",
        "cursor": {
          "ref": "f11572d9-000f-435e-9e3c-829effb82256",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "07bcba26-910d-459a-b57f-c245937f3ea5"
        },
        "item": {
          "id": "301e0197-3b09-4de4-8e89-38088d54def8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2ece5303-ebab-4555-b75d-02927c653bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c485c90-209a-4c9d-ab53-dd244750a800",
        "cursor": {
          "ref": "b06d7937-6895-4746-96df-15f43991c4e1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f43b13a7-7fed-4de2-bd9e-d48113ef5422"
        },
        "item": {
          "id": "9c485c90-209a-4c9d-ab53-dd244750a800",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bb9f5663-137a-4ded-a569-56980cff3f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f380c26-4f0b-49b4-866f-f9a932cb8598",
        "cursor": {
          "ref": "85b8fce1-efb7-4e08-b30a-cb3a4d2061dc",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cf667fc5-bec2-4ed8-a6e1-669e400bbea4"
        },
        "item": {
          "id": "7f380c26-4f0b-49b4-866f-f9a932cb8598",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8da75c0e-c921-4b3c-8c65-8f38c4f1a966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4cc433-f827-4122-a8d9-79c62a684a7a",
        "cursor": {
          "ref": "5f077aec-f7b9-42d3-97f2-a8dd766f3b53",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d9ece107-cf42-4c54-a226-25990477e118"
        },
        "item": {
          "id": "7e4cc433-f827-4122-a8d9-79c62a684a7a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fa975a53-7d8b-4ecd-b058-502bd5a822f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fac3d7-b665-4ddf-9fb1-2bc4856974ca",
        "cursor": {
          "ref": "391e4cae-261b-4934-8827-4acae8955769",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a32b8e59-aa56-45a0-a1b7-72530be2fb02"
        },
        "item": {
          "id": "c8fac3d7-b665-4ddf-9fb1-2bc4856974ca",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b991d3bc-ba63-464f-b01d-9fd39eb44c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be96114-f5c7-4eb0-a013-5c9db9dc4d61",
        "cursor": {
          "ref": "99ff639f-bac9-4909-959a-80d0a64ff161",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d7c7b3b1-7795-443d-ba63-c0eb54c944df"
        },
        "item": {
          "id": "9be96114-f5c7-4eb0-a013-5c9db9dc4d61",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "df51c253-25f6-4087-a256-82169bffeaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dea5bd-0550-48c2-b637-59a73c75b485",
        "cursor": {
          "ref": "f4241a47-79cd-4cdd-a8f3-ac9727614db0",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "534803fa-50f2-4f4f-9cb0-b3e3595838bf"
        },
        "item": {
          "id": "91dea5bd-0550-48c2-b637-59a73c75b485",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5dfff1c6-e9a6-4076-880b-5085d685137a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c12f986-845c-4f00-8554-a876c1d85b47",
        "cursor": {
          "ref": "923dd016-ed29-46c4-a5dd-8e855db45cbc",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9daa9d98-149f-4971-9eb6-4cfaf70a23b8"
        },
        "item": {
          "id": "5c12f986-845c-4f00-8554-a876c1d85b47",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5997f6a3-59d2-461d-934c-5464d02fd16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2387e7-4aa6-44eb-aa68-2b3a2fafc755",
        "cursor": {
          "ref": "ca313dc2-84f5-457f-b566-237eb6bdc91d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "742341ef-a5ea-40da-b83a-e74efd0ebcae"
        },
        "item": {
          "id": "8c2387e7-4aa6-44eb-aa68-2b3a2fafc755",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ff1f22a7-81ed-4404-9efd-72ab76f7facb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617e6be5-1b5d-4b6b-9b5e-3c8367eddb9f",
        "cursor": {
          "ref": "2666010a-0215-4b74-942b-0eafe28b8216",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0853e558-930e-4294-99fe-f32fd0bd471b"
        },
        "item": {
          "id": "617e6be5-1b5d-4b6b-9b5e-3c8367eddb9f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "901a7bb4-ef43-4cf6-8585-2520b7b9abe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e14212a-3d0f-4857-9ead-fb39f3e0aa63",
        "cursor": {
          "ref": "b334cb08-7abd-4349-b651-4bf44c892fa5",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c44da77f-be26-4aab-9355-c3afbf5d4696"
        },
        "item": {
          "id": "4e14212a-3d0f-4857-9ead-fb39f3e0aa63",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "15f58e68-9c42-4391-b0b9-2cfe21987267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10ebda8-a0a5-4da0-b00e-26225540edf1",
        "cursor": {
          "ref": "e77848dc-a5c4-4f00-a7e5-f863213338ce",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "22b805cd-bdad-44b3-8668-324f46aa60e7"
        },
        "item": {
          "id": "b10ebda8-a0a5-4da0-b00e-26225540edf1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d43cc324-9950-46e9-bdbc-f6d3de804950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12442440-0ef8-47c9-9ce6-240356bf26e8",
        "cursor": {
          "ref": "9b6b2dad-f148-4a10-8e36-fcbb66ddf19a",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b068e3cc-182a-4fd9-b73f-8c792f4fa020"
        },
        "item": {
          "id": "12442440-0ef8-47c9-9ce6-240356bf26e8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "47c6e39d-9d2b-497d-8107-c08346eef470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae09b5f8-f11f-4564-a9ed-a010ae0ff19a",
        "cursor": {
          "ref": "507d5e22-ffe3-4da1-ad86-fb5699c7b440",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "12e792ed-762b-47c2-99bb-976cc5087c39"
        },
        "item": {
          "id": "ae09b5f8-f11f-4564-a9ed-a010ae0ff19a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9fcddd32-44f0-4585-a3cf-9a0caee42664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f73486e-c527-4c68-81da-0b78fea8c4fb",
        "cursor": {
          "ref": "2fe579e1-56db-48ad-a1de-16f919fa20c0",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d3e67684-7dd6-445e-8112-934481a1cc78"
        },
        "item": {
          "id": "6f73486e-c527-4c68-81da-0b78fea8c4fb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "72ac3240-ef6a-484e-b91e-317254ad86db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b457693-032b-4f68-8d68-fcff4f834d04",
        "cursor": {
          "ref": "046691e0-a5ca-4368-8281-b91ab12c5b22",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2b6b687c-d33d-4293-9a83-c3f9a52a6a84"
        },
        "item": {
          "id": "7b457693-032b-4f68-8d68-fcff4f834d04",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fb7fd58c-1ea6-46e0-b6d9-872c270fd50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5201697-f618-44b3-a120-791d59bebc4b",
        "cursor": {
          "ref": "6f88752b-672d-4d32-adc8-2b2799809db7",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "96f3c204-e136-47dc-8383-4ed3b8aa8591"
        },
        "item": {
          "id": "c5201697-f618-44b3-a120-791d59bebc4b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fec6b273-3091-40bb-a896-198b7b226203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ccebb7-733e-45d7-be96-cc76f6f6c9aa",
        "cursor": {
          "ref": "bae8f1ae-04e7-4596-9a3f-d609d9613b33",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "71de877e-269f-46d3-8199-259759b8c650"
        },
        "item": {
          "id": "67ccebb7-733e-45d7-be96-cc76f6f6c9aa",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ca484e57-3b93-4932-89a7-3c73d77db07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13efce3-d4c5-48ef-b666-e1e69de6f6e4",
        "cursor": {
          "ref": "dbac8283-1cd9-45f6-844b-2ea3e1ce3baa",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "33e8238f-c973-42ae-9f28-395e586f2aa3"
        },
        "item": {
          "id": "c13efce3-d4c5-48ef-b666-e1e69de6f6e4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8df19681-2041-43bc-9e08-dc9eeb98b87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5678c1de-16ff-44c4-8bb2-98c82feafa71",
        "cursor": {
          "ref": "3d166c6e-44d4-4852-aa41-133a7a85c0c0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "43d3e04b-4dff-4490-909c-058c40de8a97"
        },
        "item": {
          "id": "5678c1de-16ff-44c4-8bb2-98c82feafa71",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "05f7a106-0617-45fc-b5da-a850a097fde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c0c019-0b1c-44f4-849b-064d3825a562",
        "cursor": {
          "ref": "8b00abfe-c0cc-4c67-940a-f65a10ea33ae",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6764b25c-8155-4003-901b-4130fca20317"
        },
        "item": {
          "id": "88c0c019-0b1c-44f4-849b-064d3825a562",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5261dc3c-e331-4659-8a48-a5525ffba625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abee176f-333b-425d-8526-efd95cc2f4b6",
        "cursor": {
          "ref": "29fba395-3b6c-4609-bc2f-175c5227c459",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cf7805e2-3bef-4563-92ce-a3969adbacf4"
        },
        "item": {
          "id": "abee176f-333b-425d-8526-efd95cc2f4b6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8f4f83a8-d9d2-4503-a88d-3bf8b7532b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5f0510-a9aa-4a80-b772-000006099c41",
        "cursor": {
          "ref": "bb209316-cc17-4773-a8b7-3b33fed39bd7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "df056daa-5372-469c-975d-c1b1de96ef6e"
        },
        "item": {
          "id": "af5f0510-a9aa-4a80-b772-000006099c41",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "616f50e3-c6e7-4418-9a6d-a626fd5603b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7031276-e176-4b5d-bb6c-6885cd255ca4",
        "cursor": {
          "ref": "ee6381d3-4e60-4bf9-b844-468412d55039",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c4697da2-0d38-47f0-ba9f-3d76a8019e5e"
        },
        "item": {
          "id": "c7031276-e176-4b5d-bb6c-6885cd255ca4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "aa53b003-003d-4d6f-809e-9cf1f835a206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b8b5bd-dc74-4687-9d71-4aeb790b4be6",
        "cursor": {
          "ref": "e16b3a8c-78fe-4460-9693-eea3d6f464f2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bc7775b9-d41a-404f-a245-97afbd68227e"
        },
        "item": {
          "id": "c5b8b5bd-dc74-4687-9d71-4aeb790b4be6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4a105c58-537a-4512-888a-a20671aced89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35045170-32c6-4791-add4-c77ebbe45bff",
        "cursor": {
          "ref": "acf26ac7-8352-452c-ace6-88c6a3433c24",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "628393c7-c38a-4f8c-9606-3e26bf710b64"
        },
        "item": {
          "id": "35045170-32c6-4791-add4-c77ebbe45bff",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "26c58174-5620-428a-b0ae-9a6e0b910f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494cad5c-6b1e-4c70-b111-0256c6d9a539",
        "cursor": {
          "ref": "a65c9752-132a-4b17-8dd1-a24de78fa830",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c5e9e419-596a-4a45-9b4d-8ca77173ac61"
        },
        "item": {
          "id": "494cad5c-6b1e-4c70-b111-0256c6d9a539",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e8689083-a7ca-42f9-ac81-bd272233a3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66af80a-3c29-4519-add5-103e249d34b3",
        "cursor": {
          "ref": "3b617a9d-1206-427b-83c3-1f4890aa22c4",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bb044896-36f8-46ee-89dd-b67000f4b57a"
        },
        "item": {
          "id": "e66af80a-3c29-4519-add5-103e249d34b3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7c7af533-5cd4-4f36-9a7c-781eb45873f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19e22bd-29b3-4215-8223-252ed8032e50",
        "cursor": {
          "ref": "e7ae3e40-84ff-441c-8d5c-044cdff5028f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4279921b-a30f-4711-85b3-ad46d189bde5"
        },
        "item": {
          "id": "a19e22bd-29b3-4215-8223-252ed8032e50",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4f035bc8-6f4b-4f87-9d2b-11b75e3e7df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63125f3-ab30-4576-ad10-838877b7d965",
        "cursor": {
          "ref": "9d520080-fbf2-4c50-adb9-687fb70b2f00",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2e6bfdcc-46f8-45f2-b17e-6b67d5a5223b"
        },
        "item": {
          "id": "e63125f3-ab30-4576-ad10-838877b7d965",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9ce170f8-0bcf-4031-834b-7297488941a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60360a27-2cf7-4a60-8a82-9b0b2bc1c223",
        "cursor": {
          "ref": "c2a7d790-9a0c-47d4-ace0-f8f6aa143219",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "10099676-cdeb-4e3f-9627-f17f62a5ed7d"
        },
        "item": {
          "id": "60360a27-2cf7-4a60-8a82-9b0b2bc1c223",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "da883537-3aa5-4107-8c27-02adb2c6c76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800214db-1a2b-44eb-bf01-94dacd98fab8",
        "cursor": {
          "ref": "fbecff65-0022-43ed-b056-7c13c654256e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "805fa543-1fd7-4c81-982c-4f78349fa8c0"
        },
        "item": {
          "id": "800214db-1a2b-44eb-bf01-94dacd98fab8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3b878968-0292-4eca-a1d3-4da1dc0008fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b90da6-9372-4367-8914-f9d091522e77",
        "cursor": {
          "ref": "8efcd15d-0b06-4a8b-9087-7b2c109c7d83",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f0a7efe0-a494-4161-81a7-e94afe0bafcd"
        },
        "item": {
          "id": "a7b90da6-9372-4367-8914-f9d091522e77",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f5fa2cb4-0ec5-4729-a19d-c5fe8e0d61f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9edfd96-44ac-41c8-942f-7a688ccb2399",
        "cursor": {
          "ref": "5a776bc1-0572-428c-a30d-2699ed80d2db",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5d4ac867-c71b-471f-95ce-4d8ee1a6b23b"
        },
        "item": {
          "id": "a9edfd96-44ac-41c8-942f-7a688ccb2399",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9254fcd3-4307-4c80-8258-79e53b99d5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c96fd5c-5c43-4d23-b591-946c5743f08d",
        "cursor": {
          "ref": "bcffd9f5-9a9a-4714-96df-50cf98452551",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eddeebb6-6a75-45ab-a288-800e2c8ddf18"
        },
        "item": {
          "id": "2c96fd5c-5c43-4d23-b591-946c5743f08d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "38036144-c1d3-4fbb-9f25-16ac14ab3951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad140c2-65e6-4f85-8925-5652073ae529",
        "cursor": {
          "ref": "6eb5334a-4ac2-484e-a5e6-5c56a8173b52",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cb85d2bd-dd99-44c0-9cf0-c6418504c1cb"
        },
        "item": {
          "id": "7ad140c2-65e6-4f85-8925-5652073ae529",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e147c284-0c2d-4fe4-ada5-b7eff1d4ff60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156ff5e9-a9bf-4c74-b4b3-1e50bfa7215b",
        "cursor": {
          "ref": "95231dc5-242c-4e8f-a4b9-56d3a403ce99",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c018dd8d-e5da-447f-8b98-96b15477eaec"
        },
        "item": {
          "id": "156ff5e9-a9bf-4c74-b4b3-1e50bfa7215b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "500f0d39-a5e8-49c9-93fc-847ffc67ee8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d0981c-333f-4623-b8a6-9e741a0aa6cb",
        "cursor": {
          "ref": "2311a6fd-f1cb-401d-92b0-af75bdc57979",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bda7919a-3482-4a5f-8808-64db95bfb1f0"
        },
        "item": {
          "id": "49d0981c-333f-4623-b8a6-9e741a0aa6cb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f4fd00a1-f237-483d-80de-9da9a9b1e83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3e801c-b3d3-4c48-b4e2-177b021b2598",
        "cursor": {
          "ref": "2817d9a2-aece-46a8-9672-3cf74895d8ce",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "45152591-1850-4f52-a364-68ca8a19db90"
        },
        "item": {
          "id": "4d3e801c-b3d3-4c48-b4e2-177b021b2598",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f141fe89-8f7b-4dba-8f11-b39e630fcc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8c6491-3656-49ff-81f6-08a21d47aaf2",
        "cursor": {
          "ref": "a8dcd0b5-b749-4c8f-9866-2483a14de471",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e5ce38e3-93c2-40fc-b02d-ec7b4450ff61"
        },
        "item": {
          "id": "dc8c6491-3656-49ff-81f6-08a21d47aaf2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5725204f-f09c-4cee-96f6-852a1c26d366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecae1cd7-97b2-4b71-af95-8dfe62361c0f",
        "cursor": {
          "ref": "b72066b7-6568-48f2-909a-10934300064d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c2445ab9-d4f2-46d4-9076-07f314fe01f1"
        },
        "item": {
          "id": "ecae1cd7-97b2-4b71-af95-8dfe62361c0f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ade2e7e0-6576-4a6a-9cdd-3c80a244bf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349d22db-2686-48ba-97b1-2162f07a03be",
        "cursor": {
          "ref": "9d411061-f13d-45f7-917f-105d49fc75ef",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "95cc548c-efef-4478-aae7-c492b5d502a7"
        },
        "item": {
          "id": "349d22db-2686-48ba-97b1-2162f07a03be",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d6ff5dda-2d22-4c5b-976f-452ad10612dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d0191b-a82c-4f97-9600-7da52bbaa6f2",
        "cursor": {
          "ref": "2f512583-cb06-48df-816d-11a74dbfe44a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0caef39e-7777-4d42-acc4-d368321fbba0"
        },
        "item": {
          "id": "d2d0191b-a82c-4f97-9600-7da52bbaa6f2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8e66b979-4445-4899-ae0f-7cbf8cada6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410d41db-9acb-43b4-924e-8ccfe614852b",
        "cursor": {
          "ref": "ec852f2d-6901-45ed-9240-bc5f631b35d7",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e7a31870-4731-464e-97bb-8e04cd0e8541"
        },
        "item": {
          "id": "410d41db-9acb-43b4-924e-8ccfe614852b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fa4111ac-0548-4141-850b-c609c4977b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121f46c2-d0db-41de-a1b7-d66b24ceb660",
        "cursor": {
          "ref": "baccd699-7ca5-4847-9353-5eef90642c30",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4541a50d-f995-4f7a-a2f6-19ddfc57d6f7"
        },
        "item": {
          "id": "121f46c2-d0db-41de-a1b7-d66b24ceb660",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3a5a718e-aa6a-43ba-8955-2f2a1edbe8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868ebe7d-5963-4c38-857a-e572a06882b8",
        "cursor": {
          "ref": "399b6798-c50e-4f09-a762-a4300201862f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5fce43b4-f197-447f-8820-66ff4f26abed"
        },
        "item": {
          "id": "868ebe7d-5963-4c38-857a-e572a06882b8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "28caabd7-87d4-49f7-9c2d-5083a9faf5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0704d8-3d3e-4ec5-b65b-0a2783b47287",
        "cursor": {
          "ref": "47924309-e4c2-4f3f-9bb5-08af1713a2ed",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5c037a5b-ed42-4754-a4a8-4e993f620e24"
        },
        "item": {
          "id": "af0704d8-3d3e-4ec5-b65b-0a2783b47287",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "93a19738-b41f-46af-b9bf-d6a49abea23a",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "4a5a0cdc-36eb-431b-a73a-a67ebb4f17a1",
        "cursor": {
          "ref": "7287c6a4-1068-4697-9072-8a716b2fb0e6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "60f480c2-8a38-485d-b51f-93c24860719a"
        },
        "item": {
          "id": "4a5a0cdc-36eb-431b-a73a-a67ebb4f17a1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cdda1a72-ed0a-4bf8-a9af-0b9e7a8c1b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1e29af-278b-4bc9-8546-3b1565eacf82",
        "cursor": {
          "ref": "d9f029f6-b3c6-4b6c-8a01-88e7e6df3fab",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7c1f7bba-5b95-46f4-96e2-655f367e1bff"
        },
        "item": {
          "id": "6e1e29af-278b-4bc9-8546-3b1565eacf82",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0511b655-2aa1-40e0-b6c5-e552f260a437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8601934e-fb26-46b3-a98b-83cd56dd5c9d",
        "cursor": {
          "ref": "686d9929-932e-46cf-b162-07dfeae18645",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ff712948-49d1-472d-ad19-38b0aabd4d66"
        },
        "item": {
          "id": "8601934e-fb26-46b3-a98b-83cd56dd5c9d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5d9b7232-713c-475b-9e33-335598123e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeda9fff-66f0-45a8-b263-7e589f59314a",
        "cursor": {
          "ref": "4ef0f031-6624-4e8a-a920-5b94a4251829",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "55160c2a-fbdc-4090-9ecd-f589b0b5c817"
        },
        "item": {
          "id": "eeda9fff-66f0-45a8-b263-7e589f59314a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d5f72420-eb21-4e1c-aba6-44033a1cd838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee936a2-394e-4fea-86fb-3051d8c31d7c",
        "cursor": {
          "ref": "797c9309-ddb8-44eb-8573-4e50d26eb78c",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "271ae2a2-69e0-4856-ba8c-3814ebca3722"
        },
        "item": {
          "id": "2ee936a2-394e-4fea-86fb-3051d8c31d7c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b6ad3ead-9352-4b8f-b09c-7a29bead6e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9bcd15-f4e4-4a9f-8f3c-d3ca2dab7118",
        "cursor": {
          "ref": "0e3b9cb8-ca8f-487a-b916-4b1d35ea21c8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f2a97ca4-9d7c-429d-8a05-26056dfe75db"
        },
        "item": {
          "id": "9d9bcd15-f4e4-4a9f-8f3c-d3ca2dab7118",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b3852332-acaa-4681-bed5-57c71aeae2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30731458-48d2-4c0a-b222-c06490222472",
        "cursor": {
          "ref": "44291ea1-3481-4843-9daa-bd7b9628282d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "36cb3e87-f485-4530-92dc-7a40e0a6f7f4"
        },
        "item": {
          "id": "30731458-48d2-4c0a-b222-c06490222472",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2075f83a-b270-4233-adc5-3590c501edd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b537fd12-b76e-4e37-8480-5218d36ded08",
        "cursor": {
          "ref": "d7757779-445f-4eb2-8c62-b3a733585046",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b3cf0e8c-4320-4f95-98ae-4e2c810b8252"
        },
        "item": {
          "id": "b537fd12-b76e-4e37-8480-5218d36ded08",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d511426c-583c-49fd-9396-257ef5a31eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501796bf-94a9-4724-a8e9-59022a94a18e",
        "cursor": {
          "ref": "cc68a78e-8a9a-49da-a965-fe3a93865760",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ad23f596-986f-40d9-bd44-c9f59cfc9fc3"
        },
        "item": {
          "id": "501796bf-94a9-4724-a8e9-59022a94a18e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "46a82436-a309-4194-92c7-1659de4a5f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5bce6c-0704-4ecb-b6a7-a6cba51395b3",
        "cursor": {
          "ref": "56948ae8-b077-49c2-a08c-dc0faf78a24b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d6600eaf-d3e4-4bf2-9820-39d5dc4bad0c"
        },
        "item": {
          "id": "5f5bce6c-0704-4ecb-b6a7-a6cba51395b3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "af92e83f-a5cd-412f-be62-93afbb6900f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd681e4-2505-4f21-888a-96494817bb0c",
        "cursor": {
          "ref": "742f2325-8b0c-47be-98f2-199786921ade",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "805f4741-8344-4cb4-a8d9-2d412281002c"
        },
        "item": {
          "id": "bbd681e4-2505-4f21-888a-96494817bb0c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dd3a6711-fb1d-4794-9454-865594651918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f660ff3b-368c-4d7a-b05d-4fc85fb11eea",
        "cursor": {
          "ref": "ccdab93f-6e09-4984-ad4f-955f2d97f487",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9bde9790-bb84-441c-923d-5edcd78c660b"
        },
        "item": {
          "id": "f660ff3b-368c-4d7a-b05d-4fc85fb11eea",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6a256142-9d91-47d5-917f-68f5986e515a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4fab46-8f52-459d-bee9-d6e8f4244ec4",
        "cursor": {
          "ref": "56059348-ca1d-4efc-927e-af8d55776ed5",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "65bb8fa7-14cf-4f3a-8a33-75613da8f560"
        },
        "item": {
          "id": "ed4fab46-8f52-459d-bee9-d6e8f4244ec4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "22864e35-f233-4c25-b9cd-53f5b1b735ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8863bf1-9c98-4798-a6c0-e135f424f159",
        "cursor": {
          "ref": "4a979c95-fd7f-479f-be99-7a9d56e8764d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2cda91d8-09a9-41b4-ab3b-88be00437c66"
        },
        "item": {
          "id": "b8863bf1-9c98-4798-a6c0-e135f424f159",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b536723b-558d-48e2-9cd3-aa882e7170ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8340d1c6-df1b-4e75-9fd7-917a2d160fbb",
        "cursor": {
          "ref": "f47ff976-8abb-4dc5-a2d4-d1381e19a354",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8caf7f62-835b-4a4b-b283-b47acfad595f"
        },
        "item": {
          "id": "8340d1c6-df1b-4e75-9fd7-917a2d160fbb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7640921a-cc0d-4371-a21e-f3870c40ff71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e085da-cae9-4b75-be41-82512590919b",
        "cursor": {
          "ref": "be130851-7443-4c73-b03a-8ff0bdcb245c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4666f6ae-e247-4dde-9afd-69926a85f405"
        },
        "item": {
          "id": "95e085da-cae9-4b75-be41-82512590919b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f5919e57-61f8-4a8a-893a-c5f7fd531ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cc764d-2d51-4096-a733-a9b2d9563423",
        "cursor": {
          "ref": "5e7bed86-4569-4ce2-abd9-ea0f3b658ae6",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4932f3f3-3362-4898-9e3e-387229256253"
        },
        "item": {
          "id": "f0cc764d-2d51-4096-a733-a9b2d9563423",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1c6fdfb9-817e-480d-8ca4-e97e245cacda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5f1e11-d9c6-4f72-a99c-274a394e740a",
        "cursor": {
          "ref": "049761b4-81f8-45cc-8f7a-ca7efe6cfeef",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "18fcd3fc-94af-4799-9904-8659bddf809d"
        },
        "item": {
          "id": "5e5f1e11-d9c6-4f72-a99c-274a394e740a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5cf7ad58-89bd-4d56-8036-c480471a135e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046f9bd6-c4db-4ef3-8cd6-90942da70f40",
        "cursor": {
          "ref": "8cd2beae-83d2-4274-91e0-9bf44f4ae2d1",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6f6521b6-8746-4562-a874-f7841ee536f7"
        },
        "item": {
          "id": "046f9bd6-c4db-4ef3-8cd6-90942da70f40",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "87aeaa4c-1dd0-4394-bd5d-5379639ce851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6ccc84-ceb9-4391-8b6a-e32d12ffc074",
        "cursor": {
          "ref": "de79a31b-2345-4634-9b7e-b6b0b9bebe17",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8779d725-2c11-492d-8127-1d7fe3a77d4d"
        },
        "item": {
          "id": "ba6ccc84-ceb9-4391-8b6a-e32d12ffc074",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "385e4bf3-8304-4a26-9254-a4fb0d08f09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a45f776-1386-4864-9881-83d4186821e9",
        "cursor": {
          "ref": "a5033e5f-b17b-46cf-9f58-f6b00218842f",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2903cee8-360e-4b4f-83a0-f0d9a03aad9c"
        },
        "item": {
          "id": "2a45f776-1386-4864-9881-83d4186821e9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0b994ef7-bea6-4c0b-b7bc-8c4270edda04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8fca96-53c8-4e78-bee0-a0fd460faf44",
        "cursor": {
          "ref": "54440c55-82b7-435b-8aa6-d38c06a82615",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "db7f534e-635d-4e86-9207-1938c38b0964"
        },
        "item": {
          "id": "cf8fca96-53c8-4e78-bee0-a0fd460faf44",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a2cc18ed-2d2e-4cd1-822f-9adeeadfaac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a09ee6-78b0-4bb6-b98c-6f369a32eb9c",
        "cursor": {
          "ref": "614915b3-f200-4cc7-a4c6-414ff9884bcc",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "062123c1-f1cb-43c1-874f-cb18573bdeeb"
        },
        "item": {
          "id": "d2a09ee6-78b0-4bb6-b98c-6f369a32eb9c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7c284685-916d-42cf-869f-9b876eeb4435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bd451d-feb2-4738-8992-6e50f759a14e",
        "cursor": {
          "ref": "660c4472-789d-413f-b502-effab1efebf9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "412a3744-42f7-4da0-84c7-3d6ee11f1fa2"
        },
        "item": {
          "id": "26bd451d-feb2-4738-8992-6e50f759a14e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8f272396-e10a-4c17-a9ec-a89747a0da9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9feadcfa-1202-436f-b615-712752993ca2",
        "cursor": {
          "ref": "f858a6df-71f7-43c6-86b6-7603164781a6",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "830be969-6a09-4432-8080-3c299d82179a"
        },
        "item": {
          "id": "9feadcfa-1202-436f-b615-712752993ca2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3d489df1-b294-4d48-85bf-59b83ffb8d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68231e15-9de1-4916-9fb7-6f9cccf704b8",
        "cursor": {
          "ref": "c93e4d3d-a0d3-4cf7-86a0-0855bc11fef9",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7059b4d3-ae35-4e6b-aa30-8675b4fb609c"
        },
        "item": {
          "id": "68231e15-9de1-4916-9fb7-6f9cccf704b8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "16cb7f34-548a-4d92-b537-4a315c5facab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4728cb-5969-4c07-9c6c-949e8d26d298",
        "cursor": {
          "ref": "65d9afe0-d403-43b1-8b73-a76bbe9dd367",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7311e533-eabe-4917-a6b0-a789856475d7"
        },
        "item": {
          "id": "9c4728cb-5969-4c07-9c6c-949e8d26d298",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "72e5d22f-7f8b-429f-8b66-9be6ff9715b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e01d291-9d8b-488a-8c5c-91533ca77fd0",
        "cursor": {
          "ref": "42e04ae6-5ba4-4325-adde-4bc1c459b646",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5d6c9e02-d9c3-47b6-8547-cf5b5fe37654"
        },
        "item": {
          "id": "6e01d291-9d8b-488a-8c5c-91533ca77fd0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "598b1dbc-e6df-4c09-8e88-13e17de47145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f4fdbd-260b-488e-9a8a-5c22a1ce4fe8",
        "cursor": {
          "ref": "2933f958-e222-4c03-bfad-ee400327d4a0",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6acb0cd1-8d5b-4c65-84ee-cf7c00da80c2"
        },
        "item": {
          "id": "e5f4fdbd-260b-488e-9a8a-5c22a1ce4fe8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0a07e031-567a-409b-a41a-346b69f04fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27495b4b-247a-4d90-b9d7-15b6f249b807",
        "cursor": {
          "ref": "73fa61c4-3911-420f-82b5-a9aafe2813a7",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d01f10db-2eba-4b5f-8a1c-8f3f781991f5"
        },
        "item": {
          "id": "27495b4b-247a-4d90-b9d7-15b6f249b807",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "480a3695-6757-41de-862e-4e9951f8fda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326876c7-4708-423f-870e-536c993f6838",
        "cursor": {
          "ref": "4a867865-b3f0-4d6f-bf5b-e34b263b85f3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7cc2bbe9-1ea4-4008-92a1-41f340b83f4c"
        },
        "item": {
          "id": "326876c7-4708-423f-870e-536c993f6838",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cd669e73-63f8-462d-847b-466c5a1ab386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab39be7-56ac-43ce-8774-38f9d74e5db5",
        "cursor": {
          "ref": "5ec63152-24c2-4c63-b32c-9953206d823e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9f9e61b0-347b-4d47-93dc-b819a5ec257c"
        },
        "item": {
          "id": "aab39be7-56ac-43ce-8774-38f9d74e5db5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d23a6e9b-308b-49e9-8db8-929df0593fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e6a4a8-21bf-4a16-87b8-7bb889dffc7c",
        "cursor": {
          "ref": "101fb622-ec41-4805-9fde-d743eed66516",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4f234e38-782f-41ff-b0e1-338b73fe654d"
        },
        "item": {
          "id": "76e6a4a8-21bf-4a16-87b8-7bb889dffc7c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7028cbd2-e74f-43d8-a3fe-df926c34b07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce5f055-6f94-4765-8e30-f7b54ac5596c",
        "cursor": {
          "ref": "431bd089-8e6b-4261-927d-c6a140c52cb0",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7cc2696f-a72c-421f-81e7-13f03dec0209"
        },
        "item": {
          "id": "8ce5f055-6f94-4765-8e30-f7b54ac5596c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f25eff3-b51e-4e99-a15a-eb8b0929c2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a942367-af83-4d29-881c-7fdc76690fd4",
        "cursor": {
          "ref": "0df654cc-47ea-43cf-b16a-4c39b831cf05",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d0eb0d06-cdbc-48ef-869c-9c04f21590cb"
        },
        "item": {
          "id": "4a942367-af83-4d29-881c-7fdc76690fd4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "21c1aea3-ef56-4413-8926-153e05d1269c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b7e91a-2d79-4f7a-897b-5e0a3348f5a8",
        "cursor": {
          "ref": "1b684962-6d35-4848-b0c0-7ec08ac3df5f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1f880e11-a452-44c9-973c-f20bd541375f"
        },
        "item": {
          "id": "59b7e91a-2d79-4f7a-897b-5e0a3348f5a8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "41774d9b-2cf4-4a84-b728-ef9dac42f3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7219ef-99c3-4fc2-822a-68870fd2da3c",
        "cursor": {
          "ref": "0d849e4e-7e88-4bf1-a49f-aeaa7d733412",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fa9fc901-69b1-469b-aa86-45ed1de3f0f1"
        },
        "item": {
          "id": "aa7219ef-99c3-4fc2-822a-68870fd2da3c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5deb9632-d369-4f8a-8d87-66fed646a307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece8220a-5d25-473a-8f41-59ae63d80770",
        "cursor": {
          "ref": "b993f57b-a365-4790-9b6e-70a072306d3c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "60793bb7-8275-4307-a7c5-2f81d901acd3"
        },
        "item": {
          "id": "ece8220a-5d25-473a-8f41-59ae63d80770",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "086841cb-e2d8-4579-9c8d-cd1ab9e2f1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d47612b-9005-4a47-8ea0-b8480f0dd378",
        "cursor": {
          "ref": "cfb6f1a9-4fbb-4aa4-82cd-1f007aea3365",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0d07f2da-ba3e-488d-8c46-444a2d8c5c1d"
        },
        "item": {
          "id": "3d47612b-9005-4a47-8ea0-b8480f0dd378",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "af6291ce-7f30-499e-90a6-43f6dd54c068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c59ad17-a22e-4be2-8d0e-97164d8ad80d",
        "cursor": {
          "ref": "a615e314-8db9-4bb1-a7ca-01cf5df98c4d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "09e1f4a7-e165-4959-ad3a-d21b23dfa6b2"
        },
        "item": {
          "id": "8c59ad17-a22e-4be2-8d0e-97164d8ad80d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1bf56bae-249a-41fb-b191-b0b1889cdc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf5ef78-bf9f-4403-b89e-3ec8b91f6837",
        "cursor": {
          "ref": "fdf3eecc-edd8-4f50-a840-1182a66c987f",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "406cd343-c6aa-4f1a-acd6-36f0ad0f6aa8"
        },
        "item": {
          "id": "ccf5ef78-bf9f-4403-b89e-3ec8b91f6837",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4c1000c0-bfbd-4ff2-9494-5924c41108c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14df275e-ce0f-41db-b135-1f6f5ff549b6",
        "cursor": {
          "ref": "83250c36-8c3f-4556-8f28-85bfebac00c4",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bf9be4ac-1435-4d89-a1c4-bcd840b0f43a"
        },
        "item": {
          "id": "14df275e-ce0f-41db-b135-1f6f5ff549b6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "45c6eaca-299f-445c-838c-b580d03f24ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1d0e92-9eb7-4625-b09e-06dd15395231",
        "cursor": {
          "ref": "f7d414cf-63c6-4b85-bf8f-14d4aac42572",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "628d50b3-ae74-42e5-a083-fb50bfbdcf29"
        },
        "item": {
          "id": "af1d0e92-9eb7-4625-b09e-06dd15395231",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "073386ca-40e1-4784-88bd-5be8c00b77fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1680b6-a0d9-4e3c-968e-5bdd9feca052",
        "cursor": {
          "ref": "767322ac-3bb3-4120-a922-539c441efb88",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "398af6ff-1e46-4537-8bf5-f2dd90eb13bb"
        },
        "item": {
          "id": "ae1680b6-a0d9-4e3c-968e-5bdd9feca052",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e4e2b868-0586-4b57-86ab-6797fb58f28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f759afd2-6311-4e63-85a1-f4a7bcbb5d1e",
        "cursor": {
          "ref": "3db5b4b6-38f0-4b46-b579-a7d127ab9d44",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "402393dd-3c0e-44ad-8a13-8624630889cb"
        },
        "item": {
          "id": "f759afd2-6311-4e63-85a1-f4a7bcbb5d1e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a6fe7064-8d61-4b13-af14-70a135234c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa902027-0a7d-42c0-b35c-9feab60121bf",
        "cursor": {
          "ref": "75ddbe2d-b5da-4518-9175-a42baeaa25c3",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "56105b8e-57d3-4b27-bddf-6d23e5015395"
        },
        "item": {
          "id": "fa902027-0a7d-42c0-b35c-9feab60121bf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "de45980a-99a9-40ce-948f-191dcebc359e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8fb2c7-5f84-4bcd-b9cd-b086801b38e4",
        "cursor": {
          "ref": "06d5d14a-21cd-49df-8d10-add2e31106a8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "83ce6a10-e4ed-4dbb-b66f-1236a8109341"
        },
        "item": {
          "id": "5a8fb2c7-5f84-4bcd-b9cd-b086801b38e4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "75e04fe7-3529-442e-80de-62ddcf554de9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d43dc2-b8f9-4511-b6be-038c3011f706",
        "cursor": {
          "ref": "345168c5-3986-4781-9a39-c8c812021007",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "03604903-640b-45c5-93a1-ed618116396c"
        },
        "item": {
          "id": "f5d43dc2-b8f9-4511-b6be-038c3011f706",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "697f4012-9e4a-4d66-94db-44c56a6dafa7",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c3f22a-cb23-4e1d-b857-737a9ce1e43a",
        "cursor": {
          "ref": "e9011a57-e833-4c98-a1ac-7c5e106b8875",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0e85a74e-68f8-469d-ba50-c809831c9542"
        },
        "item": {
          "id": "b2c3f22a-cb23-4e1d-b857-737a9ce1e43a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6fddd3ee-5e89-49b4-b699-ffdd2125722a",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "098f0c60-ff95-4719-9735-b43cba10e88a",
        "cursor": {
          "ref": "4a4ee3db-17f5-4811-9d60-b57c6838da69",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ba293e8b-9144-47e6-8ef2-24b0b25725c4"
        },
        "item": {
          "id": "098f0c60-ff95-4719-9735-b43cba10e88a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "131fe9b3-1630-4e82-8e39-40d75903ec94",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0491581-6697-437d-a24a-7e447e706cdf",
        "cursor": {
          "ref": "950db83b-e0db-45af-b02f-99234db32d09",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3c5e937e-e037-4a7d-b90e-684ec9415025"
        },
        "item": {
          "id": "e0491581-6697-437d-a24a-7e447e706cdf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f7ca152a-3f57-4b78-bd73-7d5d45264396",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0491581-6697-437d-a24a-7e447e706cdf",
        "cursor": {
          "ref": "950db83b-e0db-45af-b02f-99234db32d09",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3c5e937e-e037-4a7d-b90e-684ec9415025"
        },
        "item": {
          "id": "e0491581-6697-437d-a24a-7e447e706cdf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f7ca152a-3f57-4b78-bd73-7d5d45264396",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122cd700-587e-4ca8-aa43-d9d44230cbb1",
        "cursor": {
          "ref": "31107520-cdf4-4dbb-945f-49bb4963a323",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f18429d6-452b-40af-b3f3-5d01ec689e1f"
        },
        "item": {
          "id": "122cd700-587e-4ca8-aa43-d9d44230cbb1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "596c79c0-8d10-4f5b-9091-6834cfc01c64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00262ac-8265-4e7e-9f7c-a47642df869f",
        "cursor": {
          "ref": "8081e27b-4e53-47d5-bb5c-8e5f73bade6b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9dcdce72-ddb9-4e7c-9bac-4f3bf7d2d2f4"
        },
        "item": {
          "id": "d00262ac-8265-4e7e-9f7c-a47642df869f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6aad76a7-fbf4-4eaf-b1ef-cab52632f86a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}