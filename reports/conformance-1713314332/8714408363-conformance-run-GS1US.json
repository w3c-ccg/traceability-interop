{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f6195e3a-851d-4246-8427-f222bf4868c9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9863c886-1056-46b9-9dcd-6e33ff30740c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a66c2c4f-6943-4096-b681-b8edfa5964e8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7b1adcc5-6260-41fa-bb93-5e37ecc5b206"
                }
              }
            ]
          },
          {
            "id": "b64a2183-4ebc-480c-a0e2-722501055063",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7911a329-2596-4342-aa46-d09c7ae21ab1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "398c1d2d-4ccb-44e0-ad24-6115100f8457"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "305b8dda-b443-43a1-99e3-91d795721977",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "304c6358-c2b3-457a-bdff-c0f1ac9f1deb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12ad5144-1db3-4be2-8c8a-d1e1ab57edb2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3136cebb-bb54-4bb9-85b4-43f5b0253200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d80502c9-f4c8-43b2-b1cd-9294da738041"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30ffd697-f91c-4c64-8dc0-78a066067442",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ffb708a-03d2-483b-96d5-8a1767056e91"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b035fef3-f1f4-44f1-b105-a5bb00f05b07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "baf53041-c7e2-4ad2-8ec4-7a42e4f20cf5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13cde925-e819-4256-b6e4-fef014523e5c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c2199e33-c0fe-4c15-84ce-1c2ea25c21d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a3d224b-6bc8-409a-a3f1-63991102119e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46a1015e-1fd4-4abe-9f5a-f1e68ce13234"
            }
          }
        ]
      },
      {
        "id": "b18ed797-7cd8-4504-810a-47611b5ee328",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "36a446d2-7c8d-4e2c-a058-56273fa260fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09b4e1db-d483-4c01-bc0d-d52dfa7b43b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e87a9ab0-5699-40b1-9084-d5255654c01b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f76105-7f7d-48f4-94d7-1674ed53d31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40387705-d47d-4013-b48c-f71fc0aa8897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee9eb5e-46a6-490a-bf2d-72abbebbbd38",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027a1247-cefc-4536-a1c6-eb66fdc5fef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d52f8e29-6a2c-42e1-a2d2-a3c09d2d3d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d447191f-fe10-4512-a057-08d14feb2c7b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5856881c-d4e8-4668-934c-0a187bf36f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cf0fec3-afd0-451d-902f-622d6af425f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5caa8ec4-c880-44cf-97cc-af89274ff37e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a21a33ce-92c4-4f7b-94fa-aa79e8264e09",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48b8f4b-df0e-4527-bd3c-b55cdae41c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d07f18cb-8755-49b5-84c1-eb4324742e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7060e961-01dc-4143-8526-f5db2b263092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d41bf2-525d-4471-9957-770de8b207ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "517ec51d-ee15-40d7-874a-ea308009af22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79d03c76-24ed-429e-8849-e0649b1fdd57",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25d82f73-f395-4d49-a14c-1b8f286385bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a43ac626-b57f-4146-a8b3-aaba3f56c921"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ad2f2c3-1532-41a4-b514-b44c4687fac3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "181ab052-196a-42d6-a781-f1f4a0433afb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20719803-0b36-41ab-b1a7-7828385d7a2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3eca6e2-ba7a-4e3b-86db-4c549aa25240"
            }
          }
        ]
      },
      {
        "id": "6fa4ecbf-b75d-4556-9d2e-03e78ce5b4cc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a5a5f4f1-d532-4d13-a822-f8117c0b2199",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b17b9499-7ef8-4b27-ac3a-0cf4c29afd21",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "901ed56f-b8dc-4ab6-b382-6f808e2b57b6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be4657e-1b28-46cf-8725-7c72c7fe58ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91962ad8-a82d-44d0-8bc0-ed684e4f2bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96a8ffe-0c22-4522-9f48-79cfc8f35cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58c378f4-842a-4d63-a334-7aba53ae697c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bb549c-655b-486d-981f-bce304734214",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f268a138-cc3e-4c68-93ac-ede2daac6b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ca5d65-e25e-461e-aefe-b6b03cd27162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2215591d-f126-4264-b431-75e77f62d6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9960ff79-d664-4ffa-ab61-74e16c2ad651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b7ec72-ded1-4cc2-83e7-11f1b3f619fd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4200e204-4af8-4dca-b597-13e79234ba52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ad619c-3c7f-4b43-bae7-f9a9e1a4f78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90709fb3-08ac-4300-aab2-fa6ddfab06d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d8727ea-a26e-410d-8d6c-33809deaeb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9656a3c2-1713-44c2-a127-54cfefd4fa19",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8b003d-3860-4001-a7b0-537459b1d539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b838a2e8-17af-4e3f-9cdb-f3bb2cd0fa31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ef8765-6cfa-4771-9291-77cc216a8d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad9c974c-17fe-4d42-8860-b18e0ae8ec0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69aa9c90-8ba0-4a2e-86bf-51da01dc5ab9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9eecba8-5df7-4508-8749-36a2243c8304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c3ef11-ecfe-400c-a5d8-a5532ef2dc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175bcb55-bd76-4e5e-bf55-ff67cbfcfe2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b114eef-678a-464d-a391-55d400fd2ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7282cf64-6de3-4979-afca-ded56d9557f3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff48771-d4d0-4b71-822a-8980740d7a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8adae2b1-ae1c-4bfb-9304-1addcf6b9553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf416615-75f5-4ec6-b2bf-1a145ed54ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaf1254c-dbd9-4ba8-a5a2-7d5d7dbfdd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749dd8eb-ff8e-473e-ac0a-3b442f8e6649",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44212a25-8dd8-43eb-9e81-8917a2a8e7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48761199-efa3-4785-98b9-7dcb2cc11e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec405242-fd15-4927-a5b7-8dd29f916eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdaa136e-c04c-43f5-bfee-553a02559f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1614294f-0d48-4c6f-b1e9-ce23fa74cbfe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba46ddcf-0528-4fcb-b295-9d0fd56f952d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c13962-e1c2-40e1-85fc-b1f7479582cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202c6713-a7f1-4ad8-8e81-e5bb66deda77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73fd3411-a14b-4eab-87d5-76a0e138919d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9441125-b914-43de-a938-d7f00426eab0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f280b8-7fd7-4e83-a670-136e99bbdd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4718e4-39a0-4385-ab70-5dd304504c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2baa16-4142-4729-b103-579ded5a9a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da741005-1420-4ea0-8c9f-91ca615c4f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dc90ab-ca8b-4e44-a91e-96daf1286561",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1361e464-8c83-47be-8f2e-766c8026419c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50de71c6-2d87-40d6-aec3-5be21914a9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a96610-3002-4633-9902-279700c642b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03dfb243-41cd-47c6-8227-85b1eab83e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9840fe8e-7e98-4545-bd36-2e3c3e3ea788",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9b2965-82a2-4cce-a391-55b5a3160075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b65cf4-13f7-498e-9229-8b1425fc40bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe86ebd-99d2-487b-9944-fb2b550baa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b87479c7-d973-4eb2-b8d2-70e6efa62143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d12936-13e6-4984-af09-2147db76fb2e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f390dab-f5a4-412d-bc3f-89e43de823cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe302f15-5c81-4112-875b-cce470f74c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85b3bca-8d6e-401e-96ed-afd6d24f054d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c45cbffc-0f27-4303-84bf-4b395b79dc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3e9c6e-886b-452a-8365-fb2ecdcd7c4a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc21872-28a7-4c73-8710-703a0004e538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f4fd80-c721-41b0-8d5c-264316d8e99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3c13bb-6dd9-4c75-9b10-7dbb4656d7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cfdd148-10d5-4ce4-b207-3e2044348b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96e3fad-64a4-4f07-9604-4e9e4365fe08",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c8fb0b-c602-4699-900d-7d7b17f21614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12078fb7-d974-42c2-b9da-753fceaca5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720666f2-1d1e-472d-8c05-c0ece72b5763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49f14dc0-df00-46d6-b01d-6775e3fefbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd6ed7a-a886-4f56-b62e-0322853f319c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bce6ac-d0ff-46ea-9ecc-9fd8fd0ef692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf05027-debb-4951-9118-e541ac04c713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae6f157-cec2-412d-a126-8cbfd839cb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb023c93-1f07-41be-b59a-1a31dfd58a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280ccc85-074d-4715-b9c9-cdfca29df12e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0b0989-8873-4309-ba76-20c0084b0fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8554e22-0d9f-4e41-9c89-cc3764062c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5109ed6-c368-40a4-a827-d3e1747e099b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45e0f67d-5e11-410b-a862-160cd9c9f64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c06230-2c55-4317-9391-426a31eb4c0f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9183d6b-6013-488f-a682-60bc69078a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0868b995-58c7-4ad5-bdc6-053acbeabbc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea2e4ba-65f0-45d2-ab0f-b81b4bee7c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c29bce55-b881-4445-b50a-43b3fcd6cb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f0ac7a-ccc8-4dea-97a1-96b94dd0237e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fe14ad-e2a0-4b6e-bb66-b576f339139b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e94429-5a50-4e17-8873-34fbfcd5b61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc2e2bb-78b9-4b18-b10d-ed420a6af2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bc3f82-442e-464a-8cc1-ac4fc045027e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3b1f13-6b54-4970-952d-c59fddbbfcf9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cfd6b6-0f9f-4f9c-8bdb-158f5c1eafba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f0ded6-a2f2-438c-a6b4-88036f12893e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a32868-dc29-4d58-8105-e01616e73fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5451447e-a011-43dc-824c-5548640e13f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206b51fb-d104-4ef3-94c8-0aed6895b0da",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088532a3-71b2-48fc-bf26-b8ee2309128c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557adde6-5cf8-4773-bb2f-c67ecbbfae3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cda4b86-63a7-41b3-9af1-406ed81fa86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba05a922-694b-45df-a894-0338ae2beb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30299bd7-29ad-4c58-983b-d6f78c7af1a1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5648c37e-8604-407c-ba2b-82399ddee728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8290a4-d1bd-486b-8cf6-8df077c3c4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7473c8bc-1c9a-43ea-acda-5f9b2246739e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff58f2fb-77fe-4edd-9946-e0fe7ad1a21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f5879d-dc3b-4c36-8888-f37bae575b19",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c435ba7-ff1f-4938-a0e4-e36243338646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47b5210-ef04-49f9-b883-8dfb6d39146f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f73b2c-6fef-44f0-a918-89e3bf43f978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42706045-2a0e-4da6-a20c-6d1f3e8e9a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8991ba-4088-4882-be09-ce451c92594f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75637628-0a13-4776-bea2-03d375897cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3f0f2b-1686-47f4-bfed-7b789f483a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88651740-88b3-44f2-b89f-14876b7b1eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99a232e5-1076-4772-8efc-38503723146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab8c5e5-2ad4-4401-8414-f0f70ebf7bfc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c4564b-716f-4703-bdd9-5c097693976a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee83c4a-8ef3-4bb7-8257-51e70afb39bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6214e39f-2fdd-4910-aae0-d2c89112fdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "40e12d74-bf7a-4126-ab7a-f6d69c77f699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce74ad8b-b6e4-4de2-b245-6875fc2ed10b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8d44ef-6bcc-4802-ba0f-89af0d4a9c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d83d2e-3f40-4552-a57a-231a8853eb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfeb088e-4681-49f3-bd0a-09064435ce78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68477c0c-bbbf-4231-90a2-938cf95c0f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d330b9-5d0e-4c77-9f87-a0da77e2473d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6093ab-d560-45dc-88d9-736092345f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c93de6-17db-4526-887f-cac6d95ae7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25db8003-b651-4c34-9bb1-6d83f4e7752c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39944f3d-c174-4c33-a922-b2086681681f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe96ee5-6acf-4ff0-a9f3-f1eb787a250f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd12e80-fc9a-43d8-b989-727caa305b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d0bd01-6e27-42e0-8d51-83c6fe8803cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ebbecf-b65f-4d0a-9f22-2b4c79393763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa788f9-eb30-418d-9a5c-f40c5ee5e2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c067b2e2-edc5-4233-bff2-8241a3861e70",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ba4f8c-ff69-447a-ad13-5944635b6c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041a9046-0697-41d6-b0e0-a071ab6a4ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c074f62-75f1-48b1-8522-e19b95e59292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f461e5b5-d488-4e6b-9a3f-0cf7ab2a359c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6100ee7c-d97c-4187-af3c-0bf4c20dee34",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2a4d10-33d0-44eb-8dc6-37c24b863fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58595bd0-2469-4e15-a6f6-7c61fe96eb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a1abfe-6af1-4be6-b01f-02c7dfc8eabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ceb857-5858-47cc-8557-efb30960fd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34736cd5-d169-4c02-8029-2fa13bbf9047",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bb9913-bc10-49fc-b74d-a3cf71813fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea64bc56-d054-44b6-b059-95c31c910053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bcbb84-6e84-496b-965b-c1a52636660b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f599616-3c69-4d27-b421-af6a82019f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de956e0-c7be-4235-be6a-d25b07f06f9e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c571eee-f208-413a-a0c7-4a6801203f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cbc5af-f545-4ca6-b977-24a58de3116a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203a61d9-c329-4148-867d-4af557407f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99e114df-276d-46db-b41c-c85665bf0049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0854c64a-f348-4d9a-be4a-20ce00741dbc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a6b264-b09b-4675-b24e-e23b39cc6de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c73285-7622-4fe2-8e60-8eb0d75aa397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aacc56-22f7-4a75-b648-3f6e58365652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12b8c84-7b6e-4d7b-be54-8e48aa1dc58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c86b87-a58b-4945-8832-aa229f08ed9e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c9d122-bc48-4846-bff2-2a2b859447f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944c660d-7edc-439f-811c-fdd750ae8e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14ad704-cde5-4a00-9423-cbeda26a35b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9fa0d6-f73e-45ca-b578-e865be234209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2355541a-3547-4218-8f7f-7ee1295c121c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ba1f86-30e1-4f5d-85ec-7332fabce75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56103239-d312-4882-ae45-caee894c65f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9c0392-92dd-4d1c-ace0-7f08ee22c1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63a35f40-a996-4b81-b3e0-75c0a4702cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5b6d86-6d4d-47a7-a85d-bef0631a934d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3217c2-fbee-44b2-92ef-30f4a83b3bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8699d7-fd53-4d45-ada7-e19e8ef076bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5492dcaf-a7cc-4e6e-9293-9c5026564dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a18eaac1-641f-4c80-8d2b-e96dbd5e7d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a09f929-0006-46b3-b5cd-9ecc876ea14c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb57f3a-d364-4c4f-a1c0-5fd7429dcf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f27d0cb6-9cfe-44ac-ab5c-23c1e97d7da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ec22b5-fd4e-471e-b542-3c7cc5e15dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3d6719-59d3-41f6-b7b4-b2154caeb86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cd79ac-0d95-4e4f-bcb6-3afc1eaebbbc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb64711d-7550-451e-9a2c-f72e9bb1dd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1439507c-4146-445d-ac46-0ad10d76a1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ec645a-5ee2-4397-837a-2827347aa509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a60413c-3ba4-46c9-9066-d2a787c97d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec779b2-ee7b-4772-8b63-f9cc5be69955",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18910d2d-b588-43fe-bc4d-a423efeac7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf58a74-a596-413e-946b-65635211de59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c550a5-8848-4ebf-8dfe-709200ce4f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a59e82a-4d44-44af-9f08-c5187b7a48a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c297abbe-1a73-4801-88ac-ce52304c23ce",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bdfd2c-6a9c-4644-ab48-1d45e43f1820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68058a91-f067-48e0-b053-7605579ac03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9beef341-e34c-41e8-87f4-112ccb8beaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2dbf93e-3f48-4358-9bc4-c1066d6c33bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf500503-8cbe-40c1-88d8-1346496e97a7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade87d61-04ff-4780-bf61-10bca55b2713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806d0fef-0800-4adc-9904-b572321b8c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c5d4fe-cb2b-4550-8125-97ea3cc28e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1535145c-6c22-4a37-9161-2c2e5aea72f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7602c0-cec6-4456-a2fd-58f283581d62",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8f6a13-f89c-4e5e-976c-1dcb169f2bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45afeb80-741b-4231-9e99-af9e82eec92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5325ebe-c399-4aa2-b427-d350f1e2fda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0668f98-1f32-4bd2-844a-1ea7cd8cd486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bb445f-79f0-43be-a6d9-46c319cc7157",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417d9f5e-ff3b-47ad-82ef-ff79f1965ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78567c66-e714-4ba8-8111-574c01c9da9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd463a44-d483-4eee-9e8c-84c8bf67c6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cb73a9e2-2010-4e6e-993c-cf60b4236bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d15ed7a-2972-4fd6-b415-e9015796b7dc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70bab9c-cb11-4ab0-afb1-f28981955650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c743f3-1615-44e0-a568-b693a71112e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a0631b-0047-498c-86b8-d8d678af4994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "11f06fd6-3538-46a8-b243-428e6efcd38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d080db9-22b9-489b-99d5-8278f271eadf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65713084-adf3-4848-b714-ca39109cb7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82e7837-3534-4bd3-9e05-15aa5ad8da3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4aec4bc-c3a1-40a3-80f7-9eb7a6058c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd8ade1-1c5e-4d5f-8677-5b15fccb8330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a564a0-365e-4e34-be5c-13673fe7323d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1905c7d-0f4e-490e-b4d8-80469ffd20ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e472ba97-88f9-4ea7-ba51-710352b47917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae93e9a-113f-4b62-ae36-0fec45df0b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "86cf8b4a-bc71-47a0-bb62-9e5dd81b34aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee433b7f-d109-4bce-800e-81f009c42f33",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c975dd14-186c-4949-aad9-733472c4b6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d3a55c-e854-4548-aab9-30d4ae86f5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cea3ce-1f7b-4f63-b2f7-b013b3509609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fe35e3-c407-4428-8679-6cf1289fe7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b434dff-d564-42e1-9dd2-e0459ac07cef",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f73ffa0-82e6-4a24-80a0-51cf61a0def3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5480149-2c33-45d8-8474-ca0554cee74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ec8d0f-b5c7-4bb0-848b-fc9367362fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7848e8-613f-4368-9e4a-945afa3c73b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac65824-aa9f-4a4c-ad7f-053c49d9f61e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90da6cac-cd19-4549-b3a5-d81799c860b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7174fed-b776-45d6-a9b3-c64877784f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd86c17-4f77-455c-bbb5-deb891302551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbcd24b-c09d-4022-9d8e-e203b7b74196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe48a7e4-d634-4a6c-93e9-58812ffe290e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa4f04f-e781-49fa-9628-2a288201e9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6362c0-7252-4377-b523-02d4a94f8506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dbaeed-4dbb-4898-88f0-97b9551cdcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8135da29-8b26-43e5-9d38-e51c36244080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b7f9e4-b1c8-4af3-98ca-1fc6846ed8e6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a0ae3c-76ca-45bd-99f7-faf893da037b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548c6f3a-56a7-4fcd-81f5-a6e755e355ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b402143-712f-45ae-96ff-d8d2b2284d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3805a77a-51b2-421d-afcf-c49a03979a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ffc210-9bde-4bc5-aa32-e5714d9a255d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7fe8cb-0269-4753-985d-0e22aff396f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2a3c90-ee40-4ea1-b517-51886e7257a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f2b469-1c2d-448b-b145-32217a289ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "70145f6a-d063-4096-8c73-3db4bbe5120a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d57e18-623a-40b2-ab1e-cbd5dfcb0984",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa8c10f-3939-48a8-b230-da14d269bcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c67df54-19fa-4a14-bb0b-a0445d228a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f00dec9-5a9b-4b9b-a238-57036dbced98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa0414d-36d9-4e8f-b4ab-6c5e1930bf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b878576-5d14-4df6-ac6d-34d340f415f5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d797909-d9ac-4ac1-a8be-eb5300a0bb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e23ce1f-480c-4f9a-9245-f28484cd26b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80b5342-8755-4808-993f-a37353ffcdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87199f8b-3f9b-4466-a20a-953a5326fb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8763c6-975b-4a6e-b987-4c6e12102484",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfc93cc-02ee-41bc-b7e6-27932d57529a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506f25ab-5fab-4817-8aab-df0cec599b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d1ce17-090a-46d3-a5a3-25d5cb4fc823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "167404dd-91a5-42e5-b67d-7873dabc5274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e57394-9940-4739-a78e-ee9829e0e3db",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8724b2b-8b5d-4f84-9699-02f8b4968eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a9c1d4-0066-4d04-82ee-9d802e6df760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6e6a90-ac33-4b73-a671-2b79e7bac1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66aa6edb-ae38-4b1a-a914-9e6946f9030f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3370f461-5810-4bf9-a1ca-14a11c4df61d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0160ea8c-9fb7-4e64-bc3c-2cc96ff6a37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45a1c8b-bd26-422b-b8d3-f8e96363d64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1497b8-5a40-461b-9bb6-ae96f239d5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ce251022-4a87-4da8-bba8-3118808d2991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032da218-a466-41ab-ac66-b4e57e71e4a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53019114-807e-4ef2-a319-7c825aa09747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80773473-a8b9-4dbf-b3c3-054f31f63507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7772dcc6-83c3-4934-ab3f-3939c9535dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67ba7c64-ba80-401b-b880-986c96d726d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60076cf-db27-4d64-90f6-7398fcc38c99",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21d1718-70a8-4bed-9552-f7eda5fa4c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc11447-2444-480d-af5b-908c34aeff1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d649ec7-d89f-42cd-8eec-4a6eec842b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b72a2d2d-de81-4859-b16a-73b9c3a8018f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6492c401-cd30-4425-907a-c87765b8561f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7627a002-6aea-48d4-824e-f0584fedc743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19be1d71-3b9b-4d17-842a-d1c34257d293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4d8307-884c-4aa6-9e61-b75d43b4dd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0132e2b-8cdc-4627-b109-6bd5c2bd9df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c4780f-281e-40af-b3c0-dd1d032ab7b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dcb719-52f4-4078-98a0-3ebb47b9cc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aad014a-aa82-43cd-a3cf-72afed85a35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ee9c29-b779-4830-b0bb-046623685427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6535361e-4bc6-4961-8a43-c171455db033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8726886c-464a-4993-9a6d-e487ca6bd7bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655e961d-c79f-4f6e-b6fe-3b64c6858b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08824e4-9e52-40f0-927e-67b2d9591508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fe3c82-a5b0-4efe-83f8-5f2422c7ab71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a95269-b3fd-4555-91fd-b266db319ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdac91e6-0da3-41a2-85b4-834771c3c354",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bad9271-6771-4a80-9e98-008666ddca76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa023b46-9822-4d67-a41d-283183f0266c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c180b05-03af-418c-bdb7-6a33b12759da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "95a71b5d-8db4-42c8-87b9-f9d8fbbc141f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798d5b19-4095-4f72-af21-7f31c1405abc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72ccbc1-da29-499a-8019-4ecaa5544650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62608b2-b09c-40a5-b72f-484c879c1e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45ccaca-2423-426f-ad11-077f427bcccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "da2d11fe-de8a-407a-8733-343bb2af290b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10dddc0-d70b-4bf1-b5c0-aaef6360ab06",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1a781d-6cd5-4773-bea6-2a5fe303d858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb37fa00-d365-4899-b8d5-f6540a125764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb32e3d-d3fa-4998-b5d4-353050db5786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "492eb45a-21a7-497a-ad69-4d655590698d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ee7d33-6ae2-402e-a5b3-e446c8d67a44",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71da65f3-40c2-4f27-891a-2f1e262a04a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87d247f-508f-4120-896e-f73a5468ff0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2f8508-c4d6-4e0c-aef6-d2b7d309d3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "241d4025-ac87-4f1d-9d68-b40a4e510936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c589c0-c776-45bc-afea-e7ceee2e4b82",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dd45a1-b09b-4663-a0a3-132081d48f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5efa11-1cb1-4989-a513-9fd9b33ec71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b46b532-9e86-4b97-aeae-2f35028d080c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "add428e4-e338-4489-82e2-e0109805e1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ee11b2-7754-4900-a8d3-016e7081795d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fac2538-5d06-459e-ba30-94a53b6ddf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b0f8b0-a0ab-4763-bdaf-af064f42bf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdd53a6-ec20-4cc3-a70c-bbe8393ac0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc55d02a-6cee-4341-b59a-42674e8af0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf35c37-cf57-4ad6-99b8-3accc2d1e5e9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f1d9d1-0214-4873-bca7-ef4c783209b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fc640e-abff-46bb-9eaa-8a7b3a5321d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ef8be8-4f48-48dc-bf79-2c25a1f21146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d22b637e-ad27-4ba8-9432-3bfc77abc0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a75a58-2b9a-473d-91ef-efc234548d41",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65958d8-ac7f-48cc-8609-8a8ea2891ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e543e468-4136-4369-a77e-f82da87dfc38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411e8a40-9739-4825-a2c1-d0ec20555f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f6047e-17d0-410f-9917-747aa5103cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ffb53e-19ae-44c0-a45d-0aa26d7f0633",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55be0c7-f8b8-4658-9cca-12b790482549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f612a7fb-409d-4025-9505-7f83ec9dd118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad4d3aa-040c-471d-a961-03f856fe1aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bebd392c-c6eb-42ef-8dc8-4eaa5cd4e5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33a412e-cecf-4e10-a259-352f0df154db",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48572e59-b2a4-4791-b7ab-f6c2f51d77ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710f5b1d-27f1-4e2b-be33-33879fb0aa02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6416341-bb48-4447-9729-fbd9dd9c9a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a34dc841-eb09-4904-bf6d-9a1c5c23d967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b9de43-db3e-4cd2-ae55-3a6935711ced",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4356d912-49ff-4731-86ca-6c9b39dcc69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ad7fb4-d7b9-4014-884c-8ab88adf4cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09a0871-5d38-44bf-bba2-f25c14b4302a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc93b26-1c2e-4dd0-9b2c-fb60a5e2cf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63106e8a-5661-4ca0-b490-cfa29af2a60c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d11537b-924c-4f2a-9730-05ea1a266248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260cb592-d419-4b0c-af05-0b318726be53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9dea67-6cfd-4c34-8988-debc2e830e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0498794-4555-4b86-9286-0ffcbed5e4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0d2e93-8371-4c4d-ad18-a67b356f8171",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dedc1fa-add4-43e0-846f-a005c87cc0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9104f509-627d-40e4-8b1b-749b934ac803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f1f144-ccf3-4238-bd86-b1e1e182c8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14e8464c-75c8-4ead-af3c-323caef604dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acf002b-5c23-4c45-91cb-aab1da4ffe37",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbd8453-8bac-4384-bf19-088558fb2b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdabbc8-88c0-4bcb-9a42-a19d26e45519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3054fd-6785-4ff9-9b61-2051dc1b2654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24eb5744-9e94-42f3-b58d-bc031db92aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9323a4a3-6af0-4b14-8b54-97a2bccb655c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b19e5a-b318-4d77-a403-db2f088d78c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b14092-81db-4ffc-b5e1-184c815da3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4456dc2e-1bd2-4283-8c72-8403d06f30ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05dd77a1-3246-4f97-9cb2-ef1a331b130d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c810494a-9cb2-4cae-a92c-d669921a2012",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8266133-af8e-4563-8861-a62034003f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e732279-0a8e-4956-aa9d-43eb1fb088c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ca11ee-f940-412f-90a6-c31d097f80b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83c5110-41ea-477b-9352-32c55779a493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fd97e6-6f04-4a3e-9b1c-9a2bb61cbf2f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bc89ec-ab47-437e-ad42-80b3aa56ecf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd89470-9cd2-42cc-9081-1eb1b92c3b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c534a595-92d6-4732-bed9-3b3df8b802f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8084ea0b-82ed-40c5-b275-bb908c8d812e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5c3be2-6ae0-4d0c-9218-0b0386557d4e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edead66-52a0-402e-9184-6541bd33a575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f590bdd-c689-4709-b7c3-5bfdad697ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee11921f-3455-4a4e-9f45-03508609b761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a360eea6-269d-48b6-a190-35ff1e5a107c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67732b5f-590f-460c-b0dc-789be892d934",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b78aeed-15aa-4e8e-9180-6beeb6fead92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9912663c-3a5a-4d79-a237-607ee12168df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a64b2f6-e5c9-46cc-8050-0da71200fe8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "686c655a-b121-474d-879d-249efafef2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d565de1d-c9bd-4f26-acc8-2e6efeb2665b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727145be-afd3-4004-8ceb-069f72b45bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da35a979-c69c-497b-ae33-208ed3601114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3382f9d5-0d93-4836-92f9-1d7ef7934ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d535e5bb-e76a-411c-9232-977ad37cb0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef89789-bbe8-4116-b1ae-18053a7c057a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b43c44-b251-4e56-9c95-0522a38dec15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978a4cc6-d709-4cfb-8444-4f3b4400a0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde87e3c-0cf5-4ba1-bbf0-1534c733847c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f38f6cff-828b-4800-8328-009574dabbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151d9ec8-a9ab-4853-8ba6-79dbfdc952c6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0293d5d3-49cd-4a3f-9549-9396095d4f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20039509-cdcc-4084-bb93-c3a33c13395e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bdda48-65cb-408c-b581-388ceca5d50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24cee2a8-642b-4b9b-992b-d6bc6ccd7be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33f3b6d-c22c-4662-be32-4912d51b5f9d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0842962f-8a44-456e-8a75-d0249231e8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cfff53-c4a4-413c-a1bf-98944cb602fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d8f657-ee7b-425b-ae56-aa19b6882a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7c4d63-3889-4178-bd08-9b34fc5244c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be18dc34-1abd-4a60-a2ca-b6f676a1fdef",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c057df50-61a0-474a-ae3b-d32347374281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d38b48-635e-4d00-a91b-fb1b1edb5f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf0c54d-4921-42cb-8113-902627a8f20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "963d4a74-03fe-4399-88a5-e4a55a784df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23bedf8-90be-4a19-a1a2-7d137146a196",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d44a7e-6c92-4d93-a9da-8cc54b1ff088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8b68d6-9cf8-489e-b5ad-f01b0732a585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69de165d-8deb-4376-88b0-efdc56797e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc24b37-7f3e-46dd-9c1d-e92341a53aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba14abdf-d771-4319-9d78-6d5192ca7ddb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9a6d57-4ab2-4607-80cb-a3fba835089b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a325696-8743-4382-ad80-75e6bcd46c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426f418b-21a1-42b8-88e4-cb65cc901737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9378d8-29e4-42d2-bb26-8151fc5d1b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4271ee35-a3a9-4099-9259-22a069829e1a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55065a92-d188-4a91-bbfa-9d29337f7bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9672be23-14e4-42f9-9d98-f102bf8929c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71d573c-d04d-4d69-9891-a12daacc169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdae2cd9-9e21-470d-8064-ec9b2575fb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4f4933-d540-405a-9bda-98e6f93ed0b5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21267c39-606c-47d4-bfd9-73cb734e0e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebe74a2-3b44-4ed7-905a-11c5c7507ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2786b299-950d-42fe-bf68-94f23d2db729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cfd3560-ee34-4d95-8e45-6f6b33ec24d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41db95e-062a-4213-a7cd-20d6555f9e4d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fc537a-2120-414b-a147-4e857c95c46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08e00fb-f4a8-4ce8-a8a7-64fa150ff352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4539df5-3391-4617-91d2-1d7f81fd789c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a38328-fa74-4a66-a07e-fb7965d490c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e539300e-6e3b-4d0d-835f-b0196e47c894",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba450d6-a5c5-42ce-aa57-1837f50f231a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a150a6-bd7f-44dd-87c7-6381b3666fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e59a43-5bc3-4983-a73c-e3d0339117df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9472d7-f579-4a4e-8533-3a6269ce003e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a06668c-584d-4084-9086-1b64ec336361",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa6a790-869b-406b-820d-f6f0c277a552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "60909002-22ae-4b4a-867c-d8b3ddf61ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2d8417-bc89-41c8-ae0e-5db2556b3dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2e03d0-0299-4bb8-ae13-1d13ba834d14"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abcfa824-e622-4439-b9ed-142a24028f0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdd5c456-7cb2-4d9d-a2cd-98cbe1ae720a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd86a6fb-a82d-4bff-817b-6691bbcc8894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f95e09e-617e-49cd-92d5-21ed34d1e788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab8c0cf-36f9-49f1-b523-1e775c4aa6aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eead327b-e888-4e34-9cf6-d67fc74f36dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae13bee3-2b5d-4c41-abd0-08e2f92e0cbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43db6c7e-eb1d-410d-b10e-999f69431c79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c9800ee-654a-410d-9a1d-47db58fb2807",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21982966-60ae-4a26-95c9-306708c09873"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5622a0b1-1023-45d4-9862-251970e675ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85eeaabf-5295-44c0-8554-70cca4a8bbb3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca333cb3-07e0-4efa-a333-ef5863b7153d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f461e6bb-5095-41f6-9228-8a7c5ab0b29a"
                }
              }
            ]
          },
          {
            "id": "6c29d9f4-cd30-4c6e-9c79-a3c7d0752570",
            "name": "Positive Testing",
            "item": [
              {
                "id": "627517ec-4e76-4041-be84-18b441c7efea",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f9627c92-54f2-41f4-9997-c6d54b19c669",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42597e92-887b-40d9-8b9c-23d024bb969c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "efb8b8c7-60a7-4bbb-a658-5a77821e72e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae4537a-47b7-4ea1-91f0-ebd61ff0d450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6189fe-030a-4b4d-880b-8b41d72953e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3eecb5ee-a1fc-464d-bba2-7c84770d7cba",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a04fbd13-cb3c-439e-a907-e4daaf4d903e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "291c8a0d-cbfe-4a87-86e2-867b05303fa3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8364ac02-801f-4a78-a4cf-89f47742f4f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f218635e-b105-4fe6-be2a-f3f3bee730f8"
                    }
                  }
                ]
              },
              {
                "id": "1f980c43-710b-4f27-bea3-d47f99f82b35",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3484aafb-d141-468a-b37d-bdf385866456",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61e08dd3-0b3b-4226-aeb1-1de092948be3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5958929-b1ca-4724-9883-035ddb404abf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a1e8fca2-5704-459d-92c3-6e01d68c74a7"
                    }
                  }
                ]
              },
              {
                "id": "c237e7bc-aab5-4511-a41e-695774a52c34",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8c5011d-f53d-48e6-b12e-fc4f0a4033a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aee69a81-1d3e-404e-aa8d-5261ab222f83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7977404c-d856-454a-9d3b-d75b8ad22fc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df1e1393-6e64-4ad5-bea0-4136ced1a774"
                    }
                  }
                ]
              },
              {
                "id": "47b730b3-bc82-4249-9a20-44a39cf2023b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7416aa8e-6a8e-4263-977a-e9517a252254",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8aebd8b7-4678-4351-b4d1-bbd2720aaa75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22fb9e2a-a7d8-4476-8290-80f5739e13dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "af203f99-268d-49e7-b3cb-dd51b8db2980"
                    }
                  }
                ]
              },
              {
                "id": "c16d6296-49d1-4406-9327-8c6bf17f3987",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52d1427b-43a1-4bd9-823f-ce9f039bbde9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a668626-d976-4f55-a1f1-9a183bbd5c47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "383a1c9a-7fca-4ddb-9e89-2dfd9b4b2c4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5d63d6ab-ac51-44ca-a21a-814d919d1e03"
                    }
                  }
                ]
              },
              {
                "id": "82f829c0-8a91-4b37-a886-35dfb53da43b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfb61df8-4b62-4f12-996e-590bfc0312d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d232415-21f9-4002-91ed-f5dceeb4bad7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "300d4b0f-c2fc-4596-9f34-950eff7209b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61cfde37-f881-410c-9805-56ede61f7e8f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78232144-c1a0-4c97-a3e6-291eb86c78ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42e589ff-6645-4982-8870-af8c2145b731"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9bae9439-0c42-4b4b-88b8-0285af4e940f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5313e879-fdb4-4c61-9d9d-63661f345514"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67be0ad2-9109-4a9f-9cf9-1d1fb2069c66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7bd9d7cb-7398-4c6e-b5b7-a9b7b747e55d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae197168-a30b-423f-a833-88d9b04e384c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d68fcd1e-0d16-468b-933c-11f21b0b1bcb"
            }
          }
        ]
      },
      {
        "id": "2e537473-8297-4bc8-81e8-709320511f93",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9ec33abe-a460-4819-8842-cca8c668cfd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f8b9edf-8690-4a70-90e7-334dfeb2ce5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8d100c8d-5f3f-4e3b-9ef8-f160b2690349",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ad7222-d5b4-40d3-9152-080d604ec933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047a84cd-42ad-41bb-a4db-7be7d54e262d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4a5ef6-c9f1-4e91-a4f1-c32b8d73813c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "42f444d5-f14d-4957-a55e-1176e084f48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acda51a-9c3d-4365-a6cd-0906938d685a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb5dd6c-34a0-4f2e-9b21-53aa5992740e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a90668-0564-4db2-bfab-bc53cf4fb600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b45e50d-161c-42c7-b857-abbc43beb383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b04e6e-db46-4505-9e28-93c094d53ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07243a5b-f0a7-41f4-8417-1d9a9527525e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab4efd5-3af8-4ce8-b7be-3d4196e28dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcbc590-598f-4a52-8ce5-4b8bbf536c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dab8e7-db4a-4a60-b0f2-692ae4803655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a07d4a9-4758-4869-8273-de8a6acc9d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4609524c-ff06-4438-9078-4e31a8271fbd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7335dee-14a8-450c-a991-751ea037b1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba2f3b7-bee3-4ac4-9d6d-ad63e26a8088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a96c873-04dc-4787-a62f-872f23f9a3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0d2fca-6999-49cc-9cbb-e5ba8214cd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edafb70-7aa2-4e3e-a18e-a085afb49640",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba19751b-c5a9-4b09-8ab2-6c2562b0b9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d5951d-a03d-4048-bf88-29a1a60df5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d5018a-0332-4a73-8fab-cf43d102b604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54704ad4-c327-4578-89ad-5cb3a59f0a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbf2796-c167-448f-9456-d3db3d6e3427",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea8ae96-f487-4f5d-993a-c6d7e0b85683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cfe75c-2dda-485b-919a-77197c98236a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45a1c74-a983-4fec-8061-50728fd8d2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f5475c-99e4-43b0-8c5f-f66e90c4324b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5980066d-3717-493b-942a-dcff02266814",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6277fa3f-0a35-458c-af16-56b51e24f2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366eee59-39b5-4a21-8feb-7dab2c7910b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbebb172-b967-4648-a376-abac232ef352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "882787ce-d7f3-4d09-8096-9f8c8414ca55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63eaa07b-d0ce-43ae-940c-efb13867ea33",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8758dff7-751c-42e0-9b8e-086dbe5ea8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cebf7a-dff0-4027-975d-0cee05567668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74928aac-f413-47b5-8d1f-d396b758821c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edba1ac2-b533-425b-be9e-12c269748b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed237d70-5815-44a2-a3ea-14df7c24468e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1026f2ba-c954-4e1a-a9bc-57a2e0aba703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "accffbb6-c600-4701-b09b-217d8bfe5b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2f6161-1163-4fb6-ac58-b13602bf49e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d218b4e-a7bd-4bb3-a7cb-d7fa5a78b04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1568728-f665-4c80-aec8-c4e7f9179dd5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a59b3e8-5e91-4b75-bce2-3792a4a393d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3df060-671b-4a26-87a6-c937fe9183c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecbba71-d557-45c8-af6e-5f9c8fc09eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a35968a0-4566-47c4-97af-c1945da3d41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae24c52-93d1-49c9-a693-ddc5b3dae145",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01823cf2-a786-44e4-90c4-cf046205b70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44f2b15-1eed-4c95-811d-121e20f1061a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8c15b6-44f6-4b92-a64a-ed138b9aa7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a64b6709-63d6-42c5-a55a-cd6bece980b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b82bd4-4efb-489e-9dba-0bbf05397943",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9d0580-bc9d-4834-8d5b-a83c37913174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441be6d5-cce1-4684-aa3e-59706a3b260f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f85c8ea-a1fb-429a-b8c3-0daf74d86087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d82d76c-ac6c-48a9-bab0-046ba454bd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c57b1af-7369-41e2-8a09-34a338fc23b0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd6046e-b513-45b0-b83a-85bf235b93f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8aff1ab-cc9c-43f9-a4ee-e5b9256cfd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b0f9b9-9b59-4a17-af03-f46a5188de76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b885d2c1-18e8-4211-bd54-39fc6b650cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca15dcc2-75cb-48c9-bc85-3ca8f21434b9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bca216-422c-478a-b56f-df84d4cde138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1c871e-b688-4f13-b341-2bc22c1a5845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0bfd19-10f7-4a89-a725-a594ccb3eda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e031ed0-5b4d-4e2b-a3d9-1624ec96f1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbda332-f124-4c72-a1ba-156e16379801",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb73930-0795-427d-8e6c-eaa34e3312d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8e9af2-0822-4110-8610-2e8789cfb9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dba5573-f995-46b6-b294-41b739f8cda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd81e35b-9523-41fd-b426-b2454388499c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c985c0e6-a3c2-45bf-b27e-af17c9287343",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8a2922-c24e-4eca-9d11-96d4dcc08d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240dfa63-89f3-4ed9-8fcf-0c6f51330f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34c918a-df53-4ee8-8bbb-4531faa65114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "93b84830-e602-4376-8507-30c5c6f16abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bf681a-4b55-4ae2-91d0-1ae821c907f1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065f9bda-5e7f-4456-b06f-e606acaf7e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8281a3ed-f4af-4b84-84fa-292880298855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072665fd-3fb8-4728-8998-973090ae79a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ef4e40-3e42-4931-aa06-44519e5a366d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d63085c-fd27-44fa-9e48-7fc1fd61a2b3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888eab60-70cc-4749-b08b-dbeaf1d87892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923ae8be-beb7-43c9-9410-a83272842aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed302af-445a-47f2-a8e0-b82bc4d513c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6a158f-4c87-4b3b-8ba3-06540fd6cf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b6065d-23cd-4d83-9c60-d79c38af74d0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459c7f32-e5ef-43df-a5ca-9dbd5d7ee8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0da6f3a-9d51-40c6-bdc7-abd4c5ec0ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c845c434-a584-4043-a1fa-6612a628d12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "747970cb-4e9e-4fe4-b290-741b95c1af0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c0b768-b67c-40e4-bb1b-7f05ce9e6034",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af823ba-f341-42ef-af11-1c277ab8e38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f557a6a-388d-48c8-825c-1af89db08750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c2b9c8-f14a-412c-948a-1d8a138f6d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5896303b-5f5c-4717-812b-c5905861099e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca32be9-7f91-4ef0-bbc3-449cc3710e7d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcfb956-7085-4f78-b80e-0d08d108d05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d6f8f8-3d7b-4afe-8450-2b8340e86e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed97587-2a2d-492c-9fed-9a5fa7379b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0805b5-4f1f-4e76-be60-04f359a0dd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c001267f-5009-4eb2-ae11-20310f849634",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b934c57-4adf-4f59-a963-52d83a3d21fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807b4926-3975-4e7d-a08f-8f5a02cff0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa08b09e-9ac5-44e5-a630-97073105f8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97f1c350-b368-42bf-bbe1-0a9040ecf906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9924f50-71b0-4c8b-a991-adb3665d61eb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7926bac-cd77-4dd4-a8d3-d01411c5580b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bf0a1a-0c0d-46f8-a5e0-4ac89caee647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acf076e-82dc-4a86-91ae-e04545baae88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c8396b-c4df-4abb-9088-c23b3a270c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d606ce0c-2acc-4892-b564-66f71e42b2ed",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccfe410-5255-4049-a660-95061b391ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10552bb-a07d-4249-af0d-70cf002c4a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56dd154-86b1-4d15-a30d-a89234945ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "356878ff-2c51-4017-938f-fa2499564415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd59c5c5-9fa7-4e1d-9147-9c8557c31b44",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c9ca02-ce95-4ee6-8e02-1dbe32b114bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82997ee-9480-463a-999b-0b6fad7a8b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d3dc62-469c-4b8e-8f3d-bc959981acf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c06a8e1c-1a75-432d-bc78-8258a9b68d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8872df0-35fc-4c71-8022-2c03a4ca3afe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703cfdc8-14e4-4b1e-b479-30110a02a666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e60728-7593-445f-840a-3bd003f6f18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b796ca-0f4a-4db8-88a7-1dd67ba8500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a428749a-e3b6-4077-b651-93f7858e28a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e64950-1f69-4de7-a4cc-4e4199d335ef",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5955aaa9-aab5-4020-9242-90ee28b0eee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a32007-22c5-49cd-938c-74eacb9be11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40afa568-fd5c-42b8-b1b5-8f7ad3e43702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f652aaa-09f3-450f-b0ff-0a1847b131fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8b6944-6445-4997-aaa4-bcfef240aba0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f256b666-d3ec-4667-be27-600e24af6332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618befd2-f6fb-4913-9571-89763752c7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c3a486-9e9d-4bd6-8042-51816b27ddf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f63f4e1-344e-4da1-b05e-b546ba12366d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1e92bc-7ed9-491e-8f9b-c7ab19e4adad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a31e60-fa09-42a1-bf33-725c62e3636a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c238ab9-8b51-4c57-9b9f-b44f35fbee8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd6f898-07f3-4920-9fa8-6e1c8964313b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b8ccfe-86a6-46de-9b34-5c8a28b00b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0096c94b-ed94-4869-aa54-7d888fc8f33e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0cf8b8-7e09-4b06-9be7-e20dfca1e501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c2bdfd-c82e-46f9-99c4-a868218eb1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb8168a-125a-4217-a6ad-7265eb56ba48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aae252d-f43c-4097-b012-baf0ed71107c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f9741b-1782-47b5-ab00-ef1d5c48b809",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1e14fe-ab39-4118-b6bc-edf2c449d8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569d1e74-f654-4771-a4ca-f87e61b8e503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afb593e-bed1-41d6-9758-bb78711b2b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6ba9c2-7518-4484-a99f-7581ba5670d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4c648b-21a7-4b00-aecd-1c95a2c65f93",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5b94c1-d151-4a46-8b2b-46fbe26d1209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0af45f-01bd-432d-88eb-29b892866470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda9776b-461b-4f7f-834a-cdb45fe5a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6deec356-262b-4b0a-9c88-4f201cb2a25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf4a3eb-271c-4b34-9b04-f36e29626fe7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ceb1331-c4b1-46a6-be38-6ce3827ee926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994ba0e0-7f5f-4c43-a8af-05b1de008c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf6d634-dd6f-4ec6-8bca-84e8f187e847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d1d336-7fb8-466e-9e78-01422e322d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a602862-30a4-4e2f-a5c6-b9941cb81afe",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5812157a-d98d-4304-bc6d-9e650ebc8f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763dd744-76a8-42cb-b30f-ba26901b7278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d538096-2d1d-4f29-be67-9c796bcdad71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "329b8653-cdbe-48e6-a7bf-192d7cb0cefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f90b97-f087-4e5f-9d12-140e53b21fee",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b92a9c8-5ffc-4116-8100-b6a28015a50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ed355f-f287-4a04-b8c7-2c14e29627c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5cac95-2333-45ff-81c2-da5648f5ef63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44e10187-3627-4bcb-b3ba-ed04d349245d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbe3f4e-8074-4b1c-84c5-2c8f01738d43",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824d1612-afb3-44c8-bec5-b858875d235f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f08429e-35b7-421e-a79d-114e3027cbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc061361-b734-4e31-a390-47c304e6adf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ce04b6-72b2-4f13-8e31-31e932e73137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb10b05-224e-4c6c-b158-d77e2870b529",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152e9768-4811-46f8-9f5d-b2e4a47adff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2416bf2-868f-4c11-9f92-c7e58fd7d792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a19dbb0-12e1-4881-bfe5-7e76f8afb47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1de0b76f-c6fe-4005-b71e-495224d53afa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c59106a-e255-420c-b356-918e75e871fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8b35920-dd11-43dd-bf89-696418ee50b4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86151bba-c2db-4d07-bce7-d8203577e5c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "24f50cfa-9132-41d2-8433-80706bd9cb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cb2567-44b8-4add-9fee-d8a7585a47be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32a21649-37f2-41b4-b84a-c7e916838cb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dde9d92e-c28f-416f-862d-e91d5b1d2e42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d44ddb5-866a-4dfa-b02a-19d8e74231a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e80961fa-8454-4fb9-b362-0a69246b3012",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25bb85fe-1811-44a1-b9a1-4f66caad70ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78ae63b0-8eb2-4cf8-8882-613c50788221",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8fd735f1-dd84-456c-8035-ad407942a337"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d9c7c14-1715-4ddd-8911-7dbc1201ceea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7aab7f0-d3f9-4d1a-b128-a0a37166213c"
            }
          }
        ]
      },
      {
        "id": "3a6957eb-d64e-4566-b4d3-ca4169068625",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1a4e1054-0f13-4425-955c-f2a06ab209fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a13a7ba-3475-4289-99e0-f79a7c7af7ec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb4be510-62dd-460a-a0d9-b26a7b6200af",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cd176d-03d4-4197-a7aa-df265f4bed23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e87606f-d976-420c-911e-90c7a0f162e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40013c58-911a-4dc6-9420-013b46786aa9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b624cb7-2cef-4570-be8f-56edfbf4efad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a1969a-6b64-45e7-8b59-16b6d46e3ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0153e50b-7bf3-4d9b-9ca6-d39377df7095",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d179c7d-3fb7-4b86-a3c0-b887868d04f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ffbe40-e132-4d4b-a248-4b3c781eca19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840182e5-2907-4f92-b265-d16e3c5f9d5a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c903eba1-8f92-4b1b-a344-9ea132545238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e8a21a-399e-4ab7-9bed-5252c156bc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bf4536-585e-4f54-81ff-501d946485f6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49db9d4-f97b-4482-8422-403d4b736688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff224552-3ec2-4788-bf50-8d873714f95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5ca800-1cd3-4ccf-a935-20793915c38e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127a837b-b725-4f9b-a3e9-d13b5b10959c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bd5463-dc40-4782-9dd1-206429efcd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b9bf73-e87b-477f-8f8d-43b146a9f822",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08197a0c-4f74-4ff7-954f-8a975f19d479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430d8703-2098-420b-9e3d-bdbd1187f630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a32dab-a4b0-4677-b862-c5c3c8da9b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6d1838-c827-4e57-a901-57907c14cb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e79aa5-5b07-45a4-a575-cc41957e7b21",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1ac35e-a1d3-4b86-9a59-d91e878b6364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677c7bc7-206a-40c5-8991-0e70149bbbfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b81571-4335-4ca4-8e3a-253f6432248d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcd513f-109a-4b40-b64c-7f4a02e552d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148a3110-429e-4e46-a4ea-2ce815dc72b0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec2fe37-ca93-490a-917a-2c6ac34ba8fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42036a34-a7a9-4a85-9810-100167b3d834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99061d12-00e8-474d-8fd3-d6a31c1835a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf046a1-c4ff-4ca5-babd-9c6d793b611f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132aaaa3-60fc-4ea4-9dfe-e2f8b7d6f160",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a35fa8-42cf-4a69-a032-fe55f35f7ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a1069c5-27ff-4275-972f-7fa0db5f32a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c1c83e-e288-4a34-8ab4-44b3939089f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fe5f78-9b87-478b-80c6-981138e76328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e50949-b4ff-4181-a643-98fbc82cc127",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132ee614-d99e-47b6-8e81-9afae5791b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5a6f33-4e8e-4aac-96ad-64e4b88e5d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3701d111-30c9-486b-9205-126e05b1abed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82664ce0-aa36-4fe0-9c88-e07f4c9b43df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09d1356-9b77-4a49-995c-099b43ce115b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c472b151-b402-4131-afb4-2ee0a61ed1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e839680e-beae-431d-9a3c-5eb9a7333803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c601d8af-4f11-4676-a91c-fda1945291ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a3bb35-9657-4920-86fc-734af8cf4b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af22690f-02a2-473d-b6e8-fa9058ddcb88",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a7de8b-37cb-400f-b89b-91e395479933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f079771b-9ed6-4217-b139-0841836295e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feedbdbb-98c4-4523-a78b-1983e8afd780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b70bbc-c766-4201-997e-9cd5648b9bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b07d2ff-f9ce-49f5-819c-563d8a4fc20e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d011b9-9e91-49af-bdcd-b16f510fc401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1496fbc6-03ca-413f-9f11-9d5a994aa4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fb6bdd-80eb-459b-9f43-390adb779426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359462e5-8bcb-4a9d-8109-9052495d5029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5768bdc8-df18-4942-b224-566b8fbfd6bf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa246024-b258-4b9e-860e-25f6c0b28973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3424aaa4-53f3-4341-b3c9-f904d5fcf117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b91e8a-cacb-4ce7-af04-46453905a91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34dd83d-5b9b-4ced-ba25-48435acf12a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4421364-ba5a-4656-99f1-e066615e77cb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a0744a-5146-4b28-b2f7-779cfcec3d2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "963bc6b3-bc4d-478d-8ce4-15c752581359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7961f8c4-3bd6-4da3-9312-cd238481fe68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d91d77-4c4a-4d14-8c62-a84938c704ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a6ce47-d079-43b3-add3-98248fbc3b56",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cda1c7-0c34-4e19-a2e3-6488bf1e7190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1adb1d6-2062-4aa9-bd81-70695e07746f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff7e7f7-dd80-42ed-b7e0-1bf888fcf5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68efe42-cdc1-4eb6-818d-4e4f866a4483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4ba50f-40dd-49a5-bd24-eb712edc5931",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfbc29f-5435-4418-a9b6-6674b1d3aad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8082adb5-b018-4644-aad6-b64f488a321e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310bfb97-de32-43a4-a5d9-c2861bef79c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0b190b-e8ab-42de-9c24-2f5a5012917d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c7a946-7aed-46d8-a1a6-ad14b6c48571",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1f937a-ae96-4977-a68a-adf143d7bfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609056b2-20d0-4b08-abc4-46989984d2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbb5f1b-3f79-4d7c-bcae-ff3c8f665c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12faa378-f425-406a-ab0c-e76dfc6aec19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce6eba0-87d8-45ce-b0e9-8aae849a88cb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f012e6-8cf1-42e8-ae02-936a6e4b8b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce65a335-8a71-40e6-acb6-205c4be021ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3838d96-8fcb-4c6c-8d35-5fb2ab32b57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455115e4-3a51-4229-9dfb-c135b16aeee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9058d505-fc56-426e-8f2c-6905a8fcedef",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6494b219-c3c7-43b0-b306-25d8840eba72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f62e7ba-3c8c-4a55-8d92-1d554d921103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d3bd33-7972-4a65-bf20-d4cc074fd7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfe1bf1-bae9-4c63-b4e8-2d4b61145e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe0da70-5c47-4297-bf7a-57dbcc40c184",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e8452f-dd67-488c-a87d-ee2075f8f758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b478b43e-f1c8-4969-a674-cddd8cec7f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db855ea4-f04a-4fa4-b264-3f92bb600044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e51ad1c-dc56-4c1c-a3da-f5c2d2e49662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53e1368-e41a-4cc9-8d6b-4e70b4da67f8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58780661-a326-4b83-a297-2fda68f3c1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15caa955-117a-44f4-b8c4-85316c966279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87857b24-4cad-4e3c-915b-cb600dd59c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b9f400-7c64-4a01-92b5-6a31d2c47177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a47b22-206f-443c-a99d-10ff8cd27305",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43cd7a5-e9be-4be8-a6a2-87d5b42f65a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c3b2c45-9569-4e10-b1d7-84765a03cbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54047dc2-b6ed-4af7-9049-f5e0965743c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9deddf0f-9202-4dd8-a5cd-16b9acb09aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628a3ea4-bf7e-4537-81ef-18fb463dca90",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fae7a0e-ab93-4ca8-94cb-8961c28a6ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "685ec248-5c8b-4fe5-ad9a-2b20319e626a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e0b9c8-bf7b-45a1-80da-c2e1372e61dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff52fd6-3bc4-41d9-bffb-502308fe28f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31676373-84e3-4d3a-b8d2-df340647a6cc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190cc12d-4a59-43a4-8f5f-d0794460fa48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a278d4-1d16-4cb1-8461-cc94bf0eb8e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5d5259-9768-4647-89c6-fa13812265e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb41a43-c55b-44f3-a986-b9179be51f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c25f416-8eae-4e1a-82af-e8a393f71e10",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5bf0d2-5c79-4211-82be-1c1338fd7c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f78354-73ff-4859-925c-393c4e696d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce9762a-4c71-445e-85fd-36b455148d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752e0adf-8940-4464-8a92-7ff1636db9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8cea50-f0d5-4c5a-a24a-baac5bda9a54",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ca9c2f-d2b6-407a-bf3a-5b5c44b245c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77625e12-9039-46ff-8633-174af33217e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd60e0b0-0e97-4771-85f8-e1b8417d82dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2a818e-af76-415e-9da7-39ab499fc5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cba5fc3-0584-423b-861b-1b1475c0d17e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be26a90-9815-45cb-80d3-8454154c50cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebceea4d-b0bb-4d0e-9647-4c1d4d281dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74020b6b-84e7-43c3-8b16-c61511b4199c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b592375-3cea-4dfa-bcac-0dd705e5a030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f01b56-6af1-4902-a970-cbbb0df4d978",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79346fc9-2164-485a-ac9e-2b963ee0eaf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84bf09d8-bcfb-4cac-bd4f-3a8e00fd4af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e4b041-4010-420a-a4b3-86ee90285170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8591cb72-9f29-41ae-894f-cc402e4ed31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e5c74e-2173-47b9-b36d-d247af940dc0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b618559e-0f75-4d63-a4c4-822046635c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d62bd52e-94ac-44d4-8f94-d767c235cfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d70c44e-1232-43f6-9fee-e4e66a63d39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635fb1b4-cb68-4538-8f6f-b87512cfba2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833c3391-515e-4df6-ac92-6339db69718b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689b1784-df86-4276-a64a-cdcd9fd0e1ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdbd5a3b-456b-48f9-9429-a2d35ac5eb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad26b68e-469d-4b09-82dc-507265f62fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5cb700-602b-4db1-a1fc-d0ece6c66f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cf8be5-d646-4a96-8e00-aef52a575e64",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c252c55f-4c6c-42e2-acfa-4ce95f890814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4482aab6-f29d-4251-ae6e-095dc02bc56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e59249-33f6-4e61-ad7f-cfe550300cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a880a9-d703-4965-bd7b-b3f8be60bf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae76d90-fe9b-4f06-8655-b1570a990b38",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bc5c54-34e4-4131-a5b4-9e3e87f719f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5c849ef-d8f7-4ab1-bdba-6b2bb74e4ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ffdcd4-9d0a-4104-83ea-7071f4487740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ab2b2e-8e8d-4803-9f75-e132660a660d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0853dda2-9391-4a43-9b8d-40053e7f90b9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dc3d4d-52cf-478f-839e-2e7302163154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556c1316-de6f-4366-952f-80dc2a420c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf0d00d-1271-41c5-aa66-d2395033535e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e17b4fa-4c5e-4420-b274-89f9d44f7cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805dde7c-d807-4662-9fee-af3a5502af6e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c4bc1e-16e3-4f1f-b985-41f83a355d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1238f8-103b-4de2-b763-af0e8cb5c9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9684242-4acb-484d-a730-d81ad796af65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446785f1-f823-46b9-a580-83a498a9479a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec38e997-8da9-4543-80bd-5d96dd745fa2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bd61a7-a04c-46dc-aa9d-7dc10a7725e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faadd675-0f89-48f8-bbe9-27ca8c995685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce9ce1e-fc1f-4361-88c2-86051f0dfd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35fbebd-70fa-4d38-8bdf-56d64de528d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c52d1ce-3fef-489a-b964-4c913c72f598",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afbf57e-5324-4440-a93f-03a0b71c73d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eada23de-2d6b-4877-93ca-17ffd9ff56ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c745e811-93a9-4c75-ab06-a793c86035e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857dfb6c-7369-4ada-bb34-87da3b4d4a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735a8b6b-a632-471c-8932-5cec796dfa42",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1984cf9f-c911-4789-b330-c271c888d460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8300abe6-0293-4221-b38b-3b7b5b4a307e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9364a3-6a51-487f-9b65-7f71029fd326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4eda3a-4353-4296-a97d-542725db07a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa93aad6-2db4-463f-8520-f57614cedcbb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6817def-8f5c-4820-b5d7-cf0a434cdc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c44c80-6fe4-4a33-936c-897bd4ef565f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b58205c-c7c3-4314-a91d-e606828098ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8e34d8-36d0-47f9-8e0f-e1075b310dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b03892-a297-4dca-ad60-3bcfd9b923d6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a304dc36-0f6b-4357-9724-f6abf00a1a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13b93ae-f90f-4a19-b8fd-9e798dcbb59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323d04f9-cf5c-4ba4-9d64-0b163cfef204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1140dec5-c80b-4ee8-8b78-fa46a5a7d5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc049a20-d180-480a-8b80-95561447c171",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5fe950-ffe9-4904-a1b9-c99d06886589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31b2462-ccef-4394-a288-6566e52b417b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3c4076-e9fb-46f8-8773-d478930eb910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926e3707-4ceb-47e9-9202-adc7104bcc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7cf06a-e373-4fd9-9783-1cc3f817fb3d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa25c1c-c246-4026-9b7c-be334eecd643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cd1a1b-8849-4cba-8cb4-55b4eeac1f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3732383-ffa2-49ff-81cc-ab92b8164c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab56aab-f681-4fdd-8a17-8d3591fb0e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5313ae9-d730-411e-b95d-236ae3b551f9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3d26de-7543-4e13-a510-c433dbd0732b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d14d42-89ed-4cb0-9286-5f849a05a4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b96ac6-cd14-4ae5-b980-a3e2c8ad5308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23719f4-931d-4082-a60a-a653d3ee0b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65b68af-1d6c-477a-a05a-68f3a8301a45",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badcba03-960f-46f5-8e18-f235e9e2ceb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a83a48-7376-44d6-9c10-2a0214ab4d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd88a81b-6017-4874-8604-f05641805f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ec9ca1-76c7-4798-a6cf-e91eb697e7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cbcf80-d2c1-4d73-9f2c-4164ec5291ac",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be5cb30-b0d5-4b0c-a233-3c96e62d13e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c82297-af54-4f95-9542-7eaa48b485a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28233a5-7c73-49b7-ba79-cbac11abe51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81eb275e-79bf-4560-896a-0c934487a22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c095e86-4ff2-4f72-be3d-3084123183b7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ec3e3b-6cb8-4cb6-a79e-c73fcf21cee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb99249-1d4e-441f-9b8a-1fb1714ace02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084a4c3e-37bd-4bbd-a23e-3ec7cd0357e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70fa400-3293-4014-9eed-66f0fb168a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eadb539-0faa-45b3-8dcc-bded283ac706",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaa804b-b227-478f-a730-3a449bb656a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb35a2b6-3708-47b9-ae2d-e1b28b4b3f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2be91cf-2fc7-4c59-a910-1b88eae97da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61a539f-73be-44b1-88da-bacc5452e9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39791bec-3340-488e-b552-286124b55111",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45a3498-6939-414f-9a5a-5f6e4e2e657f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4e3e87-dba5-4ec7-8fe5-bc976d7130ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f3f972-e6ef-4c32-8c78-a9661c40a54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e8c21a-3f38-43a3-80f7-7ae673b8798d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548f26f6-a3be-4eb6-96f7-59d3d28e75d8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9691ec-7847-463d-af27-b319de5531c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c15f7ee-7875-4629-9569-13f4dd4dfe78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d066f84d-8398-418d-8e18-092472110f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1f01c9-1272-4f3d-be5d-8da10994d117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeba981d-16e3-42bc-a340-f1e36d7ffbb2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfb5133-dc2d-4f2f-b197-1d0088e736bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d629e2a1-75cd-45db-a447-1459e785de7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a482ebc-c504-4d2c-8b39-10caf537b526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede45982-3b8e-4128-89c9-43aa5b55aeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63e6d17-9284-4927-9ba9-68c399b243f2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a279a918-fc44-4c53-9095-4eac11d3df07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23f98bc-ea93-4e84-8d3a-234c92e0f102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4bce4d-f288-4b28-826b-a0d8217c2cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8f5075-c449-48bc-848b-f06511397a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4feda59-42fe-4071-bba2-3865d154c3d9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ebf589-d70f-4ddf-ad9b-0cff5c301803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c5af3b-d34a-4e6f-8364-ff4648aa8550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50288e99-7165-47eb-bad9-5c592ffff280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545c96f4-af3d-4467-b093-cd9a2546eef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89de4af-1a8a-47fa-9101-df603f98e0a1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4c4dff-3ba0-4350-92bb-c8f1a62c3ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5faf8b83-d884-41bc-9fa6-5149768c3ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548967a5-f7c7-4b77-b92b-afcafd2e4bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62550e3d-7f58-430e-84d7-8bc8cfe56fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d631c0-bece-4916-900a-9dd8a462a643",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673f87c0-6f8e-47f1-9804-59ebcf483c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2c2a9d-8a93-4164-afac-d1808b3f25fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6780df31-9569-427f-9a88-fb46a494b5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d070cf39-05f7-4278-8723-7ceb9fb0b038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7827208c-f6c7-4b0a-8bb5-d54614e24f15",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cc544c-f7dc-4381-9586-62581bf45789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c9fefd-6add-4ee2-b7b1-3a67c6f467b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5371738-edc2-4911-85fd-86d0970fc226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0eb9c1-858d-48ce-bece-6822f2b0ad8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a90d51-23d6-4084-9116-f5df008f030f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edb6c51-8222-4a63-b914-36c22d765db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e053b3-d45d-4eda-9037-e9131eb48a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6110cb5-fb2b-46ec-bc41-51c6bdbf5885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbc8663-0bb9-4074-8316-da63e4cc7522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737ba001-166e-42bd-a1b2-419676932c13",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d79d272-f9be-4f2d-b4de-a01367b81101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89efe018-151b-40e3-9469-a8d49f1c9028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3265f87c-8391-494f-a762-e1ba2ff668ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d97aa19-ff5d-4956-aa13-10b21c33397b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b098b16-fc5e-497a-92a2-59cc6b9835a5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32122e53-76f7-4e3d-aa6d-d8d9cca0360d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c151f418-765e-40ff-9796-ef5f04155d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a8781d-dcf9-4dc9-a38d-bc6357c96422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c30283a-592b-4320-9313-848d939587a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae15d096-141a-4e38-8955-780dcc829c63",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b2502a-c461-45c0-a937-2e7c8bd96f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6d4130-5a6d-43d5-acf2-e9d635ce4e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b78361-d112-42a4-a2dd-53c241606239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f6e2ef-7952-43cb-bc6f-32a752484cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8fa367-5f29-446e-bb20-334843c5313d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af231ca-6732-4377-95f8-a6ccebc5075f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1d4a60-9726-4ce5-b44b-951e167ba1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c76b45-54b4-4fac-807a-da0ffdb365a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddacd83-cdf1-48af-8fce-18075b355632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5806e6-85d8-46a6-a2e2-f933f659dac6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2189c2be-7f65-4ef9-b3e6-8a692cf998d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d542a504-1d63-4c89-9db6-9b398c9823e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8dda32-d5ae-460e-919b-f67085b5d1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60a10c6-1bf4-424f-bbc9-283ece67c1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a480c94a-5f27-4088-b65e-8e755cacea0c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ed4ab9-65fb-4330-8f71-096f36c5e3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e244557e-481c-427c-a3e2-e9c7ab860653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa706a4-fa73-46a4-8a26-22c855e47c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1864b8b-d9e6-4b11-8464-12a8ba73f0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8724d7f-5fa2-4fa3-95e8-1a42380121cc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a139bb-91c6-4f7b-b9c8-77686db82bf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a02020d9-da1f-42c6-a53e-96f9489bb602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc13ab56-c40c-49a9-a0cf-4d14bc879242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48c3c4e-6b74-4ad5-94f2-f491cde388aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f13833-1d0c-4670-9071-2cf893b1f4ee",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81747736-f454-4f72-a4f5-041e5b5b1578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2f24fcb-4e90-4db7-9aa8-6e99c6074443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ff15bb-db72-4080-aae2-57b6a41c2503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a66ba2e-fe1e-4ec5-a628-e12f8b8d32bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be08aa4-d3ff-4021-9617-aaffde119bc3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c661d507-c4f6-46e0-906c-647ef2dafb3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a87b0c38-d280-4ed3-9b55-041cc37a9ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845423fb-9d62-4808-ba46-ac0597cd339b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d4fa85-d792-42e4-ba22-8b2db0ddb05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dd89c3-0c97-482c-9914-af0985dc4ed2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2ecf32-587b-45c2-abb9-457d9fbf3f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b3f680-650b-4663-b48c-3f6c047db8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63710881-8a7d-4e50-b311-ba356cf0d5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078f6674-b5d4-4fc3-b37c-6b889774ad79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fe8f6f-25e7-44db-8774-5c897cffe90b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae82477d-ec46-4e7b-85fb-0a016bae80cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25e3479-26f5-4546-b5ff-16872e993d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86177fa0-6659-445e-b014-9c437292e114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a06deb6-905f-4dd4-a2d1-8e7efe155c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee9d9d1-af66-4b5e-ba90-ac2848af50eb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f34af31-fabb-4972-9b0f-6773502f4b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a685797-7352-4b4c-86b7-9646eef4eaa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc23a03-020a-441e-8481-c3cf0da4dca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c9fa7f-476e-4beb-931b-a17d411eb81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073a1a9f-a4d9-4262-b9ff-3d0609d2b7ff",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8675364e-ad3d-4f62-bb80-9f78e80ba3ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec189c0-6682-4322-812a-654fb4edce99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffb50e0-e0d7-41e8-8d6f-2d45b5ad81fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b90bb8-1deb-462c-a08d-e7f7525a5830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340ac35f-bc72-4465-941f-09d661748778",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a7bdf7-fc98-415f-b893-fb026a5d0b56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8760fbcc-7cbb-441e-ac55-b236a2dc693f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0098d10c-fb42-4888-ad17-c768adf9d3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a924d3b2-2b02-42d2-9b80-b1f1c299e983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720329d8-e3ac-472b-b456-a920359353a8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da89fd6-1a5a-4d00-846d-a7a254c60be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e4b45d-e448-4b3c-8340-02164adc2eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc200b9-fc0d-46a0-ac27-7d636dd84f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6baf7c-962c-4adc-81cb-d35875185b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729eff1c-a24c-4cf7-bab3-36721cd7901d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1456af86-b849-486f-9872-67e135405531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d84d6b7-950e-400e-a714-5f194c4a29d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf7fd3e-402f-459c-b73d-cbbde428bbd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcdbf55-0db5-4370-a72b-578e2466369f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e537e8c5-ff8a-44af-a520-733a3c281383",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df35c4dd-9af8-4d5a-a35d-1a16a81eb1b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1264232-6e71-4cb1-8f2f-a8b4afec4bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d96cfe-4bdf-48ee-95ab-0725b2316e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507b0f4c-7a9b-40d1-8941-0ad3deac154a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce481ec-75ef-407b-b5bf-d83f0ac2162d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a145f2-1445-4127-a24b-f36d982dd273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1fc4139-d9b9-43bc-947c-87699aba6fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b603abd-c40b-4992-9ddd-31e1a8e53624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850eb147-5cc1-46a3-816a-938212e1a21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b4354e-07cc-4e1e-8408-af9a900b03bb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ae2d8a-23b5-41bd-9492-418a9ec5dbec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c256a2f-e0c0-419f-9a76-245198bfb4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eafdd44-55a7-4a47-ace7-05affa7dc0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d222b016-e3f0-490f-8ac6-02126a0815e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0006fa-3ae9-4b91-8fd9-5e5488f19143",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0654b265-8be5-49ad-8873-1626b732399c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3017b644-ccab-40a3-8872-e167d74d416b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81dfc53e-3863-442a-bf53-0e1cac21dc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71a8382-61f5-443f-a717-3da366cc19ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673f5ea0-e5d0-4408-8f17-147f7c5c0734",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f1b793-9daa-4684-b4e2-9c8a50ccbcf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "595d1dcb-8532-4b2c-9e9f-ca6be2452cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292f86d8-eba5-43c3-99f3-f98ce23b6e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2a8f42-95fb-4065-bedd-e63aba262ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6680fd-9d85-41ad-90e9-6ac83d08ca25",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8b176a-8fa4-4b36-a9c1-a7def6ea1dfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a14272-0db9-49b6-aed5-4e25ac02cff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671f8523-a9ee-472b-8a2b-87f91e72e2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167a961f-49ca-4b74-92b7-e407768d386b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18561fe-15b9-4079-acf8-24cbb8702f5c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e233c04-007c-491b-ac85-e1586028997e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8445c1c-fac9-40d9-9ce9-0ff9d677ebc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d92a5e3-83d4-4b27-b4a8-dbcfc730368e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e22bbd0-aa5b-4ca8-96c7-9b694c6be859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36777d38-2ed7-4ad3-8bf9-faa65749f8c5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535b59d0-ed7d-40cd-ac77-9ea2de0eda9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26300494-f57c-4ccf-9f96-5e118cce27f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07530853-b97b-4803-a98c-3830e15287f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bdd4ae-2969-4dc3-83d0-d9884bfa7bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9046bbe-ab0d-46dc-8f77-d6d4a3ef1cd7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15531007-9332-40e3-84fd-3347bdd038f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "256d44a8-6051-4f68-87de-4d72c67a8a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df41f22c-3606-4ef6-ad71-d5ed94327731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0a3493-02c3-4950-b70c-17055e721a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3e420d-3b25-4b64-99fd-d52f9f9bd800",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54203872-8c48-4d7a-8f64-b4f9ec104b2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3bc41a1-d9da-4369-bb55-60b6c95914bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6082f03f-d96e-4f03-950f-b820250bdb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a718f0-ad39-4ce9-8fec-8b177450bfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f39c17-578c-462f-a442-e756aa9aba76",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce257da7-8f64-438c-a6c3-4c5b97d316b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e05aa948-ce81-48b2-8829-766ed8b15b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429c47e1-5e48-49dd-8d1a-a81068d244c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a35576b-bdbf-4a87-ac7a-4c6484cf1d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f17d2c5-2ca1-488d-b893-66e4c750170f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019a44e9-5674-40d3-83f4-9048a5620460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f4c8e5-bdde-4e21-a6c5-c4383284ca56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589099e0-16af-43fc-ab72-a25044b81cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e846f3e0-17fb-48fb-8096-9330f95596df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f499a8-fdae-49e7-b6d5-04d1f49c0b4a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcc8846-b644-432f-8261-5ec4e6b17ddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd1b064-4406-4e23-8560-969dc7f1c0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a819b6ca-7e0e-47f4-bf41-287cf429db44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936e5ba0-7025-482c-be40-59e493f626b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703e4196-9e6e-4663-b69a-1ea7750d9f9c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80adcee1-2dc1-474d-a98a-ff2f2a276f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f63bdd1-3cf9-4942-b253-df5ea0b95700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbd0e78-4eca-43e8-9a0a-7a98c9268422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e6fccb-f4b0-4857-9f19-316502882b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863055b6-2ee1-45e5-8946-56af1b246f98",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb19f7b-aa4d-4c1a-a05f-fa06de47b124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5677cdd8-f8d1-45aa-a1e8-916c9cc8b2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ff3dc1-179f-4cd9-a3da-58e403cb3990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d24e61c-bf0c-49a8-bb5b-6744d58faeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcb0ea6-fc45-4213-9518-f56527600985",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5274e452-9b42-40fd-93d7-831b66bd4630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28f38303-7c74-4571-9283-e97c8506dd88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e598a1-72e5-4443-a7f3-bc25f8d6f024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1da573f-03ce-4d1c-93a9-5c8169953123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619c4c90-d72e-4c22-b553-2b3509046044",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5937005f-66ae-4391-8b78-fd5b74b922fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50114ded-e999-4fb2-8ec2-66103973c95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d97efe-0a45-4588-ba93-bc6c552e1fb8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7528a5-f104-45ce-88bd-e0fed0c4b123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8045ee-4803-4b1b-94d9-53cbfb6c1f82",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e63604-318d-4ff6-9304-348ddafb3591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "705e561b-b17e-4666-a499-de52d1019a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430a490d-e137-420c-942d-70fb774ee2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdf2be0-436d-4b51-b03a-31e5832d86bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae8bd85-181f-49c7-8941-1740cdab2b72",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92d6846-f112-4555-ab2e-1a972676b97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2175a8-3418-43c8-999e-750f2ee15d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1695ee5-f210-4340-8c22-23f471e120f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6aefd7-e631-4b41-a77b-e8580295be1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba5f46b-f6eb-4a88-b95b-31ff349200e4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c1fb5e-0c59-4d00-9243-2283ba4416d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd6b5daf-e551-4c3a-9c93-582226ba6abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2387a5-9eeb-41dd-a973-61b880a7c32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41eeb6cf-7a42-4219-8bc5-8c9b50509fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80e87db-f5d0-49d9-b5c4-fbe13fc7e752",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee362b21-7206-4427-939d-b1ec5c4fc860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "648814af-0cc7-46b2-ad1d-a1bd7a5d4c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dee779-5b3a-45c2-b79e-621fcab8ea52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c671bd51-25b3-41e4-bb69-60ec19b676fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23311ba1-6de7-491f-a0b2-a6f8c3fcbf47",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0918dde2-7deb-46c2-9646-c0122b420615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "969eed80-072d-4062-a29f-d881a47da8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4083e2e9-9565-4f1e-9bfd-ff9fef1d88ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822d3886-dadf-437c-a861-a9f92ab286e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267319f9-7211-480d-aeb8-8d2137bea64f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b7f95c-7405-4e0a-b630-0fdda6eeee87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28c063ff-cf21-41cb-af38-de697c356afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cbbe39-1a53-427d-a7ae-835d9a27803e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa2cc22-d831-46f8-8494-23d7d44d19c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b281698-8b16-4b2d-a19d-c8afb1286d79",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded65d3e-7477-49e5-b129-b92e384f7438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f54342f6-a3c1-4d42-9b12-eee09a4579c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27263f6e-1b8d-4aac-a444-e5952c6d2a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a966d6-bec2-4137-8e24-ac67d6fd00f9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4e817b6-5469-4ea8-a200-e00b044d9df4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98a91017-dd19-42df-923a-dc6b02cdb526"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9ac92e1-99ff-4dff-b525-d2b2bf3127a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79d1a3f7-ac85-437f-bcba-0a650d1e378f"
                    }
                  }
                ]
              },
              {
                "id": "78adbb94-e2e2-40b7-be78-47cee59c3d8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0721a79-bf11-434b-97ac-37b1e527d5fe",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a44b52-3919-4a23-9626-a7f236e1ac88",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fc2a951d-8a64-447f-856d-0c4d6a218038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2e0fd2-be09-4ead-abf9-a0fe0fbca840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78a26155-c5b0-4c94-baec-7ba7cd58294b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "272bc08e-723f-41ab-b00b-9ce2a5247438",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa41db2d-c379-464d-9e4d-06b40b43a757"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "790c259f-8304-4ed4-9a84-61da3e9c7c55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "131649bd-f333-4517-a205-3532c6760b7e"
                    }
                  }
                ]
              },
              {
                "id": "0576bf42-1171-4db1-8e15-19bd643e1b1b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a25c234a-978c-419c-95d3-c4201098f608",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0da5738-1f2b-42ae-85ad-30c0daf5be2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2f64bc70-7132-455e-8090-262d53c4fc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b435ff-3b11-4d75-93fa-456611cc084a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42c0bf9-16c2-4d4c-8df2-2c2bdc030ef3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e0233b90-27b2-4ec6-af5b-f0c0c947dafe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd6a3002-931e-472a-9a62-3e110080d966",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2c102ed-c1aa-4615-b366-e7b7d3d2a61d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "43fee30e-d996-41bf-bee1-a00fd2e340bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d96fb37e-e076-4420-8e19-1043d2d7624d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9a931b6-4f84-41bd-8483-7f8fc46661da"
                    }
                  }
                ]
              },
              {
                "id": "28afcf90-aaa2-4942-b64d-a1be5df4eade",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5077bd58-7f85-42b8-bd6e-d75d52d83048",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "94040ca1-f434-42d4-a7c0-288e213cf9f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27c70978-fe20-4872-841c-47b47d27d8b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6bcdc91-f901-48bb-8cac-7b773aff48be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1f5bd20-1c2a-4ee3-ba66-e44aa054e226",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6ffcd7b0-3db9-4326-ba6e-afc05169cad4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f48f5070-03b8-4c25-899b-ca868ff2bc35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef5c1cb2-d359-4f29-a50b-bf8e133a8034"
            }
          }
        ]
      },
      {
        "id": "1ad146ff-6159-4a2b-acd8-0dd102684d2a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "88c52fa0-5572-47a3-b974-4427289b5a15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77434c2e-b7b8-45e3-857b-e731a1522d1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f96085f-6a14-47a8-ab9a-d013761692a6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6941b38-6d5c-4cf2-94c5-7432ddf24fb9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "381d24a7-65e3-498f-909f-6679fbc5f8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03dbe2b-b907-4b84-95b8-87e84b644051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00bf20ee-ad84-459e-8ac3-d1fdb5b850b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e1741a0-4224-4d44-894b-2d00d5a55d3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6b26887-0f4e-4e81-a117-36501391e559"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d0684b0-16b6-4ac7-8ace-f3fb0f451b19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26367a4e-f362-488d-ba68-9d1866fe7421"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b2fba76-f7cc-4c61-8ab6-dfe077dc4d60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d2f7d2e6-c1a8-4e25-9df2-3f0acbe162b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef975d4c-ff5c-426b-9df2-1233d223fc55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48a4290b-2e99-49b6-ac39-7f1c6501270d"
            }
          }
        ]
      },
      {
        "id": "89cb87bc-6d8d-47d2-83e7-dc615c2590e4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "99315958-0357-4e14-afb7-6623d7d70121",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a3e22e5-a7d9-4321-9c4e-8e227072c35a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c349636-ebf2-4681-8e91-72c36ba393d3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1421b7-bfd5-4f70-ac51-b982bb931090",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff78793e-a581-4823-afe3-e8e860c37220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ce579f-632f-4252-b8a8-26d79e1a22aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3ed626c-4f49-48c2-8852-076c972485bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "003f929f-a9b1-4af3-a870-764b323dd231",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eed021f1-d434-4b63-af70-5f29a16045a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "506f92fa-cc30-488b-8989-cae27e607bdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51ea1301-2679-483b-af40-68482d768b0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a343316-3d38-45e6-b864-c892226a2189",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "487e6a21-2b48-4c0d-a83e-79055e1827b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "748907fe-924a-4308-b043-fd26f0d4555e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1c412ac-2d61-4ab7-a67f-8a676988a318"
            }
          }
        ]
      },
      {
        "id": "04e52baf-4e54-4f71-bd61-309fc6a4a5b6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2b1e54cc-0ec7-4601-88b5-e4d0f4cd7776",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e63324ea-766c-4d28-bd5c-4a45f4d70990",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29d977a1-8005-49bc-b18d-355066c791b6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04eeb70-d90b-4c73-9719-8a455f3aab76",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7aa023ca-e329-4f90-abe8-85c5f9be0b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4dbf54-302e-401d-a54f-3f78b05abd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "374e3459-61bb-4134-a7b5-eddbae428a76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6841f0da-410f-48c8-873a-b0b30022b23c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2c261ad-4d64-4d58-8344-ce0070d59ba1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92666128-bb9a-4d17-972b-c0a1b5ef46cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2116562c-ba8c-4506-9ffd-70280eace822"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9de71d28-d6ad-4cfd-8c67-9071c7ea2a3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0b1db22-41a4-4f8b-8e23-7faf9ce5dcf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2828c63d-afb7-4f61-96d2-bbeed45cbaa2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec3f2ab7-89d7-4cb4-b98f-17cfd548eff2"
            }
          }
        ]
      },
      {
        "id": "f841b8c6-0532-4767-9cc1-62b36cbba31f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aaad9ece-291e-47dc-ae88-b7016756e176",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c7538ff-df6f-45a4-9cef-11217fc3ca8d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3e7fbeea-7ffe-4d1f-b02e-31a8cc461eb2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86d9e2b0-d0bc-40b5-9b46-328b35a8eebe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e9b252c-d9cc-43d0-afae-704b1e594325",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 78.21825396825395,
      "responseMin": 3,
      "responseMax": 7217,
      "responseSd": 534.3304332424034,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713314111577,
      "completed": 1713314139343
    },
    "executions": [
      {
        "id": "9863c886-1056-46b9-9dcd-6e33ff30740c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4e2f5295-986e-48bf-98e3-3bce53c80903",
          "httpRequestId": "d0c9a35b-36b0-4047-aecf-6d8959c94b70"
        },
        "item": {
          "id": "9863c886-1056-46b9-9dcd-6e33ff30740c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a283e65d-5c4d-4259-bd89-cff326769419",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 0
        }
      },
      {
        "id": "b64a2183-4ebc-480c-a0e2-722501055063",
        "cursor": {
          "ref": "888de7ff-a072-4a21-9feb-17cd34245ff9",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "709c5504-4662-4ebd-a5c7-117b3939fd40"
        },
        "item": {
          "id": "b64a2183-4ebc-480c-a0e2-722501055063",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d88eb2da-3817-48d4-b9c8-bde1f8b81b6c",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "12ad5144-1db3-4be2-8c8a-d1e1ab57edb2",
        "cursor": {
          "ref": "cd89e177-5566-4024-9d87-a07513aea821",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "966a93bb-5c1f-4362-acfe-c6142cf9f4de"
        },
        "item": {
          "id": "12ad5144-1db3-4be2-8c8a-d1e1ab57edb2",
          "name": "did_json"
        },
        "response": {
          "id": "36a9917c-30dd-463c-a84a-b4b07a32308b",
          "status": "OK",
          "code": 200,
          "responseTime": 263,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87a9ab0-5699-40b1-9084-d5255654c01b",
        "cursor": {
          "ref": "2578698c-3639-4cc6-87df-15138fca0fb1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "990af6cb-0bd9-452c-bb56-db2096cb1c4d"
        },
        "item": {
          "id": "e87a9ab0-5699-40b1-9084-d5255654c01b",
          "name": "did:invalid"
        },
        "response": {
          "id": "2aaa6dc4-bc94-4381-88c7-36a2034bf355",
          "status": "Not Found",
          "code": 404,
          "responseTime": 415,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87a9ab0-5699-40b1-9084-d5255654c01b",
        "cursor": {
          "ref": "2578698c-3639-4cc6-87df-15138fca0fb1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "990af6cb-0bd9-452c-bb56-db2096cb1c4d"
        },
        "item": {
          "id": "e87a9ab0-5699-40b1-9084-d5255654c01b",
          "name": "did:invalid"
        },
        "response": {
          "id": "2aaa6dc4-bc94-4381-88c7-36a2034bf355",
          "status": "Not Found",
          "code": 404,
          "responseTime": 415,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee9eb5e-46a6-490a-bf2d-72abbebbbd38",
        "cursor": {
          "ref": "5149b7bf-1bfa-401a-90dd-3062c546928f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "314e6c59-2062-4a19-9c9e-6095ec6b713f"
        },
        "item": {
          "id": "0ee9eb5e-46a6-490a-bf2d-72abbebbbd38",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "32bc0398-43e8-4b9c-8ca4-c917f8c86740",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d447191f-fe10-4512-a057-08d14feb2c7b",
        "cursor": {
          "ref": "1dfe4df0-cb8d-4b52-953a-579626d29ade",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c50e47ae-9de6-4d4a-b6fa-07ad2bad99f3"
        },
        "item": {
          "id": "d447191f-fe10-4512-a057-08d14feb2c7b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4050a388-16a8-448d-a672-586ce7e87536",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21a33ce-92c4-4f7b-94fa-aa79e8264e09",
        "cursor": {
          "ref": "8c2c974f-a562-438f-bb87-d062fe0ac967",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "233b3276-ac5e-42dc-83dc-6c22956c744f"
        },
        "item": {
          "id": "a21a33ce-92c4-4f7b-94fa-aa79e8264e09",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3b3181f9-0d9c-4056-9af6-5491cb136e01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d03c76-24ed-429e-8849-e0649b1fdd57",
        "cursor": {
          "ref": "b2b05372-18d6-4075-825f-e1239b29295f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "77c1439d-d048-4a4a-8cc7-4824a4922a18"
        },
        "item": {
          "id": "79d03c76-24ed-429e-8849-e0649b1fdd57",
          "name": "identifiers"
        },
        "response": {
          "id": "59aea264-468c-4ea4-a1df-7e1502260276",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901ed56f-b8dc-4ab6-b382-6f808e2b57b6",
        "cursor": {
          "ref": "42890914-537e-4569-a6f1-4b1e2c4ca320",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9f1eb3ae-084e-4c9c-9fad-d8ff2dad0ea2"
        },
        "item": {
          "id": "901ed56f-b8dc-4ab6-b382-6f808e2b57b6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "033aabd6-4b97-422e-ad61-b07e69ae55fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bb549c-655b-486d-981f-bce304734214",
        "cursor": {
          "ref": "ecc36dcd-327d-41e7-afde-d9e3556a2470",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8f42cffd-3306-4ee7-8146-ae0b5fd2bb8b"
        },
        "item": {
          "id": "53bb549c-655b-486d-981f-bce304734214",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0cb43cfe-2756-4a09-8409-6e68ae413cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b7ec72-ded1-4cc2-83e7-11f1b3f619fd",
        "cursor": {
          "ref": "d036d292-198b-47c2-8386-5982a23b61a8",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "72997435-f349-40f4-908e-7e97a7b32d13"
        },
        "item": {
          "id": "d7b7ec72-ded1-4cc2-83e7-11f1b3f619fd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fcce9825-be1e-4672-b415-60fa4b12cee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9656a3c2-1713-44c2-a127-54cfefd4fa19",
        "cursor": {
          "ref": "b54dc7d7-6b95-4279-b572-c89b90542478",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1ede23c7-aed4-4983-b22e-a2da2bd86060"
        },
        "item": {
          "id": "9656a3c2-1713-44c2-a127-54cfefd4fa19",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "86c51b2e-529f-4edc-b8cb-304d6cc9a1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69aa9c90-8ba0-4a2e-86bf-51da01dc5ab9",
        "cursor": {
          "ref": "57108a4c-8762-44e5-929f-e24e510746b9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5f19aa07-0a7a-4793-a3db-3002a8a11a4c"
        },
        "item": {
          "id": "69aa9c90-8ba0-4a2e-86bf-51da01dc5ab9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6c7a2346-7e1a-4d97-8bf0-6a145d8475bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7282cf64-6de3-4979-afca-ded56d9557f3",
        "cursor": {
          "ref": "7676a195-e846-478b-a48c-98af2f023b0c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "24c02d67-feb3-4146-8a48-d9b55c8eaa4b"
        },
        "item": {
          "id": "7282cf64-6de3-4979-afca-ded56d9557f3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "407e2251-538a-415a-97f6-7483b5962be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749dd8eb-ff8e-473e-ac0a-3b442f8e6649",
        "cursor": {
          "ref": "88883c26-7abf-453c-83e8-1053e34c3969",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "44e9dc29-1ea7-456f-bdbd-87cf6186b431"
        },
        "item": {
          "id": "749dd8eb-ff8e-473e-ac0a-3b442f8e6649",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7b8422e3-56e8-4562-b11a-2513c66d418b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1614294f-0d48-4c6f-b1e9-ce23fa74cbfe",
        "cursor": {
          "ref": "0016c058-48a0-44fa-9bbf-3dbb261384e4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a56c133c-ea36-4176-93d8-1545e974e4c2"
        },
        "item": {
          "id": "1614294f-0d48-4c6f-b1e9-ce23fa74cbfe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5c913d9c-fce7-4b40-b04d-3b44863db3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9441125-b914-43de-a938-d7f00426eab0",
        "cursor": {
          "ref": "67af74d0-f2a1-4ee2-a6a3-d8d5b0aeeea1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fb5ecb00-9b9f-4133-91f0-86f9927ecf06"
        },
        "item": {
          "id": "d9441125-b914-43de-a938-d7f00426eab0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b031e86f-7a46-42df-8e89-1c7e981c3bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dc90ab-ca8b-4e44-a91e-96daf1286561",
        "cursor": {
          "ref": "957196f0-dc6c-4a44-a1a9-a396c65dca6a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0e4a1b95-3c96-48cd-886b-74f348251274"
        },
        "item": {
          "id": "e1dc90ab-ca8b-4e44-a91e-96daf1286561",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b54662ee-4cc2-465b-bd32-796254e431b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9840fe8e-7e98-4545-bd36-2e3c3e3ea788",
        "cursor": {
          "ref": "eae00da1-44bf-4863-ba30-5fb445dfd847",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "76781988-100a-41a4-b269-6f914d460154"
        },
        "item": {
          "id": "9840fe8e-7e98-4545-bd36-2e3c3e3ea788",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5ac7e605-e4e8-4dc6-94aa-d7443acc88f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d12936-13e6-4984-af09-2147db76fb2e",
        "cursor": {
          "ref": "d49339c2-0408-43bd-8ce8-6ab51a46e172",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d2cc7666-085d-4679-8c8c-918da18f5946"
        },
        "item": {
          "id": "21d12936-13e6-4984-af09-2147db76fb2e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b76292be-df27-47ac-9b63-bfc7d68bd93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3e9c6e-886b-452a-8365-fb2ecdcd7c4a",
        "cursor": {
          "ref": "e3f5cd02-3aea-4adb-af4b-2cb04cb3cccf",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f95e89ed-1b61-48c9-81d1-28cb5b6c8991"
        },
        "item": {
          "id": "bc3e9c6e-886b-452a-8365-fb2ecdcd7c4a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "778702d2-bc95-4150-b819-2f208f51aef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96e3fad-64a4-4f07-9604-4e9e4365fe08",
        "cursor": {
          "ref": "2b131e88-090d-4172-a253-0016c5a36b36",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0230a27b-d726-4565-8784-75759e3b7898"
        },
        "item": {
          "id": "b96e3fad-64a4-4f07-9604-4e9e4365fe08",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7b02dd2e-137b-4378-b9db-c6d464b6dfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd6ed7a-a886-4f56-b62e-0322853f319c",
        "cursor": {
          "ref": "d703d136-f7f6-4e8f-925a-a49f1a561bb2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d3b8cadb-43ee-43d8-ac1b-8f43fc549e3c"
        },
        "item": {
          "id": "3cd6ed7a-a886-4f56-b62e-0322853f319c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3bcf2ac5-88ae-493e-837e-c2f32ae10ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280ccc85-074d-4715-b9c9-cdfca29df12e",
        "cursor": {
          "ref": "71e72470-84e7-43a9-a8a8-e0643f51bfe2",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f6978970-dded-4a57-8057-3fc8bbec4c1f"
        },
        "item": {
          "id": "280ccc85-074d-4715-b9c9-cdfca29df12e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7c274d28-6bb6-45cd-be2e-9facfdc335b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c06230-2c55-4317-9391-426a31eb4c0f",
        "cursor": {
          "ref": "d7a27e1e-7b9a-47f8-a1f8-a610149b9fc6",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7ee4e366-f35e-47b0-a9e3-5c8edf4c772a"
        },
        "item": {
          "id": "f7c06230-2c55-4317-9391-426a31eb4c0f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9648c726-5955-454e-8660-2be2a0a8fa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f0ac7a-ccc8-4dea-97a1-96b94dd0237e",
        "cursor": {
          "ref": "d8b6bffa-b320-4cbd-97ef-049344fa7912",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c640b11c-32b1-4979-8e12-d4acbc4324aa"
        },
        "item": {
          "id": "12f0ac7a-ccc8-4dea-97a1-96b94dd0237e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3d2a5f4f-42fa-43f4-b7d6-8ec0401293c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3b1f13-6b54-4970-952d-c59fddbbfcf9",
        "cursor": {
          "ref": "e8939530-fccc-40e5-a35a-6027f7a9e290",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ccbc64d3-faec-4819-b147-6ab9fb8c050f"
        },
        "item": {
          "id": "0d3b1f13-6b54-4970-952d-c59fddbbfcf9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "afb6c15c-3d27-432c-b4f6-7ff20c91ff21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206b51fb-d104-4ef3-94c8-0aed6895b0da",
        "cursor": {
          "ref": "b1ea3fba-4bd2-4933-8a67-942b9ce46957",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "47938c80-43f0-4173-a2e5-d9d293de9efa"
        },
        "item": {
          "id": "206b51fb-d104-4ef3-94c8-0aed6895b0da",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "23923e19-a02d-492a-8e36-2d828a62d469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30299bd7-29ad-4c58-983b-d6f78c7af1a1",
        "cursor": {
          "ref": "ebd7a228-c18c-442a-b743-00f5b050b2bb",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "715f7e21-0135-4b62-874c-9123b677c9a5"
        },
        "item": {
          "id": "30299bd7-29ad-4c58-983b-d6f78c7af1a1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "46ebaabe-5838-4936-909a-1bb52d04a68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f5879d-dc3b-4c36-8888-f37bae575b19",
        "cursor": {
          "ref": "d5697ded-bb50-4374-88cf-13a408797f14",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "54ee81bf-7e2d-4345-9777-bf2d00d78584"
        },
        "item": {
          "id": "99f5879d-dc3b-4c36-8888-f37bae575b19",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f2558d4d-a52e-4341-8495-e47eb5511726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8991ba-4088-4882-be09-ce451c92594f",
        "cursor": {
          "ref": "2fa12229-6e57-41b0-ac3d-f4022441fcb1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "04db3d3d-ae2c-4041-9298-3453a15f30c9"
        },
        "item": {
          "id": "da8991ba-4088-4882-be09-ce451c92594f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4cd6574a-c727-4832-86cd-a2f6d379795c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab8c5e5-2ad4-4401-8414-f0f70ebf7bfc",
        "cursor": {
          "ref": "9ce2995c-bc0b-46c2-8e12-33e9742e078a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3643ddfe-f549-4ec7-bb7c-9cc653a74ad2"
        },
        "item": {
          "id": "2ab8c5e5-2ad4-4401-8414-f0f70ebf7bfc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5d70b61f-d4a8-42e5-9990-0541685a80df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce74ad8b-b6e4-4de2-b245-6875fc2ed10b",
        "cursor": {
          "ref": "58493ad4-db51-4346-bd92-2286b80200e6",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2ce0c214-1668-4ff9-979f-796e49f143db"
        },
        "item": {
          "id": "ce74ad8b-b6e4-4de2-b245-6875fc2ed10b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7f72bdb0-328f-43ba-9e86-41779e0f24b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d330b9-5d0e-4c77-9f87-a0da77e2473d",
        "cursor": {
          "ref": "7c862f47-9da7-4fef-965f-3d6af83e1b27",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "178cbaf5-aa0f-4ca8-9cbf-82889ec91b2a"
        },
        "item": {
          "id": "53d330b9-5d0e-4c77-9f87-a0da77e2473d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "34ccb5a9-4e39-431f-bdbb-7ff818894966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe96ee5-6acf-4ff0-a9f3-f1eb787a250f",
        "cursor": {
          "ref": "e2691d1b-56ed-495c-bba5-314f62495479",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1a3aab27-1cf3-4306-8798-895c16e2b4e4"
        },
        "item": {
          "id": "afe96ee5-6acf-4ff0-a9f3-f1eb787a250f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6d066e9b-67a4-42dc-962b-059c8b10f6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c067b2e2-edc5-4233-bff2-8241a3861e70",
        "cursor": {
          "ref": "f3b38e07-62ad-43cf-b175-8b1f105e18fc",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6c0c9a68-ef6b-4d38-b32a-c08c70023b45"
        },
        "item": {
          "id": "c067b2e2-edc5-4233-bff2-8241a3861e70",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fe0f2fce-08fd-4aff-b674-3c128b68117d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6100ee7c-d97c-4187-af3c-0bf4c20dee34",
        "cursor": {
          "ref": "5c8f4885-0f65-4110-9fc3-a38615eef8cf",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7538fdf1-4614-4122-a2f7-f3c10d3e8324"
        },
        "item": {
          "id": "6100ee7c-d97c-4187-af3c-0bf4c20dee34",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "890571fb-979f-4391-9f5f-a594872dec4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34736cd5-d169-4c02-8029-2fa13bbf9047",
        "cursor": {
          "ref": "0931abe9-913d-4ca8-a069-05d2cc5700d8",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bd18be38-0b27-4f7d-a1c4-a6fbaa900508"
        },
        "item": {
          "id": "34736cd5-d169-4c02-8029-2fa13bbf9047",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "53e60248-ffdf-4b13-a331-1710a9e74809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de956e0-c7be-4235-be6a-d25b07f06f9e",
        "cursor": {
          "ref": "a6bd3dd4-9209-4240-98e1-5cecea1faf61",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f3ea004b-1ebb-4949-b3c3-525be0d80b66"
        },
        "item": {
          "id": "7de956e0-c7be-4235-be6a-d25b07f06f9e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "989e6c6d-9a5a-45b5-9ea3-cf2cc02285fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0854c64a-f348-4d9a-be4a-20ce00741dbc",
        "cursor": {
          "ref": "eea7c4ea-4615-4407-ac68-4ddef90bdcd9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f624ee30-69e6-4e8b-8425-210bb8b59d57"
        },
        "item": {
          "id": "0854c64a-f348-4d9a-be4a-20ce00741dbc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c1588c8c-cbd6-46b8-88f7-1dc3dfe430e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c86b87-a58b-4945-8832-aa229f08ed9e",
        "cursor": {
          "ref": "da276289-bf4a-4742-81ee-f72865ca916a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "86c8cfe2-4663-4eaa-8341-715d26e16f80"
        },
        "item": {
          "id": "e8c86b87-a58b-4945-8832-aa229f08ed9e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "052726b8-221a-4adf-9520-274add23eb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2355541a-3547-4218-8f7f-7ee1295c121c",
        "cursor": {
          "ref": "00e216e8-97d6-4eed-b6a8-27202dc39249",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f1f77582-f165-4023-a01d-c7aa0b5f1b43"
        },
        "item": {
          "id": "2355541a-3547-4218-8f7f-7ee1295c121c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fb296076-0921-4218-a0d7-863d91278339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5b6d86-6d4d-47a7-a85d-bef0631a934d",
        "cursor": {
          "ref": "b36eded0-e586-4cf0-9a45-9e1d512798c9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1d80b3a2-44b7-4731-9e5f-95ead34babd8"
        },
        "item": {
          "id": "ff5b6d86-6d4d-47a7-a85d-bef0631a934d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "32877839-fbbe-4e1a-98f6-265956f3441b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a09f929-0006-46b3-b5cd-9ecc876ea14c",
        "cursor": {
          "ref": "038e51cb-0848-44fe-bc80-9fa952bd3e54",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9967568a-3505-4c17-b587-ae7b39568a6d"
        },
        "item": {
          "id": "6a09f929-0006-46b3-b5cd-9ecc876ea14c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b3ad6b27-78dd-433e-9803-03931f2a4d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cd79ac-0d95-4e4f-bcb6-3afc1eaebbbc",
        "cursor": {
          "ref": "f03ef465-33d7-4901-8ae4-49d11d356b49",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "32c9a88e-7ce3-4426-a88e-4f4cf1547cd0"
        },
        "item": {
          "id": "e2cd79ac-0d95-4e4f-bcb6-3afc1eaebbbc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9967cd9a-7f87-4ff4-a339-913d752e7ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec779b2-ee7b-4772-8b63-f9cc5be69955",
        "cursor": {
          "ref": "5af23e34-8c94-4d15-b37a-02a330fe678e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "57dc41ae-a89f-4d56-b612-cb3f7f74c005"
        },
        "item": {
          "id": "3ec779b2-ee7b-4772-8b63-f9cc5be69955",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3cf1de6b-487c-4466-b868-39160a761179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c297abbe-1a73-4801-88ac-ce52304c23ce",
        "cursor": {
          "ref": "94f1c7f2-a7fb-41bf-8fe0-776d48841be6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5b137b11-a1a7-452b-9b77-0def051914c0"
        },
        "item": {
          "id": "c297abbe-1a73-4801-88ac-ce52304c23ce",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c10a2273-c43b-4e3a-91c9-66596d255db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf500503-8cbe-40c1-88d8-1346496e97a7",
        "cursor": {
          "ref": "63864d97-bd4b-44d0-96aa-739f2a97ed32",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d1b7dc00-05f6-4ef6-b20f-e3f0edad1030"
        },
        "item": {
          "id": "bf500503-8cbe-40c1-88d8-1346496e97a7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "87b3536a-f1d4-4d39-84ee-4039cc883050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7602c0-cec6-4456-a2fd-58f283581d62",
        "cursor": {
          "ref": "9d687bfe-861a-497d-905e-16ec845f9736",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e5fa7cb5-653d-42c7-bffd-a9dbee149793"
        },
        "item": {
          "id": "ca7602c0-cec6-4456-a2fd-58f283581d62",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6f575255-0368-47f8-8111-771b8e664077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bb445f-79f0-43be-a6d9-46c319cc7157",
        "cursor": {
          "ref": "854a3068-e2b3-489c-8078-86e366ddd393",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d9164ff0-8ff7-4c4f-8efe-2c4e8fec5432"
        },
        "item": {
          "id": "b4bb445f-79f0-43be-a6d9-46c319cc7157",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b5751aee-e6c0-4253-ba4e-11b2ae368416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d15ed7a-2972-4fd6-b415-e9015796b7dc",
        "cursor": {
          "ref": "90defec1-d5c8-45ce-bcbf-5b52f788c13b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5d5dedba-1f54-4dd9-9024-d164fc54e6f4"
        },
        "item": {
          "id": "4d15ed7a-2972-4fd6-b415-e9015796b7dc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7a65112d-f72e-4720-95b6-0dfab6c724e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d080db9-22b9-489b-99d5-8278f271eadf",
        "cursor": {
          "ref": "586679d0-bb54-4400-8650-e7c35346e41f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "726db7aa-eb0b-494d-8482-269af8f3c374"
        },
        "item": {
          "id": "0d080db9-22b9-489b-99d5-8278f271eadf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "eeed0686-5662-4a81-8348-eafb6bf77f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a564a0-365e-4e34-be5c-13673fe7323d",
        "cursor": {
          "ref": "dee6cd19-5c73-4729-b188-f011257459f2",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dac25ef2-7982-4148-be5a-dd47046d8124"
        },
        "item": {
          "id": "81a564a0-365e-4e34-be5c-13673fe7323d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8f2571ba-6cb3-425a-962d-9c149de4c1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee433b7f-d109-4bce-800e-81f009c42f33",
        "cursor": {
          "ref": "cf49c630-ec84-43a4-a598-9bd6f28d88c1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "72a8ca0c-2c88-44f1-b318-9c88e2a39580"
        },
        "item": {
          "id": "ee433b7f-d109-4bce-800e-81f009c42f33",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0c06ed6a-2c28-4110-8824-36cc418ead43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b434dff-d564-42e1-9dd2-e0459ac07cef",
        "cursor": {
          "ref": "9a5ae71c-6778-455e-aff8-f84dcc226ea0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "05ae69b4-1f86-4420-9ef0-fddae32fc2cb"
        },
        "item": {
          "id": "7b434dff-d564-42e1-9dd2-e0459ac07cef",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "379b7abd-693b-459e-ad07-7cee7a0e3e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac65824-aa9f-4a4c-ad7f-053c49d9f61e",
        "cursor": {
          "ref": "ccbe2414-2a52-4355-906d-bb73cbb347c9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2796aaee-1f58-44e4-82a0-beb8fa88797e"
        },
        "item": {
          "id": "dac65824-aa9f-4a4c-ad7f-053c49d9f61e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "44b8d21e-54a1-43ad-ad9b-a8c991bd23cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe48a7e4-d634-4a6c-93e9-58812ffe290e",
        "cursor": {
          "ref": "71106de2-e951-4bc0-a4ee-2fb4d2db1289",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e9368417-47bc-476a-aba0-ef0cc5c5c345"
        },
        "item": {
          "id": "fe48a7e4-d634-4a6c-93e9-58812ffe290e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c4294024-9e6a-411e-a830-d471688c87d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b7f9e4-b1c8-4af3-98ca-1fc6846ed8e6",
        "cursor": {
          "ref": "2cf4edf6-a787-42ec-8174-c0af2a6911cd",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "be2fa1d5-0322-4de4-9e7d-c22f0311f5d6"
        },
        "item": {
          "id": "21b7f9e4-b1c8-4af3-98ca-1fc6846ed8e6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1699c49e-9286-410a-8034-d39437b2ef27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ffc210-9bde-4bc5-aa32-e5714d9a255d",
        "cursor": {
          "ref": "6c2856ad-63ea-4769-8572-c650ac64737d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e79fe3a1-9ef2-452f-8c7e-29e25db55a46"
        },
        "item": {
          "id": "40ffc210-9bde-4bc5-aa32-e5714d9a255d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "140dbe60-d876-4d8e-bf40-7a9c8c3075e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d57e18-623a-40b2-ab1e-cbd5dfcb0984",
        "cursor": {
          "ref": "9d8b26e8-e854-4591-9931-f4aa9499d782",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7ce465ab-432f-4177-9535-389a83fa838d"
        },
        "item": {
          "id": "e3d57e18-623a-40b2-ab1e-cbd5dfcb0984",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3046a67a-a137-454d-9d23-41a5fd3572cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b878576-5d14-4df6-ac6d-34d340f415f5",
        "cursor": {
          "ref": "b778cbe8-bb04-41e9-848c-e37f942c0127",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fb42b19b-72ef-41b3-bfb5-55591e84fa8b"
        },
        "item": {
          "id": "3b878576-5d14-4df6-ac6d-34d340f415f5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "302432fb-cb5e-4d4b-8554-195f8025fbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8763c6-975b-4a6e-b987-4c6e12102484",
        "cursor": {
          "ref": "abc4feb1-57b6-4011-914f-dc775c6de74a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3caf2b27-d81d-4747-9727-ae0a7786b13e"
        },
        "item": {
          "id": "2a8763c6-975b-4a6e-b987-4c6e12102484",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "21fcbb7f-4bb6-4bd7-a232-2008b655a033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e57394-9940-4739-a78e-ee9829e0e3db",
        "cursor": {
          "ref": "335c69e8-9108-4d43-87b2-5c93c20ba08b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2f99b6e2-90ba-4b0f-a3bb-af5454d8fb75"
        },
        "item": {
          "id": "47e57394-9940-4739-a78e-ee9829e0e3db",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4f977350-4026-4066-91d4-183e415f49e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3370f461-5810-4bf9-a1ca-14a11c4df61d",
        "cursor": {
          "ref": "d2f343a3-7891-40ea-ac09-1d76812eea3c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d0cccd8a-9144-44a7-8267-7c76b2be2d6f"
        },
        "item": {
          "id": "3370f461-5810-4bf9-a1ca-14a11c4df61d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9545cd54-3215-4e06-9bf2-6519a47d8115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032da218-a466-41ab-ac66-b4e57e71e4a9",
        "cursor": {
          "ref": "ce3d9e53-8c15-41b8-b8fc-23a108971f53",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "597a9957-4a10-4c11-9238-8ede9b43c399"
        },
        "item": {
          "id": "032da218-a466-41ab-ac66-b4e57e71e4a9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b8d85e50-b4b3-4e21-af62-f59150a10a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60076cf-db27-4d64-90f6-7398fcc38c99",
        "cursor": {
          "ref": "9d6d1548-3602-4ea2-90a0-5359efb2027b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "95de8626-63a0-4770-99a9-b943b90ed745"
        },
        "item": {
          "id": "a60076cf-db27-4d64-90f6-7398fcc38c99",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4d569a53-ec95-4b76-be07-9260e189218a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6492c401-cd30-4425-907a-c87765b8561f",
        "cursor": {
          "ref": "971b4f1b-2d72-4e3e-8f86-69353a5c433e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "191e8e9a-58da-414b-925d-c1571d24df18"
        },
        "item": {
          "id": "6492c401-cd30-4425-907a-c87765b8561f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e510aa59-61b2-4a42-bafb-ced17149e015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c4780f-281e-40af-b3c0-dd1d032ab7b0",
        "cursor": {
          "ref": "7d973406-2132-4fa5-93b0-a81fbffa949e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4b76fb97-358d-4745-91a6-5fdbd88429c4"
        },
        "item": {
          "id": "07c4780f-281e-40af-b3c0-dd1d032ab7b0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3495582d-1020-46fa-9508-a18b5f61be29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8726886c-464a-4993-9a6d-e487ca6bd7bf",
        "cursor": {
          "ref": "ecd2a645-3478-4173-bbc6-3be1571004bf",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "467ff3aa-6d70-4892-ba69-2879130049d5"
        },
        "item": {
          "id": "8726886c-464a-4993-9a6d-e487ca6bd7bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9f895f1b-a6e8-429d-baa3-1bb54e3edf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdac91e6-0da3-41a2-85b4-834771c3c354",
        "cursor": {
          "ref": "989127cd-7c72-4fe9-91d8-83c93b3e648c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "48e06154-1b2a-4fd4-9951-9c9e3e3d4eec"
        },
        "item": {
          "id": "cdac91e6-0da3-41a2-85b4-834771c3c354",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "06413c7f-b849-4e11-8d3d-a794c8408184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798d5b19-4095-4f72-af21-7f31c1405abc",
        "cursor": {
          "ref": "f76cdde7-95d6-4b14-8b93-a0774d80f26a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c9e491a9-7691-404b-a6a6-58117e38ebb3"
        },
        "item": {
          "id": "798d5b19-4095-4f72-af21-7f31c1405abc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7e95aef0-423b-4b71-ae62-de53b5434da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10dddc0-d70b-4bf1-b5c0-aaef6360ab06",
        "cursor": {
          "ref": "a4355df2-33f0-41fc-ae09-da5ab70f8bd6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6b6b0206-8435-456c-aa74-77ead1f9a581"
        },
        "item": {
          "id": "a10dddc0-d70b-4bf1-b5c0-aaef6360ab06",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "934a2492-90f5-43d3-9298-8c6d7143d8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ee7d33-6ae2-402e-a5b3-e446c8d67a44",
        "cursor": {
          "ref": "e78117a4-9d92-4d12-8876-716c68fdda24",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "30e6ec9c-aa56-49c0-bcdb-1a3aff74f54a"
        },
        "item": {
          "id": "39ee7d33-6ae2-402e-a5b3-e446c8d67a44",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b347a1f9-6fba-4872-932a-6ebee9740dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c589c0-c776-45bc-afea-e7ceee2e4b82",
        "cursor": {
          "ref": "69548e84-c082-4e6c-80d5-47334a0c231d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1e8e27ee-2c4f-4d48-b475-142ecd9e145a"
        },
        "item": {
          "id": "f8c589c0-c776-45bc-afea-e7ceee2e4b82",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "79c8fc50-1b55-42f2-8059-48876cce5f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ee11b2-7754-4900-a8d3-016e7081795d",
        "cursor": {
          "ref": "bfedc528-d188-44e9-b924-9f30ec3c2740",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9e51ae0c-a451-4abf-b7a8-12266b073cc4"
        },
        "item": {
          "id": "84ee11b2-7754-4900-a8d3-016e7081795d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "58716fd7-6b8a-482b-89a1-ad9553cc6744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf35c37-cf57-4ad6-99b8-3accc2d1e5e9",
        "cursor": {
          "ref": "b71b5eba-8fe1-4621-b980-d69ca5e65115",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6c4c67f5-0dc6-4a0e-8aca-09947c873d37"
        },
        "item": {
          "id": "ccf35c37-cf57-4ad6-99b8-3accc2d1e5e9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b91a50f2-8428-4970-bf88-f00f8bf403b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a75a58-2b9a-473d-91ef-efc234548d41",
        "cursor": {
          "ref": "3d8cdc43-7904-4453-bfad-43358b598033",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "705aba69-dee9-4edc-aa26-e4d5415dd647"
        },
        "item": {
          "id": "b6a75a58-2b9a-473d-91ef-efc234548d41",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "659bcb97-759a-4a41-ad7e-e2ceed2a712f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ffb53e-19ae-44c0-a45d-0aa26d7f0633",
        "cursor": {
          "ref": "636d7b37-a3e8-42d5-879a-4d081528dca2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "49648980-38ee-4b4b-99fd-aa8f3da1dcb6"
        },
        "item": {
          "id": "e8ffb53e-19ae-44c0-a45d-0aa26d7f0633",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "76828644-a5ac-4ed8-8a10-7dac682c2ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33a412e-cecf-4e10-a259-352f0df154db",
        "cursor": {
          "ref": "f0c93bdb-c4c1-457b-b5c0-b0c9e68d6ae4",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d4fbeda5-3100-4eec-ab3a-82c1ab16f4c0"
        },
        "item": {
          "id": "c33a412e-cecf-4e10-a259-352f0df154db",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2cd7f943-266e-4ec3-a7c2-d576df54701e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b9de43-db3e-4cd2-ae55-3a6935711ced",
        "cursor": {
          "ref": "b14dc1be-f4d1-4175-9eea-f8b810d9de94",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a6a902f6-e34b-46c9-ba4b-e55fc1ac94cf"
        },
        "item": {
          "id": "09b9de43-db3e-4cd2-ae55-3a6935711ced",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "27a5d013-ab5d-4a8b-a2f4-68947483c978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63106e8a-5661-4ca0-b490-cfa29af2a60c",
        "cursor": {
          "ref": "4c0995b2-a220-421c-8064-3f0df91568bd",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8524f894-9060-4a40-8884-ac1f9f69a511"
        },
        "item": {
          "id": "63106e8a-5661-4ca0-b490-cfa29af2a60c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "351a309c-5223-40fc-843b-6faefed9a7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0d2e93-8371-4c4d-ad18-a67b356f8171",
        "cursor": {
          "ref": "ef731d14-8a0c-4a69-a8b1-bc770f09f993",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "54e2da5d-5884-4ee9-b4e6-e217827a3d96"
        },
        "item": {
          "id": "4a0d2e93-8371-4c4d-ad18-a67b356f8171",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "750ec8ab-f331-4185-9925-2ade21d4b1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acf002b-5c23-4c45-91cb-aab1da4ffe37",
        "cursor": {
          "ref": "2d5f81c2-0e7b-4149-b65f-53b37404993f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9c7fe257-9d54-4717-ae7f-76bfbbedcfdc"
        },
        "item": {
          "id": "3acf002b-5c23-4c45-91cb-aab1da4ffe37",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "64d0c232-be43-499e-b2cc-a0faa8286ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9323a4a3-6af0-4b14-8b54-97a2bccb655c",
        "cursor": {
          "ref": "e1eb0e24-01aa-41f6-af44-17766c12430d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "490e32cf-82ff-4464-9cf5-69777de9c505"
        },
        "item": {
          "id": "9323a4a3-6af0-4b14-8b54-97a2bccb655c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8153c4be-7783-4a60-be9c-7343b31aee33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c810494a-9cb2-4cae-a92c-d669921a2012",
        "cursor": {
          "ref": "736c3459-966e-4fe6-a20f-318c49b425ef",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0e8cdf97-dbdf-41e7-84d0-2e00c1c24e5e"
        },
        "item": {
          "id": "c810494a-9cb2-4cae-a92c-d669921a2012",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "eef437a3-eeb6-43a5-a3a8-16eed6d7aced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fd97e6-6f04-4a3e-9b1c-9a2bb61cbf2f",
        "cursor": {
          "ref": "936e9762-15bd-4447-9eb2-d2cad0a11ebe",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "200029c3-0ebc-4d89-a3b0-91b1f34b8955"
        },
        "item": {
          "id": "45fd97e6-6f04-4a3e-9b1c-9a2bb61cbf2f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "97f990ae-d3f3-4f1f-9ca7-4cf256d74784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5c3be2-6ae0-4d0c-9218-0b0386557d4e",
        "cursor": {
          "ref": "cc05dde7-cd4d-4073-88a8-7c38c1621144",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7698dded-6692-4fa5-90f9-2010f409c6f0"
        },
        "item": {
          "id": "aa5c3be2-6ae0-4d0c-9218-0b0386557d4e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0953b8cd-f649-42d6-9cbf-cdaa1c23dc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67732b5f-590f-460c-b0dc-789be892d934",
        "cursor": {
          "ref": "e2657372-f7e0-417a-832e-ecb0048e63cc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cda5db50-f481-48b0-bbaa-e23fa59bacd1"
        },
        "item": {
          "id": "67732b5f-590f-460c-b0dc-789be892d934",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fc86b4e9-785d-48af-a360-5666469d2639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d565de1d-c9bd-4f26-acc8-2e6efeb2665b",
        "cursor": {
          "ref": "4e17acf1-3fe5-47e1-8ad5-a45a53c505be",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c532ad3a-ad1e-4b95-88aa-48017a373687"
        },
        "item": {
          "id": "d565de1d-c9bd-4f26-acc8-2e6efeb2665b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d418722c-dc4c-41de-bc73-213b1e8140bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef89789-bbe8-4116-b1ae-18053a7c057a",
        "cursor": {
          "ref": "aa67abef-fabd-4787-9a30-4621f2336454",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b38d060b-b0a9-44bb-a3d3-874042cc8a9a"
        },
        "item": {
          "id": "7ef89789-bbe8-4116-b1ae-18053a7c057a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3d224f7c-258e-4054-95f9-6c33e81c4cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151d9ec8-a9ab-4853-8ba6-79dbfdc952c6",
        "cursor": {
          "ref": "1adac00e-400c-428a-9551-2baaf4051ac3",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e444f065-4f24-40f9-a9ff-ca6d71bfefc1"
        },
        "item": {
          "id": "151d9ec8-a9ab-4853-8ba6-79dbfdc952c6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f0592a02-e8f1-418d-a7ee-1398e399d756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33f3b6d-c22c-4662-be32-4912d51b5f9d",
        "cursor": {
          "ref": "8e7078de-cd04-4e1d-85d5-67dedfccced7",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8a76ed09-0794-48c0-bcf3-9c50c85f5db2"
        },
        "item": {
          "id": "b33f3b6d-c22c-4662-be32-4912d51b5f9d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a489954d-ad6f-49f0-bbed-98da7296f39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be18dc34-1abd-4a60-a2ca-b6f676a1fdef",
        "cursor": {
          "ref": "596d4aa6-60cb-4148-ac86-d04287fa90bc",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "80be60c8-245a-41a0-bd6f-7b2b49042bb9"
        },
        "item": {
          "id": "be18dc34-1abd-4a60-a2ca-b6f676a1fdef",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "81caf225-a344-41c3-b986-4103833896f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23bedf8-90be-4a19-a1a2-7d137146a196",
        "cursor": {
          "ref": "75fa80fa-11d1-4821-95ed-9554ed249965",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d65dd147-456b-4fd0-b1dd-a5e307eeabaa"
        },
        "item": {
          "id": "b23bedf8-90be-4a19-a1a2-7d137146a196",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4be598e1-c341-4ccf-9f83-896d91883751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba14abdf-d771-4319-9d78-6d5192ca7ddb",
        "cursor": {
          "ref": "19b2dcea-e891-440b-a8ae-876ae054d223",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "52020d6b-7ba0-4c4e-aabc-f34143df4985"
        },
        "item": {
          "id": "ba14abdf-d771-4319-9d78-6d5192ca7ddb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d3856d6d-8185-463a-9d3c-c1486fc09733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4271ee35-a3a9-4099-9259-22a069829e1a",
        "cursor": {
          "ref": "2588babe-8d87-4517-8b46-1826eed15ee0",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6844efac-3bd2-4a57-9416-66c11352b974"
        },
        "item": {
          "id": "4271ee35-a3a9-4099-9259-22a069829e1a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "70d5792c-73f5-49c4-8d85-13f29becd5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4f4933-d540-405a-9bda-98e6f93ed0b5",
        "cursor": {
          "ref": "1af6bd7b-bc1d-421f-9457-2a1b12cb4925",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c9d7a2f2-8828-474c-9ff3-502d76f7163e"
        },
        "item": {
          "id": "fe4f4933-d540-405a-9bda-98e6f93ed0b5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ba538bf0-4482-4e09-a32e-2129b8426148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41db95e-062a-4213-a7cd-20d6555f9e4d",
        "cursor": {
          "ref": "6dcd9881-0e33-4fd5-b6bf-aa77092e4905",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f0101bed-db31-4bea-869d-344a949ade83"
        },
        "item": {
          "id": "f41db95e-062a-4213-a7cd-20d6555f9e4d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "afb9eacf-93da-4320-9789-3309a0c127b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e539300e-6e3b-4d0d-835f-b0196e47c894",
        "cursor": {
          "ref": "9aa01a14-3498-45e9-a9b9-d23db280353b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "eb67e5f0-62e7-4419-a518-38132517f7ed"
        },
        "item": {
          "id": "e539300e-6e3b-4d0d-835f-b0196e47c894",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6717f6fc-82ae-46b2-a2fa-4899c5c6e831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a06668c-584d-4084-9086-1b64ec336361",
        "cursor": {
          "ref": "df3980e8-ea0a-4dcb-9228-2bcb03637602",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "405ddde3-d6bc-43d1-96c2-57969cb2822a"
        },
        "item": {
          "id": "7a06668c-584d-4084-9086-1b64ec336361",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "17c116e3-1346-47b4-8165-5c843a6ce995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd5c456-7cb2-4d9d-a2cd-98cbe1ae720a",
        "cursor": {
          "ref": "1ab0e6ae-faf3-4c9e-9810-fe64d2bc035d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8b879021-4d3c-40c6-be5a-bd019dcce781"
        },
        "item": {
          "id": "bdd5c456-7cb2-4d9d-a2cd-98cbe1ae720a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d22d033e-4ddb-4496-b73f-cdfdaa53d479",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9627c92-54f2-41f4-9997-c6d54b19c669",
        "cursor": {
          "ref": "577a6625-c130-43aa-a485-a3d357730015",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4491f365-8485-43c0-a3ae-abadd3eed8f9"
        },
        "item": {
          "id": "f9627c92-54f2-41f4-9997-c6d54b19c669",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "89dc39b8-a912-47fd-a8fc-e7e88bb256b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3eecb5ee-a1fc-464d-bba2-7c84770d7cba",
        "cursor": {
          "ref": "2b88869a-4a2c-4b5c-a468-4324cb20e21f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fca550d8-ec40-4404-a530-7dafc36f5076"
        },
        "item": {
          "id": "3eecb5ee-a1fc-464d-bba2-7c84770d7cba",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ee9d63f9-d948-49a7-ae94-9016cdd9d103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1f980c43-710b-4f27-bea3-d47f99f82b35",
        "cursor": {
          "ref": "f59703e5-1de6-4184-905e-957b9e60fe5e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "415b1927-eb46-4b03-8a09-72975e76ef6b"
        },
        "item": {
          "id": "1f980c43-710b-4f27-bea3-d47f99f82b35",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d08370dd-1220-4d67-a0ae-6839e341edab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c237e7bc-aab5-4511-a41e-695774a52c34",
        "cursor": {
          "ref": "3143e7f3-add9-4d26-b18c-971f57193847",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cc30b51d-1457-4bcf-9677-92dbcc472269"
        },
        "item": {
          "id": "c237e7bc-aab5-4511-a41e-695774a52c34",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b967d2f9-e6ef-468d-9ca2-6152b59ddb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "47b730b3-bc82-4249-9a20-44a39cf2023b",
        "cursor": {
          "ref": "43c3e723-b1b1-4df9-beb4-a139c68a0f17",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "09b33af9-b36c-4a61-8196-9bf73aa62a05"
        },
        "item": {
          "id": "47b730b3-bc82-4249-9a20-44a39cf2023b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2e361fb5-76a1-4faa-83aa-2703801964f7",
          "status": "Created",
          "code": 201,
          "responseTime": 7217,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16d6296-49d1-4406-9327-8c6bf17f3987",
        "cursor": {
          "ref": "fd728dab-a650-4850-a3b9-a36774a14543",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "791b5052-51f4-4449-8f7c-ac7bf99d08df"
        },
        "item": {
          "id": "c16d6296-49d1-4406-9327-8c6bf17f3987",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3f21a79c-52fe-49f5-87f4-93c8c10261de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "82f829c0-8a91-4b37-a886-35dfb53da43b",
        "cursor": {
          "ref": "df3275c1-a07f-48e3-8921-453950df8659",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dd686770-e6dd-45a9-b443-7006c6dbd0ed"
        },
        "item": {
          "id": "82f829c0-8a91-4b37-a886-35dfb53da43b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "46abada0-c377-421d-8802-6e556d07519f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8d100c8d-5f3f-4e3b-9ef8-f160b2690349",
        "cursor": {
          "ref": "5bcc1cf1-f9b2-47e7-b5ce-0fd51df4c043",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "78fb049c-e54f-4d80-9f50-adbd1df45d81"
        },
        "item": {
          "id": "8d100c8d-5f3f-4e3b-9ef8-f160b2690349",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f4b519bf-533e-4f7a-b0c7-a0a3d270aab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acda51a-9c3d-4365-a6cd-0906938d685a",
        "cursor": {
          "ref": "3d04f47f-80ed-4431-a754-c28c51ed3506",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "23d2474d-1655-438f-8377-cd4c85bb56ae"
        },
        "item": {
          "id": "4acda51a-9c3d-4365-a6cd-0906938d685a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bbba34d1-920c-4126-b549-02c3630a6e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07243a5b-f0a7-41f4-8417-1d9a9527525e",
        "cursor": {
          "ref": "d1612ea1-baaa-48ab-8027-e3e48c854cfd",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b9251f4d-e37e-4704-9bec-9dd683faeae7"
        },
        "item": {
          "id": "07243a5b-f0a7-41f4-8417-1d9a9527525e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0e878b73-679f-4b4a-b4a2-33b838fa0af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4609524c-ff06-4438-9078-4e31a8271fbd",
        "cursor": {
          "ref": "a2d42922-864b-450f-a5b0-6e45d9ffc9c0",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f2da11f4-ff0f-4b5a-b66f-07c8a9808f81"
        },
        "item": {
          "id": "4609524c-ff06-4438-9078-4e31a8271fbd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2913d848-8441-46c9-8dc8-a7ded244f843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edafb70-7aa2-4e3e-a18e-a085afb49640",
        "cursor": {
          "ref": "43638a4a-7da4-420f-a338-e047cb2d2aa5",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "504137a8-5e69-4575-a8e4-d95cf645f2e7"
        },
        "item": {
          "id": "3edafb70-7aa2-4e3e-a18e-a085afb49640",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "41fd40f1-3559-408f-9327-9dad43e1e985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbf2796-c167-448f-9456-d3db3d6e3427",
        "cursor": {
          "ref": "acd066ec-7260-4ceb-9460-d62b3f6c7c58",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c024ad6f-0494-440d-bb72-3c848d68f716"
        },
        "item": {
          "id": "dfbf2796-c167-448f-9456-d3db3d6e3427",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4187639a-6bda-45f2-bb9d-539c2fc58b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5980066d-3717-493b-942a-dcff02266814",
        "cursor": {
          "ref": "0efef6a6-605f-4cc9-844d-cd63d2fbb468",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "58d23385-36db-477a-93fc-d4cee3829448"
        },
        "item": {
          "id": "5980066d-3717-493b-942a-dcff02266814",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "665b08f6-18cc-40d8-92cc-46815cc4467c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63eaa07b-d0ce-43ae-940c-efb13867ea33",
        "cursor": {
          "ref": "298c378f-f1a2-432c-9dbe-f84a9e86dbae",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "119852c2-739c-4875-bef8-76fca6e6eefc"
        },
        "item": {
          "id": "63eaa07b-d0ce-43ae-940c-efb13867ea33",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a88696bb-dffb-4ec5-855e-9ec3fa6de820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed237d70-5815-44a2-a3ea-14df7c24468e",
        "cursor": {
          "ref": "eb34ecc2-fd90-4b13-8e1f-4b2dc34ad279",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6468f309-b173-4273-be28-1b742328558c"
        },
        "item": {
          "id": "ed237d70-5815-44a2-a3ea-14df7c24468e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6530eaa9-ea19-44e0-aa5e-3ec7347f1768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1568728-f665-4c80-aec8-c4e7f9179dd5",
        "cursor": {
          "ref": "26fd8148-9087-4338-9352-90772101aba3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3f8b5b28-f206-47a5-b3a3-6d2a90ca401e"
        },
        "item": {
          "id": "b1568728-f665-4c80-aec8-c4e7f9179dd5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0094f4b1-a486-4488-8fb5-0ad6a0fe1385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae24c52-93d1-49c9-a693-ddc5b3dae145",
        "cursor": {
          "ref": "b1a35b5d-996b-49d8-9a2b-3cd58432445e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "75bb1f19-13d9-4212-8b1a-f7ca69c70e72"
        },
        "item": {
          "id": "0ae24c52-93d1-49c9-a693-ddc5b3dae145",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4d4fa8cc-9762-439b-96b8-4ab2542f339b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b82bd4-4efb-489e-9dba-0bbf05397943",
        "cursor": {
          "ref": "39bea62b-fcac-452e-a96e-67048136aa08",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4823b3e3-e055-4ce2-85d6-859eb1cc0df9"
        },
        "item": {
          "id": "a0b82bd4-4efb-489e-9dba-0bbf05397943",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f0b483e0-0331-4434-a883-b6316974631f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c57b1af-7369-41e2-8a09-34a338fc23b0",
        "cursor": {
          "ref": "e9362cc5-886e-4edc-8643-ad740ae78240",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fa4e6d21-e70f-409b-a14e-9d55eb3ff142"
        },
        "item": {
          "id": "9c57b1af-7369-41e2-8a09-34a338fc23b0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6068af0d-3410-494a-8882-8ff476186ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca15dcc2-75cb-48c9-bc85-3ca8f21434b9",
        "cursor": {
          "ref": "d30d2c5f-3558-4c21-885c-92324d3084b0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9a00c584-04e0-4530-bf36-62ac5b969195"
        },
        "item": {
          "id": "ca15dcc2-75cb-48c9-bc85-3ca8f21434b9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8fa74b7d-85e4-443d-b6a3-8a1bb396aa23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbda332-f124-4c72-a1ba-156e16379801",
        "cursor": {
          "ref": "40437462-6bf5-4bc6-8399-f37202abeb61",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d40ce3cb-a6a0-4d5d-8f72-cd514bde7f81"
        },
        "item": {
          "id": "fcbda332-f124-4c72-a1ba-156e16379801",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "508d66c3-ed3f-4cc3-992d-460dd3f2a569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c985c0e6-a3c2-45bf-b27e-af17c9287343",
        "cursor": {
          "ref": "60c02924-81c7-4982-9015-1e5160f2a6a6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "540555f9-225f-4a66-88ad-82693826376e"
        },
        "item": {
          "id": "c985c0e6-a3c2-45bf-b27e-af17c9287343",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2f29a4dd-df60-46e5-8ead-124ac9d0d4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bf681a-4b55-4ae2-91d0-1ae821c907f1",
        "cursor": {
          "ref": "bc7b899b-5587-404a-a194-0c4e2e9e6908",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "688b116f-534d-4825-8975-757d59e4830a"
        },
        "item": {
          "id": "e3bf681a-4b55-4ae2-91d0-1ae821c907f1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "02f5b89c-21c0-4f60-a1ed-32479ead24a1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "4d63085c-fd27-44fa-9e48-7fc1fd61a2b3",
        "cursor": {
          "ref": "1828b8ad-d960-4dd0-9983-f6a2d241de26",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "50db1ac2-6327-4b8d-a56e-fcb267b5377e"
        },
        "item": {
          "id": "4d63085c-fd27-44fa-9e48-7fc1fd61a2b3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ad41a05-31be-4be8-b503-c6ca0596ab8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b6065d-23cd-4d83-9c60-d79c38af74d0",
        "cursor": {
          "ref": "88e43d59-7279-4252-a034-2539c71b2e58",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a28fbcea-1493-47c8-a762-2cc20703c59b"
        },
        "item": {
          "id": "f0b6065d-23cd-4d83-9c60-d79c38af74d0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "161536ea-df30-4077-8d7a-d7393df4ea01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c0b768-b67c-40e4-bb1b-7f05ce9e6034",
        "cursor": {
          "ref": "f5b2053f-eecb-489a-940e-63f80fdad735",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b749a284-5112-4e0c-9761-059ff8ea752d"
        },
        "item": {
          "id": "43c0b768-b67c-40e4-bb1b-7f05ce9e6034",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "581a5812-249b-48f3-8ea4-250ed6a459a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca32be9-7f91-4ef0-bbc3-449cc3710e7d",
        "cursor": {
          "ref": "34f08389-c9f9-4149-9e64-1d3cc8ce5aac",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a28a9c67-410a-4896-b081-afed7e470d34"
        },
        "item": {
          "id": "1ca32be9-7f91-4ef0-bbc3-449cc3710e7d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "28c40953-f767-42fd-bff6-eff21f4127f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c001267f-5009-4eb2-ae11-20310f849634",
        "cursor": {
          "ref": "009d8f8d-b055-466d-8d4b-0e152a48a933",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c6d0a2c0-beeb-4b18-8deb-7b25bdb43651"
        },
        "item": {
          "id": "c001267f-5009-4eb2-ae11-20310f849634",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4f28f2a0-dc35-45c2-a40d-dac528428bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9924f50-71b0-4c8b-a991-adb3665d61eb",
        "cursor": {
          "ref": "23e7d1e1-b679-4ac8-99a5-27067b5ad23d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8225dde1-2a63-4d07-a37c-7d433165de59"
        },
        "item": {
          "id": "a9924f50-71b0-4c8b-a991-adb3665d61eb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bb4c3fca-67d5-4b1d-a6e6-fa615fea882b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d606ce0c-2acc-4892-b564-66f71e42b2ed",
        "cursor": {
          "ref": "98562d1f-fb09-4ccf-858b-04a4eae1efa2",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9aee1030-e2f6-4470-ba76-4b7506dcd4e9"
        },
        "item": {
          "id": "d606ce0c-2acc-4892-b564-66f71e42b2ed",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "023cce5b-5437-4595-86fb-fe2cf06052a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd59c5c5-9fa7-4e1d-9147-9c8557c31b44",
        "cursor": {
          "ref": "947c13fb-945a-4e1d-87d5-447c309f46cb",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "54049944-359a-4340-aaf6-bc1650e1a051"
        },
        "item": {
          "id": "fd59c5c5-9fa7-4e1d-9147-9c8557c31b44",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "47e6576b-ef3a-4e31-a2a3-7302dd164941",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b8872df0-35fc-4c71-8022-2c03a4ca3afe",
        "cursor": {
          "ref": "085b3c62-f170-4402-817e-71fabe48dbc6",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8ef2db11-90a2-4751-82c6-ced742ce8d4e"
        },
        "item": {
          "id": "b8872df0-35fc-4c71-8022-2c03a4ca3afe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cdc7769a-52a3-4ad4-ba7f-46e09f33c022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e64950-1f69-4de7-a4cc-4e4199d335ef",
        "cursor": {
          "ref": "87026764-1077-49ce-8486-38039547e124",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e3e50c41-a16b-4a23-b9fc-e15b121753a4"
        },
        "item": {
          "id": "94e64950-1f69-4de7-a4cc-4e4199d335ef",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7c0b9530-39f3-47e2-8cdc-07e1b4751e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8b6944-6445-4997-aaa4-bcfef240aba0",
        "cursor": {
          "ref": "a9a581e8-b6c4-4020-b1fc-b1a08b840d33",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "97eca8ab-7b65-4045-b74b-170555f217bb"
        },
        "item": {
          "id": "5f8b6944-6445-4997-aaa4-bcfef240aba0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8e2d049e-8c7f-4555-afdd-c8e7431fd7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1e92bc-7ed9-491e-8f9b-c7ab19e4adad",
        "cursor": {
          "ref": "d24b7a02-b175-498c-a0a7-602639233867",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5af292d4-17d4-4d36-a1d5-b71ac487a38b"
        },
        "item": {
          "id": "ce1e92bc-7ed9-491e-8f9b-c7ab19e4adad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "86f6a437-3e57-4e08-ad0c-3ba5541e6239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0096c94b-ed94-4869-aa54-7d888fc8f33e",
        "cursor": {
          "ref": "1f87ab09-2585-42b9-8578-a0b14d0665fb",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "61b49bff-e968-461b-be6f-80a268ef0943"
        },
        "item": {
          "id": "0096c94b-ed94-4869-aa54-7d888fc8f33e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9380b4b1-0524-4798-862a-1564e78d37f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f9741b-1782-47b5-ab00-ef1d5c48b809",
        "cursor": {
          "ref": "a8dfdb71-90c9-459d-b90c-3393fd7e9d0e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4e49efa1-f0ca-413c-9d32-5fe98ec98ae8"
        },
        "item": {
          "id": "46f9741b-1782-47b5-ab00-ef1d5c48b809",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6a2fe2eb-b548-4073-a35d-ad596bb8f620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4c648b-21a7-4b00-aecd-1c95a2c65f93",
        "cursor": {
          "ref": "8638cb10-d2af-474f-8346-b09c3814621a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "207692a5-37ab-450a-907a-97975a3ab3ce"
        },
        "item": {
          "id": "ea4c648b-21a7-4b00-aecd-1c95a2c65f93",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d050ea08-88e7-4994-8bce-4b463677d8ea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "ccf4a3eb-271c-4b34-9b04-f36e29626fe7",
        "cursor": {
          "ref": "e363a6c5-3370-41f6-aece-438916e5389e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bb41e145-6634-4a9b-9d39-79bcbb93fd1a"
        },
        "item": {
          "id": "ccf4a3eb-271c-4b34-9b04-f36e29626fe7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4ae1d679-cdfb-4b06-86b9-78e0991e2887",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "3a602862-30a4-4e2f-a5c6-b9941cb81afe",
        "cursor": {
          "ref": "4a0b4f00-78a0-413a-bcec-13d729310ce9",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9d309d76-69e7-4769-8d0b-61346236de8a"
        },
        "item": {
          "id": "3a602862-30a4-4e2f-a5c6-b9941cb81afe",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "28c25fe4-0836-4ae8-aa6d-bcbbe7e26f14",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f2f90b97-f087-4e5f-9d12-140e53b21fee",
        "cursor": {
          "ref": "ec0f82e1-0932-435e-b011-1993a25aae43",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4c6ea5bc-ee0a-440d-b869-6b59b6ecb59f"
        },
        "item": {
          "id": "f2f90b97-f087-4e5f-9d12-140e53b21fee",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "da1819ee-19c9-4725-8f93-9f30b5e1b396",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 11,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "8bbe3f4e-8074-4b1c-84c5-2c8f01738d43",
        "cursor": {
          "ref": "eaee7485-95a7-4473-a516-bae34bc6cc96",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3950cb30-0fc8-443e-9ef1-082d6bb6472b"
        },
        "item": {
          "id": "8bbe3f4e-8074-4b1c-84c5-2c8f01738d43",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9e56118d-afd7-4dbc-98be-373146f1f12c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "2eb10b05-224e-4c6c-b158-d77e2870b529",
        "cursor": {
          "ref": "09878156-9e4f-452f-950b-dbf629bdfe6e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3daacd77-a8f1-4f7c-b647-c128b5f73f0f"
        },
        "item": {
          "id": "2eb10b05-224e-4c6c-b158-d77e2870b529",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b3b5b30f-8a70-483a-8f15-09b789b04bde",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 89,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e8b35920-dd11-43dd-bf89-696418ee50b4",
        "cursor": {
          "ref": "f0a74e5d-5ec5-426b-ac88-28404b772685",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9af84ef6-0653-435b-a8f6-c4fdb725bacb"
        },
        "item": {
          "id": "e8b35920-dd11-43dd-bf89-696418ee50b4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a8f4640c-6e78-4f21-921a-94a4c7dca120",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4be510-62dd-460a-a0d9-b26a7b6200af",
        "cursor": {
          "ref": "ef4a7e79-56a5-4b02-a365-7485da5a5dd3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5e20413d-e5c0-4218-b09b-1fe78a36257e"
        },
        "item": {
          "id": "eb4be510-62dd-460a-a0d9-b26a7b6200af",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8dafd4c2-6abb-4ce8-899d-06e3bd2f8400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40013c58-911a-4dc6-9420-013b46786aa9",
        "cursor": {
          "ref": "1652ac2b-e5b5-4e96-8530-6d318893f73a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9bd00e35-ce3f-48ef-a226-5ffde8a6fe50"
        },
        "item": {
          "id": "40013c58-911a-4dc6-9420-013b46786aa9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0f95bea2-e602-498d-88e0-9fc61fd805f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0153e50b-7bf3-4d9b-9ca6-d39377df7095",
        "cursor": {
          "ref": "fafdd347-4647-486b-9c11-ade39a9d60c7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "49befc9a-76e5-4b43-b629-23bd32bfb928"
        },
        "item": {
          "id": "0153e50b-7bf3-4d9b-9ca6-d39377df7095",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e08534c2-a29d-4954-bcba-47c9676a1634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840182e5-2907-4f92-b265-d16e3c5f9d5a",
        "cursor": {
          "ref": "d7ede769-593a-4fc5-ac83-952ad63f82d1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8a48e79c-8c4f-4111-a1b9-287d974a4419"
        },
        "item": {
          "id": "840182e5-2907-4f92-b265-d16e3c5f9d5a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dc3f309b-4c45-4a44-81ff-24190f8209dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bf4536-585e-4f54-81ff-501d946485f6",
        "cursor": {
          "ref": "a6f09fb5-94e9-4b7d-a9d9-2b1d24e9bbff",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f1e9355b-6ab9-4325-a559-5626b161be78"
        },
        "item": {
          "id": "11bf4536-585e-4f54-81ff-501d946485f6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "76de27db-1524-4b40-bb88-601d44c2aeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5ca800-1cd3-4ccf-a935-20793915c38e",
        "cursor": {
          "ref": "b0d49254-dd36-4be9-853e-104bf9dca524",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ca0809b7-4e47-4878-8269-47dc3287ab02"
        },
        "item": {
          "id": "bc5ca800-1cd3-4ccf-a935-20793915c38e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "524c7526-c54b-4d74-af57-01e867b22f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b9bf73-e87b-477f-8f8d-43b146a9f822",
        "cursor": {
          "ref": "5fb6ba67-fefd-4140-80c8-04fc2fae115b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5fb0b26e-b76f-4cbc-a5e8-9177bb851673"
        },
        "item": {
          "id": "a1b9bf73-e87b-477f-8f8d-43b146a9f822",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4b155ba9-829f-446e-8e26-a0c4f7914924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e79aa5-5b07-45a4-a575-cc41957e7b21",
        "cursor": {
          "ref": "d81f807f-9016-4369-95c3-65bc0bf57be3",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9f3f4b8a-50d5-4469-8b92-aea3e22b8af2"
        },
        "item": {
          "id": "36e79aa5-5b07-45a4-a575-cc41957e7b21",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "20005b67-71d0-4d95-a494-e89e32870e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148a3110-429e-4e46-a4ea-2ce815dc72b0",
        "cursor": {
          "ref": "54fa3033-50f4-4994-a9c9-8c2c32077016",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a62df43b-5d49-44c0-bccc-09b18eb120bb"
        },
        "item": {
          "id": "148a3110-429e-4e46-a4ea-2ce815dc72b0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ff25fa32-b3d0-4a5e-8859-c09129aa7047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132aaaa3-60fc-4ea4-9dfe-e2f8b7d6f160",
        "cursor": {
          "ref": "0f01503d-d292-4e5f-9e69-b9e6da5e63c5",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b8b5dc99-852a-43c4-ab18-b5d43a58d528"
        },
        "item": {
          "id": "132aaaa3-60fc-4ea4-9dfe-e2f8b7d6f160",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d89b0e1b-068e-4957-9035-a2abbf120174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e50949-b4ff-4181-a643-98fbc82cc127",
        "cursor": {
          "ref": "31db380a-569e-44ec-891d-8b959b5406bf",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "080aedd3-968a-4a70-9f4a-2493e128f590"
        },
        "item": {
          "id": "c1e50949-b4ff-4181-a643-98fbc82cc127",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "58a3234d-0b1e-4cde-b981-f55f8739363b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09d1356-9b77-4a49-995c-099b43ce115b",
        "cursor": {
          "ref": "83eac04b-a6d9-4e9e-9b25-2695bd92fa68",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b0c8bafe-fe4e-4578-8167-e89309879079"
        },
        "item": {
          "id": "c09d1356-9b77-4a49-995c-099b43ce115b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4d1e0e79-5714-42ff-b897-ffbaecb82c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af22690f-02a2-473d-b6e8-fa9058ddcb88",
        "cursor": {
          "ref": "c2b9bfec-07c3-4d91-b39c-f59323e4f751",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "016653ae-2036-42a9-9fa8-435a78f9ac14"
        },
        "item": {
          "id": "af22690f-02a2-473d-b6e8-fa9058ddcb88",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6e374b09-a44c-40c5-8ce1-add796a82adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b07d2ff-f9ce-49f5-819c-563d8a4fc20e",
        "cursor": {
          "ref": "33c52a75-c127-4c65-a299-2f55d8d1fd47",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3ad2df09-d03b-41b6-8286-7243b6ad735d"
        },
        "item": {
          "id": "1b07d2ff-f9ce-49f5-819c-563d8a4fc20e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c021b608-7c7f-4e8b-8708-53fa79fee4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5768bdc8-df18-4942-b224-566b8fbfd6bf",
        "cursor": {
          "ref": "fb579de2-c859-4e11-b90b-e478b21ca550",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2b9d7459-a368-494a-a850-7213fa195aec"
        },
        "item": {
          "id": "5768bdc8-df18-4942-b224-566b8fbfd6bf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0d129f98-e622-46ff-a54c-b00a76fa01e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4421364-ba5a-4656-99f1-e066615e77cb",
        "cursor": {
          "ref": "ecba541f-227d-4c46-a5b6-4191c42310b2",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d39c0a4c-2795-4160-9b42-ce472bd7ada0"
        },
        "item": {
          "id": "d4421364-ba5a-4656-99f1-e066615e77cb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "da850e37-3bd4-4b13-b6c8-09930f98a9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a6ce47-d079-43b3-add3-98248fbc3b56",
        "cursor": {
          "ref": "8b4ca9ef-4137-4425-894e-e3a5d0ac7386",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9c268c15-445f-4a62-9236-062c52478111"
        },
        "item": {
          "id": "45a6ce47-d079-43b3-add3-98248fbc3b56",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "81e57126-d66c-420f-8a52-951d8a697f06",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "3d4ba50f-40dd-49a5-bd24-eb712edc5931",
        "cursor": {
          "ref": "d96d4e7e-7143-45f0-a95b-c8dff6c4115a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9a6d718f-1bee-4b3b-b278-b7021087a2ff"
        },
        "item": {
          "id": "3d4ba50f-40dd-49a5-bd24-eb712edc5931",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3b23c05b-1973-4fd0-aea9-3ee6aa74349c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c7a946-7aed-46d8-a1a6-ad14b6c48571",
        "cursor": {
          "ref": "470590fb-e719-450b-896b-f6f20d8bb31e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "98c951ce-30e2-4f2a-9981-e6e315490972"
        },
        "item": {
          "id": "a2c7a946-7aed-46d8-a1a6-ad14b6c48571",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "18bbb123-0ecd-401f-801c-71fd2ac8045f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce6eba0-87d8-45ce-b0e9-8aae849a88cb",
        "cursor": {
          "ref": "942d11c6-bfa2-479a-b78b-d6b711915e5d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6ff1a5ff-ab20-4fe9-a80c-5743f9550281"
        },
        "item": {
          "id": "9ce6eba0-87d8-45ce-b0e9-8aae849a88cb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a712b88d-cb05-4055-b809-2fe4e54ff201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9058d505-fc56-426e-8f2c-6905a8fcedef",
        "cursor": {
          "ref": "0a3ac379-7658-445f-8fb7-4bc36af2fc83",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9a3c3d3a-8636-45e3-a2ab-c3fb731d9e2d"
        },
        "item": {
          "id": "9058d505-fc56-426e-8f2c-6905a8fcedef",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8e7a0c56-b55d-4d81-a7b3-2039e62a837b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe0da70-5c47-4297-bf7a-57dbcc40c184",
        "cursor": {
          "ref": "0a4d2e27-036d-43b5-b6d1-52bbf0639a88",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "de64d0a9-bc87-44ca-957b-b8c2ca3522b9"
        },
        "item": {
          "id": "ffe0da70-5c47-4297-bf7a-57dbcc40c184",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a21f192c-c650-4157-9b00-7b4d0cb3c219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53e1368-e41a-4cc9-8d6b-4e70b4da67f8",
        "cursor": {
          "ref": "83479410-12dd-47e4-a00f-1838c524bac0",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c3388d7b-450f-4682-bf24-e77d740a8d13"
        },
        "item": {
          "id": "f53e1368-e41a-4cc9-8d6b-4e70b4da67f8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4a2372fc-60b8-42a8-b596-9353956561ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a47b22-206f-443c-a99d-10ff8cd27305",
        "cursor": {
          "ref": "ee004186-32cf-47c8-928c-03d84996e697",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ac8f5cca-cb3b-4d54-9a75-496590ee9933"
        },
        "item": {
          "id": "90a47b22-206f-443c-a99d-10ff8cd27305",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fac012a3-62e8-4bab-92de-dd62e5fe9989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628a3ea4-bf7e-4537-81ef-18fb463dca90",
        "cursor": {
          "ref": "5a582703-0d1f-444b-8c4c-cc9f43061236",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5ca9df0f-4a78-436e-8c67-46e8fab4efd4"
        },
        "item": {
          "id": "628a3ea4-bf7e-4537-81ef-18fb463dca90",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0ccf4fd8-ca1b-4614-8ee2-d7d80c3ee98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31676373-84e3-4d3a-b8d2-df340647a6cc",
        "cursor": {
          "ref": "55100ffa-90eb-49e7-808a-81e98ecbc37b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "346aa7a5-2f57-4869-8561-25ce4858e64c"
        },
        "item": {
          "id": "31676373-84e3-4d3a-b8d2-df340647a6cc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b2b945c0-4e08-4843-b6d0-ea2004a8c1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c25f416-8eae-4e1a-82af-e8a393f71e10",
        "cursor": {
          "ref": "a761501d-52d0-423c-b477-833933f8607b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e2625559-be88-49d3-bf92-2a6079ab4b39"
        },
        "item": {
          "id": "5c25f416-8eae-4e1a-82af-e8a393f71e10",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "84abc475-072a-471e-8dea-0e18f825accb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8cea50-f0d5-4c5a-a24a-baac5bda9a54",
        "cursor": {
          "ref": "42f4a000-4198-4356-aca1-40b51160f9f9",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "efd4dc2f-a7f1-42e4-a9a7-8b90861fd586"
        },
        "item": {
          "id": "ed8cea50-f0d5-4c5a-a24a-baac5bda9a54",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f3dd4160-6594-47da-8977-c8c1cdbb9629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cba5fc3-0584-423b-861b-1b1475c0d17e",
        "cursor": {
          "ref": "518122fb-7db3-4fbe-804e-ad3184bfa840",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8769361e-4f61-43a9-820c-cbd7b6232967"
        },
        "item": {
          "id": "1cba5fc3-0584-423b-861b-1b1475c0d17e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6e293b00-487d-4cfb-8df6-e2021598b95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f01b56-6af1-4902-a970-cbbb0df4d978",
        "cursor": {
          "ref": "5cbde54b-a604-48b7-a908-5dc3bbeec893",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0a66a5ff-a993-4a84-99a5-26a868a08c88"
        },
        "item": {
          "id": "37f01b56-6af1-4902-a970-cbbb0df4d978",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "98c25dde-7fff-415e-a17a-92b848525cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e5c74e-2173-47b9-b36d-d247af940dc0",
        "cursor": {
          "ref": "66625138-5af0-457e-a973-32893686148c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c8e2a1a0-bdf0-4318-820f-8d01a11a1b67"
        },
        "item": {
          "id": "52e5c74e-2173-47b9-b36d-d247af940dc0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a04d6104-f013-487c-b35d-16168aa6f637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833c3391-515e-4df6-ac92-6339db69718b",
        "cursor": {
          "ref": "3bb9e2e1-b514-4984-acd9-8345e5c780da",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e33a0a37-7243-4007-8ae9-538fd5db3e71"
        },
        "item": {
          "id": "833c3391-515e-4df6-ac92-6339db69718b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "98004f52-1c3d-4925-9019-b902d91b0e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cf8be5-d646-4a96-8e00-aef52a575e64",
        "cursor": {
          "ref": "48174aec-c680-4b3c-9ec6-efb195a045f4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d0feb8a3-02a0-4ac2-aa11-db52ef6b7545"
        },
        "item": {
          "id": "36cf8be5-d646-4a96-8e00-aef52a575e64",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "649a7850-c116-44b6-b52e-150086fa8db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae76d90-fe9b-4f06-8655-b1570a990b38",
        "cursor": {
          "ref": "5a274a6f-5a09-4206-8f06-3006a0618594",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8c8e7d86-4d62-4e59-8ea8-91db851d2724"
        },
        "item": {
          "id": "8ae76d90-fe9b-4f06-8655-b1570a990b38",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7d1bc15b-f44d-4a79-aaa9-0b63d2cb2185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0853dda2-9391-4a43-9b8d-40053e7f90b9",
        "cursor": {
          "ref": "28e0324b-1c7b-4303-b85b-db1c62a6c106",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c75c781a-4792-466b-befb-f7d02c325ea3"
        },
        "item": {
          "id": "0853dda2-9391-4a43-9b8d-40053e7f90b9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c71f6af5-6aa1-4607-abd4-85b9493c2bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805dde7c-d807-4662-9fee-af3a5502af6e",
        "cursor": {
          "ref": "2236a9fb-5ed8-4295-a5b9-94f193ec0315",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "45377443-402b-46a5-811e-1797eb2df653"
        },
        "item": {
          "id": "805dde7c-d807-4662-9fee-af3a5502af6e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4132ad82-5a37-468f-aa5c-795464498730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec38e997-8da9-4543-80bd-5d96dd745fa2",
        "cursor": {
          "ref": "f42f74c0-f9ea-4968-a60f-8767b6fcebb5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e89252cd-8aa5-4ec1-973d-ad6f36187ae9"
        },
        "item": {
          "id": "ec38e997-8da9-4543-80bd-5d96dd745fa2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "25bc67e1-6605-4499-8f1b-fcabbb647818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c52d1ce-3fef-489a-b964-4c913c72f598",
        "cursor": {
          "ref": "8bafd4fd-4f04-4c1b-a176-24d7dbf2a07f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "068739e4-3170-46e3-83b2-cfd108af1912"
        },
        "item": {
          "id": "1c52d1ce-3fef-489a-b964-4c913c72f598",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ae8bec78-81fe-430b-a7d3-150bec3d856a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735a8b6b-a632-471c-8932-5cec796dfa42",
        "cursor": {
          "ref": "205bdc4d-346f-4204-9342-29a33561d380",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "02f9403a-136e-413e-bc72-883e5794873b"
        },
        "item": {
          "id": "735a8b6b-a632-471c-8932-5cec796dfa42",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5eee571b-8b9d-4fa2-a198-4d4232bea646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa93aad6-2db4-463f-8520-f57614cedcbb",
        "cursor": {
          "ref": "f6d94d5d-5a7a-442f-a62d-49579623aa6d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a277741f-e670-4445-8cf6-b405d9864f60"
        },
        "item": {
          "id": "aa93aad6-2db4-463f-8520-f57614cedcbb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2cb27dfd-870d-468a-b845-8bcb8a8232c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b03892-a297-4dca-ad60-3bcfd9b923d6",
        "cursor": {
          "ref": "7bca2786-1d61-40ec-b4b7-338a75c61ed5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fa3dc327-50bc-4935-8a17-425fb0d4b0fd"
        },
        "item": {
          "id": "e1b03892-a297-4dca-ad60-3bcfd9b923d6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d27e3ecb-8f10-4eec-868f-fe2213aa01c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc049a20-d180-480a-8b80-95561447c171",
        "cursor": {
          "ref": "e50f177c-9ad9-4963-9dc7-a702b942ec50",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "54f9ae51-56f2-4654-8dd9-44c20050e249"
        },
        "item": {
          "id": "cc049a20-d180-480a-8b80-95561447c171",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "02f31026-e316-415f-aed5-7a218bce9111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7cf06a-e373-4fd9-9783-1cc3f817fb3d",
        "cursor": {
          "ref": "775aa27c-3028-4261-b409-6859efdbaf56",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8f814e1d-d94c-4298-be0a-a8b524b139f3"
        },
        "item": {
          "id": "ef7cf06a-e373-4fd9-9783-1cc3f817fb3d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cace67d5-21f0-4812-87be-cb8309f7c153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5313ae9-d730-411e-b95d-236ae3b551f9",
        "cursor": {
          "ref": "ec9a1418-d2ad-45e2-a216-25b0e1836624",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c026df1a-66ce-499b-ab47-9cc4d72a6b7a"
        },
        "item": {
          "id": "f5313ae9-d730-411e-b95d-236ae3b551f9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1289d7be-ffcb-4912-acac-0bb065a7871f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65b68af-1d6c-477a-a05a-68f3a8301a45",
        "cursor": {
          "ref": "e45501d4-762e-423d-ad8d-217bec19335a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5332defd-8bc1-42a8-963a-f3fd8bfde30d"
        },
        "item": {
          "id": "f65b68af-1d6c-477a-a05a-68f3a8301a45",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6c62b225-7f61-4124-ace0-cd1f03d91207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cbcf80-d2c1-4d73-9f2c-4164ec5291ac",
        "cursor": {
          "ref": "8dbca576-5bbb-4a7c-a13c-0b1a5f28bb15",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4ff0c336-6aad-49a7-9ea4-b8b87c365edb"
        },
        "item": {
          "id": "05cbcf80-d2c1-4d73-9f2c-4164ec5291ac",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d902b9de-663f-4613-b81e-8737c4090c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c095e86-4ff2-4f72-be3d-3084123183b7",
        "cursor": {
          "ref": "d4a2e04a-d2d2-4b6c-aaed-f6f0ddec1b22",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "95ba608f-f892-4b7f-b90b-9cdd21b58f96"
        },
        "item": {
          "id": "9c095e86-4ff2-4f72-be3d-3084123183b7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "47c27974-0b01-4337-8ada-4492619f925b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eadb539-0faa-45b3-8dcc-bded283ac706",
        "cursor": {
          "ref": "301c9479-233b-4f3a-9dc7-e35f2cee6d83",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f1300ed0-e417-4a89-b2c6-fd3178860fa5"
        },
        "item": {
          "id": "7eadb539-0faa-45b3-8dcc-bded283ac706",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "54628d27-2494-4c0a-9b79-a12b6dfd3dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39791bec-3340-488e-b552-286124b55111",
        "cursor": {
          "ref": "d7fa5e92-58e6-4661-bf75-99e1db138b07",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a17113d4-33d5-4c26-ad65-182e8d7929ed"
        },
        "item": {
          "id": "39791bec-3340-488e-b552-286124b55111",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "69da7af6-3d49-44cf-b85e-ee2f04dceab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548f26f6-a3be-4eb6-96f7-59d3d28e75d8",
        "cursor": {
          "ref": "1310e01b-4b0c-4085-ae9b-11860908489d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7e8557f1-4c74-404e-a501-7238d0380707"
        },
        "item": {
          "id": "548f26f6-a3be-4eb6-96f7-59d3d28e75d8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "68df267c-2446-40c0-b813-6b15c1313a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeba981d-16e3-42bc-a340-f1e36d7ffbb2",
        "cursor": {
          "ref": "d8b6ea24-370d-4495-b0c6-7554abe162ee",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "63f599ed-739a-4c86-b2b2-35b678bf7373"
        },
        "item": {
          "id": "aeba981d-16e3-42bc-a340-f1e36d7ffbb2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ccd5107e-69d2-4e85-ae92-e6c12004c076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63e6d17-9284-4927-9ba9-68c399b243f2",
        "cursor": {
          "ref": "90e34b0e-1a4a-427e-bd12-a5e0683052ff",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "55c4d5c8-32e7-4247-9c74-157ef9835c35"
        },
        "item": {
          "id": "f63e6d17-9284-4927-9ba9-68c399b243f2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a5284152-a7ec-48c5-9132-884a8e8b0044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4feda59-42fe-4071-bba2-3865d154c3d9",
        "cursor": {
          "ref": "25fe21fb-972a-404d-beb6-c5956ef798dc",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "79cf53de-e924-4899-b897-61c939760f1f"
        },
        "item": {
          "id": "d4feda59-42fe-4071-bba2-3865d154c3d9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7e403727-714f-4e37-baf0-03b297511c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89de4af-1a8a-47fa-9101-df603f98e0a1",
        "cursor": {
          "ref": "1a164873-82a9-4bb8-a652-22188cbb7122",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "604bedfa-26fe-443d-a903-64efff5cd4d5"
        },
        "item": {
          "id": "b89de4af-1a8a-47fa-9101-df603f98e0a1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0c2528d6-1bcb-44d5-af39-0c285c4c6991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d631c0-bece-4916-900a-9dd8a462a643",
        "cursor": {
          "ref": "319ee9eb-d312-4f4c-862d-104766f792e4",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1f909939-5101-4097-bfbf-e47f2bd5b6a3"
        },
        "item": {
          "id": "c0d631c0-bece-4916-900a-9dd8a462a643",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7887eb30-6536-4d4a-a7d8-de300ce943ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7827208c-f6c7-4b0a-8bb5-d54614e24f15",
        "cursor": {
          "ref": "9475dec1-c512-4634-a0ee-09118889490b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1873e408-1a8a-42c3-881a-603070c8b03f"
        },
        "item": {
          "id": "7827208c-f6c7-4b0a-8bb5-d54614e24f15",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2d903a43-cdfa-4b2c-97a3-2bf1867b7357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a90d51-23d6-4084-9116-f5df008f030f",
        "cursor": {
          "ref": "48b322c7-ecad-493a-b69a-90ba6cd59855",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "42faad6c-b0cc-4027-acb4-1e1df586a886"
        },
        "item": {
          "id": "05a90d51-23d6-4084-9116-f5df008f030f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2a4af764-6f58-4f3d-b0a0-e5e11b590ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737ba001-166e-42bd-a1b2-419676932c13",
        "cursor": {
          "ref": "2993105f-d4f9-4b24-a171-5fcadedfe84c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b925874f-8850-42fc-afa7-442588cc34c9"
        },
        "item": {
          "id": "737ba001-166e-42bd-a1b2-419676932c13",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "27b29673-1f3d-465d-a737-524f3b2aedd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b098b16-fc5e-497a-92a2-59cc6b9835a5",
        "cursor": {
          "ref": "d925b6c3-8bdc-493c-b8ff-02cc3e804025",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8feb0184-3007-4e18-8b36-6ad4f1aa7885"
        },
        "item": {
          "id": "3b098b16-fc5e-497a-92a2-59cc6b9835a5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1b086136-b45a-4659-9bed-2421052f9ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae15d096-141a-4e38-8955-780dcc829c63",
        "cursor": {
          "ref": "1ef730bb-c46c-4b3e-8b3d-f454fdc66897",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bb5b7264-b455-470d-aa76-c7b75a1c323b"
        },
        "item": {
          "id": "ae15d096-141a-4e38-8955-780dcc829c63",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fd66d6b7-2161-4384-b0ec-be74b349e72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8fa367-5f29-446e-bb20-334843c5313d",
        "cursor": {
          "ref": "a64a4fbc-a5bc-458e-856d-189106bd8f31",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5a3c946f-f002-4eee-88ed-8907c35997f2"
        },
        "item": {
          "id": "ab8fa367-5f29-446e-bb20-334843c5313d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4ac7f072-07a2-4569-a7bb-cbfbf71cbe66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5806e6-85d8-46a6-a2e2-f933f659dac6",
        "cursor": {
          "ref": "2eeb1951-7dfe-48d0-9a53-35c39d5cdbe6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8b3a3ff0-5fb5-4c7c-ae98-7d7771fd94cf"
        },
        "item": {
          "id": "cd5806e6-85d8-46a6-a2e2-f933f659dac6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4bfb94ea-eca6-441d-9780-1bb8809eb5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a480c94a-5f27-4088-b65e-8e755cacea0c",
        "cursor": {
          "ref": "37e15625-b5eb-4b3a-b452-a26d8ae94730",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a4e2c0b9-64e4-4277-9df1-c017277a1325"
        },
        "item": {
          "id": "a480c94a-5f27-4088-b65e-8e755cacea0c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "58b6ec37-a2da-4f96-8ee8-d24a70fa5b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8724d7f-5fa2-4fa3-95e8-1a42380121cc",
        "cursor": {
          "ref": "d0316eb7-5bb9-486c-89b4-e0f2d46e38eb",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d9df3586-5834-41b2-a739-66087596ddb8"
        },
        "item": {
          "id": "a8724d7f-5fa2-4fa3-95e8-1a42380121cc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "391c922b-a063-4691-ae92-9f0f7799f0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f13833-1d0c-4670-9071-2cf893b1f4ee",
        "cursor": {
          "ref": "6d037ee1-95a0-4c00-8008-a19e34bd70a8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c24949e3-325d-4806-ad03-1cf5da572186"
        },
        "item": {
          "id": "96f13833-1d0c-4670-9071-2cf893b1f4ee",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8884cfb4-2c7d-472d-9198-9d59fc216fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be08aa4-d3ff-4021-9617-aaffde119bc3",
        "cursor": {
          "ref": "339893d9-1e22-451d-91e5-b46c6504c3ac",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3bf3fc68-3247-4454-bccd-c46b23062cce"
        },
        "item": {
          "id": "2be08aa4-d3ff-4021-9617-aaffde119bc3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1301fa87-658f-4dd5-a90a-ebbb518d05b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dd89c3-0c97-482c-9914-af0985dc4ed2",
        "cursor": {
          "ref": "ddffd2d0-b12f-4ce1-b517-dddde18f02be",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a32651cb-65c0-44f6-92ff-c1cfcbdde983"
        },
        "item": {
          "id": "82dd89c3-0c97-482c-9914-af0985dc4ed2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7defdce3-e7f8-46d5-b097-df524d4f4889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fe8f6f-25e7-44db-8774-5c897cffe90b",
        "cursor": {
          "ref": "4cabdb32-5535-4403-ad0e-8a207032de56",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "58117113-16ea-4bf2-8719-dc6cae296051"
        },
        "item": {
          "id": "06fe8f6f-25e7-44db-8774-5c897cffe90b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "342295c5-311f-4d2a-92f5-3d9f015bc2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee9d9d1-af66-4b5e-ba90-ac2848af50eb",
        "cursor": {
          "ref": "e2c7df38-6032-4638-bb25-c5d48cc19ab8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "60750434-c21d-4f46-aead-1f0cd6d7aed8"
        },
        "item": {
          "id": "7ee9d9d1-af66-4b5e-ba90-ac2848af50eb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d2f68ce8-6835-4222-920c-451991c5c78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073a1a9f-a4d9-4262-b9ff-3d0609d2b7ff",
        "cursor": {
          "ref": "494159ac-977a-4e0c-92f5-624b10dfce0e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3cdd068b-a333-43e5-b7a2-5080397c8cc0"
        },
        "item": {
          "id": "073a1a9f-a4d9-4262-b9ff-3d0609d2b7ff",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "97a6e7ff-7b43-4583-94ab-b61d30a9de6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340ac35f-bc72-4465-941f-09d661748778",
        "cursor": {
          "ref": "58b91f83-3f14-41d9-94eb-9ed922a20b46",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "00440027-4cbf-456d-8b31-afaacdfecf1b"
        },
        "item": {
          "id": "340ac35f-bc72-4465-941f-09d661748778",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "91e3a1b7-31d5-4517-84cb-848960c1026b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720329d8-e3ac-472b-b456-a920359353a8",
        "cursor": {
          "ref": "1a30a652-e05d-46b2-a80b-5716de0f7615",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a9a91b34-5d0a-43cc-add5-89f0144ee7c3"
        },
        "item": {
          "id": "720329d8-e3ac-472b-b456-a920359353a8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "788ec5d2-8840-45b2-9d2f-8a7d7dcf47a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729eff1c-a24c-4cf7-bab3-36721cd7901d",
        "cursor": {
          "ref": "45df3738-c0b4-42c3-a954-f663052238af",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6e125c38-f3ad-47ca-81ef-d5fb8ff66f56"
        },
        "item": {
          "id": "729eff1c-a24c-4cf7-bab3-36721cd7901d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3abb80e0-3a81-414c-ab6e-8dfc437a2ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e537e8c5-ff8a-44af-a520-733a3c281383",
        "cursor": {
          "ref": "55148b5a-eb09-4f93-a8f4-b5c52fdea36a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a27b300a-be33-4c41-8801-ae965bc19e92"
        },
        "item": {
          "id": "e537e8c5-ff8a-44af-a520-733a3c281383",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b2fc0c64-f0c0-47da-b32b-5ab188459180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce481ec-75ef-407b-b5bf-d83f0ac2162d",
        "cursor": {
          "ref": "b73f29af-1216-46cb-864d-75b9537f481d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a4380342-5ede-47b6-8173-b0262e93a4e1"
        },
        "item": {
          "id": "cce481ec-75ef-407b-b5bf-d83f0ac2162d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "41c28960-2c8a-46ee-84e6-570126edddc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b4354e-07cc-4e1e-8408-af9a900b03bb",
        "cursor": {
          "ref": "51c549cc-314c-4e43-80f2-8604776b2e9b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7f1a7b3a-f49e-4b50-b89d-94460a8f97ac"
        },
        "item": {
          "id": "a1b4354e-07cc-4e1e-8408-af9a900b03bb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a25a6515-b341-4df5-b218-9262cb525e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0006fa-3ae9-4b91-8fd9-5e5488f19143",
        "cursor": {
          "ref": "b96240a3-e4cd-4d20-956e-ebf9f6ffa5af",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f94be9e6-0515-4e4f-ba1c-c0c92ed592d9"
        },
        "item": {
          "id": "3d0006fa-3ae9-4b91-8fd9-5e5488f19143",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "18442465-fe70-40d3-8919-15e1750aacd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673f5ea0-e5d0-4408-8f17-147f7c5c0734",
        "cursor": {
          "ref": "e551bf95-3b16-4f4d-b7fb-5b4f1195168d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2a25d758-5beb-46bb-abef-965945b59b6d"
        },
        "item": {
          "id": "673f5ea0-e5d0-4408-8f17-147f7c5c0734",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "105b6faa-f0b9-458c-b749-f3743e6dd3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6680fd-9d85-41ad-90e9-6ac83d08ca25",
        "cursor": {
          "ref": "3b6837a5-affc-4533-a913-0c0750ee1970",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "feba7427-ccda-4609-8b19-6e47ab779c3d"
        },
        "item": {
          "id": "3c6680fd-9d85-41ad-90e9-6ac83d08ca25",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cc6e78bc-81d0-4366-865e-3c1074e2e16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18561fe-15b9-4079-acf8-24cbb8702f5c",
        "cursor": {
          "ref": "1ffecd26-53a1-42e2-a977-68957c629052",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cb6cec06-f207-4570-87a3-bb7966cbbfa1"
        },
        "item": {
          "id": "c18561fe-15b9-4079-acf8-24cbb8702f5c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9900130f-ee16-4635-9c88-c36548bccedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36777d38-2ed7-4ad3-8bf9-faa65749f8c5",
        "cursor": {
          "ref": "6a551c12-d20a-491f-9f62-3d82db8403dc",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cc5fe99f-ccc3-42ba-a0d5-ace614bcaca4"
        },
        "item": {
          "id": "36777d38-2ed7-4ad3-8bf9-faa65749f8c5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bf18fe05-55c4-44b2-ac8f-6f115a3c4191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9046bbe-ab0d-46dc-8f77-d6d4a3ef1cd7",
        "cursor": {
          "ref": "995f0ef5-a737-4a09-ac07-80a45cc8db8e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4f20cffe-a68c-4191-b957-705eb5dd4c19"
        },
        "item": {
          "id": "a9046bbe-ab0d-46dc-8f77-d6d4a3ef1cd7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bbb9f1f4-ffdd-4425-8f18-5ea644d7b24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3e420d-3b25-4b64-99fd-d52f9f9bd800",
        "cursor": {
          "ref": "07eee9c4-3b52-45f6-8d35-c4fccc2b16f5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0a1ffd36-9dca-412c-a87d-2d26236c43ab"
        },
        "item": {
          "id": "cd3e420d-3b25-4b64-99fd-d52f9f9bd800",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3f457e7e-7fdd-4e8a-b332-1f8e9c36af0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f39c17-578c-462f-a442-e756aa9aba76",
        "cursor": {
          "ref": "56cd4ce5-4576-40e3-854b-8b03219ef2d2",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4df2a5a0-8660-4e3a-9523-5a18eb27a922"
        },
        "item": {
          "id": "79f39c17-578c-462f-a442-e756aa9aba76",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "993e77fe-faaf-4bbb-bbce-94acae786db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f17d2c5-2ca1-488d-b893-66e4c750170f",
        "cursor": {
          "ref": "aede6293-c459-4d0e-8b36-a5aa57d8486b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "479034d7-1aa1-44e7-a1cc-97d84b832502"
        },
        "item": {
          "id": "3f17d2c5-2ca1-488d-b893-66e4c750170f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0b7295c4-8ea6-462c-b32a-82e9b4a56c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f499a8-fdae-49e7-b6d5-04d1f49c0b4a",
        "cursor": {
          "ref": "0fe1057b-f972-4329-8d71-d272dce26f61",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4cc2429e-2f98-41b1-9498-39e1c31194fe"
        },
        "item": {
          "id": "13f499a8-fdae-49e7-b6d5-04d1f49c0b4a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b496c96b-f9f8-48a2-b656-7a8c4e63e16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703e4196-9e6e-4663-b69a-1ea7750d9f9c",
        "cursor": {
          "ref": "1191f9da-2994-46a4-a3c8-963147efa77e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "894ff3da-6bed-4686-8382-7b0bba924423"
        },
        "item": {
          "id": "703e4196-9e6e-4663-b69a-1ea7750d9f9c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "828eb2aa-ab7a-41e4-b0b2-c9e116184e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863055b6-2ee1-45e5-8946-56af1b246f98",
        "cursor": {
          "ref": "93151a46-f566-4fe9-9123-d6699b6d3cca",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a16940f5-a160-429d-a41f-1c4fcfb9a223"
        },
        "item": {
          "id": "863055b6-2ee1-45e5-8946-56af1b246f98",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d8b41348-dee4-420b-b84b-45b60726901e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcb0ea6-fc45-4213-9518-f56527600985",
        "cursor": {
          "ref": "bdf35dde-ac1d-4dac-b24f-c8b7759b823c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d022e414-5746-4d5e-ba23-0843cd9febbf"
        },
        "item": {
          "id": "8bcb0ea6-fc45-4213-9518-f56527600985",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "94a0afc9-f443-4f5b-b110-18a24a698bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619c4c90-d72e-4c22-b553-2b3509046044",
        "cursor": {
          "ref": "8eae8d3f-9931-49a1-8fe9-ed3358aa98aa",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "33bb9f3d-9a97-425a-81d9-af2564eea9a8"
        },
        "item": {
          "id": "619c4c90-d72e-4c22-b553-2b3509046044",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "14e5f72f-859e-47e1-be5b-01cc9e600058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8045ee-4803-4b1b-94d9-53cbfb6c1f82",
        "cursor": {
          "ref": "f87d2a11-ff7d-49fc-ab7b-5a0bf41cbc2e",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9343dd26-3f6c-49ca-8c38-5f924da8915a"
        },
        "item": {
          "id": "ab8045ee-4803-4b1b-94d9-53cbfb6c1f82",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cf5c7be9-165b-4ae7-8490-a3c365dec52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae8bd85-181f-49c7-8941-1740cdab2b72",
        "cursor": {
          "ref": "18280625-e636-40c8-8949-854dade9df19",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "14b91715-0ee4-4938-92e6-21daffc6f76f"
        },
        "item": {
          "id": "aae8bd85-181f-49c7-8941-1740cdab2b72",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "65830135-ffa1-4403-9d04-55b1d52b4a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba5f46b-f6eb-4a88-b95b-31ff349200e4",
        "cursor": {
          "ref": "75b43e92-cd79-4205-838e-1b382c7c43ab",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "933b0ce4-2c42-4b2c-bfa6-3d4f098d6926"
        },
        "item": {
          "id": "9ba5f46b-f6eb-4a88-b95b-31ff349200e4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "92cddd75-6206-403a-833f-0cd3a40b47ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80e87db-f5d0-49d9-b5c4-fbe13fc7e752",
        "cursor": {
          "ref": "51e87b19-1be6-4c9b-b674-a76dc972e8e0",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1deadc3b-45d6-46ec-8405-84db6862fc6f"
        },
        "item": {
          "id": "f80e87db-f5d0-49d9-b5c4-fbe13fc7e752",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "be387a90-17c3-4309-949d-6e93d6d255e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23311ba1-6de7-491f-a0b2-a6f8c3fcbf47",
        "cursor": {
          "ref": "72a88082-d18e-4a4c-937c-bd79e13fc761",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e7518377-8c70-48d8-b8c7-844648c37a2d"
        },
        "item": {
          "id": "23311ba1-6de7-491f-a0b2-a6f8c3fcbf47",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9ac252eb-817b-4131-a754-3224cc8ecab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267319f9-7211-480d-aeb8-8d2137bea64f",
        "cursor": {
          "ref": "30bd36a2-713c-4ebd-af32-06ad7c08433b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "33ece575-9540-481e-975a-60459d16c390"
        },
        "item": {
          "id": "267319f9-7211-480d-aeb8-8d2137bea64f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9894c5dc-40f3-4c7b-9bfe-a69eb9b22584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b281698-8b16-4b2d-a19d-c8afb1286d79",
        "cursor": {
          "ref": "ce88a9c3-5e3a-44b4-9f06-b1a0169a245d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f0a672fd-88e3-46c9-b328-38d8eefaa96f"
        },
        "item": {
          "id": "8b281698-8b16-4b2d-a19d-c8afb1286d79",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3754a725-12b9-4b6b-b9b0-2b835fdf6b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0721a79-bf11-434b-97ac-37b1e527d5fe",
        "cursor": {
          "ref": "79f11893-3c75-48e6-829e-717743e2abb7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "71434355-bc79-4947-9ee0-3ac666c1b779"
        },
        "item": {
          "id": "d0721a79-bf11-434b-97ac-37b1e527d5fe",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f62008eb-3e64-4fbc-9092-99c822d27373",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25c234a-978c-419c-95d3-c4201098f608",
        "cursor": {
          "ref": "476e01fb-9d58-48b0-bc08-1821f4e39030",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c6a6b8ad-0cdc-40b7-93b1-e8fbd617a623"
        },
        "item": {
          "id": "a25c234a-978c-419c-95d3-c4201098f608",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9a996ecd-6342-4f12-9dd2-c1ac8a8d623b",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6a3002-931e-472a-9a62-3e110080d966",
        "cursor": {
          "ref": "84ef15f6-b1fb-4686-9b7a-e1ff4a65496a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c8fc9891-9de7-4667-9ead-0361167e6ffb"
        },
        "item": {
          "id": "fd6a3002-931e-472a-9a62-3e110080d966",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a4b54fb4-d1a6-4617-a7d6-3ffc77396589",
          "status": "OK",
          "code": 200,
          "responseTime": 3356,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "28afcf90-aaa2-4942-b64d-a1be5df4eade",
        "cursor": {
          "ref": "e6c1c54c-a5a0-40fd-9afd-163bd121fd30",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aa0a0782-ea49-4272-8b91-d0842207428b"
        },
        "item": {
          "id": "28afcf90-aaa2-4942-b64d-a1be5df4eade",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f0a29c9b-2e1c-4e91-ab50-06350e48cc44",
          "status": "OK",
          "code": 200,
          "responseTime": 2968,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f96085f-6a14-47a8-ab9a-d013761692a6",
        "cursor": {
          "ref": "ea6ebb49-0f78-467f-a94e-b6d715fb8012",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "43f13d81-9fe0-4c46-8bb5-946d52073f13"
        },
        "item": {
          "id": "6f96085f-6a14-47a8-ab9a-d013761692a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb25794a-c5f9-4b62-8447-a0844c2ca775",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f96085f-6a14-47a8-ab9a-d013761692a6",
        "cursor": {
          "ref": "ea6ebb49-0f78-467f-a94e-b6d715fb8012",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "43f13d81-9fe0-4c46-8bb5-946d52073f13"
        },
        "item": {
          "id": "6f96085f-6a14-47a8-ab9a-d013761692a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb25794a-c5f9-4b62-8447-a0844c2ca775",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c349636-ebf2-4681-8e91-72c36ba393d3",
        "cursor": {
          "ref": "21b07b8c-ec11-4ac6-a9a8-c9672adbbe62",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8082ccc0-3d89-45f3-b2aa-12879983080a"
        },
        "item": {
          "id": "2c349636-ebf2-4681-8e91-72c36ba393d3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "24b21c6d-0ab6-4325-9d45-810e77842182",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d977a1-8005-49bc-b18d-355066c791b6",
        "cursor": {
          "ref": "8f98818c-4c7b-4b40-8faf-ecc9b43e8a5f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "00296bef-19db-439c-a763-80d6716b2c2f"
        },
        "item": {
          "id": "29d977a1-8005-49bc-b18d-355066c791b6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "28802051-c817-4799-8cb8-f8953b58d5bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}