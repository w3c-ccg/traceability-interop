{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4bee53ff-b17a-408d-90e1-cbc1bdfbb542",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ab24f2d7-d034-42c9-aa32-f3de938e788f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4e85162-26df-41d6-9eaa-a21729b81ca5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e6ddb3da-f878-46fc-80e5-4ce0a15b2d02"
                }
              }
            ]
          },
          {
            "id": "1e04ba1b-4205-4967-aa50-0ee35f5ba1fa",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3850e36-6aea-400c-b847-cfb8b619cbf0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "acbc456a-d3f1-4052-ab0a-51bbef6d3f1c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "47383c6a-d5f4-456f-9fba-03e4e0ca1170",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e4ddebec-3454-4c0f-8ad3-203fe367e267",
            "name": "Positive Testing",
            "item": [
              {
                "id": "262a2e84-2da6-4a91-8042-e34fb1321a0c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5a33beb-c365-49a4-9d50-4b44d5f71e9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e93c71a-8f96-4320-97bc-a2dcbe71bbb8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c717fccb-3dca-425c-85c2-07faf053ac16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49ee5fb2-f53f-4ce5-826a-6ecb17828db7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ae082d67-7a6e-495c-b236-fba2a4995e83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d808030a-40bc-41fe-b4b8-698d0a133c4e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34388c91-6566-4bff-a9fb-ea2f2498bc47",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "661f6a50-e8b3-476d-8fae-da780fda12d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b43d68e-d6e9-48a2-b989-5fc12edf0d29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ca86a7d-25ad-4be1-92b5-12a0fb568894"
            }
          }
        ]
      },
      {
        "id": "50e1a065-26bf-4592-87c3-c783c49d5c54",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f71f944b-91ad-4fa4-8ba5-7451c60be1ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "042eeec6-af60-432a-b857-014001edc942",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "af6be1a6-6a88-44b2-bab7-c214fe61f7f2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a273487-f2e6-4be1-ab00-976e6d69a513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f721ab03-9575-4981-aba6-a9369a2ddfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8315efa4-0873-4bf6-bbc8-a6b675bb622f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8e8217-f464-4856-be71-127e98540309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb1ef880-38fc-4ca0-ada5-7e417e15822b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d85040-ccd6-4496-88a4-efa285a15e7c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247364f5-e31e-4355-b4b5-07271b8af70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f329aad-6f54-4391-b1e1-7b753d6de179"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22ade1bc-ba82-4a08-a601-b0793f9aba73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e41473f-e3d9-4063-b891-5fef134f1244",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f72ece6-26fd-4ec2-8fb1-0d4de874f32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "968ed4fc-d206-4de1-92a0-4856fbbdfb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab81abc5-4456-4f79-82f9-dd3ac4f3ba12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580be983-a9a3-432e-ba0a-d544a37df8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89476e8-f757-45c8-b527-a70867ee53b7",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334d1c54-c6b4-485b-a20e-9435ab249323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42d61fcb-fc15-4c34-bf2e-80a9b83e0009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0683c9-9d78-4028-8b8e-337899790fc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "bf1587c4-4716-4e29-855e-0e9d809bdf14"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6f31c13d-6d34-4eb2-985e-9d1835dd9b51",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43b4aa03-efb3-4ae6-b936-89a16eb7bf72",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d732edb-b3ad-4844-83fc-1d2e6cea4dbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "893fad21-f76d-43de-bbf7-3c91765f31c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4be0aa73-d04f-4f7f-a727-44fdf316d37c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8572494e-94b4-4324-8ca7-34c7054b293e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0074bc6b-e478-4582-a920-957ef79fdc61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0deb91e-31b1-400f-8bfd-07a233fb20e2"
            }
          }
        ]
      },
      {
        "id": "0838ca33-e2c7-4325-bee3-05c477c2cb3b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3b56c69f-53c3-42e0-bca9-d77422f9b056",
            "name": "Negative Testing",
            "item": [
              {
                "id": "286dfa25-1b58-4029-8649-b2391f3a8dff",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7115cd9a-ba14-4bf8-9a91-343c2f4ae2a2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5bf66b-9d63-4f43-9538-26f517b9f9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6337ea1f-cefe-4994-8200-3c3714f2152c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ee0096-f970-405d-8c50-348cb19f32e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2acc6549-af4f-4232-b892-5adf6f3eddd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3ff51d-4022-43d4-93ef-58e902e7c696",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4eee8b6-deda-43ff-8abb-20f9f999d7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdee222-79c2-4754-900b-218613b1811c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1be721b-1ba8-4653-af0a-3d74cec58f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "672f680d-0085-49c2-b048-341bd3d101c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691315ba-c579-4222-b2ef-e9acc4b37f09",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966dd078-650d-41dd-af8f-057336ba76d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e6e750-e401-4697-a183-50a5f3772957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40f2621-a2bd-4490-a06d-3e5fe61f26a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abfbc9ef-098f-4859-8c6e-7b01c936c7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998008bc-8242-4b28-b820-a0dae5bdcc49",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21cef3d-8872-4725-ab64-dde6448bba98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3757066c-2768-42a7-962c-de73870a3b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62170ef0-995f-4d4a-b026-b6c4728567de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2540b533-5007-40b2-a88d-26e1b9761b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b42538e-256a-46ac-88e0-0fa3bc078946",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e936749b-5fa3-4050-93e2-d3209f765270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74c05db-b0c3-43df-bd84-158e4d2e2516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6b0155-b11e-473d-b6ee-cd4c9a34c1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be882b95-9d7f-4c2b-bb48-f3d168d21d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ff7c23-bb21-4642-a291-0717139871c5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc60e9d2-6370-4da9-9cd7-205d4a5f4994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbcaaa9-b7d8-4b16-83de-7e6318bc9ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853f559e-defe-41e1-b078-f382fade39c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ac87d88-974f-4754-9ec1-afe4c89a8a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4096d6-2778-4610-8448-971b046b240a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf304ab-9635-4f45-a5a9-df1f49d10b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcfe860-94d5-4fb5-9945-07824b07947e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ff3b5c-0af5-433c-913d-f21d126a76c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5f8e1d7-8412-464a-9f77-a29f49748dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a85cf6-1fb1-4d7d-920e-37211ef1fbdd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961f4ae2-0317-4988-bbad-3e2714317964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539e3a50-8007-4440-a644-98ef73349b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef055ce-7e63-4d3c-97f2-ddb49bff49ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0651a52e-3eae-4df4-bc60-e2ff0b3eb1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f6fa00-9c81-43d5-b03d-84e10cdf570b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb2059f-a664-4b84-8b2f-3f6c21e48e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba40a62a-f5ca-44d4-858d-05ccd9333ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f5d9a4-3a3b-4dd9-b387-1ab70dfcb89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09b2bf7f-92b1-418b-9b6c-c8e37d668da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3139652a-1c5f-4794-b23a-30eee54100fe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc6d0a8-fff9-4d51-8c14-c95c81ca3467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff3d75b-1b33-41f4-9871-79277ed96ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e870972-edae-469f-a15b-d09e5ffbb8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6d0e47d-48ab-4498-809b-cfcf8f52c5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9776a8a3-b2e0-403e-aa1a-1d311d8261f1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29efc706-8adc-4100-a14c-76b8dff78246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0472cbe4-3d7a-4c19-b7d3-0e90cc75487a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92db4b22-0786-4625-9e47-b3a1d18b17d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "942fbe10-2ff6-4949-b847-c63dd600efee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b785cd-2e55-4b76-aa22-256a267c5ece",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646ea403-6cac-43eb-88e1-331bfa9c50f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fa096d-97bc-467a-85cb-cdbf748f2b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2639ef3-b78f-4026-a79a-2999a9ec6e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82693de0-9c99-42a3-9905-029d5d3a90ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab813312-796a-4d53-8c12-d39cb4b98b20",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf89300-09e3-4349-bc2f-9bef0c7363d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ead948-14b8-425d-92e9-23d8562df970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12d93ac-38d2-4202-990b-34e2cbb20d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "e644b4a7-27c8-42f3-8bb1-7c6139530005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e9dd16-3eae-4524-b8b2-ccbbff0c7806",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5ddbe7-8efe-4f60-bcf7-f8701157b0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba28d10-acce-4952-8286-e99fc71bb536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32864dc6-ad12-42d7-89ba-10a247378130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78347a31-e0ab-4952-8fa6-07afa5260b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75872821-4dc0-41a5-8bf9-1ca09b30565f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca262f4-d6b0-4bc0-a1fa-5e3c3d5c4880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b39bf76-e40a-4b0e-93c4-80c397f0864e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f004852-3181-4fc8-9b1f-6df7bb4f7dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77b32ed1-5e2d-4d7c-a0e9-70439c78aab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f669ec6-4b27-4c53-b54e-f6bc47bcb54d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b732d6e1-97a5-4d06-8c4c-3c56670ee7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7a68ce-eb4d-4a54-b53b-940c587ca746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6920ed70-d5ed-49a0-9a0e-87c440b26a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0277aa94-22a9-445d-812c-38e8dabcd528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879d263e-e892-43e1-b5d2-e6f48ee57dc6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a81d263-3505-4e99-9d58-4802ee4298b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984b1754-662d-4ad7-9055-30996feacf02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86374455-a284-4355-9a23-7bc56a105eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a0bedbe-f836-4e5c-88bd-948beded4c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a39ec6-1934-4ec4-9523-8675a06083a7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4531bd14-e701-426e-b572-a3083eb4e62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfbe0d7-699c-47bb-a6be-3f4af1b59ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409c5c0a-e1a8-4e4b-9c80-d61a07d26bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f23d8b3-8897-4164-86a7-e8779d3aab43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4920f521-40bc-487a-ba8c-a6b74962b7c6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3c563f-51e6-418e-b46a-6699b65f5168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf16ae0-da68-450f-abd4-2d9571324ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317dacc0-e1e9-43a7-9ba0-11ab8148c2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9072c0b-7b6d-4c96-9d20-24dd35a03fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbb482d-3074-4d3c-90e2-eeb7248b8b9e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74988e6d-4868-4106-9fed-01c8557665f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ffd309-fefb-435c-a37f-54150905dc1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663ef69b-efbd-48f6-ae5b-69a032b61e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b066913a-c5d3-4453-bce0-163e16c6f23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41e347e-0be6-4245-bb0a-d6cf55d7bb48",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775fcee7-dca2-4705-ba92-5bd75136e6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf7f678-f908-48aa-bc14-d51248f32ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb3d97a-a8f6-48c3-96fb-8bc2ee2f1177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa131d6-88be-408c-9ad3-f4d672b98734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b2697f-e833-4a1d-bae0-3b439819e169",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10862ae6-a62a-48c3-aa1a-f777ef7ada0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb658ace-b339-478d-aec6-da2fc70f2ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7842e55b-2798-4c15-bedb-d39aedca2d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0093527-e790-4d9b-b700-bf0cfecdc393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3183f63-d05e-4519-81f5-8610989b3a3a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c968b2a-2413-4e36-a237-3593c3c0221d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac40701-7ec7-4b6e-bd5b-8d71da9c4b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c88f456-ecde-44af-8fd3-6cb185c024f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb92c3ab-43bc-4920-ac85-46b91d26f7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6629639d-c9a7-4ee9-824b-71c06226fbe0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42e6bbf-e36e-417c-bbfb-f70ce3dd12bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72ce004-08a5-4d9c-86a9-ee6279fedff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e330dd-d4c5-4336-b50a-9a853db0bce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad398bb9-5da0-4042-bc40-6d9ca053a36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff010d9d-40ff-46ea-96d7-8e23e5186682",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab92247-7a3e-4eb8-8b45-4dfc4bca789a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa2f0cc-a6e7-4d61-87cf-dacb9ace02fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d839bda-2870-4f1c-8651-81492f861d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a5ec51-5ae7-469d-bf9b-2be2d2316cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e93976-5744-4cc6-b4db-8c2d54fa858c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3d1c5a-9bad-4bad-ab7e-78c506d2211f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50514a1f-a152-4d58-b51b-196830b058f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae16a62d-e120-411e-8b85-78870c136bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4aa4a1-166b-4031-816f-0945659faf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2743f0ff-366e-42c8-be33-40db9bd89bde",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ef6500-56a6-4be2-ac89-a91ace1d4369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240be19d-1e2f-4152-b562-2f7894c5875c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ecbbaa-53d9-4a29-97ff-b10e65285d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "844325d6-d35f-42f1-bccb-57fe317f1347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6164f2eb-bd3d-427a-af55-4207f2635192",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db68a69-cfad-45d9-b0ac-ce3fa75b4a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1053b39c-ae19-4895-a981-b52e59577940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a649e52-9c1e-48e6-9967-567ebd1fc24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d67b5a9-aada-4496-9e5d-c2d813e9aa86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2890e8-5f49-44c2-a059-e2f52617f4ef",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e152016f-7c85-4bdf-a51f-8dcaf0fe12db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d414744-c650-424a-a695-47ffcffa213b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6904b11-8c7a-4112-992a-657a2a5e8a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e70a66-9fcc-4780-bbd4-581877615d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41486f4-e0b4-4c17-abc3-d11c6c0cd016",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e375f07-799f-45b5-8a2d-fac5bc79d458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ca7275-e340-4123-936c-59a6f613d076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604b5bd0-2547-4459-9a20-6b85b901b986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "758a6143-9684-44de-a62e-27198f342e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd04bcd-6f9e-4984-8d25-4d3eb6491e54",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407bae16-5fc7-4864-b3e7-ca199ae0e04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9960903d-731e-4b66-8ac1-c1eb1fa369a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409620b1-d4b8-4f71-bb06-f5373bb3d4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe86951-4f9f-4e9a-be2d-7354563d256a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d467a4e-4ecf-4dfb-a761-b9325b1f7988",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f78f047-40c0-434f-b871-20869746cbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3dfddc6-7018-4d31-99a9-63daa4728b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cca5d49-db88-4b31-961e-212d7c23a9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74b724c7-9838-419d-a8f0-b18a85f2ff4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9ab4b2-b136-4cdd-876e-d689de1a1775",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217fb5e8-43e4-41d7-b39c-cda413bc3ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab94659-6e86-4a07-8739-43214bac0a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef0e149-c7ee-42b0-8c2b-0f8088c5ef51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47bbfa94-f2a7-4917-91ae-328024f9ec69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1a6b37-27d5-4f32-92d3-45da0f4a35f6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8b338e-f1ba-4f7f-a557-5dc134a43078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494ee209-a4df-4038-ab9c-ac6d07d61f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c215fa4d-8d59-4328-a2c4-b8847a94b362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82405c57-f67b-4dd9-bde2-678c120cabee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69f47a4-c6e4-47a2-97e9-605ea8499899",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95ccb67-71c6-4d97-8d09-efb6a07a0de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e1f602-a97e-4db5-aa81-cf67a1c4d37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e9bc00-1a80-42c1-9bbe-c72e7ed3fcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed429386-c63f-4057-8c7e-ad1d98913aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34319352-f167-48d7-a058-91dbc158fba1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a3d6fe-8099-4fe0-8b9b-44657228c8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665dcef0-41fc-45b0-9897-699e8c3e5124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6e7cbd-6d7a-4c65-814f-f72f67ac2425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf08545-c82f-4e70-9627-27c514b90e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6664b6-0aea-4b26-82a8-a48c9159584f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536eee0d-33d0-498e-91f4-06c7f032937e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb15590b-4c17-4f45-bb07-135a1ae126a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6e6fb0-85fe-4a40-9668-d68cda7efb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4431996d-7c10-4824-85d2-58840a3e39da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18793d8c-2180-43f4-8f60-837e5e983b12",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87bfbef-cde7-4552-a4b7-cae6069a66d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8faa3389-b706-46e2-8c40-ad2ddbcd66e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b1ceb9-ab93-4e35-9b9b-f32b5e12491f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed837db9-0898-4971-ad9b-0515aee7b301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be35173b-4cf3-4f38-8b92-c379df92ae3f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1dfc87-2f24-4e35-abac-a8524751d04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eeca952-80bc-4a54-98bb-8fcf785c31d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9c2a83-9db8-4306-b1fc-6c23822212f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e05c09d-177d-4d57-83bb-0f1928e3723f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca538e3-fe66-4523-b7e4-dd7fc548e004",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84332021-e883-4972-af73-2a7943723d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bff64a1-3fd2-49ea-941f-842e2eba6aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af3352a-4596-43ce-ba5d-11b34ee4e61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "550f1aa6-b5fe-4334-a4df-5598bbb8dc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08b8251-65ab-442b-b5bd-39d650381ab8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d88c80-ee52-4472-9e6c-01c9a5a0cd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300efd2b-5e1c-41e7-ab19-50f4b082621f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93cff13-73a5-44d5-9175-325fa1af5ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9908c491-aa67-41ed-a753-94346eb386d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ad8f98-6af7-4245-aad1-bf3368ab789a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c42c754-2a1f-4bd2-b2ee-a759aa42ce38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3408396e-e2d1-4074-a4cf-ee48d053a10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df5375c-8594-4a51-8a45-7f12c617a8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df14b22c-6cbe-4870-b0f1-637d8127066f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323f6731-a13d-4c94-be66-921dd946dfd1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323d4873-8dfe-402e-a63a-849b0f1db2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c789285e-effd-4fe8-98f7-007ff3847057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4f9635-1a32-4c94-a5e9-44b72a8a3b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d32fa043-50ee-43a8-ba51-56915678fcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b494c8-9b87-427d-8307-4c7c32e60589",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1683018-b2ac-4c57-96dd-990cc64ce440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e90596-0c1f-4aad-9a57-027c3d9afbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9690d7ed-1e91-44ed-885b-bef6d311c248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd067ee-1955-4f79-b1ce-af6f49359f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fef916-0793-4228-a3b3-3053121e2eb7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289aa6da-d5ec-4fa7-95ef-7bbfab68e0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9575afb2-77d6-4238-ad60-967daa600328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e250071-f451-497d-add9-9f89a53835a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9b0013-bc99-4ac8-a8d0-d72001d67309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e31cd2-4981-4118-be01-c83c38d84356",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff47f97e-1fd8-4989-8b2e-74e325fdbe16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff6f445-f137-48fd-b24a-8f29f3690d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cecb14-b8c6-470f-9010-eec52ad68119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "595ee53c-320b-4d5e-8232-8d364176085c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ec8c2f-e0fc-443e-bccf-28651eb2be7b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4911081f-4cc7-4f75-9d27-b73a4247c0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba096d6-a0ac-4752-a0d5-a15ff0d36c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dafbb4a-5e06-483a-a2d6-32d72f133e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cca5938-dbac-40eb-a3e8-9e1a68b842bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605b3f63-9d12-49f4-850f-2d3c96c112d2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cf148c-03bb-4bd6-a5ca-9b00866a50b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856dc13a-5620-45c6-89f3-5e369c1e78b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1e1198-9dd1-49ea-8600-6c68680b92bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8235685e-a746-46f7-ac1b-71c6766dc106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a5c886-d84a-4388-936f-7d395c447278",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec1a823-b69a-4c13-8fe3-ff716e3cf163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba0c0cd-3b57-46cc-8353-41b932af4597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5686e39d-4bda-499d-948e-99e4a1342fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bb63b9-10d3-49ab-9b01-72c91c7e2374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f8b167-09aa-4469-ad07-f69cfdd52d3e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f313af7-bcfc-4559-96fd-57b0f713c769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d209d06-796f-423d-978e-99f4b67001a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a3250a-076b-4188-9783-1395cd466e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a59b8825-a213-4e99-b59f-2b541b58ffaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1168449d-ecd9-4e6e-9686-cb2aa73e08d0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ae046f-d487-4b15-b8b4-a8948c431ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68794eb-5778-4320-a0fa-95904f4ec4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d250fcc-2203-4d4f-8ebd-7b0166657ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "571fc2a5-0557-4f4d-b3c3-b72efce39e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cbf72d-2c6d-4516-903f-c84bde233ea3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbfd35f-bf05-4235-902a-71a24c414740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82892bfa-35f2-487b-a5d4-f74941ed6e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263fe21b-404e-432b-9710-4c482d8ac95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "76e6418d-5210-4261-90cd-152506eb3c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2bb002-1b94-4f5d-bfb7-480be7acb173",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6da00b3-97c4-465c-ae37-9289dce4145e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e657084f-9e12-45bf-ac54-128afe70463f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f387ecd9-ae05-426c-9570-37a796f9e158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24005e42-00b1-4d3d-ba4a-304f9df2fe2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833dd78a-9bd7-4433-b59f-582eec70b7df",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96a442c-a090-4114-9fbb-3c6f2991ccfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00950107-ad06-49df-8112-a89dc7c20825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44262a9-fc2a-4085-97a3-216686301188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e5dd7a-047b-43c6-9d4c-1dc655331dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b274efe-8e23-40b6-a9c2-1b541851b1e5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f7369f-cc85-43fa-a714-26da878561e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507c8cb3-1609-4ac9-8833-0153b75c5463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e3a928-043e-42e1-b78b-2c404084c227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1cfe92-ae7b-4e6c-8021-2803c6e4582a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fc239c-bb6f-4a16-b777-32aef94263c6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12c20a7-ea41-48aa-a392-1b73dfe247b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce82f97-d2aa-48d1-9f38-702d7210be34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268439cc-0a46-4e1d-94cc-7d8f5fd92736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "632067fa-f99b-43a4-bc35-58cc2913ce19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a750ce3-8c65-4d91-aa78-202d4ced90bd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6fc17e-e9fc-4011-8413-26f44de88fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4f45b7-9375-4cd9-ac1f-b8f5729ad98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a271b66-8b48-41a0-b0a9-1425f76f445c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3c91452c-376e-453b-bb83-aea546ef4f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df35ff9-9ce1-475d-bd91-afdafb345135",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195c4da7-2035-4283-ab7b-e22f306e6e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b5b2e8-564c-412f-ad72-017b3f83d6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad5313a-146f-4f1c-a463-f296b267e5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e59eaa0-1fef-4c54-b181-9e3cfed305e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5042fdfd-11d6-4db7-a34a-c2500cbff53b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250c12ef-0200-4498-bf54-eaaf5d76b20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3703fb-79de-47b1-be67-0a1e92ed0e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6420743a-deb8-4d9a-b6ab-4f55077a805f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "68189da4-0d9b-415b-941f-6b9913e5a78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7afcafc-9dda-45c7-82f0-41ba451bb53b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9504cb57-6b2c-495a-8400-2b12e5a6d656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634f2146-438b-498a-a491-a9f83873044f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f8c7a5-1ae1-4ea8-9066-3d6e341a926c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7e0278-abda-4ebb-8402-0cfaedab6e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407798d7-049a-4a0a-b376-afc8941d8c9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4205676d-1b7c-4d8c-8fa0-7284668c3f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4307b5f-690a-4ecb-ab20-12d76cd3da99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdec240-6922-4793-8020-ba7a6ced8426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6edfb3-6ef8-4b67-a467-93a80242d993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4481cd7-b1b5-49cb-b7d5-825a8088868f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a947c0-77f2-4b33-bfa3-e09b666f91fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5af4a1-839d-4c33-a4bd-138b1ba3e92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75168ad-676e-4b9c-9b34-3a648ce049bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "54833bc9-5197-4da1-ac05-49009e6579a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4795e69e-a5f7-4595-aa23-c7a467deeb9a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeff5e33-8a8a-41fb-a69e-130d7b14a1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1e559d-5899-472e-9a42-e20796edafb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff375d7-c54c-44ff-b681-b514f6be97b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e41eca57-a6d3-44c9-ab9e-b69d74552ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e518f0ea-f09f-46f9-a73f-19c3d969be79",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463d85a4-a9ee-4e34-bc00-acd6b30b409c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251e5aa3-8ac0-4185-83c3-fbbad4c0921b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd5c0c2-0f18-4f77-a86b-ac308c040539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2b33b8-5691-4162-923c-1a8ba7de481a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769e0ae4-9df0-4aad-a58a-6bf2d50f27d8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18861544-4eab-4bf7-980f-d63936f2f215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4ce702-a319-4156-a945-885798ddebda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb20449-c064-4a2a-a197-e170994087c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54be2aca-c20f-44bd-96f7-7ed038df305d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97468324-e7f6-4204-8fdb-877ca2c05720",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5743790-1407-4ec3-957b-33cb0fda6e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f341ae42-e0f7-4156-869e-20e951947033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dcea94-f7c0-4be4-a99f-603cf35bdb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2dcbb9-1913-417c-ae53-1d4ce71a0d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886a439a-5f4e-46a3-ba7e-80bd8ade14aa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef4eac0-5f43-4dad-87c9-59db97712da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe27031-cb21-4fd8-b6e8-77820a2e42a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0bf51b-c15b-46c7-91c1-292a79d693d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81578379-e543-4190-9c83-c7e1cc3226b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec9bb35-7d06-48c1-8da7-45aeef7754dd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f0513e-0369-49d5-9fa4-480c6501ed67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8847c2-9ec9-4448-9ffb-7979a74b233e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4c7016-b3eb-4aa5-9f88-204a1214467f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22bf8a2c-9137-4096-beb9-c7fde9b767bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ab9f5f-1a41-4e80-bb12-c263d7bf8ef4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b48c9ec-4305-47e7-9dd0-49f7641a4f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de4d657-ba16-4d13-9b06-77c5723fda77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc40efb-898b-43a1-9d9e-bef55740691c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f525f2-7814-4528-9221-bb66df3938e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80be3fb-a900-4c3b-89cd-6d9a9364d0ed",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e115073-7ce9-4f56-ba80-fa62183f4f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864f297f-edbe-4433-87c5-86a00ee03c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7706d394-4f6d-4248-9de7-d2911c6833cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c3f4a5-8995-4d2a-8024-9945b425d38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774fc1a6-ade8-4c98-9ffe-6ff7d8e9ec65",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c28ca60-f30f-4e1c-a35b-c4a06a934640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d71e5c8-0cf6-439c-87a5-5b3bd7ed068e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e87c8b7-8da4-4b8f-a36d-7a138816b5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e175c43f-441b-49d0-b0e8-2b1fb6fe78a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76e8e6d-b1b7-4575-b8d0-702dbc7bee70",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d8607f-b26b-477b-bd78-b49c3f8cb3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b514606b-3f66-44c0-bbfe-785922903d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ca0b81-d11c-4721-8e93-f46ba9c85d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "498a9365-43bc-463f-80ce-fc3f9dcdaf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89007d31-0355-42bd-9bd6-398892dbc7aa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094256a3-6329-406d-b5c6-69593967993a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb99973-7b1f-4748-9716-e0551e3b8df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8980015-fd4f-429e-8672-ff33372949e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abf094c4-c5b9-4751-a10b-b736374a1294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2efc863-8bca-4542-be18-e6a926e59579",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06bf436-0c0e-4c92-a8ee-af26f323d5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7735aa-91a1-4afc-ba38-c877f79c0732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a800e80-cf6b-4c78-a63f-9bcf247f8969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3e0d26-f44e-4c72-b8cc-7785c6ae31e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5f22ed-18e0-4326-b1af-a6496179c9f0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145f37ad-bc68-49d0-b3b2-94c15ce2fd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec295e9d-7ea1-429f-89fb-f64258e636f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37ea0a3-a6ad-4791-aeb7-9bc58a1cd9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08a5203a-9078-4bfd-b4e8-7b5df4f2470a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab303df-6988-4392-b8e7-3a8c9dccbe75",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d40062c-6dff-4bd1-a44b-c245ecac5e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537f8c5c-38bb-4618-93ee-65b0de30e62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88058f7-38aa-4e8a-9b4b-b43c04501af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea8014c-6946-4dc9-8bbd-0a083f0d395b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7d974b-8bf7-43aa-a47a-166688b3bef5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e206fed-6e86-4532-aa8f-6966bf8327e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1f75c3-7b3e-4d5d-b2c3-fe8c728c36fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee13158b-b75b-4b51-aecd-bb361945d81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cad4e4-ff50-4e17-ac49-af77af7fd3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb429a1-7421-4902-8ea9-24aca199756b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acbb9b6-0344-4853-8a2c-bfe8a90889ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db643e57-1313-4a6b-a653-bb44e75e9437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a53b268-006f-4e49-bc4a-c30da458602d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87249a2-0ccc-48aa-bbd1-7f4f821aeeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b080fc0f-dce0-44c0-b95c-d2a0953135c1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2a97ff-bd26-4f59-9054-a3da8a7d07a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ef8541-3efc-42cd-b438-c58d290a7f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332eacb6-2a43-4c02-a651-87eff8c1d2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "964574b1-3d39-4257-beab-7adcd5033ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6621fa00-1d30-49fc-a217-12bc371087ab",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c0e567-992a-4f1b-8bea-c5e79b56618b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b56a4b0-0d29-414e-b830-6aee4e0722fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1f955a-6fa9-4d75-85bf-1ffb5f8af800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e720f833-d9fd-486e-9b4f-524eb42c0ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b359344-324d-452e-a696-990d8abffba1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32796525-6dd1-4221-914e-74dde0167e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67b4c4d-0e7f-4e55-8370-4dba6618519d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddd1e5f-ca69-4edb-bf63-980a77fe1464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c74e1155-28c7-4c69-b024-3d034a1864e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9e863e-74a0-4da5-ad0e-5e6f92364854",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2898b8f-a6bc-4049-aa01-206f2cee1f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc07d586-30b0-4423-889d-9739262192cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4325aba4-4e1d-4ec3-8e8f-28bd51ba59f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7492162f-ef73-45c8-a2e5-514bcb6be755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed925926-e2a1-4a1e-8f3f-360c6a400b11",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5885ba-d81e-4f6b-80b5-7618ade35585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c35012-5cc0-4823-ba72-aa4fe9b65753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ce6d28-8f45-4c74-a34a-4f26e915a715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbf62f8-4475-449f-b0ee-361125a82bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce03c53-df67-4edb-83a5-c51a3996a103",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2ac69f-3661-4a88-b771-96098850c26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b003811b-8196-4761-9d66-765257f3ab5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4976fb-d39c-40be-a7aa-b842762fcbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d81dce6-6326-4f84-ae4e-e1163524497a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a8a121-5921-46e3-bef5-1fe956539baa",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc029f5d-850f-45ea-b0ce-fd965fbd3e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9386b084-5b9d-4895-9e39-44ab1c915aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529e08e5-0236-40af-80ea-cfa01ebe75cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6075d3-c324-4a34-9edc-de913b3d7eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb054a40-9f70-4888-9d62-7d5bf3164125",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb06320-6df8-4033-ab02-78480d537859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f86353-e15d-478a-9ff4-3e471d5acdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8f0bb6-3023-476e-85f4-090ad9c077e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be3da709-e014-44f9-a683-a63a935ecbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbab9a8-8899-44f2-9a9b-1a02074db7a4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd98625-54a6-4197-94e4-2f34951bded7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1714d1d-f1b8-4a49-b667-dcc9652b6e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a71ab64-2703-4d23-9e0a-631152646b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7300445e-f5d6-4e36-970d-7a96fba6ac94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad44a73-f224-4815-8ace-5669e65b4a1a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499cd248-8145-4eae-b30a-677a6f02bfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cc48af-af27-49c6-8d42-5a4ffc89ba62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e84252-b9b0-4669-9fe5-01fe86703d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca22d249-4f79-481f-933a-b55d20d2b921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d457b2-f14c-49ba-9c1f-612f51fb4b0c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b948973f-5e05-4e16-8ac1-2022daf31ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a525ff-a75a-4886-aa34-7c6927ac718e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3bbcef-de7e-4f05-9616-07f981dc58ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a91c7f5d-65a0-47c5-ab9d-a353e49d27e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10148b3f-9d94-4a08-83ba-d517730213b7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1c9ec1-8d5e-41d3-be82-93f72efe7ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7224da-0974-4f1c-8bad-f4a1ee1a2bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202b465e-0603-4e32-9b04-40b457c0c647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af6a18f-0120-46ea-99c0-cc7cf84e2b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbdda8f-a068-40d9-bff2-aab6b3675687",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa4622c-0148-4810-9136-19e7ebc58ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fd95ad-f462-417c-a094-9bda0b9306bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459ee566-9d3a-427c-858d-fe57b55a9e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "40f49ece-f46d-4a98-9c9c-7dd63f928e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aefe6e3-f0f8-4946-b8a0-20c8a062fdf3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36b26f9-24e1-45b5-9c56-6a1c9ff7dcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaab3016-b169-4915-be16-8f1e21e876df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf099be-a19f-4174-aa53-c2f5a17dd53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "90525c9d-507f-4ae2-9ea5-77074aeb5eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33595ff6-4e4c-4ac8-b6b5-d1194098dd76",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f7c0fd-f753-45a2-a54d-bb02200343e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b6d8d861-4c46-4340-b3ee-6ce40af38b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0095fc-bd44-4762-8c94-423b3464ccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9b88c6-8789-4352-91d9-e8a777fe1614"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12a4c1dc-ba18-42ab-a0cc-a72ded53b429",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "696c008c-77a7-47f9-bc49-2c9d011f1c49",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a225b510-8d54-42ad-ae25-d56d26bc2f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4040beff-45a2-4da6-8ed7-7ce7d48369fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8538d9-db7a-4c04-88af-5cbedba4c0bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "5d203f1d-05dc-4a50-8c41-fd99f6a7a992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9841a289-3054-4f10-9fd4-4e12608f5e82",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb7a992-19e9-44b5-8ef3-0e41813b4df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0254e18-ed28-4709-9bcf-92a9f4bd52f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54949c63-934b-4f5e-9e98-b584c2ed82c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "052f1fc2-14e0-436b-9f2f-de7fca70cfa7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c086cc4-9057-4cb3-bb1e-aa17e87147af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2851e25-355c-4f5d-92ed-4b43761e8204"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9de9414-a527-4c9e-89ff-3a8f43534d68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cde75be4-28af-4303-b165-1683c75ff6b7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9bc552f1-fba0-41e8-acf0-9f6824b91988",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8f6f9b7-61db-4934-8841-cbd719736464"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09d97fe3-77ac-471a-8190-6e41a69d4df3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc85df23-3300-4986-b381-285659c5b8b5"
                }
              }
            ]
          },
          {
            "id": "b1556167-9878-4e76-92f0-e8bd0e6ee286",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec78e744-3575-4dcd-88ce-42af11ca227b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee4abcab-c0e6-4a20-bdcd-ec5f92ef17e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c2cffa6-b9e6-421f-8cdd-ab8534976f85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed766252-8efd-4fdc-b721-3d2d805ef4ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d09aa20d-8550-43eb-95a6-13b8a8cf7008"
                    }
                  }
                ]
              },
              {
                "id": "55d01418-e726-4647-965a-9b3136f50f5c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfae8d18-3dab-482f-b4f9-48c45ff00c7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3e52469-2a04-4533-be24-e246c2eacac9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c6519fe-84d2-4e50-9c18-b0243701aa7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6e155e7f-36c5-4bfc-9237-619673e45b92"
                    }
                  }
                ]
              },
              {
                "id": "88b34f2d-a2d0-48af-8dc4-dc64ae8e4305",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7162daf-7fa2-4a3a-9e78-1eb7069766f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c66d349-c3fa-4007-9d8b-d398bbfed976"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f08ae99-3537-48b4-8927-b6f3e27f4a5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b767b31c-00a2-49ee-9af7-f6d41a832a97"
                    }
                  }
                ]
              },
              {
                "id": "a9ea0657-ff4e-40af-bec6-50e65e465b45",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43e63852-a6c7-4ba5-96da-1830ffcae3c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da63ff74-e4d9-4ae1-a346-a731bc6b187a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87c2af1f-70bb-47d6-859b-5c69b232200b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "aa3a73dd-610a-4481-8626-28b7f777049f"
                    }
                  }
                ]
              },
              {
                "id": "e3b68b8d-0a73-4786-9621-2f10d31195d7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36436f1b-8e1d-49b6-8191-f12ab36029c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09e9bc5b-f173-4f49-91e6-d3e23d90fc9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be6cdf9b-3e38-492e-b975-3c3189e2f27f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f576d7d-efae-440e-95a0-2b7a799a3859"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dddae5fd-a73a-4612-a64a-d38ffefaae14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "471a25d5-1ab0-447e-83c7-c073921c1813"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "191895e4-39d4-428f-b450-0d436b69a637",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0d50dbd-886a-42ff-82db-6e3783cc94c9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8b34e41-dbdf-4835-b909-37a9c6d6dbc7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "261324d4-ec96-4ca6-880c-ea87a80a329d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1871a773-111f-4915-9e3c-ea4b6a45787e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5b8ea09-d663-43ea-9691-db904e016958"
            }
          }
        ]
      },
      {
        "id": "1521d4ec-f0f0-45c5-a8ee-91624ea8359b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d79ace8b-9718-4c36-b6b2-94dd7fcf1d34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "615353ea-99ac-4c3b-906b-facb67fa7551",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "176e9218-1eec-4f6e-9a1e-68311d72da04",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978d8b70-26fa-46f1-92b2-57c919425eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ba32d2-c821-41e0-bc69-e42328c45eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7331ea3b-b3ae-4615-9f89-da7e23cfb1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb01057f-f447-409a-b0a1-2e8e28011b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8183a2-bc38-4824-9aa6-ebc8022214c3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500d0e42-e297-4f9a-b897-cbcf68ca5968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e30172-bb6e-4735-b7b1-bbfe7def5066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09339c47-42d4-456d-a6ee-f0884807bf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac930f0-d92d-42b3-8d3a-d11075ac27e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3da10b-a0de-4735-baa2-25ffee8d17ab",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb40dbf-5f13-4396-b054-a624212314dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa29fd2-e2c6-4ae3-a507-9c4ae0e97afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90759253-2d87-4629-be26-cce34fd77d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fafd466d-cd80-4865-8845-f7ad75c5fee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fc0c17-9691-43a8-a738-5045fc3071d5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951aa72a-e100-4be3-a3a3-724cf5487886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ea189f-3c94-4f9e-b6ff-a896f6ee7c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c37d7c7-d1dc-4173-b0d2-75d343336567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30771689-76c8-469a-9357-7ee8c8889cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42803c6-6bd3-48a8-aad7-dcc93515686f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86eace4d-101e-4cf2-98fe-0c3fad61bcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663f17db-58a4-43ae-8c6a-1a8ab45dafc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08039b6-14a2-4f56-a0c8-27221ce7a9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcac5cc-4f3a-4cb8-9b36-f373018a6c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8fb8ce-00f5-4df7-8b00-d4e0e7b66f70",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26f9145-5665-488a-928a-c78c5641add6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd314d6f-476c-4998-887d-1b63bacb5901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217ee653-e767-4b3b-a979-6d2a4bd5c7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14209050-da5e-4b5d-bbe6-0c1d88f99cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed3749b-7351-4d8e-9067-e06c28f52742",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825f1a66-784b-42bb-a20d-0d3605818dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eeff0f5-70e8-4012-9b8e-e741600cbf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f4998d-6aa4-42ed-9dc9-362f96e07efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b78daeb-c0f8-4b7f-a261-7a221beb9f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be11f815-edc8-4449-a6a4-f81f3595d2c6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5efdd2-91f4-4e9c-ad95-14b8525f6a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7fd221-fac1-4b62-a3dc-81b8e78e02c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778a82ed-e6b2-4986-89f7-aa90c5bd0db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7fb2cc-3d6f-4bf9-ad73-94cbfff9e6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fdb096-e841-49d9-8fd7-526b637da96e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8018e24-f45a-41f7-ac01-0162e5c45b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f20a77-1070-4ffd-9f30-64fac543bccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd499b1-e0d6-45fe-8243-9fa84280cb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e10bdd1c-2a3d-4a57-aeaf-a54fa76673fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a85336-568c-4834-a6fb-e4eae3ad6b0a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccda1f7f-08b4-443c-a5ae-c69ab94cb24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2452d5f2-ecfa-4a37-b4b9-40494c96ab47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5401720-5894-4c24-8480-11110cd94f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d19001f-61f8-4e92-8c8c-5dbf14f2b30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d86ddf-2fba-4eb5-8f32-d0422ec303e8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdd0d53-d0bf-4abf-86ec-f3b838af43e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b8c669-2bf7-4bb4-9cab-4b82c37bf8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2639b88f-13b7-4da5-9c9f-7f57fafefe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c1366d52-11f8-43ec-8734-16cad2cc3da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0191277f-d4b0-4465-b9ee-2c4093c9ef0b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37a627d-60b1-4b45-82bd-72fd381e5e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d1e8c0-35c4-4dea-8563-baad595139e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3d2d37-135c-44f8-9a2c-7fac6a16a3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54619585-9c24-4c94-8ddc-94cbeba419b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c41943-bcbf-493e-a91d-e4ebca062bc8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961b4904-7c33-4c54-ae77-d76f9d6f9efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d071fda2-1b45-4928-a286-5a2d65f58854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f77562-9686-4740-b3a9-1d2624ec5789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46daadbb-6474-406c-965b-86e282330a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf06569-99ad-4408-b0f5-b565b8732e7d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96444331-c379-4a80-a147-def2b5963da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7863b045-a183-4646-b4e7-86494ce0ce8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd14058-7bd3-4ec7-896e-184e26165a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c21036-223a-4a2f-8460-742beb16014f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea67c42e-5a1f-41b9-a39c-163a307e9f82",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ef5829-34bf-4cf5-a926-c747bf4ada71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd88ab7-2447-413d-89c6-1157fdbb4512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1611f9d-00dd-4b38-87bc-5b4e4198229d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf36a901-f977-4ac9-8336-8ed0e91894de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dbebd5-30eb-4cf2-b43e-3d7506f31488",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f96874-ec7f-42fa-bb3b-2b9f0d038cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92cd8a0-e50e-40c6-a6e1-34181a5e3319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d886998-ab74-4a4a-947e-4391a633b51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "33044d58-f4fd-4ec5-80c6-3e0334c258de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e48f9b7-b40b-4a28-8bf5-32e1aa4d35d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48da2590-6a69-430c-82e3-e592b7f54de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ebe545-7a01-44a5-b3bd-feadc430d874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c1c410-f76f-4f8d-98d0-9322bdbf8798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "86866c78-e923-4d4d-ad3d-190d599dcb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8cce6b-a217-44a2-93be-9a489851f414",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f346d5b-33b8-49a2-bcdc-2a6696c8b9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7777d725-ee79-46a6-8e5d-22dbe4b3bf98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bd4e76-d269-42e7-b886-fcb0c664fac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8bd2c13-ea39-4b71-ada7-c65df970b397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8d57b5-26a2-47bc-b52d-1226dff077b3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ab7fba-6e30-448b-ace8-2396a8004e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d5ce3c-5e77-4231-94ad-9ebb016f6288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e9d504-fb95-4ac5-91ad-3a0089cc4823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b56d87-f867-4cf2-8a96-60a8fb633bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655d9443-3823-456d-b703-4dad59f1a112",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ce2b77-aaa4-42a4-95d6-c63c73fb1ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac630f1b-37e6-4edd-9e1d-9dfa2cc0df82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f79a083-4af8-4b6a-8a8c-325b0d46c54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66b4d4fb-4281-4543-b7b9-0c600d132047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d5abb9-bfd4-4cb0-905f-706b24206c41",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3ccbc1-b08b-4dab-8c76-c199b17efddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2f24eb-417d-4337-9e7a-8de7499de2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3da9551-a747-4d06-b807-53ea0620d77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00081ea4-28e2-4855-8a20-942afd30349f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b6204b-9278-4004-8779-ee7aa9ea22d8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920ef558-4abe-4b41-b711-e4cceb9d1fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1d3da0-5846-4415-aa0d-498c7444600a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582e4139-369d-4cd9-86dc-0044125bdf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec1e573-9f21-4839-8d46-aec5a92d7284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3ffd1b-8735-430b-a135-1153333d10bb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7847c77-15df-476e-9494-7501bb437060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dee9b7b-06b2-4167-b556-cfd0eb45eb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ccf7d3-2789-4e7d-9019-c3d53b494ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "918ba299-0bd6-4e91-bdf9-852d775a64d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c8d8e8-574d-446e-bfc8-2a5689cf2d40",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bb06ee-bdef-4378-b7a5-1d075b95ec60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ccc7a5-9642-43df-9410-f7417dd2f5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58236577-2a53-4e1b-803e-762c2dc06761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb651d1-7d86-473e-87d2-6a1460d272ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060cc052-6715-46aa-aa3c-8e67629a5494",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf13f1d6-49c1-448f-91d9-25b19a8e5fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f14084-5dad-47a4-a930-824ce40dd21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473c1721-1526-43a1-99e3-6b5e08100d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06243eeb-c8e7-425a-a843-9856aeb9fa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3f6b24-e543-4414-b68f-88c34c4215a3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68c2013-bccc-4eaa-9312-da37c68b5db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ff74cb-8210-43f6-9795-5e78532080ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0e8936-2176-4d67-a073-ed2c26cd721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ea73a0-df2c-4eee-8656-63e5e8b45e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29498abd-7e75-451d-9a8f-97f8acb04034",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29290ad4-680a-46e9-b631-cb83ea26280c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad5ad76-fb9c-4c7e-965b-23a0f5827849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d6a00f-fe21-4b7a-9c54-2b326796065f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96928cdb-6fe0-49f7-8c04-9d9ea5c761dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67092870-f9a0-457c-ade8-1bb38bc1d324",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfc09b3-78cd-4201-aec3-d5c9021b07cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca07339-500d-49e5-88e8-73d54ae2b841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569d0ae3-9e04-4e78-a905-994cfaaff686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dba911f2-a4d6-4b7b-8dd3-bf1105e3f542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c44dea-c321-4787-ae53-ec339c7b0b08",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3842b28-1519-4fd8-911b-d6dab6f496fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20a990f-bbb3-4060-89fb-a3e4a23773f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ab1469-25c9-4a40-9173-dd2fd4fc8e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d92babbf-f96b-491a-a1c7-71cf2f70e1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa5e935-be35-448b-b493-af0ffd871940",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1445a6-8a2a-4a93-937e-b39847775267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ad3224-3114-4bb8-9dc6-63ce70a06254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e61193a-830a-4178-a753-7964adeb3d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f87fe30-877e-47b6-9b9f-ff464c63ccec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8daafc-a49b-4367-a5d1-49ebcfb39872",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40db58ca-4090-4f9c-95fe-8c43bb71179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59665980-48b4-4ff7-bb2f-6061e9bf5a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c62e32b-acb5-4dec-8c4a-971268f78759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10a72c8b-4467-4694-8ca7-b324d0c73cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d009a9d-d085-4b90-bdfb-d644be9f46bd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b2fa90-0fcf-4311-a226-61c08410043f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0f9440-5ae4-48d6-8b96-e0dc965eeccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1796c85c-03bc-4a0a-8dc6-ea8013c0afa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "059d55ac-02dc-4bbb-a428-f220f008f58e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15c2538b-5e17-4be6-b86f-63228a0504b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "769b5b41-4e7f-4efd-a9d2-ac23f89a775b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedc1917-5bb0-456f-9533-fa917a4ed56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e702c2d3-8e7d-4001-acf2-0f4621c3b566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2183ca-0652-495c-a3c7-be68e269157a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db98ea5e-636e-4c5f-b3f5-7b7d177a94fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30102a8f-2d20-4ba7-b405-bfab3fda9f03",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21274d8d-0e9f-4414-ae74-bcb70fafccab",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "96fd4e20-fc1d-4d3b-93fe-263cbe6d4f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800de49f-7245-4780-bc62-747b01046c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff2edd98-df65-472a-851f-36433f9c81b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b97affb0-2a95-4c67-8bb4-7e2294368e0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "679655c1-851d-41ec-8cc9-1e0c58c993c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "133568ef-b118-4e0c-9907-549bc98a778d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18500258-0b47-4628-92da-3a3efb926dd9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ea7e62b-74a1-4e44-9ae8-db5e5e648c87",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e794f869-3077-481f-8337-3c1076b4dcc3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dc536b0-456e-45e8-95c7-04926af81ce2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "706bc6de-5bd7-4f10-bf8d-6982c7c1ed5c"
            }
          }
        ]
      },
      {
        "id": "3d46ccda-0194-48da-ac30-828f82974c40",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a54efe4f-40f2-4adc-9c1e-ca6d592f72f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "882751ed-1fd8-4c8f-a8dc-02dd82ae1bfe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41d78460-9952-481a-819a-e1c0467e7649",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f551700-2e51-4b36-89f1-7e240e441a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82539997-eb94-43e6-bcf2-a2a06e6989a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc8c61e-1f6e-4699-850d-43c266e4451c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95ce20e-3c61-4aea-b9ee-3b5bf3f582a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9342cb7c-c8d9-4200-a4ff-0921504949d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d67a96-a0f6-4216-8e91-0b9e9ff32c7e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65425c9-656c-4a22-9d36-f30145ee224d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a81649-8214-4c7e-af39-277c62b58970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033b39ef-6102-47aa-bdde-e363b1ce4046",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b665840e-2881-4179-88f5-0c45cfd37fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9da132c-1ec1-4ab2-bc9d-fd170ca35255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2fcffa-8b4b-4cd9-8809-4adf7121c60b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7cb864-0092-40df-9cae-6d39cc3d4bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7d3bd9-122b-4d60-b73f-cfb186d0ee7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d714da-0b77-41fb-9e49-754f4652f179",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7966bdc-31e8-4a62-8c05-b33610001ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65668fdf-6899-4b1b-85cf-525a75333dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a94460-97d7-4278-b9c9-10b38cc0c86a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c09d0e5-a6b5-4960-a1d5-16057b830100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e1973f-ad77-4d90-87cb-6e537dd85d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a63a16-d57e-435a-9828-413d07d36eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc1c205-e492-4d5a-9850-64a98ebde2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb2e7fa-ce1c-4586-b89f-e1003bfe1994",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c42f5e-e2d4-432b-bbc5-b8cc3abeb15c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7334885a-6fe7-4a55-a5c9-334041b264e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae082ea-ca95-41b6-89c9-1ee78aa9917f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903c6693-492b-4945-9e55-75156f292488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49de9965-191a-41ba-b798-e5664f3b4485",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a85b97-39e9-4b45-871c-522d6a9d9b0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d1bc3be-cbd1-4155-9a89-7b0e17b36d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be51ee9d-bfc5-4a56-b78b-6c0289d99a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d12a08-ebde-4ada-a7a8-11bd288a3c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b8547f-d0c3-4a91-b2b7-20cfc4d04538",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d7f5a9-a396-49de-86df-a6cb60fa9844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "076e2c56-97ce-4a46-b6f7-073d8c411b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47ce362-96ef-4859-83ea-79a7aa7273eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e82eea1-6d22-4671-a225-c33b9ab51fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bcf253-ffb8-4a50-8ec5-867d75d87657",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9657276f-b003-4184-ba0b-85a862e56076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7727fbd2-92d3-4230-99b3-51d7aa12c3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d302d463-a63f-4b6f-8c03-3a4d9782eb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55a532b-ccac-4b43-a16b-99588b54d417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9146889-df76-4781-8270-03679218cd27",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddc25c3-aac4-4945-b0d0-3d83aeff5741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43748d0-c0b8-4c69-9e2b-37a6401c1c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5267cca-66b9-486d-832c-343411b928ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f767317-8b84-4c65-b88b-8b8e7e94be1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d531d3b4-8c7f-4093-933e-6bc13a9a00cb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097e81b0-47e2-40f3-8b71-c8a0ef6f2a8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b145963-1d10-404f-ab09-1496f08a1421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b752457-589c-4378-a33f-7a1cf83450e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb77228f-7a0e-4985-96a2-e10a283affa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee6beb7-c50a-4437-b310-85d35d62a546",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7879554b-9845-4fc7-8bd2-bd8969b78336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3034309-372c-49e2-82d8-b796dc59526f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b621ea28-f133-4e2b-a2a9-3a95289221f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171e9444-17e7-4058-8208-12e35e660b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68eee72a-10c7-4dbf-8919-05d7ce3c871d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03855ee-645f-4a66-92f7-3741f993b443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f7e38f-3e8c-4d47-9a77-5325caca5660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4b0972-348f-4b10-bfba-76ea9bfb71ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490d8377-133e-4561-ad21-48df8df2055c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bc69ad-e9ee-4347-a94f-331160231e6f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa583a6-59ae-4f0f-98f8-3b8fbbefbc09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb5b91be-97c0-4923-adbb-39e42b6c908b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6832dce4-871d-477e-8443-021cb9e845b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76535aaf-bff1-48c5-98e7-5fa3d3f784e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326ed4f4-62a2-4c8f-9442-99f4710ba3b1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57f7120-1000-4bfb-a11f-0161225fee54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9689a4-f3a1-4ef9-bf2d-87654632e0e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a871ed8-c3ec-4b33-80b6-79044db32cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fecb3b-8b76-450b-9535-33d0bbdba4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a17517-4bed-430d-bef8-84abdd9dad1d",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f790ebee-c4f7-4787-8458-74dda601d34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cae6b1e-ef43-4e7c-b5b2-2e2216e450a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeabafc6-0325-4284-94e2-e810b5744f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff2b835-d54e-4b9e-9324-e76987ccf0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7841244b-f373-4b10-8093-a1417be7cd82",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9683beb-2120-464c-9ebe-7cfef3a7a033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59476b74-f4bb-4649-ac0c-101200cb006f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14a23b1-19a7-43f5-8134-473fa4b82968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ad1b5b-334b-4e6c-b0ee-e24979080662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d5680b-4b76-4d08-b640-a079677db759",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b88c152-3134-4752-8562-db4f5c4820eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2766688e-b102-4151-afbf-d5e660dbd8a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b95a499-091f-4a65-920a-5a22a21e0dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e149e142-c204-42a7-8db8-e75c810f8bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefc3d4a-298f-4191-ac15-136748084d78",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d10f7bf-e68e-4f28-8c9e-fbaf1ab6accc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e197cb-a29c-4a6a-b889-315b1d763025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cd65c0-46de-4234-961a-06de049313c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f2cbba-6833-4ff7-9f94-227bcaf44453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3336d1-fa63-4dcc-9a03-ade8cacde203",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341f3bce-8dd6-46a6-b1ad-626bc489bd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea442edc-388d-418a-97d2-d3b8696adc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194aae76-5ec8-40a4-ae13-b0b8430a6428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f867e810-8fab-4886-84b1-78d65888e72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a674c5c-66c8-4713-b8d3-434f42b3adcb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6bcd91-35e9-4afc-9b8d-4261eb67d8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abfb88e-a66b-4ad3-a84f-080af9312216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0e3d0f-93da-42c3-9c36-33692ef175c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40ed00b-56e8-421e-ad62-e0880ea98a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f951fe-6a83-4675-9fbb-9c9407464ec2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddb5291-9624-47b4-bc93-3936afd4e2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ccc5e3-09b6-48e2-8f9b-c238f3d4c915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df72473-3372-479c-99db-89bf4471e310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8a4647-5f47-46d2-abd7-d340169b6721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edf7b09-4057-4e7b-8d41-bc6ab88a5cf9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b86b77c-6012-4d21-9b5c-0061a404e2f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82abde13-974e-4f54-be6c-32fde6677a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4a0860-67c1-41c2-b306-53491af263c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5430fd-efd0-4c8b-9bf4-32a36c671c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4991838-0453-45dd-8a5c-710add19a10a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d619cb-1b16-4d18-bb5b-99460d6b6991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "685060a4-0302-4ede-8264-c0f002e191c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366d44db-5a3a-4af6-b3d9-34d69f118a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1aa02af-160c-4bcf-a586-443b2c465a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a30abc-a737-4d38-b2c3-d457b9f596ea",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c4afa4-6b1d-47fe-b2a5-91188668f8a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "301159c2-d1e2-41a2-953d-5caaaee6cb5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db7f844-4fe4-483b-8c2d-70bdfb4d3e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5982dc-ec6f-473d-9413-ca33ea7ba13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689c2f95-5b95-478b-9333-d13a61be4ea9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefb14d7-1b0b-4a2f-9e8c-a9103eff73fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2a6a6b6-8939-4346-a3f8-e3cf49dbdbfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a80b2b1-ed49-482d-ba11-1b90692d2c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19c7115-bde6-4deb-8fde-36cc4758eddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c45570-a34f-47c8-93e7-5c04bc894999",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9612c1-2733-4ea7-926c-99900fc182c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f617eb-25a1-4e12-ba83-aa937e7af40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c8469c-d999-4246-b728-bd7c493fb1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da0242f-e022-4163-8eee-6d7d538d3b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c1e080-073b-4a10-91bf-2a65d88d4d6a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918843bd-a19f-40b2-882e-8e7da90ac170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "467b75d6-c9b1-46d2-b597-3c8ee017ff99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ec2544-b48f-42a9-b891-8f9a8421fe56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15cddc0-a815-4c90-b4f2-76625152e80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba16010-022f-4e17-9b36-d97cafcbd9c8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20123532-d675-44f0-9371-e0974a8a34fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a5b4e91-9449-4641-bc5c-9fbf4cb35027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75201536-6c32-4f14-a4cd-7a4d36e38140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9cad70-2f2e-4c0e-8393-8968ad272cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee873db7-15b2-4924-8c99-090db4b91520",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6161b4-e00c-4d0e-9742-e5dda81209b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "879c9e41-e47a-4fa1-b973-d13a5bc6beb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97b4df1-6805-461c-be04-fbacd849c88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f73b5d-0812-4ee1-838c-fc4336a51559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12f3300-2584-4e5c-993a-e6c3c4123ebf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58c6764-d453-4df7-b5ad-a70fc94a4286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4307758-ab6d-484f-b120-2fb0edba7ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc32e2e0-57e6-4c5c-ba6c-830dd7d8ad65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa6bf6a-c9a8-4508-81f5-5136de2f5f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08480046-0930-4e19-b45a-f76f928cedb5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e597ed49-dff0-4322-8da7-b593d7bb1c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3596760-bd17-49eb-b625-f6d139d050ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efccedf-d22d-4454-8c7d-48937e75c8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffa6a14-b704-4e60-a302-bba1f00aeb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1647db13-3119-4b1a-8e9e-be2dcd4e4ff7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98137ef4-2c06-4728-8c05-cfd6b48d12e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c712dde1-56c8-4b81-a1d9-8c48d355fd86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec31fda-e07b-474a-958b-c5d1cb4cfb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe157201-6001-4623-af8e-926d5b92acda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6bb5b3-2f43-430b-8d73-a11d81af6486",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452fb846-a878-47ba-b46e-b76034ad0e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9bc423-bd7c-4589-8a6f-c82a897564bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a31546-1dd9-4788-99a8-005f25796097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8861589-5b85-4421-8bcb-64439538c01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c12ae2-99e1-49fc-b62d-e2b369fa41b0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b9484d-0934-40e8-9bbf-6d45e2fe89d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fcba51-d0ca-4de2-856e-3a0a1468891f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9b6718-fcf7-49ce-8623-0a294334c0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93bbd3e-88e1-4207-b052-4103181ed546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df705221-7e4d-43a0-9e68-251a604ecd44",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e37ded6-8555-4abb-94eb-abc0008f1b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c88b11-8571-48f8-a21e-c5080fafe2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7360fb0-5fa6-4e75-8f39-9a9f24fc4b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8091ecb8-18c9-4537-aa61-c77d58dba8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5db014-d498-4616-bb73-f6a0a5826969",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f660e021-146e-4877-a43e-d57a6aea49e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94126507-b7fb-4414-8225-3c0d5b5870ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c21898c-8f23-4ae8-9c80-7e3f47232eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7136d07c-cb07-4eb3-bb91-ffb483bf00c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8f5d47-e8b9-46cf-8c29-0a2c669ec4b0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071c290a-c0d8-4321-b36a-25ca1b2e4d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3083b3-8cd1-4178-8800-8cad9cbac1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5254a563-a7be-4b05-b25e-8a085f370364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822b6b61-7d79-4846-acde-f2f17d191ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8743d460-450a-419c-a352-6538aa7e72f3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c438ac7-c27f-40d8-91cd-02ceec0e2054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46286fa7-1e33-44ab-ba3f-c21307fe6990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9c9f9d-f9d6-4a23-b174-22a9f8ccea44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8467639b-8152-47af-a74a-23181b0a2dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa8ed54-cb65-4a58-a673-70721c26315e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f10d303-2eae-4d28-abcc-14bf07f62a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134284dd-6680-4703-93b6-b4fe2d914c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d91e9a3-e008-45b1-bf35-308bacaa7518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f3644c-a3d8-439c-a59e-bf168fe96371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893661d9-1009-4e1d-a7eb-bfac8cef40a5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d248fde-d039-48c3-9ca0-849d76aaf82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4991fe-29d6-45f9-b6fd-5cdc416db45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99307555-21b8-401f-9bfd-452503eb09fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33b58a9-aaf2-4502-b360-6db491138390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b983b41-0d54-4e8a-8650-5c2dbab2a960",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f40761-8cb6-4bd9-9c1b-923286c195c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658d77b5-7cb1-41c9-8c91-7da5d3dc57de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ed7c49-c36f-4204-819c-d2020b1f6f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812b5099-02b7-44c8-9ba8-3fd9bd1af19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388cd23f-7e4b-4428-b86a-b678599467c4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1c25e7-f036-412b-81e8-b40a5342f2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1b3f5a-e590-4d4e-ba31-94c4b0a7c9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b68290-84df-4427-82b1-c7dce578ff34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8bb0d2-62b4-4d9c-b6ad-11202a3b9bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f39123-6f03-4a03-94e5-a2c2ab4231d3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f909a431-b668-474b-ab93-31d42b72bc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e0dfdd-7c78-4f2c-943a-a561c00a9433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97aac038-6bc1-4170-94c7-8d6529e08a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f44d811-3a0d-4725-a70e-a9c455b7981d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb92e26c-8f87-4bed-ad80-3aed9f81bff0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dea7782-b704-49bf-a574-7fb2b72d2e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839aa142-4746-430d-a394-3ee054a9e918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a920e28b-de97-4b1e-9ae4-70002168fb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f1769e-ffb1-41ed-bf31-875904ed2b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215929d8-e761-4ef9-b3e3-af5fa7ffee0d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c27e36-54f7-45b2-bc4e-b94c4e62f1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead1c64f-eb1b-4d7b-b5a5-b71a7b47867b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fff6823-8331-450b-923b-7109e10efe09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1bca5f-0c1e-451d-861e-7af6fa5e8f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4da129-10e3-405c-b9cc-848940b0369c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ade2e9-3279-46f0-bbb6-381afa8ef7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd99bd90-c379-4bd7-b6c5-2d4f9f68e19a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd702a4d-ec29-476f-a79d-8b92bdc20f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa1ac2e-dbf0-451e-95d9-932bb676b2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999e5741-336c-4899-b08a-5e2e80954501",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16effc2d-3ca8-4ba3-9a91-1ed583bbca4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef2634b-cebd-4361-b0fe-77a023144b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacaef88-c3f2-4426-b14e-768d7d05c7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6be2ec6-f6ae-400e-882c-d66505a3897f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8173efdc-96de-4cfa-a932-caa59b38bc15",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18b7fb9-5006-48a8-a8f1-9953acc8b3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bbdf4a-a2f5-4e3f-b681-f23cbfe4767d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dc4678-2d9f-4ea8-bdf6-a831ff2047cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697394d2-2fe3-4efb-a799-5ed2eb5e11a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248b130d-efcc-409f-996c-9c75cc43edf7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3afe160-4fca-49fe-82bc-5f46932421f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ae649c-13fe-4798-86f4-72cebc5c8f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb6a733-781d-462d-b0a8-a3347f2b3c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5299e64-7985-4bf6-bb51-41c81615a251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb74fb9d-d7e3-4f10-af21-56f6fe5790c0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c52d6f3-b450-4b89-9a98-d9e950e120ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f401d0f-bddd-4da5-ae77-8c5042d0f5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1203414-2f7d-4762-b455-bf0279a6bddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7698ce7e-3d0b-4581-a724-bc58b76dcec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb5f820-2ace-4ee0-b55a-750264a3ba26",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab91f3a-d99a-4620-a3eb-6da38f70b701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7dbf96-e57c-492b-811e-bef0fe344374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd24905-9fb8-42d1-9e00-4158f4e94caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c96175-a130-4df4-bc14-310a8a1caead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d001d225-6614-4ef1-a38c-5621570c73c8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e752cd-ade2-4a55-85e6-7d4b57a3de2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d103454-3fff-4466-93e4-1b7f7c86da98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bd0be1-3e61-4df2-9996-7def3bea2aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6aaeb2-2b76-4954-94de-c8ba033052fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ace1eb9-df85-47c8-9611-63d02abf5888",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931e401e-139b-4f53-b0c4-e136445a3a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a3a03c-d392-4a8d-b289-29f61398d1a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a7cca2-426e-441c-bab3-809a11874098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cf8660-6222-4b30-966a-40c55994ea43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e69545-9e94-47cf-bf48-604f39c67deb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00111593-39a8-4b94-9b30-b4465c5d7b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4d2571-0356-4a99-b771-4005235021fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f3c1c7-7906-4c02-a9e7-b89461820bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ad72e4-5b5c-4e70-888e-3a90b98d8d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68ca9cf-793a-47e2-bccb-caa0e6a08b12",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975b26f6-3c37-4168-9cbd-d2d0903b2ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f881dd3-7556-4567-97a4-151197240389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf57751-446a-461b-b6ca-6df8c1ff2b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f4c15d-89db-4e03-b842-0ac125ed7c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52199ee5-aeda-4f7a-965a-12e6909e2e3d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e874722-7f9c-472c-8974-8761d613ca6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4969b5e-63d7-4976-81c6-ee24fdb6f922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d1a379-2c28-451c-939c-f5a197a72aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ffd88a-6e80-4814-8328-41d17a60af05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde566f0-2ff3-40f8-9d59-bbd2ae6f83e0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde18403-1539-4abb-8399-9ddfadab07db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56e3995-af4a-4575-8741-a17d0b2b5650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cbd05b-de6c-47ef-a134-61d06212c489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6e8e24-a920-4871-b851-329ae14df5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38197413-be3d-4a3a-a0fe-64f0ed253d01",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e09cf9-6eb6-48ee-b460-b062a22e20f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed49a555-f4e5-4f6f-bb16-32a6a193c9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f32246-c15e-4b25-b7c4-a8d671fd5159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b9a0fe-9d83-4760-a6ec-2da475f5c82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f064632-5fed-4058-b21e-cfe9d10ac9e9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caea71d-3d67-4cb5-9f0e-ec97752d632d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d027df95-2fb3-4af7-84a3-5eece1734f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59597fec-1616-4ee5-b8f5-87965f0e88e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27595a7-20a9-4708-a9c2-12510caed752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7fcb78-8ecc-445b-8f9d-bc8cae3d80cf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bec78cc-51ce-4fed-bb09-8dfc7effdf3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b66059c-3fbd-42e1-9be6-4188603fc4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ce1509-7408-4ce2-9776-2ed26e0df2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e471563-2b50-4466-9fde-8e6cf0b5474c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34a17a8-9396-416e-8c3b-1863cd8899ce",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f8f54b-ca65-4b65-9461-2bf9d4fdcea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9078f639-6fdf-47f2-9070-7089d51178e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16958eab-9e2c-4011-8c70-abd18fd22810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a0758a-ebbe-40b1-a9cf-a6989d48d960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29bdb85-c07f-4373-920f-81a0621f8e7a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6420d5a-d2a3-4f7d-b0c0-c552967fe9f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943f567c-20a5-4719-9943-2c77ddff550d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab66f60-24b2-4c68-95b7-eebfd3b576da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0e2d1b-49c4-494c-a3c2-f4a490e1fdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb8a587-3b3d-4255-97d6-9e399c12c003",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7360ef1-50b7-48ca-9b16-d08b4e55fb2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "042bc6c1-59b1-436b-9384-1181ae6c6fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c38cf88-4441-4478-8096-e31267a56f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1438dc4-51ee-499b-be9b-6d327035561c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5167577a-025d-400c-ab99-bf874c701ff8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0178a356-d56a-42e9-8e93-a13c756707fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac046e80-de14-44ab-9344-dfba87e863dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3c0f90-66dd-4c45-971e-cac44c26b3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d200e89-ecac-4b9b-b99c-2ebe759134eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce06763-21e7-466b-a337-9e4ec7bbeea1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2d0606-7e2d-4f5c-a8e0-c62f2392c91d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fced4119-e6b2-4cf4-bf79-ac43ad9bfde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c45723-f64e-474f-b8f0-0d16ffe652bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e20f9f7-3e61-4156-8401-c2725f5191cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e3303d-14a5-45bd-8ace-b0734250e42e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b11abbf-971e-4c0f-9433-91ed74f32942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a3303bc-b43b-4b58-94bd-b5cd60a8c774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052e00e4-e1cb-409f-a211-5b451e005d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c843c37-a65e-4ec7-9c25-165909e75f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b842a9b1-45b1-4ded-9923-1c5d9a243f13",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6af281-1499-4891-a32b-25b79edf7658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd785219-3c8f-45b1-a967-3ad34590e016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21c3875-14ea-47dd-9c2f-2c0603c10a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5bfd8e-23dd-4466-ac63-dbc0fb97f27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a096777c-7769-4cb7-935e-b066d43aeca1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7218466a-af97-44f2-95d0-551632afe37a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e06945d-ec56-450f-9617-c4a395e84db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320c1f28-e893-4df9-9191-9768da343aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6144fab2-611c-4567-b732-af4799cd80a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9499d0-d42c-4d0e-9f16-b4881a1c320e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aceb919c-ad2b-41d9-a351-c2f834c3c1ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6072f401-f885-4f17-8ecb-2186b4aeb15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3f946d-e172-4375-8c7a-7df16cfa1af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24b12b7-1872-4653-a401-fd9650ff1218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd559ca-749c-42ea-b652-2b6a629742b0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3637341-6ac1-4a0b-b5ae-682631fa2558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62262a3d-7e0d-4767-86d7-d71637a25211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba021f95-9fd0-46ea-9c7d-accf9a7131d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ce8633-c37e-42b6-9524-fac5b4c92cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b3d610-68c6-452e-8592-f29bdfe0a3b4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd939a4-e9da-4ba5-add2-99301848c4a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf26f6d-80e4-461f-bda8-33ae99365404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc90a72-10ba-4d14-abd2-70830e232229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a012743f-bc80-4edc-87c8-a0ca5f4a21de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502ba14e-7999-4419-9028-a292d526ee81",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f8990c-8943-4929-b78c-d613c17d9fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7fbf7f2-1599-40c8-8c11-5950928ef956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40315eee-44c9-4d11-ad5f-881c2e1d40a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e6ce91-e332-48ff-b6ed-9ac3b40b27b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dfb4cd-2090-47ef-a879-752e85f28d99",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00ef08f-d890-4319-b4b9-02eb8b7ea4da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28adff2a-e7e5-4e8b-ae3a-2978a9349de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a1f0f5-8ed3-467d-8e0c-b5354efa2db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e74d79-49bb-48e4-9395-6b6cdafaa4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb49082b-3bcc-420e-8c95-20f54623f5f9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cb79b4-4527-4bcc-bcba-923eac7b45aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad251ab-9127-4b62-b9a5-cf646852d8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad3775c-b782-4698-a98d-473eac1c587d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1833d0c-b2ac-4764-96ac-98d9574ea0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eef9029-a128-44d1-9ff0-aafba2a4c820",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a754527-c841-4767-b29d-7de321aeb5c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3398f3ad-cd0f-4953-aab0-84476f1e5675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc354cee-51d9-4798-8740-2742590b7d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87d9bd6-6394-4a1b-ab6f-9adf40db5877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ef98f1-2449-4d0f-b923-dac3278ab390",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae7e0d2-4a52-48a4-aaf7-0b17ad4cda2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d65dd67c-d5fa-4638-83d8-32d62e331187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71d5471-1bb5-4d1e-a9f7-aa3d9fd2a365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3a580c-d90b-4eed-a37f-a0cdb8e88331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac445ea2-37d2-4894-808b-bbac5adc5c15",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54534f91-ac5b-4493-9235-166aa4dcd5be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870651e4-07c0-483c-a434-715a8518d42e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b67f7b8-5d46-451a-8be2-d5c6a5807b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489c67a2-f6de-4b4d-9623-02f3058acf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ab89ae-633a-424c-bacb-72489c0a34ff",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a383359-2091-4ac8-a4c3-0bf8ebd0c3f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a1aa328-bc22-4920-8a75-3ac620cfe4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ce243f-6443-49f9-b1e2-409c7913e876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b171ac65-b7a4-4563-9265-e53cedec5bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f6acdb-703c-4277-bf61-2e64ce6133ba",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d57edb-8dd5-4977-92af-a5004f74c657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d9f520-47e3-46a9-b0c4-416f94adbefd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5534352f-62f4-48ff-a5a5-77ba0c539e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1370cc-2333-4846-95ad-bf235522c361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e52f3dd-149c-4b52-a7f5-8a1a18961c40",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d927e74-e560-45e0-b108-6d57eba936db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46d109d2-3730-4581-ab53-584319015233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d60d2b5-cee4-4b5d-9cd7-67a6d95947f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55b7b1f-8d45-4fcb-bfb1-a679f12bc4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023147a7-65d9-4c6b-a100-93f18667bd40",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda5a300-bf10-42fa-a63c-0cec4dcdbfbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebceb4d1-4ea3-4544-b7e3-fd4b23780b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4a3451-68ee-47d8-a0bc-613f9ecddcd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7cbe0f-9fdf-4a48-b39a-3f72a92ba88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e341c9b-d269-49df-9241-31f3b439f60f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54727bb-7e14-4812-86d7-3205bebbaac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49f535e8-4fac-45a2-9bba-a2c404e8b13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c514c071-8077-4321-a722-090cbde51399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfb5055-82f1-485f-aa13-f1507ef4c49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cee60d-d420-44bb-999f-7326c67cf739",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f713e8-fd4f-44c9-acf1-fe5edeadd0d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5eef53d-e92a-4322-a78b-17f66406bee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a68523e-75f3-4761-bec9-e8b89b85c4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e080eb0e-fb2e-4605-a5ed-5f9a4b93e035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0ff6f2-d59e-422b-baaa-b374ee962259",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25a8545-2651-44ad-bb8f-4dfdab7d66ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6334168d-fdd8-4e88-bb7a-f5258906139b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3932ccf3-4f9c-4c08-9309-161f5d509890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f4aea8-bfc5-4e91-9fe4-76d9f8efa32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073d8d59-0643-45eb-a3b0-538e5a2e3f45",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3078a6-561b-4271-822a-24986f591a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd26a6e-18c8-407b-aa42-2835f9727696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0533afb5-5158-480d-b5bf-b448afe958e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d4983a-bd6e-4b81-9a4e-12f55a845976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f93a50-e839-49a0-8713-3a17b210ac1f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea5399f-07ab-4bb2-af56-f1af3ae4c5be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "212c4ff6-b7b0-4c69-95e8-83eae28b84a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140c7228-bdd7-4bbd-8437-cbf163e5b39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc611cc-87ee-45e3-ab7e-6e2d147350ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cfa308-7f74-4ece-a206-8e5c384ea739",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97d548d-be05-4f4d-a9f7-eaef9ce18a95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "730d27e5-5c0a-4069-a405-3b7298c980ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32092d6-177c-46b9-a4d9-5ef3141bbe74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914ae4d0-bf39-48ab-ba84-064e1d0e3eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0992233a-bc7e-4377-bbbd-50c3d8470413",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea62e66d-aea7-4fd7-bb25-7f98f7c0bd17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0128d90a-276a-498e-bd8d-fe8ef6ab2985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736f967e-84ac-4ed2-ac52-0a0ab56144b1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849798b6-2a92-4ae4-8acd-e84b27d22695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad145ec0-f3ce-4cee-807c-de60918173d7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0722de13-6c4f-4f28-957c-0744b9ce2d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc733a7-704c-40c9-84d9-d2d659c8363a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdf5223-e43a-4c0d-a34a-99028e8b9e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600492c2-fbae-4f43-9111-e255fb15de70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43b669f-68ea-4aaa-8985-6b60c390d3e0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638733e8-ac53-46fb-b1d1-e00b7353f012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc71556-2d3d-46b8-ad04-92c767e0ef48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ec7077-051d-4608-8681-f5c72afe4739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe202a62-50a7-41c6-8353-2c284ae6cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff381d4-11b7-4026-b451-9769e35281b4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8c8b45-fd98-4337-9ffb-1bdceed9ef16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f7cfb44-6af4-47a7-acfb-83d23bf7d5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f6fa22-5061-4cb1-9e32-659ea070372e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474d42a1-a22f-4733-929d-2b868484f5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bac5fb-598a-4ec6-9188-e4ffa81a4be5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc71d51-5294-4100-8379-24397f9f551b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bbd3865-5cb3-4b28-a2a0-e15677439a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd464bc-eab9-419c-9dbe-1e674edc7736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cec280-6d5f-4f43-ab96-c5066856709e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55573bc1-0363-4bf4-87d6-09172eca98d4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f85631b-bab4-49ab-94d0-f44e955f6bd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa16932-712a-46c3-9fa8-a1a4f9d24c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b64ad4-1b7f-40bf-a1b9-1c889d8a50fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7545c1de-97bc-47c1-bddd-9a173503282d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a975248-e1a3-4cdb-8c1d-2f977ca66fca",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728e8f58-d77b-47c7-aece-c9ae879e4059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cf9beed-7713-4ff9-a36c-d68f4ac06645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a189f389-9788-4ffb-bf81-78b001d75610",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5fad3f-78f9-4df9-8167-f298f4961b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1ab6eb-f05b-41bb-a261-abf0b73dbec6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b06ac0b-536e-473c-83a0-a4cc004181f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32629b51-53c5-4f19-a2b1-7b6578e3d1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e67f1bd-37ac-4eb5-aebe-fadc0028da67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b52e1ee-7187-4772-b7e0-1fb68301a7f2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eb5e187-74d0-4b42-99a1-977de076b4b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3714b30-1969-4248-89f1-652153a19780"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff445c36-0b21-4469-8157-2ac50425c971",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fa4b7b1-b5c4-46d1-bf65-f65d14d76858"
                    }
                  }
                ]
              },
              {
                "id": "43ccc831-28b2-4646-8781-faa4833966aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f3849e6-1fd2-491b-a9b9-14d08d4ea364",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0040b85-d3b2-4e13-86e6-df01b0780a9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "59aa0296-30d4-4860-9fb2-05e9dd0aeb09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d887348e-6d25-461b-8aaa-a358f0112b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ab3814b-a349-493a-8e4d-0052e363a2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b99d100-cab3-4273-ab98-7084680f3ba7",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b924ae-8daf-4743-a99d-62c866d2f8ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e0e5c987-4636-4bbe-b0d6-bfe4fe3153a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715ba228-5b1a-4d6d-ae40-9b25a27ff048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2af39b32-d73d-40cb-858c-2019ee1d42d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2097f408-0b68-4037-892e-eccfe942ec55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffe3a681-f237-48f5-927b-7ce5b19ab89d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2317356-94c8-48f9-a901-28e0f3ca8dd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b483fbc7-4eb1-4f59-8032-a7f9cf533c58"
                    }
                  }
                ]
              },
              {
                "id": "fafb8dc3-f5e3-4a0e-873a-6d7a67f32f8b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4f652928-8d21-4f81-a5ce-87f974007050",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d6cc24-a605-4ebc-9509-eb04098c2dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d0254cf9-4ef3-4ead-95c3-e0c9a64f9292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdb280c-8b13-4ffc-bfe9-52986cfe02b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafcdb45-e329-44c1-838d-646f5f15f09e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f4c8fa60-42c5-43d3-ab4c-579c138ff3a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b7701dc8-5cde-4f8c-8082-a97c46cfd44c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f3784a7-3356-40c3-861a-4fd884e2d1d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "66af7195-f220-4f67-844a-b9659a72f0ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7e5a41d-1ef7-4ea8-b0d3-ec4650ae85bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c857c07d-fc65-4480-9592-38a29ba45ecb"
                    }
                  }
                ]
              },
              {
                "id": "2e7039f9-79d8-4b99-9654-69e93e9dfdce",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "039d5294-3991-48fe-90f5-8a03b4e19027",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d08f03c7-feec-41e0-a738-a4e6439f88ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d2d1a23-c889-4f96-a2a3-04b2c9802f54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "168c4038-57f1-41c8-b3fb-e22e4f807133"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "487ce595-f6b6-49c7-80e1-4bdc2acbc39f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b1ee4267-e287-4f72-b5a8-c3717b02f785"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98b4a4a1-aa0f-47d2-9b7c-b8f0ea6f5f4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0afdd3ee-2790-43ce-98d3-159a53c334dd"
            }
          }
        ]
      },
      {
        "id": "8b8c4d77-6bbe-4721-baa2-6a4b28256fc7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "629ab23e-606f-4241-aafc-25cecf0ec4cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4af04caa-88ea-44a4-9763-a52e7d987b32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11109ff8-46ea-4314-ab63-dac5c1732342",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebd8fcc-64b8-49ae-89d0-e2544099bf95",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7f45d27a-15a4-43a5-a1fb-6ba1a704c260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64156cc-20df-4cad-b724-fc2013abe0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa312c3b-a04f-48d9-9925-a595bd02e54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed8df4d-3a47-477e-ba41-4a0dfbaf233e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebe1867-d302-41e7-99fb-7dd8f8a1f5be",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b5e04673-c72e-4fe8-8b87-6b54a72d94ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea4eed2-90de-416c-b95f-324504c16cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1450f38-a704-445f-b01f-2b908395c44c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d7a77af-e35b-4f36-a345-871bbc1afdfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14ae517c-2a79-4270-bd3d-124400e6603f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67792b16-bfc8-45cb-9058-3c03c3efeaaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b38d7afa-6209-4871-b389-8568279e527a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fe96120-5085-49a9-9195-3f8d4e39a26d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3f74a775-018b-4605-97d2-97291d4b070c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0df6718-d2bb-454e-a8df-4dce7c605beb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "955bb201-f480-4bbb-93aa-5a140519b2ca"
            }
          }
        ]
      },
      {
        "id": "ca00ebc8-e8ad-4d48-b978-1ace665bf45c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "62d3f32d-4bf7-4b89-a003-56a1c94d588c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23a49ce4-2342-4538-9465-f09817c28d02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40ada3c6-0ea2-463f-8e5d-6b4b00e42c9f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cddc43-1098-4222-92d6-85328dbb5826",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5a0574bb-c833-4e05-b3db-ae66f8054f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b1db28-03c6-41d6-a6bd-366c34240712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee4f033c-7bba-413a-9c60-11d79c95dc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679b3a58-8976-459b-be4d-21e24d70d176",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb1a413-348b-4225-b4be-88e6a3e100cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1130c655-8cb2-449c-963d-c12887ca1c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9657edd7-23a0-42e4-b084-65838ffb11e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5bd6829-ccb5-4e4c-a35e-b8d4f25f00ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0b76823-077a-4647-acd3-c2ece89925f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ea6dafe-569e-4a0f-aa22-abf23551f40f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d36e9a0d-bbcd-4e08-9ae3-0816229466f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05ae284d-6e9e-48e0-8edd-eabb1f5bf984"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ca98c0f-0c41-479a-8b9d-909b25e055cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d83ee5cd-a402-4637-ad1e-22ffed990094"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e4ecc2b-a942-47db-ada5-b0aa0e76aad1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de9c28c6-95e3-4c31-887a-397a1c7b85fe"
            }
          }
        ]
      },
      {
        "id": "83205a43-93c2-42a8-91d2-20f9863c0e3d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1a1f473a-b4a3-49ee-bfd3-cd328fa4a7b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0590d404-fe45-4004-83f8-e15a1c60e098",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61d811dd-8baf-4d72-811b-a8a2f6c183ec",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3e645b-a18f-4436-a2a8-416a9b7f6d06",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "74b3f401-b62d-478b-ae05-2ad8d7bd3cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf4536c-1ead-41fa-959c-93c5b2a75ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47bdaf52-4a19-4459-a06a-e0bf1996660a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1339666-b5a7-4e7f-a324-babdea5dc427",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5792a21e-67c9-41a9-ab8c-f0a010efd999",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8f045753-fec9-4235-8fde-b9d882e4c948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0219ec29-e1c2-48d6-8605-3abbd580e481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbd5909a-8511-422a-904d-d6d5c2631292"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "971bddf9-3cac-4445-a2eb-5f3a412b40a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2274ff3a-2c30-49f6-8dde-b25fff10079e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6ccd033-bd00-4e39-af29-97d8243955d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4eedd389-cd9a-44ce-bf0f-9e61c10ce7b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cec247b9-c5c0-4b7e-bee2-4d67288937e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fb2ec8fc-e863-447b-9e75-e098eb4e3441"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78056de1-3e6e-4c6b-b355-3105638b4a7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35773973-6deb-4c60-81ce-01ba0c2228db"
            }
          }
        ]
      },
      {
        "id": "6043c5c3-50c5-485a-ad51-5235a526d316",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b69fb30-1a6d-4666-b31d-cbb5f3f11643",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75c38ffe-ffea-41d7-a320-862ab0a1ca1e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "735b8f6b-f89f-43a2-ba29-a21efa467750",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19f2de27-33d9-4fed-b0f6-4deef1f69609",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d1d006a-47df-4af0-998a-c091809278b6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1917,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 515,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 963,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 954,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 712.2681992337165,
      "responseMin": 8,
      "responseMax": 7878,
      "responseSd": 914.5904956932721,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676421681475,
      "completed": 1676421881433
    },
    "executions": [
      {
        "id": "ab24f2d7-d034-42c9-aa32-f3de938e788f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3e6f50fe-ae49-4e69-8731-bab48aa8cd99",
          "httpRequestId": "b68124e3-d0b9-4552-8b80-0c5737459583"
        },
        "item": {
          "id": "ab24f2d7-d034-42c9-aa32-f3de938e788f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1341717a-174a-4bf5-9443-4d415c8b9f24",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "1e04ba1b-4205-4967-aa50-0ee35f5ba1fa",
        "cursor": {
          "ref": "4c3538d2-049f-4f88-b1c1-38fc9595f165",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "95c4eb66-b6de-4c0b-abe2-1edc9cbed1c3"
        },
        "item": {
          "id": "1e04ba1b-4205-4967-aa50-0ee35f5ba1fa",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cfcae78b-9940-4bcd-a6b3-61572263da83",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "262a2e84-2da6-4a91-8042-e34fb1321a0c",
        "cursor": {
          "ref": "b8e27041-c2d6-4631-a472-35e88224112c",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "254cf80e-1323-4759-be8b-d91bab38f0b8"
        },
        "item": {
          "id": "262a2e84-2da6-4a91-8042-e34fb1321a0c",
          "name": "did_json"
        },
        "response": {
          "id": "8de741e4-c065-4398-9c69-934f8592a65a",
          "status": "OK",
          "code": 200,
          "responseTime": 716,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6be1a6-6a88-44b2-bab7-c214fe61f7f2",
        "cursor": {
          "ref": "952201c5-bd9b-4e19-b14b-1391601fbaf6",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5f88adcc-c38c-4582-bd5d-259ed8c7782e"
        },
        "item": {
          "id": "af6be1a6-6a88-44b2-bab7-c214fe61f7f2",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d683be0-b971-475f-9597-f2558b0d705f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6be1a6-6a88-44b2-bab7-c214fe61f7f2",
        "cursor": {
          "ref": "952201c5-bd9b-4e19-b14b-1391601fbaf6",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5f88adcc-c38c-4582-bd5d-259ed8c7782e"
        },
        "item": {
          "id": "af6be1a6-6a88-44b2-bab7-c214fe61f7f2",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d683be0-b971-475f-9597-f2558b0d705f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8315efa4-0873-4bf6-bbc8-a6b675bb622f",
        "cursor": {
          "ref": "23c7aac1-6f69-40f1-83ea-0a867146a2b8",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "26ba11bd-26b1-4e5e-bba3-e41888c69bf1"
        },
        "item": {
          "id": "8315efa4-0873-4bf6-bbc8-a6b675bb622f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fe9c5e51-e1f1-4b62-9752-bf601d8638fe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 668,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d85040-ccd6-4496-88a4-efa285a15e7c",
        "cursor": {
          "ref": "8fcfdf1c-1f34-47c3-b11f-a9990eb432ed",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bb31b3fe-8377-4057-acb6-3ed9d0f9671b"
        },
        "item": {
          "id": "91d85040-ccd6-4496-88a4-efa285a15e7c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e8ecd40c-36ab-43b0-aa53-0600c9dc893c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 571,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e41473f-e3d9-4063-b891-5fef134f1244",
        "cursor": {
          "ref": "89f88144-1158-4155-aa25-3eddd5da576c",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "67349279-3ba2-4533-8ff1-88aa40db0d90"
        },
        "item": {
          "id": "6e41473f-e3d9-4063-b891-5fef134f1244",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0e75e9d3-ebca-4a90-a7ea-fd402de7d249",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89476e8-f757-45c8-b527-a70867ee53b7",
        "cursor": {
          "ref": "358709fa-ef8d-4003-8b84-f4269fb058f1",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9af5af63-c059-4ecf-ac6c-8c139503092e"
        },
        "item": {
          "id": "d89476e8-f757-45c8-b527-a70867ee53b7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "23b6a28d-2aaa-4788-837b-6d37e11d541b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 663,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89476e8-f757-45c8-b527-a70867ee53b7",
        "cursor": {
          "ref": "358709fa-ef8d-4003-8b84-f4269fb058f1",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9af5af63-c059-4ecf-ac6c-8c139503092e"
        },
        "item": {
          "id": "d89476e8-f757-45c8-b527-a70867ee53b7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "23b6a28d-2aaa-4788-837b-6d37e11d541b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 663,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b4aa03-efb3-4ae6-b936-89a16eb7bf72",
        "cursor": {
          "ref": "a677a256-1c5b-4914-858f-0f70fc78b795",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2d151897-52f5-424f-96de-a8cf9958240b"
        },
        "item": {
          "id": "43b4aa03-efb3-4ae6-b936-89a16eb7bf72",
          "name": "identifiers"
        },
        "response": {
          "id": "5f0f1c53-2da3-4a53-ad4a-d602db4e1b37",
          "status": "OK",
          "code": 200,
          "responseTime": 1033,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7115cd9a-ba14-4bf8-9a91-343c2f4ae2a2",
        "cursor": {
          "ref": "14741e5c-ce05-475f-a79c-2272356dcc27",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "48a0484a-3091-427b-99f1-77430ab122b2"
        },
        "item": {
          "id": "7115cd9a-ba14-4bf8-9a91-343c2f4ae2a2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2e9a24ed-3c92-445c-8050-6782c4b870a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7115cd9a-ba14-4bf8-9a91-343c2f4ae2a2",
        "cursor": {
          "ref": "14741e5c-ce05-475f-a79c-2272356dcc27",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "48a0484a-3091-427b-99f1-77430ab122b2"
        },
        "item": {
          "id": "7115cd9a-ba14-4bf8-9a91-343c2f4ae2a2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2e9a24ed-3c92-445c-8050-6782c4b870a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3ff51d-4022-43d4-93ef-58e902e7c696",
        "cursor": {
          "ref": "d849fa49-48d5-4c90-8e44-8ace912c47a1",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fcd4bf64-1993-4d3e-874f-e95bcd63f50c"
        },
        "item": {
          "id": "5b3ff51d-4022-43d4-93ef-58e902e7c696",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cf4dc06d-7aba-4c70-8576-dfaedd250b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691315ba-c579-4222-b2ef-e9acc4b37f09",
        "cursor": {
          "ref": "e7817887-c2c4-44cf-ba8b-b853695ef85f",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "72e0fa20-da6e-4e93-affb-25ff550b8ea2"
        },
        "item": {
          "id": "691315ba-c579-4222-b2ef-e9acc4b37f09",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "35a66ba6-c0fe-4a7e-bac1-f69fe0a31aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998008bc-8242-4b28-b820-a0dae5bdcc49",
        "cursor": {
          "ref": "871c5a6b-4192-4c6a-a54f-e5893bd7827a",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "54d7bf88-e2b9-4691-b496-17ee33f5e3e2"
        },
        "item": {
          "id": "998008bc-8242-4b28-b820-a0dae5bdcc49",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8c421431-4c87-4127-abdc-a05386b7811e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b42538e-256a-46ac-88e0-0fa3bc078946",
        "cursor": {
          "ref": "561eb6c4-5caf-4374-80e9-7ebd8e74e1b6",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d5719f8c-8e47-418e-a777-db78c0f5ec6e"
        },
        "item": {
          "id": "3b42538e-256a-46ac-88e0-0fa3bc078946",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "df29883e-7e9d-4019-bfd3-0da268222e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ff7c23-bb21-4642-a291-0717139871c5",
        "cursor": {
          "ref": "0240d88c-453f-4e08-81f0-77facb9e64d8",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f6f0a529-927e-48e0-a5e7-2f237c233d43"
        },
        "item": {
          "id": "f1ff7c23-bb21-4642-a291-0717139871c5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0ef82efa-fb07-43fc-8b08-68ff7e4c753d",
          "status": "Created",
          "code": 201,
          "responseTime": 3734,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "id": "1e4096d6-2778-4610-8448-971b046b240a",
        "cursor": {
          "ref": "abc56d5c-e3c8-4b61-8481-26f1a61a2b14",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "01b9e587-7853-475e-a142-1a4126149c77"
        },
        "item": {
          "id": "1e4096d6-2778-4610-8448-971b046b240a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "174729bb-ecd0-4a29-8123-7200225a1057",
          "status": "Created",
          "code": 201,
          "responseTime": 7141,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "e1a85cf6-1fb1-4d7d-920e-37211ef1fbdd",
        "cursor": {
          "ref": "cba25695-5960-4f4f-8561-a89eaf451c72",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c3b8358c-1632-4a1f-8376-01c5cff474a1"
        },
        "item": {
          "id": "e1a85cf6-1fb1-4d7d-920e-37211ef1fbdd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "76f48bc0-c087-48f8-b4d3-d87bf64b4c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f6fa00-9c81-43d5-b03d-84e10cdf570b",
        "cursor": {
          "ref": "54961710-c8f2-46b1-acd6-de627485effd",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "53b79115-9c8b-4388-a993-d149d094922d"
        },
        "item": {
          "id": "c5f6fa00-9c81-43d5-b03d-84e10cdf570b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "08053112-067f-48e7-b24e-f90aa25b2fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3139652a-1c5f-4794-b23a-30eee54100fe",
        "cursor": {
          "ref": "e3e40383-105d-4260-87cc-87c307d241ad",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "51ec87e6-06ae-4756-aa89-306b523adead"
        },
        "item": {
          "id": "3139652a-1c5f-4794-b23a-30eee54100fe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e0f82fee-3633-4f6f-8ba1-1eeb3a7c3366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9776a8a3-b2e0-403e-aa1a-1d311d8261f1",
        "cursor": {
          "ref": "266ad3e2-f8c4-4ba6-9070-24415b4c0655",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f386d4a1-0a9b-4c0e-8ba7-2c47029221de"
        },
        "item": {
          "id": "9776a8a3-b2e0-403e-aa1a-1d311d8261f1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d3d3dbef-776c-4a84-8a56-48c09133da75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b785cd-2e55-4b76-aa22-256a267c5ece",
        "cursor": {
          "ref": "ecaaae01-3d58-4490-9ef4-36c7079674c3",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2cd2cbf5-9639-4b3f-9181-7df2ed922f5d"
        },
        "item": {
          "id": "e5b785cd-2e55-4b76-aa22-256a267c5ece",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "575f3dbc-f848-4e40-b02d-3e417b58eb17",
          "status": "Created",
          "code": 201,
          "responseTime": 2897,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "id": "ab813312-796a-4d53-8c12-d39cb4b98b20",
        "cursor": {
          "ref": "91d0abfd-bdf1-466f-ba18-5c2d974d805e",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "49c38bec-7db9-4e83-b567-d9928b92c487"
        },
        "item": {
          "id": "ab813312-796a-4d53-8c12-d39cb4b98b20",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "3d69ee03-84f2-4e9d-82ec-93e2ed21d715",
          "status": "Created",
          "code": 201,
          "responseTime": 4579,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "b0e9dd16-3eae-4524-b8b2-ccbbff0c7806",
        "cursor": {
          "ref": "1b38da9e-bf14-4423-950a-c726d14b39ea",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8f5bf81f-94bf-4934-9627-61974628b93e"
        },
        "item": {
          "id": "b0e9dd16-3eae-4524-b8b2-ccbbff0c7806",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "28c082df-6f8f-4d7e-bd79-028c4191ff6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75872821-4dc0-41a5-8bf9-1ca09b30565f",
        "cursor": {
          "ref": "b96ea012-1844-4559-b300-a017b5e543ca",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f953857f-1c1d-4407-a5a4-164399e3bbfe"
        },
        "item": {
          "id": "75872821-4dc0-41a5-8bf9-1ca09b30565f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "df514f83-f71c-4dbe-88c8-da8872677118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f669ec6-4b27-4c53-b54e-f6bc47bcb54d",
        "cursor": {
          "ref": "dbbf1057-43af-4052-979a-2b3546ff6156",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d0f2016a-4f42-4496-b32d-e1025b4ec139"
        },
        "item": {
          "id": "3f669ec6-4b27-4c53-b54e-f6bc47bcb54d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f3e7c65c-8f5d-49b8-9e30-1c1f48bff341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879d263e-e892-43e1-b5d2-e6f48ee57dc6",
        "cursor": {
          "ref": "dae265aa-75d3-4fae-806f-f5e68babbfd4",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "79e04c2d-9c25-4737-b654-873bee5cf180"
        },
        "item": {
          "id": "879d263e-e892-43e1-b5d2-e6f48ee57dc6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "371af5e9-72fa-405f-af02-dee4a32419b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a39ec6-1934-4ec4-9523-8675a06083a7",
        "cursor": {
          "ref": "3d6a3224-f0a0-4590-b5da-5f714fabc490",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d0e7cd5b-0683-4244-b9f1-092fb1003b34"
        },
        "item": {
          "id": "51a39ec6-1934-4ec4-9523-8675a06083a7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e751c5d1-246a-47d2-9dce-47fd3dbf45f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4920f521-40bc-487a-ba8c-a6b74962b7c6",
        "cursor": {
          "ref": "6c13629c-073f-4ca1-8d21-779a9d79023b",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d7014074-2649-404e-9ca4-9d29fd72e276"
        },
        "item": {
          "id": "4920f521-40bc-487a-ba8c-a6b74962b7c6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c5d5a243-b41d-4b01-80b2-f5d4e5451b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbb482d-3074-4d3c-90e2-eeb7248b8b9e",
        "cursor": {
          "ref": "d1c024b8-d0f1-45d4-be1b-105161074468",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d652e9be-377f-4a4d-a4ed-8e9fd9e33729"
        },
        "item": {
          "id": "7bbb482d-3074-4d3c-90e2-eeb7248b8b9e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "73982434-9b22-4b04-915e-69cbae1806c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41e347e-0be6-4245-bb0a-d6cf55d7bb48",
        "cursor": {
          "ref": "5de8e7cd-34ba-42cf-8669-34b93573536a",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "368c94d2-4a56-4138-ac8a-f27173346373"
        },
        "item": {
          "id": "d41e347e-0be6-4245-bb0a-d6cf55d7bb48",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0da6aa1b-0ed6-4311-b3e0-d75e10f45f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b2697f-e833-4a1d-bae0-3b439819e169",
        "cursor": {
          "ref": "891c10a0-c4b0-462d-923a-b41063dd9c18",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4e173119-aa28-4ac0-a29d-2a1e586134ec"
        },
        "item": {
          "id": "d8b2697f-e833-4a1d-bae0-3b439819e169",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "67d7e3cf-3051-434c-b6e1-5c2ea158ffd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3183f63-d05e-4519-81f5-8610989b3a3a",
        "cursor": {
          "ref": "3bad7faa-7f76-4bde-8170-52a7eb0e4198",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "588d70ac-f592-4751-a908-8d84565a7eb0"
        },
        "item": {
          "id": "a3183f63-d05e-4519-81f5-8610989b3a3a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cb24aa55-0540-4ccb-b9b9-8beaa8831475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6629639d-c9a7-4ee9-824b-71c06226fbe0",
        "cursor": {
          "ref": "8be4790c-138d-4f1b-b2c0-c3b30221e752",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "48f883ec-469a-44ef-81dd-4da40e6975ad"
        },
        "item": {
          "id": "6629639d-c9a7-4ee9-824b-71c06226fbe0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "932e802c-71bb-4f22-b370-abd03a860f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff010d9d-40ff-46ea-96d7-8e23e5186682",
        "cursor": {
          "ref": "4fb49185-1bfb-43b7-b792-88d4b8f902ab",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8d8a0c23-4fc7-46f2-b9ec-fb8b8bec9e6f"
        },
        "item": {
          "id": "ff010d9d-40ff-46ea-96d7-8e23e5186682",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "27cb66c4-3438-4f4e-b20f-aa8770edb505",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 3177,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:34)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:34)"
            }
          }
        ]
      },
      {
        "id": "90e93976-5744-4cc6-b4db-8c2d54fa858c",
        "cursor": {
          "ref": "83236fd9-c9d9-4eed-ae17-d138f749bd97",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f064b1bd-10be-46dc-8b2f-3125ef209811"
        },
        "item": {
          "id": "90e93976-5744-4cc6-b4db-8c2d54fa858c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "29fe0d25-c32a-41d7-996d-9771d880c208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2743f0ff-366e-42c8-be33-40db9bd89bde",
        "cursor": {
          "ref": "75d369e8-ffdc-4bbe-93bf-8ce7a9f366cd",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3f3038f0-d53f-4912-b4eb-c8f48e80851d"
        },
        "item": {
          "id": "2743f0ff-366e-42c8-be33-40db9bd89bde",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a117e9bb-f996-44c8-b7d4-e53b613e7f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6164f2eb-bd3d-427a-af55-4207f2635192",
        "cursor": {
          "ref": "8373baf2-8857-4ea6-9c1f-fd6bc7230fb7",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b6e6f0e7-00f5-4936-b2d5-4cb0e342b8c8"
        },
        "item": {
          "id": "6164f2eb-bd3d-427a-af55-4207f2635192",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cc6492d8-05b4-4e19-9f96-923f7220f6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2890e8-5f49-44c2-a059-e2f52617f4ef",
        "cursor": {
          "ref": "f7f4700d-3078-413e-b065-890087082206",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c06dfb18-16af-4b83-8a19-31c020cfff8f"
        },
        "item": {
          "id": "7c2890e8-5f49-44c2-a059-e2f52617f4ef",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "22a3e65c-8fc3-436c-9768-f15edf02b4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41486f4-e0b4-4c17-abc3-d11c6c0cd016",
        "cursor": {
          "ref": "4824ebc5-0b0f-44eb-8ceb-4378922ad48a",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "af5f3b70-8e3f-4877-b1a2-e43fbe057f05"
        },
        "item": {
          "id": "e41486f4-e0b4-4c17-abc3-d11c6c0cd016",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c05cac14-0088-4d7b-8704-811165503d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd04bcd-6f9e-4984-8d25-4d3eb6491e54",
        "cursor": {
          "ref": "7cac21bf-c84a-4f2d-8e5f-994c0591f6ea",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "febf205a-ffef-40c7-9387-1953f137f5a2"
        },
        "item": {
          "id": "3dd04bcd-6f9e-4984-8d25-4d3eb6491e54",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "18ca2ba1-bb7f-4695-8068-62dee91c5678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d467a4e-4ecf-4dfb-a761-b9325b1f7988",
        "cursor": {
          "ref": "a9024685-1f56-4068-8aa1-4cb2ead8dd83",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5df4988f-65a9-4772-817d-596796f51db2"
        },
        "item": {
          "id": "0d467a4e-4ecf-4dfb-a761-b9325b1f7988",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f801acb5-cebe-4bdd-8c92-92e2fa03c1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9ab4b2-b136-4cdd-876e-d689de1a1775",
        "cursor": {
          "ref": "c6314eb2-647c-4f76-b7ec-92867fc2a57c",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9cb257b1-4058-4f25-b7a7-388290ae8201"
        },
        "item": {
          "id": "ec9ab4b2-b136-4cdd-876e-d689de1a1775",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f47f5fcd-f347-46c2-bf3d-4f18e74ffc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1a6b37-27d5-4f32-92d3-45da0f4a35f6",
        "cursor": {
          "ref": "1e5aad89-9457-4a6a-8542-aa164094f8a8",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4bee7034-0d3f-4f0f-ada3-b0468f38e5f6"
        },
        "item": {
          "id": "fe1a6b37-27d5-4f32-92d3-45da0f4a35f6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c432e73a-b5f6-4103-92a8-a2722c7034a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69f47a4-c6e4-47a2-97e9-605ea8499899",
        "cursor": {
          "ref": "65eb1546-20de-4d7c-b7f6-e521e16df5b4",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9565e0a7-5d9c-4fc6-92bd-acb4e702b71f"
        },
        "item": {
          "id": "f69f47a4-c6e4-47a2-97e9-605ea8499899",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6a1df78d-0a09-4ecc-985c-c8853c57fd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34319352-f167-48d7-a058-91dbc158fba1",
        "cursor": {
          "ref": "6eea704c-9f74-40ce-879f-3f7a40c2de59",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3c83f797-0914-4ba7-9259-9c3b40725845"
        },
        "item": {
          "id": "34319352-f167-48d7-a058-91dbc158fba1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1a8084c7-0745-4037-a408-e9438715f7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6664b6-0aea-4b26-82a8-a48c9159584f",
        "cursor": {
          "ref": "4e729fa8-7d6e-40f2-83ab-d13c0fad8f4b",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2e9cb914-d356-497b-ad0c-38c382f1804d"
        },
        "item": {
          "id": "fc6664b6-0aea-4b26-82a8-a48c9159584f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8e3f5445-99bf-4a0e-a6e9-cb0ddef722d4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 859,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18793d8c-2180-43f4-8f60-837e5e983b12",
        "cursor": {
          "ref": "c7c378a3-234b-49a0-880a-f7e29907a151",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "338149a1-2c35-4ca2-95cb-e3431190fa4e"
        },
        "item": {
          "id": "18793d8c-2180-43f4-8f60-837e5e983b12",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "28761dd0-d3ca-409d-86e4-e9580692142c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 905,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:47)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:47)"
            }
          }
        ]
      },
      {
        "id": "be35173b-4cf3-4f38-8b92-c379df92ae3f",
        "cursor": {
          "ref": "0d222b6e-7110-4e49-834a-bd436bd6732a",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5397794e-ebcd-41de-b335-17808f73f775"
        },
        "item": {
          "id": "be35173b-4cf3-4f38-8b92-c379df92ae3f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "443e1a31-74ea-4212-b566-e9b79edce874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1562,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca538e3-fe66-4523-b7e4-dd7fc548e004",
        "cursor": {
          "ref": "91733877-97ba-43a9-bbfe-e515d62dad40",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c9aa8e8a-8600-4060-b249-5a7825495684"
        },
        "item": {
          "id": "1ca538e3-fe66-4523-b7e4-dd7fc548e004",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4265c513-e9cb-40eb-aa5b-5119ad831e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1527,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08b8251-65ab-442b-b5bd-39d650381ab8",
        "cursor": {
          "ref": "3af89bec-6da1-4d79-aef1-0523fecef3e3",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c0ced58b-7d3e-460b-8847-7b8ece8e2428"
        },
        "item": {
          "id": "e08b8251-65ab-442b-b5bd-39d650381ab8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5ce8c785-6fbb-4600-9419-833f6b6526f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1160,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ad8f98-6af7-4245-aad1-bf3368ab789a",
        "cursor": {
          "ref": "465e2b7e-c6f7-4d94-ac35-513d4204c924",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0bee81fb-3802-426e-915b-dae68add47c0"
        },
        "item": {
          "id": "72ad8f98-6af7-4245-aad1-bf3368ab789a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cbadc6ad-1da4-4e57-a6ea-8d62b2dd755e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1082,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323f6731-a13d-4c94-be66-921dd946dfd1",
        "cursor": {
          "ref": "1ae4de78-3f62-4348-b5a8-3a497f685d6a",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3d874a64-92be-46c5-83ac-2aae2dfbe994"
        },
        "item": {
          "id": "323f6731-a13d-4c94-be66-921dd946dfd1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dddd04f5-a4ac-4735-b8a9-8ae551d6dc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b494c8-9b87-427d-8307-4c7c32e60589",
        "cursor": {
          "ref": "1b96a5ba-791d-43ca-84f5-42a3ebcfb97a",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "593de7a6-0c95-4c5c-ad15-6c94963e626c"
        },
        "item": {
          "id": "42b494c8-9b87-427d-8307-4c7c32e60589",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2436d49f-0358-4aef-9124-6a7861107edd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 729,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fef916-0793-4228-a3b3-3053121e2eb7",
        "cursor": {
          "ref": "80356cca-9a83-403c-87bc-fc93caecda87",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "796d7b56-9eec-4b3b-950b-b2d0fa9a8293"
        },
        "item": {
          "id": "c3fef916-0793-4228-a3b3-3053121e2eb7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d2cab56c-0242-45bf-8061-8d2c6700158c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e31cd2-4981-4118-be01-c83c38d84356",
        "cursor": {
          "ref": "16fce3d6-61ce-4e6b-8101-0024fad2a842",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e913c611-45f4-4aca-92a7-3a20f09e1eda"
        },
        "item": {
          "id": "c3e31cd2-4981-4118-be01-c83c38d84356",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "003f6661-4440-4645-9031-df2a6304645a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ec8c2f-e0fc-443e-bccf-28651eb2be7b",
        "cursor": {
          "ref": "4db9eda2-4996-4a42-aca4-b3d2fa86106d",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "72b5b542-e710-42b5-9ad0-d91de85b8a2e"
        },
        "item": {
          "id": "d2ec8c2f-e0fc-443e-bccf-28651eb2be7b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0e5d5697-b4bb-475c-895f-07af73c36a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605b3f63-9d12-49f4-850f-2d3c96c112d2",
        "cursor": {
          "ref": "9927684d-4f72-4d10-98ce-c478a765c72e",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3927e265-57b7-4e6c-93a0-c6fa5a2af490"
        },
        "item": {
          "id": "605b3f63-9d12-49f4-850f-2d3c96c112d2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d34fc272-1636-4c5e-b709-12d2e008859f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a5c886-d84a-4388-936f-7d395c447278",
        "cursor": {
          "ref": "093175f9-1092-4df3-8401-fb18ce0a2a36",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a8605d31-0197-4d39-824c-83379c056c39"
        },
        "item": {
          "id": "a3a5c886-d84a-4388-936f-7d395c447278",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "00d62e44-a73d-4425-9afd-cd5954803e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f8b167-09aa-4469-ad07-f69cfdd52d3e",
        "cursor": {
          "ref": "b1f38809-a478-4470-95a9-6d290a7ca886",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2e1493a2-c7d3-4c05-896d-e99a709b7257"
        },
        "item": {
          "id": "75f8b167-09aa-4469-ad07-f69cfdd52d3e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "39f9b89e-b099-43d5-a129-bc66e0cc38b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1168449d-ecd9-4e6e-9686-cb2aa73e08d0",
        "cursor": {
          "ref": "4baebc21-def4-483b-8a1a-d55596d3e219",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "48ea0836-13fc-439e-8172-1c6c28309433"
        },
        "item": {
          "id": "1168449d-ecd9-4e6e-9686-cb2aa73e08d0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9d532099-613a-4fd0-b184-8f328c1cb1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cbf72d-2c6d-4516-903f-c84bde233ea3",
        "cursor": {
          "ref": "110c1b2e-f90a-4841-a803-d2482d600152",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4a766cf9-4f05-4d2f-b80c-c1c0c11d7d4e"
        },
        "item": {
          "id": "c5cbf72d-2c6d-4516-903f-c84bde233ea3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "72d9cfe1-5e2b-41ee-a901-e68ec2c88df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2bb002-1b94-4f5d-bfb7-480be7acb173",
        "cursor": {
          "ref": "72ebf766-3d72-407d-843e-59811c4ecd57",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c68b8a79-81b3-4a18-9844-8d392d2a7b67"
        },
        "item": {
          "id": "ef2bb002-1b94-4f5d-bfb7-480be7acb173",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "43812335-851b-4e81-a0f7-9f842e1419e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833dd78a-9bd7-4433-b59f-582eec70b7df",
        "cursor": {
          "ref": "934f2812-c570-4129-a0dc-44c524502f2e",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8661f67d-23e9-45f6-a5a9-ba227c12541a"
        },
        "item": {
          "id": "833dd78a-9bd7-4433-b59f-582eec70b7df",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8adf9219-9de5-482c-8e97-17fbad5e2a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b274efe-8e23-40b6-a9c2-1b541851b1e5",
        "cursor": {
          "ref": "a9aab8d3-4fd3-4056-84af-a9d22b0da2a7",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d3c069f0-7f54-4882-ba3e-fed94adeb6d8"
        },
        "item": {
          "id": "7b274efe-8e23-40b6-a9c2-1b541851b1e5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d062449b-3a7c-44ca-b272-ed7e0f8dc793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fc239c-bb6f-4a16-b777-32aef94263c6",
        "cursor": {
          "ref": "d6baed79-446f-4f4c-b9df-f6d6749230e5",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "94d40416-e255-4cd4-93c7-c889c13f75f5"
        },
        "item": {
          "id": "b1fc239c-bb6f-4a16-b777-32aef94263c6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "845a2af4-d0d8-47c3-8108-f3a10874638d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a750ce3-8c65-4d91-aa78-202d4ced90bd",
        "cursor": {
          "ref": "4fd1d0a7-0dfa-4e41-a838-6aa793866302",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "03cb89a4-44f1-4de7-9012-c64980ddf7eb"
        },
        "item": {
          "id": "5a750ce3-8c65-4d91-aa78-202d4ced90bd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "aaa54f0b-213c-4688-9448-7e63f6061023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df35ff9-9ce1-475d-bd91-afdafb345135",
        "cursor": {
          "ref": "a20bfa7e-ccc5-47ce-ac88-3b77e398b0ea",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fcf05b0f-6f4d-4646-b4b6-269cb48ac4ce"
        },
        "item": {
          "id": "3df35ff9-9ce1-475d-bd91-afdafb345135",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "32707f99-ebb5-4316-a12c-05a07ebf729f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5042fdfd-11d6-4db7-a34a-c2500cbff53b",
        "cursor": {
          "ref": "5ddb63a8-20f6-4a58-9d47-d9adb6343fc4",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fcac6ec2-b166-4193-be3d-26c3e640c53e"
        },
        "item": {
          "id": "5042fdfd-11d6-4db7-a34a-c2500cbff53b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3f631ba7-207e-43c8-ae8c-b51c7ba0ee54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7afcafc-9dda-45c7-82f0-41ba451bb53b",
        "cursor": {
          "ref": "0a5ac978-2d0f-402e-a8d7-d860abc00361",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "675ee1a5-ae60-4779-97d8-0f679a101262"
        },
        "item": {
          "id": "f7afcafc-9dda-45c7-82f0-41ba451bb53b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "73854e99-c95b-40e3-8cc5-975159247ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407798d7-049a-4a0a-b376-afc8941d8c9d",
        "cursor": {
          "ref": "3f9834b7-10db-449d-8de1-c47f0311ba69",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ee22b890-9519-4131-a9e8-10cb17599f62"
        },
        "item": {
          "id": "407798d7-049a-4a0a-b376-afc8941d8c9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "254efdfa-f057-4735-bee4-9cf46409488f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4481cd7-b1b5-49cb-b7d5-825a8088868f",
        "cursor": {
          "ref": "33994bd0-a7ce-4d4e-989a-61e58eaadd29",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3bc19b36-afe2-475f-b967-95f79669b136"
        },
        "item": {
          "id": "d4481cd7-b1b5-49cb-b7d5-825a8088868f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dfaac7fa-9a95-4bbc-a38c-3514f968cff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4795e69e-a5f7-4595-aa23-c7a467deeb9a",
        "cursor": {
          "ref": "85c8df20-0d95-4639-880e-40dd943c6fcb",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cda3cd9f-0e5a-4af1-a833-301c72381352"
        },
        "item": {
          "id": "4795e69e-a5f7-4595-aa23-c7a467deeb9a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b2f97bc3-cc77-4cc3-8e6c-96b401a2494f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e518f0ea-f09f-46f9-a73f-19c3d969be79",
        "cursor": {
          "ref": "54c889d1-013b-4271-9b3c-dd82019d9812",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8208c087-a4cf-4f45-af79-643ff051eeb3"
        },
        "item": {
          "id": "e518f0ea-f09f-46f9-a73f-19c3d969be79",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a6a20ce1-b17c-48ee-91df-a97e3a5d0cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769e0ae4-9df0-4aad-a58a-6bf2d50f27d8",
        "cursor": {
          "ref": "96dbc2b2-8f42-4237-8dc3-607e0d276c76",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f533b6b7-f19d-452b-ab3b-b40ff5f531ff"
        },
        "item": {
          "id": "769e0ae4-9df0-4aad-a58a-6bf2d50f27d8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0eab3b51-32ba-41ec-a354-b47c1eb57ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97468324-e7f6-4204-8fdb-877ca2c05720",
        "cursor": {
          "ref": "00fdd7a4-bdab-4bec-9e22-f12ebe24677c",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d5ffcbd6-2004-45a1-9ab3-7b9e4be6e815"
        },
        "item": {
          "id": "97468324-e7f6-4204-8fdb-877ca2c05720",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d649d889-f5ed-4a43-8840-befbe3d8a3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886a439a-5f4e-46a3-ba7e-80bd8ade14aa",
        "cursor": {
          "ref": "405de94c-ba50-4cc2-b401-58a6559a4a1e",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f9d50a4a-2429-4deb-a0f8-6c11124f6557"
        },
        "item": {
          "id": "886a439a-5f4e-46a3-ba7e-80bd8ade14aa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9d9f3dc9-48aa-4876-a73c-7a13db846a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec9bb35-7d06-48c1-8da7-45aeef7754dd",
        "cursor": {
          "ref": "aeb8f9be-d2bb-4470-8a38-6a0fbd09d719",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4ebf6122-d296-49ef-bedf-3e89e0ff8b4c"
        },
        "item": {
          "id": "9ec9bb35-7d06-48c1-8da7-45aeef7754dd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3a5c2a15-366e-450d-a258-d802781194e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ab9f5f-1a41-4e80-bb12-c263d7bf8ef4",
        "cursor": {
          "ref": "4bdc9ecb-4b67-419f-b710-111e07f7843f",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d4146903-4f95-4356-940d-517f9c8eb34a"
        },
        "item": {
          "id": "f2ab9f5f-1a41-4e80-bb12-c263d7bf8ef4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7328c3f3-bad2-4968-804f-942bb64cb509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80be3fb-a900-4c3b-89cd-6d9a9364d0ed",
        "cursor": {
          "ref": "175e2776-2147-4645-8b73-c78753660e69",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9503db1a-60d3-4508-9553-d22de9783997"
        },
        "item": {
          "id": "a80be3fb-a900-4c3b-89cd-6d9a9364d0ed",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f710fe5a-6d63-4efb-b1b5-449fa6c2aa23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774fc1a6-ade8-4c98-9ffe-6ff7d8e9ec65",
        "cursor": {
          "ref": "8c577f6d-d8cc-4cfa-9d65-e6eb85f1ab84",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8f921506-2b14-4307-be9b-b17af7c04557"
        },
        "item": {
          "id": "774fc1a6-ade8-4c98-9ffe-6ff7d8e9ec65",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a01794d7-fccc-4dfd-bdf1-08266162e664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76e8e6d-b1b7-4575-b8d0-702dbc7bee70",
        "cursor": {
          "ref": "3e0840dc-bf82-4f03-b50e-9fb685004083",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "af5ab0af-697d-4c6d-aa96-e4f9b4ee6f40"
        },
        "item": {
          "id": "c76e8e6d-b1b7-4575-b8d0-702dbc7bee70",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ff79ed81-b621-49b3-846d-c94edeae07c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89007d31-0355-42bd-9bd6-398892dbc7aa",
        "cursor": {
          "ref": "38a71935-32f6-4fe1-ab53-e0d41129aaac",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "df7c33cd-7dcb-4331-9eaf-34c831b604e9"
        },
        "item": {
          "id": "89007d31-0355-42bd-9bd6-398892dbc7aa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5a3937c0-b2fe-4fcb-9e14-24f06055f043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2efc863-8bca-4542-be18-e6a926e59579",
        "cursor": {
          "ref": "358a3a7c-07fa-4912-8e12-06599b2e5425",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1060c06a-3b66-4795-8141-0d5ac2aa8a6a"
        },
        "item": {
          "id": "b2efc863-8bca-4542-be18-e6a926e59579",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3b84eec9-e03a-4611-9dca-6001785975f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5f22ed-18e0-4326-b1af-a6496179c9f0",
        "cursor": {
          "ref": "6d931391-c6aa-4b24-89c3-8972d237fd71",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "527e9247-f8f8-4c3e-8ebb-1ce83008ab2d"
        },
        "item": {
          "id": "5d5f22ed-18e0-4326-b1af-a6496179c9f0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3d0b5f38-8754-4563-bfcd-8829d89f9e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab303df-6988-4392-b8e7-3a8c9dccbe75",
        "cursor": {
          "ref": "ff2344d5-96df-4105-84b2-0f8d66cdb436",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "181cb3ea-5ec7-4b1d-96cd-e27e15fc556d"
        },
        "item": {
          "id": "7ab303df-6988-4392-b8e7-3a8c9dccbe75",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "38c80c58-bb47-4ab0-a080-cb81dbaf5507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7d974b-8bf7-43aa-a47a-166688b3bef5",
        "cursor": {
          "ref": "cf70d90a-18fb-4f55-a95f-67b3634e1e7f",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "56498271-3f66-4610-bb18-5ad7bb94b49b"
        },
        "item": {
          "id": "9f7d974b-8bf7-43aa-a47a-166688b3bef5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "af236aec-2fd8-4c87-981a-39198a065b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb429a1-7421-4902-8ea9-24aca199756b",
        "cursor": {
          "ref": "cae08b74-9f86-4caa-8200-c330d28bb3a9",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0920ea50-d27e-40d9-917a-f32d12edd6da"
        },
        "item": {
          "id": "efb429a1-7421-4902-8ea9-24aca199756b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1ece52b9-f1c7-4202-975e-d421a3240244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b080fc0f-dce0-44c0-b95c-d2a0953135c1",
        "cursor": {
          "ref": "2ad0ef3c-7028-4cad-8268-8a24ce8c587d",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f1d33f79-46cb-4441-879e-8884aed49d4c"
        },
        "item": {
          "id": "b080fc0f-dce0-44c0-b95c-d2a0953135c1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "612176dd-ac60-4969-9bb8-e88824fb74e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6621fa00-1d30-49fc-a217-12bc371087ab",
        "cursor": {
          "ref": "75c03a3b-9fe5-4e0e-9a69-486bc0f21ee3",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e68292cb-7c62-4234-96d5-2576ac206cd1"
        },
        "item": {
          "id": "6621fa00-1d30-49fc-a217-12bc371087ab",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0a04fa58-7736-4bba-abab-13183f618a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b359344-324d-452e-a696-990d8abffba1",
        "cursor": {
          "ref": "3fc43c91-5581-4f40-aadc-4fe950a2d04a",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b20352be-8df4-413d-8a88-dfa4d509a066"
        },
        "item": {
          "id": "7b359344-324d-452e-a696-990d8abffba1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "eaff832a-18d3-47ed-b2fb-868cad69d52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9e863e-74a0-4da5-ad0e-5e6f92364854",
        "cursor": {
          "ref": "e674de2d-2560-44cb-9684-7d234fcd98de",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8951b5c4-c0e8-4155-808a-abae93045d61"
        },
        "item": {
          "id": "bc9e863e-74a0-4da5-ad0e-5e6f92364854",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d0ab806e-bc97-42ee-83c9-455c3180fdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed925926-e2a1-4a1e-8f3f-360c6a400b11",
        "cursor": {
          "ref": "13d2f2f5-bbe1-4cae-bd31-888a44c3ee27",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5b318ec1-1bd4-469e-90a8-eb83d1d41edd"
        },
        "item": {
          "id": "ed925926-e2a1-4a1e-8f3f-360c6a400b11",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f31950b1-03a1-42d5-a3d8-e55d4a4307e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce03c53-df67-4edb-83a5-c51a3996a103",
        "cursor": {
          "ref": "a4347153-c79b-4c8a-8d75-4abbeba4e4ad",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f4ea90a3-489d-4e7c-87a7-c482a24b1a4c"
        },
        "item": {
          "id": "3ce03c53-df67-4edb-83a5-c51a3996a103",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f23c1893-8ece-419f-b6d4-7c8cc3636073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a8a121-5921-46e3-bef5-1fe956539baa",
        "cursor": {
          "ref": "86d3e6e5-c219-4d5f-8a84-9fdd8110eda9",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "505ca81c-fdd6-4620-a81a-4836eb47a1d1"
        },
        "item": {
          "id": "60a8a121-5921-46e3-bef5-1fe956539baa",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cb4c8d3b-c815-488a-81a4-48160fbba202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb054a40-9f70-4888-9d62-7d5bf3164125",
        "cursor": {
          "ref": "2a69dcae-1062-4446-8be7-3be99c684fdf",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "93e9780a-997c-4d8c-9600-63e5ae935b69"
        },
        "item": {
          "id": "cb054a40-9f70-4888-9d62-7d5bf3164125",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0112e7c9-fa00-4ada-9c99-b9fd5f45e1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbab9a8-8899-44f2-9a9b-1a02074db7a4",
        "cursor": {
          "ref": "98d6c153-0c3a-41fb-936f-6c0cf84615e6",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "34751ab4-1c87-40f6-b0fe-63a44c6defa1"
        },
        "item": {
          "id": "0cbab9a8-8899-44f2-9a9b-1a02074db7a4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e1c1e464-0626-4de6-b910-e89f8cabf033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad44a73-f224-4815-8ace-5669e65b4a1a",
        "cursor": {
          "ref": "06299593-f059-482c-98c3-e7cf7fb7f7d9",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c0d9952a-7eab-4a30-98df-a7c3c126ee27"
        },
        "item": {
          "id": "3ad44a73-f224-4815-8ace-5669e65b4a1a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7e7c9cb9-4de1-411a-b2ff-1c1fe828c255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1036,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d457b2-f14c-49ba-9c1f-612f51fb4b0c",
        "cursor": {
          "ref": "7f47e1ee-d505-4cf9-9413-bfa883f2da4e",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "12490a9c-bbd5-4555-91ec-dbd41d8bb764"
        },
        "item": {
          "id": "11d457b2-f14c-49ba-9c1f-612f51fb4b0c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3c563bec-820f-49b7-a963-5e17b19bbb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1182,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10148b3f-9d94-4a08-83ba-d517730213b7",
        "cursor": {
          "ref": "9133034c-45d9-4a20-860e-d843eae0ab3a",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3f91f243-9329-458f-a42a-33b1e867b22d"
        },
        "item": {
          "id": "10148b3f-9d94-4a08-83ba-d517730213b7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "24731e7b-9bf3-46f4-8a99-13895354d451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1253,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbdda8f-a068-40d9-bff2-aab6b3675687",
        "cursor": {
          "ref": "d522d475-9d10-45ab-af7e-fcb0c34b8762",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "caa56bc9-b214-4a68-9ce6-81431c98b609"
        },
        "item": {
          "id": "bfbdda8f-a068-40d9-bff2-aab6b3675687",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5de97046-03f5-4796-8ad3-15fd9992a3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aefe6e3-f0f8-4946-b8a0-20c8a062fdf3",
        "cursor": {
          "ref": "4a2b3c71-2fd3-4c7b-b7ae-0731cd02dd41",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "88d20c86-0087-45b1-a31f-f531362a539d"
        },
        "item": {
          "id": "0aefe6e3-f0f8-4946-b8a0-20c8a062fdf3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "363cc0d6-d2fb-4bcd-a29f-fe417dcc0fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33595ff6-4e4c-4ac8-b6b5-d1194098dd76",
        "cursor": {
          "ref": "3b12aaa6-6f2f-4027-a814-3554ee298d5c",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e04d0b5a-5f14-4ea1-a8a1-a05628d254de"
        },
        "item": {
          "id": "33595ff6-4e4c-4ac8-b6b5-d1194098dd76",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8d6f11c2-43a0-46bf-a47e-843bf39c8b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696c008c-77a7-47f9-bc49-2c9d011f1c49",
        "cursor": {
          "ref": "e49c1df5-b8ac-464c-b630-0bea321dba60",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6f525756-89f8-4c5a-8c21-dcaba5666aec"
        },
        "item": {
          "id": "696c008c-77a7-47f9-bc49-2c9d011f1c49",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "751975a0-dab5-4513-9cfc-1c094462e4b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9841a289-3054-4f10-9fd4-4e12608f5e82",
        "cursor": {
          "ref": "3230b74b-01cb-44d6-92fa-81acc6f1ce5f",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8f035e63-085e-4468-9c8a-b0374756e304"
        },
        "item": {
          "id": "9841a289-3054-4f10-9fd4-4e12608f5e82",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "57d2ede8-fa0c-4dd2-b780-abda1d78ec7e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 603,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec78e744-3575-4dcd-88ce-42af11ca227b",
        "cursor": {
          "ref": "bfa8e367-355e-4bdf-9d65-ee957e8d8102",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "15996b66-3556-4e6f-b502-a30fbe4f5797"
        },
        "item": {
          "id": "ec78e744-3575-4dcd-88ce-42af11ca227b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ec187099-c547-443a-97f8-13cd63b12105",
          "status": "Created",
          "code": 201,
          "responseTime": 4686,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d01418-e726-4647-965a-9b3136f50f5c",
        "cursor": {
          "ref": "783980bd-6b2e-486b-b5e7-082478380fda",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6a5e337c-b4fd-4214-b2c3-ae5c03300441"
        },
        "item": {
          "id": "55d01418-e726-4647-965a-9b3136f50f5c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "197cf445-254a-4446-81e9-7acae3057e1e",
          "status": "Created",
          "code": 201,
          "responseTime": 4044,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b34f2d-a2d0-48af-8dc4-dc64ae8e4305",
        "cursor": {
          "ref": "39aff332-a9be-4aee-8178-f94f31700ecc",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "509d3981-a0c1-4962-b185-10a888650822"
        },
        "item": {
          "id": "88b34f2d-a2d0-48af-8dc4-dc64ae8e4305",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b3d46dfd-87d8-4a20-8f2a-c40e9df6d96b",
          "status": "Created",
          "code": 201,
          "responseTime": 5748,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ea0657-ff4e-40af-bec6-50e65e465b45",
        "cursor": {
          "ref": "0bf6f236-c5f0-4abe-b7e2-b4457f6b4509",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8ab0ae0a-9757-40bf-a857-9e48660e63ec"
        },
        "item": {
          "id": "a9ea0657-ff4e-40af-bec6-50e65e465b45",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "71b0c692-784f-4845-94ee-efc75775e84e",
          "status": "Created",
          "code": 201,
          "responseTime": 4341,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b68b8d-0a73-4786-9621-2f10d31195d7",
        "cursor": {
          "ref": "bb6fc10f-8039-4072-9f98-0ea3cc75c292",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "39271db9-deb2-4f5a-86b1-9287507dc876"
        },
        "item": {
          "id": "e3b68b8d-0a73-4786-9621-2f10d31195d7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f9b9e76c-7160-4116-84a1-a06111799a3e",
          "status": "Created",
          "code": 201,
          "responseTime": 7878,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "176e9218-1eec-4f6e-9a1e-68311d72da04",
        "cursor": {
          "ref": "d78e3fcc-d67d-4b70-a0f3-78e61d05c7da",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e232ae07-3f25-4d6d-a0dc-5c0561332bed"
        },
        "item": {
          "id": "176e9218-1eec-4f6e-9a1e-68311d72da04",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3d01c07f-92e3-408c-be26-13088395dd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176e9218-1eec-4f6e-9a1e-68311d72da04",
        "cursor": {
          "ref": "d78e3fcc-d67d-4b70-a0f3-78e61d05c7da",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e232ae07-3f25-4d6d-a0dc-5c0561332bed"
        },
        "item": {
          "id": "176e9218-1eec-4f6e-9a1e-68311d72da04",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3d01c07f-92e3-408c-be26-13088395dd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8183a2-bc38-4824-9aa6-ebc8022214c3",
        "cursor": {
          "ref": "97b52d02-1383-46a8-ae95-fb9193436643",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ac62dbab-50ca-41ba-8dac-cc60e930e698"
        },
        "item": {
          "id": "dd8183a2-bc38-4824-9aa6-ebc8022214c3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "88ba3e6a-5180-49eb-9e59-dfb583be7751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3da10b-a0de-4735-baa2-25ffee8d17ab",
        "cursor": {
          "ref": "5a974993-064d-4fe0-a1c3-3ce85d52300e",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b0692264-7158-411a-b307-cfaf8832cf01"
        },
        "item": {
          "id": "db3da10b-a0de-4735-baa2-25ffee8d17ab",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cfcb20f5-626f-4dc9-92b5-b435054ebde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fc0c17-9691-43a8-a738-5045fc3071d5",
        "cursor": {
          "ref": "8fb7a62b-89d0-462f-8cd2-52f63338311d",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0899e30a-0cd2-4ee8-877d-ad48e678c09b"
        },
        "item": {
          "id": "c4fc0c17-9691-43a8-a738-5045fc3071d5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "52bc9ec6-09b7-4260-ac8b-00a6b842f48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42803c6-6bd3-48a8-aad7-dcc93515686f",
        "cursor": {
          "ref": "023b6005-3262-4d08-8de5-22121cae38b7",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b138813d-d2ba-4681-a10d-2b614839f921"
        },
        "item": {
          "id": "d42803c6-6bd3-48a8-aad7-dcc93515686f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "738b5ae9-cefe-40ac-bc9b-8988e6ef0e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8fb8ce-00f5-4df7-8b00-d4e0e7b66f70",
        "cursor": {
          "ref": "5f95ef81-c17a-47ad-b3e9-9a32837a9763",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "353c3a43-18ee-4de6-a744-d798be169738"
        },
        "item": {
          "id": "3f8fb8ce-00f5-4df7-8b00-d4e0e7b66f70",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3df43c33-9b5a-4fce-b33e-94a52ecaf56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed3749b-7351-4d8e-9067-e06c28f52742",
        "cursor": {
          "ref": "eec946ab-c17d-4b2f-b6cc-a2be3d364fe2",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4eb55dfd-c58d-428a-894a-bb501faaa31b"
        },
        "item": {
          "id": "5ed3749b-7351-4d8e-9067-e06c28f52742",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cf0ad1a6-66f8-4236-a7e2-ce42b181bbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be11f815-edc8-4449-a6a4-f81f3595d2c6",
        "cursor": {
          "ref": "2888a56e-d769-44cd-89cf-23e4462fb663",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dcaa2023-0094-47ae-b17d-e14a81e90c26"
        },
        "item": {
          "id": "be11f815-edc8-4449-a6a4-f81f3595d2c6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6c0336c2-7e9a-4fca-9057-160eb74ede49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fdb096-e841-49d9-8fd7-526b637da96e",
        "cursor": {
          "ref": "5dc65c6b-4f4f-45bc-8234-d2bded0adcd9",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "906440a5-4a94-403f-8448-af0a9c729e42"
        },
        "item": {
          "id": "01fdb096-e841-49d9-8fd7-526b637da96e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3cbaed70-6073-48b2-85a3-05ce5a8f1c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a85336-568c-4834-a6fb-e4eae3ad6b0a",
        "cursor": {
          "ref": "712255b2-4610-46d6-8524-6743b2182667",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2f6115b0-ae06-49b8-a0a6-0e3fec4fc82d"
        },
        "item": {
          "id": "c2a85336-568c-4834-a6fb-e4eae3ad6b0a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "61b48230-3857-4a30-8056-26b4153132b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d86ddf-2fba-4eb5-8f32-d0422ec303e8",
        "cursor": {
          "ref": "75751d02-fb79-4848-b68e-a804d7e1d085",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1de583a7-3e8d-40d9-9d42-64bffc17e282"
        },
        "item": {
          "id": "a0d86ddf-2fba-4eb5-8f32-d0422ec303e8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a065bd4c-6cfe-41c3-ab7b-f4a3571e7460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0191277f-d4b0-4465-b9ee-2c4093c9ef0b",
        "cursor": {
          "ref": "91130986-020f-4cf1-892e-bc87ac306d1f",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b89842c7-fbcf-4780-963b-e1d66a959824"
        },
        "item": {
          "id": "0191277f-d4b0-4465-b9ee-2c4093c9ef0b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2e5c480b-7035-40df-a42f-b63a2ad652cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c41943-bcbf-493e-a91d-e4ebca062bc8",
        "cursor": {
          "ref": "4269e416-f97c-4e19-8cff-91b6fbc7c2c9",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "aec08fd8-878b-4eda-b62b-0a2c73212c9a"
        },
        "item": {
          "id": "82c41943-bcbf-493e-a91d-e4ebca062bc8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2ae577d8-f6f1-4708-86f1-d77d46c46b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf06569-99ad-4408-b0f5-b565b8732e7d",
        "cursor": {
          "ref": "3dfcb540-dc13-40f4-ac3d-5d08248d728d",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "96f96182-954c-4de0-bc27-62142c23b2ae"
        },
        "item": {
          "id": "bcf06569-99ad-4408-b0f5-b565b8732e7d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "28efde0d-f249-4bbc-b099-73cc01f9af0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea67c42e-5a1f-41b9-a39c-163a307e9f82",
        "cursor": {
          "ref": "27173932-9433-4ede-abab-68eedeedf6ef",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "45fbafa0-7b88-407a-b082-e1678c0630c4"
        },
        "item": {
          "id": "ea67c42e-5a1f-41b9-a39c-163a307e9f82",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "905de80c-4cda-45ec-a6d1-72490520fd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dbebd5-30eb-4cf2-b43e-3d7506f31488",
        "cursor": {
          "ref": "d2c839db-2300-48da-81ad-35cda374adf3",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f1dbe98f-0439-441d-9fc0-4303af24d746"
        },
        "item": {
          "id": "36dbebd5-30eb-4cf2-b43e-3d7506f31488",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "14d722b3-bdfd-442e-8171-d5295b3360e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e48f9b7-b40b-4a28-8bf5-32e1aa4d35d7",
        "cursor": {
          "ref": "1087d02e-7689-4506-aa5a-8221938d9eb4",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "85ee8d1b-b3fd-4eda-ba8c-f41aadc4c20f"
        },
        "item": {
          "id": "3e48f9b7-b40b-4a28-8bf5-32e1aa4d35d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "90bfdf3e-4f8a-4ce3-9532-e04099fdadc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8cce6b-a217-44a2-93be-9a489851f414",
        "cursor": {
          "ref": "168b2b36-a1cd-426c-8934-5795b64a4bf9",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "844d226b-21f4-4fde-849c-323b2521c26b"
        },
        "item": {
          "id": "fe8cce6b-a217-44a2-93be-9a489851f414",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1df0366a-b160-43b1-ae1c-cca1fe8a7ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8d57b5-26a2-47bc-b52d-1226dff077b3",
        "cursor": {
          "ref": "1524878d-89bc-484d-9975-c8fae6d8e125",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e021c26d-efaf-47cb-9bf2-f4ed424927d5"
        },
        "item": {
          "id": "6f8d57b5-26a2-47bc-b52d-1226dff077b3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cbcaef76-d7da-4f14-8bcf-4a7827635d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655d9443-3823-456d-b703-4dad59f1a112",
        "cursor": {
          "ref": "048db632-0852-42fc-b1c9-7b10affcef1d",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "36db6d59-3923-4ea2-817c-092ea4b0dfb4"
        },
        "item": {
          "id": "655d9443-3823-456d-b703-4dad59f1a112",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f86fb304-a0a6-4799-932d-031fa4fac331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d5abb9-bfd4-4cb0-905f-706b24206c41",
        "cursor": {
          "ref": "a9bc5078-7e83-4fb4-be02-37b9d804c97a",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dd0bafb7-f93d-472d-93f3-2486f18bdca6"
        },
        "item": {
          "id": "b8d5abb9-bfd4-4cb0-905f-706b24206c41",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ef0b23d5-4297-465e-9f05-85db70efbd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b6204b-9278-4004-8779-ee7aa9ea22d8",
        "cursor": {
          "ref": "569d3d0e-fc94-485b-a61f-735fb89cc60c",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5918f948-a7d3-4881-8112-8f4bb59e3693"
        },
        "item": {
          "id": "97b6204b-9278-4004-8779-ee7aa9ea22d8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9f8bad35-20a4-46c7-ae4e-311d915a89f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3ffd1b-8735-430b-a135-1153333d10bb",
        "cursor": {
          "ref": "8d1d8bbf-cc94-4f3d-8b53-181f5dfec774",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7ffde9db-e702-41ff-8926-6b65eb18ca10"
        },
        "item": {
          "id": "0a3ffd1b-8735-430b-a135-1153333d10bb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "00dcbfd8-e7e1-4804-b5f1-85deaee7a419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c8d8e8-574d-446e-bfc8-2a5689cf2d40",
        "cursor": {
          "ref": "64ee28c9-7e4e-4a07-a696-716d4bc2d76b",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "40997df8-56cb-4c8d-a527-76c159eca014"
        },
        "item": {
          "id": "f0c8d8e8-574d-446e-bfc8-2a5689cf2d40",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c90d5d09-97d5-4b1f-8309-ac251c3270a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060cc052-6715-46aa-aa3c-8e67629a5494",
        "cursor": {
          "ref": "4748f993-c6d9-4095-a87b-223ac879c590",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aff37287-396e-4ef3-bdc4-48ecf6e24a0b"
        },
        "item": {
          "id": "060cc052-6715-46aa-aa3c-8e67629a5494",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "404acde3-f3d2-4fe7-a65e-4a040b51fd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3f6b24-e543-4414-b68f-88c34c4215a3",
        "cursor": {
          "ref": "cb7e5f8b-8dc9-4d9d-a582-a907ea69fdc6",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b4f8665b-753d-4893-99a0-f45bc8f052ee"
        },
        "item": {
          "id": "ce3f6b24-e543-4414-b68f-88c34c4215a3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c9edc5ad-6a98-415b-9dac-526429eb5967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29498abd-7e75-451d-9a8f-97f8acb04034",
        "cursor": {
          "ref": "d1619c2f-a43e-4ab0-9277-41ad5a3bbc39",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "599501ba-37df-4f71-a88b-9b58ac659b57"
        },
        "item": {
          "id": "29498abd-7e75-451d-9a8f-97f8acb04034",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9835d5df-56fc-47b4-b582-8c68dab3d588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67092870-f9a0-457c-ade8-1bb38bc1d324",
        "cursor": {
          "ref": "e600359d-1ecf-449f-a793-a9ac4e1a4a0a",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cf786a4f-d2b2-4cf3-adb6-89f0401fae12"
        },
        "item": {
          "id": "67092870-f9a0-457c-ade8-1bb38bc1d324",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9d702342-985e-4e8f-a4b7-169ddb320545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c44dea-c321-4787-ae53-ec339c7b0b08",
        "cursor": {
          "ref": "00493cbd-9cf6-4f38-8417-7a853e79b669",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6004f5ac-c51d-4708-b8d4-6f7f2530708e"
        },
        "item": {
          "id": "38c44dea-c321-4787-ae53-ec339c7b0b08",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f17bffda-5b9d-4fd7-9ce7-c6dc8e3ff755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa5e935-be35-448b-b493-af0ffd871940",
        "cursor": {
          "ref": "e845310b-0aaa-4d05-8d72-0aa052466a21",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f74665de-693c-4e3f-947a-3200dd24ac3c"
        },
        "item": {
          "id": "efa5e935-be35-448b-b493-af0ffd871940",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b43da96f-56d4-4c1f-a26e-2601cae8a4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8daafc-a49b-4367-a5d1-49ebcfb39872",
        "cursor": {
          "ref": "08b6ca4a-1ac8-4cb3-b16c-0a945a50c1f9",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "354c11ba-ceab-4af9-819a-118ec9eafae7"
        },
        "item": {
          "id": "1e8daafc-a49b-4367-a5d1-49ebcfb39872",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2da962ed-380a-4e74-af57-924d2a5b0081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d009a9d-d085-4b90-bdfb-d644be9f46bd",
        "cursor": {
          "ref": "3473e827-20c0-414d-8fdf-aac8e81930de",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c1a39cf2-3c5e-467f-b157-dde41295ac69"
        },
        "item": {
          "id": "8d009a9d-d085-4b90-bdfb-d644be9f46bd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "eed3b36d-198a-48b9-b314-a789da115730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769b5b41-4e7f-4efd-a9d2-ac23f89a775b",
        "cursor": {
          "ref": "b895271d-b360-48d5-b616-5c916c1e67c3",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dcf42e8d-53ef-41fa-a23f-070a30198573"
        },
        "item": {
          "id": "769b5b41-4e7f-4efd-a9d2-ac23f89a775b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0750000a-5dd6-4bb6-a6c3-6487b9063e48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30102a8f-2d20-4ba7-b405-bfab3fda9f03",
        "cursor": {
          "ref": "83c698b8-7d12-42c2-96f8-68e39e57eee5",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2a94f681-9a78-4229-826d-e160715acf91"
        },
        "item": {
          "id": "30102a8f-2d20-4ba7-b405-bfab3fda9f03",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "70849b73-c37c-4d47-9581-46304fc0d101",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 568,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d78460-9952-481a-819a-e1c0467e7649",
        "cursor": {
          "ref": "4cbd0f9a-5cf7-42b7-8bb6-9871a8bb92e9",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "66cf5d6b-4968-4e4e-9c43-03228364716e"
        },
        "item": {
          "id": "41d78460-9952-481a-819a-e1c0467e7649",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "48d45825-16d5-4bb7-9fa0-080f8abb6d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d78460-9952-481a-819a-e1c0467e7649",
        "cursor": {
          "ref": "4cbd0f9a-5cf7-42b7-8bb6-9871a8bb92e9",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "66cf5d6b-4968-4e4e-9c43-03228364716e"
        },
        "item": {
          "id": "41d78460-9952-481a-819a-e1c0467e7649",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "48d45825-16d5-4bb7-9fa0-080f8abb6d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc8c61e-1f6e-4699-850d-43c266e4451c",
        "cursor": {
          "ref": "0372ce43-13b6-43c4-be59-6896aad58a4e",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4f6747d5-a339-48d1-9683-1b642f2e2800"
        },
        "item": {
          "id": "ebc8c61e-1f6e-4699-850d-43c266e4451c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "49303d2b-bf4a-442c-af9c-73bc9b2d17c6",
          "status": "OK",
          "code": 200,
          "responseTime": 342,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "f9d67a96-a0f6-4216-8e91-0b9e9ff32c7e",
        "cursor": {
          "ref": "acc99d57-87c4-4cb5-b5ed-1b4e0e636c4b",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "907ba834-ab1a-4bab-8791-c3bb6af82f85"
        },
        "item": {
          "id": "f9d67a96-a0f6-4216-8e91-0b9e9ff32c7e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "95f8eea8-070a-4ddf-bb70-96e2df3417ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033b39ef-6102-47aa-bdde-e363b1ce4046",
        "cursor": {
          "ref": "4c7216ea-721b-4f1f-865e-e550762f2562",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2f3decad-efa1-4720-a6c9-aa1f3bd75c84"
        },
        "item": {
          "id": "033b39ef-6102-47aa-bdde-e363b1ce4046",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c12cc2e1-46e0-4696-9a7b-5d90e9a7a37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2fcffa-8b4b-4cd9-8809-4adf7121c60b",
        "cursor": {
          "ref": "2dbc2319-1a04-41da-93dd-27bf820c216b",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1027575a-071d-4059-814d-075a7f86afe6"
        },
        "item": {
          "id": "fa2fcffa-8b4b-4cd9-8809-4adf7121c60b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "01fa842a-9dca-4c40-822d-68a0bb63bbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d714da-0b77-41fb-9e49-754f4652f179",
        "cursor": {
          "ref": "189f4253-f8f8-432f-b0b3-f95568cb3b2f",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5992e3a8-f691-4762-926a-40c2bee66ddb"
        },
        "item": {
          "id": "d9d714da-0b77-41fb-9e49-754f4652f179",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "93f00cd0-3cd7-4cdd-a6f8-79c2a699e362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a94460-97d7-4278-b9c9-10b38cc0c86a",
        "cursor": {
          "ref": "14b3a518-987f-4842-b569-cc26ee759816",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1d4c6f81-6b6e-44b1-86bc-ef3277cdee40"
        },
        "item": {
          "id": "43a94460-97d7-4278-b9c9-10b38cc0c86a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "88b3f452-5827-4202-99ac-7e9b03d15b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb2e7fa-ce1c-4586-b89f-e1003bfe1994",
        "cursor": {
          "ref": "d3901bb1-6cff-42d1-9360-4fa499773890",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a598ef09-ac9f-427b-8f3c-b04d3d0d80bf"
        },
        "item": {
          "id": "deb2e7fa-ce1c-4586-b89f-e1003bfe1994",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ba10aa21-8779-483f-b4cc-683beb7d69ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49de9965-191a-41ba-b798-e5664f3b4485",
        "cursor": {
          "ref": "60df93f7-4a50-4289-be00-a0ec27d59945",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cb9707d2-8a16-4d84-9d28-007ca2ac394f"
        },
        "item": {
          "id": "49de9965-191a-41ba-b798-e5664f3b4485",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a35614cb-b596-46c9-a358-32bf42a21cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b8547f-d0c3-4a91-b2b7-20cfc4d04538",
        "cursor": {
          "ref": "30980d12-e193-4d08-9ad8-9bb5a5968f04",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "229723f5-d08d-49ee-a507-9d2a51e33d8f"
        },
        "item": {
          "id": "73b8547f-d0c3-4a91-b2b7-20cfc4d04538",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "17807d66-3c10-4192-b095-359048169e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bcf253-ffb8-4a50-8ec5-867d75d87657",
        "cursor": {
          "ref": "9fb41136-d254-4529-871e-e24285e3f90c",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "808cde8b-d7a9-4a8d-89f9-1330f8bfd219"
        },
        "item": {
          "id": "d8bcf253-ffb8-4a50-8ec5-867d75d87657",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6cf86096-4364-40b2-8d9c-520ead4b08a2",
          "status": "OK",
          "code": 200,
          "responseTime": 384,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "f9146889-df76-4781-8270-03679218cd27",
        "cursor": {
          "ref": "34c08ef0-32cd-443c-8a0b-04fa9f0b2d79",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7048a207-791f-49aa-a67c-45a2589cf80f"
        },
        "item": {
          "id": "f9146889-df76-4781-8270-03679218cd27",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bcc76b55-8e86-40cd-869b-88da528545fa",
          "status": "OK",
          "code": 200,
          "responseTime": 400,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "d531d3b4-8c7f-4093-933e-6bc13a9a00cb",
        "cursor": {
          "ref": "40f06486-0e22-40ea-8494-bf5effb16428",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e5422210-430c-443d-8eee-6f37a2e99120"
        },
        "item": {
          "id": "d531d3b4-8c7f-4093-933e-6bc13a9a00cb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c908e4a0-6dcc-4bcb-9dbb-c20d7f7f5809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee6beb7-c50a-4437-b310-85d35d62a546",
        "cursor": {
          "ref": "d4dfbd0e-f6eb-4f43-aac2-244a6182b0cb",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f3834e1e-c390-49f0-bed4-4ea6d1c8d0fb"
        },
        "item": {
          "id": "eee6beb7-c50a-4437-b310-85d35d62a546",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "faf864c5-1b00-4e49-a7b8-3bbc01cad9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68eee72a-10c7-4dbf-8919-05d7ce3c871d",
        "cursor": {
          "ref": "b2fd05b8-c603-43c6-969d-08add926362f",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e37cd0ed-4090-4437-bdb4-bc9e82c94c22"
        },
        "item": {
          "id": "68eee72a-10c7-4dbf-8919-05d7ce3c871d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "84e3aa52-f13c-4b22-b7f8-65418b6c64c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bc69ad-e9ee-4347-a94f-331160231e6f",
        "cursor": {
          "ref": "da59cc76-0844-4c1e-98a8-ac4480b41d27",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2091e5a8-a9e9-4013-b33b-a507bddd5d95"
        },
        "item": {
          "id": "e2bc69ad-e9ee-4347-a94f-331160231e6f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5b758c1f-6daa-4756-a9d7-21c71b6ae472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326ed4f4-62a2-4c8f-9442-99f4710ba3b1",
        "cursor": {
          "ref": "30058e96-c428-415b-937d-139aeaefc6c0",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4706d655-7862-4dbc-ab19-e0b44c19b6cf"
        },
        "item": {
          "id": "326ed4f4-62a2-4c8f-9442-99f4710ba3b1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c7087f2e-1215-4461-a103-b4d4dbe8329a",
          "status": "OK",
          "code": 200,
          "responseTime": 390,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:160)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:160)"
            }
          }
        ]
      },
      {
        "id": "a4a17517-4bed-430d-bef8-84abdd9dad1d",
        "cursor": {
          "ref": "b2a012ed-d003-45af-a646-f07a83692915",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "71545b0e-ae8c-49bd-bb41-296946c8740f"
        },
        "item": {
          "id": "a4a17517-4bed-430d-bef8-84abdd9dad1d",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "9465fbaa-7722-4dbb-b777-80a2ee4646ef",
          "status": "OK",
          "code": 200,
          "responseTime": 1690,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "7841244b-f373-4b10-8093-a1417be7cd82",
        "cursor": {
          "ref": "1592191a-7ea7-494f-9381-91f39b9e1526",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "08750d2f-4a66-46cc-962f-8721be86fa2a"
        },
        "item": {
          "id": "7841244b-f373-4b10-8093-a1417be7cd82",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ac8206fe-e5e1-45c6-b275-b8176fdfdd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d5680b-4b76-4d08-b640-a079677db759",
        "cursor": {
          "ref": "4d6f2be7-bbcd-4f59-9604-ba84affcae28",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f7a81cb7-1733-43fa-b7a3-4a434fc0a59e"
        },
        "item": {
          "id": "86d5680b-4b76-4d08-b640-a079677db759",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1a0d7cc0-3382-43c7-a02e-0cecdc303b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefc3d4a-298f-4191-ac15-136748084d78",
        "cursor": {
          "ref": "6ea8ce5d-74cc-4201-a1af-3771a06fed1d",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c2fad25a-41da-48b1-bb89-191ac71ef850"
        },
        "item": {
          "id": "fefc3d4a-298f-4191-ac15-136748084d78",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f07f87ab-f098-4607-b810-21e4f4503241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3336d1-fa63-4dcc-9a03-ade8cacde203",
        "cursor": {
          "ref": "a28bd2ec-cc9f-48fd-b6b4-d56fd3fceb34",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cdce1fb2-d52f-4a72-9fa7-915b4a96c178"
        },
        "item": {
          "id": "ef3336d1-fa63-4dcc-9a03-ade8cacde203",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "44ffa1c3-03cf-4e2e-9ef5-76995ece5902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a674c5c-66c8-4713-b8d3-434f42b3adcb",
        "cursor": {
          "ref": "ebabbcf8-258e-4ea6-b37b-c0d10e9c99a3",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ddaee20d-0c84-466e-8058-8f849866e7b8"
        },
        "item": {
          "id": "8a674c5c-66c8-4713-b8d3-434f42b3adcb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dfb86775-b0aa-4905-a7ff-df7028a27582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f951fe-6a83-4675-9fbb-9c9407464ec2",
        "cursor": {
          "ref": "4b5efc07-a920-4c9a-95c6-a167ec73189c",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e243c967-4d8c-44aa-b3fb-47e6251d7ad2"
        },
        "item": {
          "id": "26f951fe-6a83-4675-9fbb-9c9407464ec2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d9183bec-906c-482c-bc4c-7be29bd93f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edf7b09-4057-4e7b-8d41-bc6ab88a5cf9",
        "cursor": {
          "ref": "63a49c24-2763-48a2-b883-d7177bdce6ee",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1d1d2d9c-1a43-4c17-845a-e72fc75b89ef"
        },
        "item": {
          "id": "1edf7b09-4057-4e7b-8d41-bc6ab88a5cf9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1821047c-4677-4f4b-9cc4-d5fc6e541556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4991838-0453-45dd-8a5c-710add19a10a",
        "cursor": {
          "ref": "74dfd6db-9cab-49e6-a6e5-b105817203c5",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "65a7011c-b3f1-4508-bcdb-c9e60c5cc53f"
        },
        "item": {
          "id": "d4991838-0453-45dd-8a5c-710add19a10a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d66affc1-11a1-4c51-af64-245b8715c440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a30abc-a737-4d38-b2c3-d457b9f596ea",
        "cursor": {
          "ref": "941e7f8a-e449-48b7-83c2-7606ae30d908",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "32a46cc8-1c69-49c1-8dc3-ba4f1d57ed7f"
        },
        "item": {
          "id": "57a30abc-a737-4d38-b2c3-d457b9f596ea",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8c311caa-6ac9-49d7-ae32-31b25ec98dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689c2f95-5b95-478b-9333-d13a61be4ea9",
        "cursor": {
          "ref": "44c81bdc-de5f-43db-94bf-42f5d9cc2286",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cab6c014-7ae3-41dc-a58b-4397f892ce58"
        },
        "item": {
          "id": "689c2f95-5b95-478b-9333-d13a61be4ea9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "173cd5ac-8a43-40d0-bd0f-7a1d778b6dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c45570-a34f-47c8-93e7-5c04bc894999",
        "cursor": {
          "ref": "94846cd4-7de3-4a08-a3bc-a59532d5ddfa",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3d20d244-3508-4890-8c74-557bdaed1596"
        },
        "item": {
          "id": "96c45570-a34f-47c8-93e7-5c04bc894999",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "544a85c7-6299-478c-ae66-df2867074855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c1e080-073b-4a10-91bf-2a65d88d4d6a",
        "cursor": {
          "ref": "d270e2c7-4764-47ee-8f06-145070807445",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "19cafd4d-0db0-440e-95f3-ddd414d286c8"
        },
        "item": {
          "id": "75c1e080-073b-4a10-91bf-2a65d88d4d6a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ed9a41f9-f305-446c-b4eb-d5e6de9a279a",
          "status": "OK",
          "code": 200,
          "responseTime": 357,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "7ba16010-022f-4e17-9b36-d97cafcbd9c8",
        "cursor": {
          "ref": "3364be7f-dbc9-4a46-bfdc-76659a1231fe",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "92f84427-6eed-459c-9381-86e241519d8c"
        },
        "item": {
          "id": "7ba16010-022f-4e17-9b36-d97cafcbd9c8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3ee3b2ab-2ba4-4ac0-b343-3b5796abc495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee873db7-15b2-4924-8c99-090db4b91520",
        "cursor": {
          "ref": "b7a63d29-b0a5-4191-8f68-9f5cf351252b",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1487bbac-f150-40ad-8370-26ec3175802b"
        },
        "item": {
          "id": "ee873db7-15b2-4924-8c99-090db4b91520",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "48cb667d-45f4-41f2-b221-06aa87ffddc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12f3300-2584-4e5c-993a-e6c3c4123ebf",
        "cursor": {
          "ref": "3d29a3f9-bebb-4f53-9d27-6d27ae829ea6",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ff7b51b9-4c07-4d15-864c-47c897765ce5"
        },
        "item": {
          "id": "e12f3300-2584-4e5c-993a-e6c3c4123ebf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f7326d7e-8081-4b92-b74a-d9491a7d69b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08480046-0930-4e19-b45a-f76f928cedb5",
        "cursor": {
          "ref": "a3c3c143-2ee5-4841-a094-f470839d2958",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1686bad8-4236-4362-aff9-71a15cb9fa34"
        },
        "item": {
          "id": "08480046-0930-4e19-b45a-f76f928cedb5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1f33f818-6552-48bd-b21a-defc470e1b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1647db13-3119-4b1a-8e9e-be2dcd4e4ff7",
        "cursor": {
          "ref": "e41e0735-c150-448b-b85b-14719c14aa8e",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8cb8dbbc-bb18-4eaa-9ca7-3f4ca854d8e2"
        },
        "item": {
          "id": "1647db13-3119-4b1a-8e9e-be2dcd4e4ff7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1e225761-e901-440d-8302-8382778a4e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6bb5b3-2f43-430b-8d73-a11d81af6486",
        "cursor": {
          "ref": "5cbe11c4-a7d0-4835-bef0-f8ee48b34169",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "52c283bc-1896-4769-bafc-fcc97be06919"
        },
        "item": {
          "id": "1c6bb5b3-2f43-430b-8d73-a11d81af6486",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6d1df167-e840-4d20-bd0f-13bd2e6bc5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1187,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c12ae2-99e1-49fc-b62d-e2b369fa41b0",
        "cursor": {
          "ref": "02c7e965-2ce8-4f68-b316-f55d01a75258",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "60ed40f6-726c-431c-9e17-aefd9378a3e8"
        },
        "item": {
          "id": "03c12ae2-99e1-49fc-b62d-e2b369fa41b0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fe23dcff-f9c4-4aff-97fe-1e425aa82311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df705221-7e4d-43a0-9e68-251a604ecd44",
        "cursor": {
          "ref": "ea0aa9bf-3e4d-40db-91dd-5981d41e3a1d",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "19037be6-d544-433f-b5eb-b1d144487a6b"
        },
        "item": {
          "id": "df705221-7e4d-43a0-9e68-251a604ecd44",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bed293bb-380d-468f-9f80-563c740157bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1215,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5db014-d498-4616-bb73-f6a0a5826969",
        "cursor": {
          "ref": "4733f060-f090-4254-b5af-e7184d597b7a",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1603f211-347b-4ed5-80e6-47af5efd155f"
        },
        "item": {
          "id": "5d5db014-d498-4616-bb73-f6a0a5826969",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bb7a23e3-c3b2-4e3c-9889-9b51d166bff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1177,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8f5d47-e8b9-46cf-8c29-0a2c669ec4b0",
        "cursor": {
          "ref": "e6a44ab5-2394-48a1-84a1-7c57c40e90ae",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "dbae8d69-8b0f-44af-b3d7-8ea07d5c080e"
        },
        "item": {
          "id": "af8f5d47-e8b9-46cf-8c29-0a2c669ec4b0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7466a3c1-8e75-498d-af17-7ed8891b76ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1166,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8743d460-450a-419c-a352-6538aa7e72f3",
        "cursor": {
          "ref": "b10f41f0-f94a-49d6-8cdc-03806e5bc11f",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2926b32f-185b-4ee0-a3bb-c8d3b053ca5f"
        },
        "item": {
          "id": "8743d460-450a-419c-a352-6538aa7e72f3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aa1e52a3-4128-4871-8825-b695a5dda4de",
          "status": "OK",
          "code": 200,
          "responseTime": 1093,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:184)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:184)"
            }
          }
        ]
      },
      {
        "id": "eaa8ed54-cb65-4a58-a673-70721c26315e",
        "cursor": {
          "ref": "070b6940-3113-4533-90fd-7fd0f5bee51c",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0e188d4a-d2af-4040-aad8-bb277988d38e"
        },
        "item": {
          "id": "eaa8ed54-cb65-4a58-a673-70721c26315e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "eee37e7a-9494-49c3-baee-83995bf460cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893661d9-1009-4e1d-a7eb-bfac8cef40a5",
        "cursor": {
          "ref": "d2080cb1-6b8f-48f5-af4b-c1d94a559c27",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c3bf0572-88f3-49bc-aac1-95c4288063a7"
        },
        "item": {
          "id": "893661d9-1009-4e1d-a7eb-bfac8cef40a5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7bfc5e30-8e52-4cdc-b3b8-b8adda2fcc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b983b41-0d54-4e8a-8650-5c2dbab2a960",
        "cursor": {
          "ref": "f436da74-573c-4959-beb5-9cd338e501e0",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fae02bac-fad0-4596-972d-554ced7b3042"
        },
        "item": {
          "id": "4b983b41-0d54-4e8a-8650-5c2dbab2a960",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2772a872-a361-4bd4-8b8f-4c24901b82ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388cd23f-7e4b-4428-b86a-b678599467c4",
        "cursor": {
          "ref": "95759300-0e2e-49a5-985b-f15076d90e61",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "64acd104-0bf7-403e-8d24-8fa4bd4d128e"
        },
        "item": {
          "id": "388cd23f-7e4b-4428-b86a-b678599467c4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1de1f41a-692b-48c6-8389-52b8f47cbc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f39123-6f03-4a03-94e5-a2c2ab4231d3",
        "cursor": {
          "ref": "41a5418d-5c14-42ba-8ddf-aef8e387836f",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "69a7f191-f3f3-4d70-bb85-e1ef97cd2e28"
        },
        "item": {
          "id": "90f39123-6f03-4a03-94e5-a2c2ab4231d3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e3a08513-9ea1-4230-9b89-ea81bdb68a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb92e26c-8f87-4bed-ad80-3aed9f81bff0",
        "cursor": {
          "ref": "f95a645a-1d7e-40d8-8f90-527932d2f25a",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dfee6d38-ff4c-4e38-8f13-19c87786db7e"
        },
        "item": {
          "id": "cb92e26c-8f87-4bed-ad80-3aed9f81bff0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d11e08d2-7c2f-4150-b29e-7cec39e790e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215929d8-e761-4ef9-b3e3-af5fa7ffee0d",
        "cursor": {
          "ref": "1f4ab0d0-5d11-46b4-a499-91d00a38ab48",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "26d46f8a-4ad1-4905-b468-15f2106634e1"
        },
        "item": {
          "id": "215929d8-e761-4ef9-b3e3-af5fa7ffee0d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3f011b83-3cf3-4f85-9bf8-eb9c6b7caa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4da129-10e3-405c-b9cc-848940b0369c",
        "cursor": {
          "ref": "ebec52c3-896e-434a-8fc8-3de287e69365",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c305dbf5-de0b-4a11-ae9d-0cac940b1c7e"
        },
        "item": {
          "id": "0b4da129-10e3-405c-b9cc-848940b0369c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "85ff1980-b1c6-480b-b7ff-77277b54b795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999e5741-336c-4899-b08a-5e2e80954501",
        "cursor": {
          "ref": "7f8c9031-973b-49ba-b55d-8fec7e444577",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ad714782-d67a-405e-8455-3ce63eb878f8"
        },
        "item": {
          "id": "999e5741-336c-4899-b08a-5e2e80954501",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "96adb641-22a6-4dae-835e-d4132d9d54da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8173efdc-96de-4cfa-a932-caa59b38bc15",
        "cursor": {
          "ref": "1815ef18-7d18-483c-89a7-3e243b65397a",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7ac40dfc-b8a5-460d-9aaf-30a2d70860a6"
        },
        "item": {
          "id": "8173efdc-96de-4cfa-a932-caa59b38bc15",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "70ec98c6-4a45-4ecd-a5c9-cebc93844a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248b130d-efcc-409f-996c-9c75cc43edf7",
        "cursor": {
          "ref": "373dbd9a-874c-4300-b289-330d768ef9a4",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e8cbd647-2fd6-4789-892d-470738f7cab2"
        },
        "item": {
          "id": "248b130d-efcc-409f-996c-9c75cc43edf7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8d173ff3-1e55-4321-b215-c940c2a2c02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb74fb9d-d7e3-4f10-af21-56f6fe5790c0",
        "cursor": {
          "ref": "37258f95-dffe-4f3e-abbf-c68a1e3a1263",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "66cd5cf3-fc68-44c3-b7ad-9b75d81980d6"
        },
        "item": {
          "id": "cb74fb9d-d7e3-4f10-af21-56f6fe5790c0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "64ad2d83-20c9-4565-bd00-9d3cd424501b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb5f820-2ace-4ee0-b55a-750264a3ba26",
        "cursor": {
          "ref": "50dcc54e-8b8f-4c59-bb6d-d27d0ace6c14",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "603b3e0b-02fb-4bc3-b5a8-86f6817a0650"
        },
        "item": {
          "id": "7bb5f820-2ace-4ee0-b55a-750264a3ba26",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "45dd6e42-24f9-4ce9-b81d-13d6817365c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d001d225-6614-4ef1-a38c-5621570c73c8",
        "cursor": {
          "ref": "b94492aa-6599-4554-a256-8529a9d0fe3a",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "664e0622-d2c9-4b5a-b0d6-0e063a37a968"
        },
        "item": {
          "id": "d001d225-6614-4ef1-a38c-5621570c73c8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3243db1f-d4be-4baf-b58c-9f08aae74000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ace1eb9-df85-47c8-9611-63d02abf5888",
        "cursor": {
          "ref": "2663ab92-b1a9-4728-a508-8162d25a4a98",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e548a07a-342b-4da1-8981-649a229b46c4"
        },
        "item": {
          "id": "3ace1eb9-df85-47c8-9611-63d02abf5888",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ecb51035-ddcd-4241-917f-f8b2f1196aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e69545-9e94-47cf-bf48-604f39c67deb",
        "cursor": {
          "ref": "62f1eaef-4aa9-4184-a71e-53d5d657badb",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9d0ccb18-4600-43c6-bbc7-624ecd88b244"
        },
        "item": {
          "id": "80e69545-9e94-47cf-bf48-604f39c67deb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "35b17c47-218d-4ebe-b3ea-907ab9dec7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68ca9cf-793a-47e2-bccb-caa0e6a08b12",
        "cursor": {
          "ref": "f29df888-0fc4-4925-9fda-cf428f89cda6",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5589ea6b-e71f-422b-8881-ea443740f329"
        },
        "item": {
          "id": "c68ca9cf-793a-47e2-bccb-caa0e6a08b12",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bc46600e-3f40-4455-857e-aed44a4d1039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52199ee5-aeda-4f7a-965a-12e6909e2e3d",
        "cursor": {
          "ref": "45cf09b7-c986-47b7-9ba4-ea628fdd4ed5",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "959ed812-dcb7-474c-8613-e83f20f91e9f"
        },
        "item": {
          "id": "52199ee5-aeda-4f7a-965a-12e6909e2e3d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1c019e44-60c2-49e5-a2c2-e73647c6ef68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde566f0-2ff3-40f8-9d59-bbd2ae6f83e0",
        "cursor": {
          "ref": "85d2fc1e-55f3-431f-b149-ad3015eb55e8",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "53cafdd6-1c63-4087-b4ec-2758f0de1eeb"
        },
        "item": {
          "id": "fde566f0-2ff3-40f8-9d59-bbd2ae6f83e0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5e1834ce-ed12-414a-99b0-c1d12fb04746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38197413-be3d-4a3a-a0fe-64f0ed253d01",
        "cursor": {
          "ref": "af1aa469-550b-4c26-978b-15aabfb57601",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "699e83e8-9d02-4b73-9b10-ac185b208d76"
        },
        "item": {
          "id": "38197413-be3d-4a3a-a0fe-64f0ed253d01",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d70c8115-3b28-41ad-b81e-b33ecfd35bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f064632-5fed-4058-b21e-cfe9d10ac9e9",
        "cursor": {
          "ref": "704bb2d1-db47-4853-8687-8d75bf55529f",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "eae4ebb2-3113-42c4-9a84-7456227f69d1"
        },
        "item": {
          "id": "5f064632-5fed-4058-b21e-cfe9d10ac9e9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f2000299-0dde-4827-bb64-526761eafb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7fcb78-8ecc-445b-8f9d-bc8cae3d80cf",
        "cursor": {
          "ref": "9d289ef6-d525-4b6f-a819-7693a0c6825c",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a9efd844-91bf-4df9-b5db-36e87a1e5392"
        },
        "item": {
          "id": "7c7fcb78-8ecc-445b-8f9d-bc8cae3d80cf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "de72fa08-4659-4dac-a499-6f9c900a8092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34a17a8-9396-416e-8c3b-1863cd8899ce",
        "cursor": {
          "ref": "92d142a3-89c5-4fb8-a917-d42dfd1d3762",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "708ea331-70c8-4479-b4cf-477002234b7c"
        },
        "item": {
          "id": "a34a17a8-9396-416e-8c3b-1863cd8899ce",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "78ea02d8-a41a-4c83-9cdd-0a1a37e5830d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29bdb85-c07f-4373-920f-81a0621f8e7a",
        "cursor": {
          "ref": "46e0ab7d-16f3-4793-9c52-b09dee1e9591",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "340baaeb-8d6d-40e0-809a-4e7f5d31b557"
        },
        "item": {
          "id": "b29bdb85-c07f-4373-920f-81a0621f8e7a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "20a8d836-7c35-4951-b3fd-c93480bf8e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb8a587-3b3d-4255-97d6-9e399c12c003",
        "cursor": {
          "ref": "3a15a32e-46e8-4603-889d-5fdfa469e4fd",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "082fb53b-6f48-47dd-bdac-ce0b115c4b69"
        },
        "item": {
          "id": "abb8a587-3b3d-4255-97d6-9e399c12c003",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b57a66a3-bc61-45c6-9a5b-e80d65fde60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5167577a-025d-400c-ab99-bf874c701ff8",
        "cursor": {
          "ref": "934e4b5c-af05-4ce3-8e41-97fe7424ad19",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4cdd8299-f349-4aed-a17a-d66cfbd08e4e"
        },
        "item": {
          "id": "5167577a-025d-400c-ab99-bf874c701ff8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3ce5c95d-d934-4fa0-9dda-25f03f706d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce06763-21e7-466b-a337-9e4ec7bbeea1",
        "cursor": {
          "ref": "4ad0bda8-2df8-42e6-bb72-4bbcfe871f8a",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ab27f3b4-a408-4eeb-ad82-b827883daf16"
        },
        "item": {
          "id": "5ce06763-21e7-466b-a337-9e4ec7bbeea1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ab918ebd-b061-4d07-ad3a-f8fb7129527a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e3303d-14a5-45bd-8ace-b0734250e42e",
        "cursor": {
          "ref": "a62ebdbe-58fa-4ad1-b002-ab354cee154a",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "42a4572d-2880-414c-b49e-6d23cd73f285"
        },
        "item": {
          "id": "00e3303d-14a5-45bd-8ace-b0734250e42e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "116aef49-bd4b-44c4-bb5a-3a28e1935cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b842a9b1-45b1-4ded-9923-1c5d9a243f13",
        "cursor": {
          "ref": "d24ff47a-5735-4f9c-ae1d-1b1d153f0685",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7fc26439-0ebc-4d7c-8f17-af9e22c5d97d"
        },
        "item": {
          "id": "b842a9b1-45b1-4ded-9923-1c5d9a243f13",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "087ed2e7-8bbb-4805-a76e-37e589118d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a096777c-7769-4cb7-935e-b066d43aeca1",
        "cursor": {
          "ref": "44a5246a-f245-45de-a252-d2d9aeb54f57",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b7744d9c-97c3-4a43-8aad-6a551b4492b9"
        },
        "item": {
          "id": "a096777c-7769-4cb7-935e-b066d43aeca1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9d05423f-8756-48c0-a3e2-f6ccf7d12db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9499d0-d42c-4d0e-9f16-b4881a1c320e",
        "cursor": {
          "ref": "9b4460bc-db11-4ea0-874a-474b5e1f243f",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "25a09117-b46d-4ced-aa1d-344e77114e0b"
        },
        "item": {
          "id": "ca9499d0-d42c-4d0e-9f16-b4881a1c320e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "93c837d4-e862-4e12-b3a7-7671766b4fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd559ca-749c-42ea-b652-2b6a629742b0",
        "cursor": {
          "ref": "b9e001cf-a0fa-42cf-b9e7-f634c5092f2b",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "df490592-1ac5-4bd5-b55c-86a6da45dd5a"
        },
        "item": {
          "id": "0fd559ca-749c-42ea-b652-2b6a629742b0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "78270bdb-aff3-47b0-8fd5-9512dfee041e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b3d610-68c6-452e-8592-f29bdfe0a3b4",
        "cursor": {
          "ref": "9c546b89-ab6b-4b1a-bd10-e173b7a28965",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "89777ea0-62e8-42b3-b552-8e0977c4096d"
        },
        "item": {
          "id": "b6b3d610-68c6-452e-8592-f29bdfe0a3b4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "991850b7-c079-4ed1-b066-8e0fcc44ec83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502ba14e-7999-4419-9028-a292d526ee81",
        "cursor": {
          "ref": "06b48819-3cc7-4abf-9376-c1c8c721adc4",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bf4c1678-d039-4f1e-97f3-f430cbda6ed3"
        },
        "item": {
          "id": "502ba14e-7999-4419-9028-a292d526ee81",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e5c50121-4957-4dea-85bf-11f7fec7a587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dfb4cd-2090-47ef-a879-752e85f28d99",
        "cursor": {
          "ref": "e6009371-2e30-48b2-a275-5cd840d2aae5",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fb79afad-09c7-4dba-a8a4-38a5cd50ed1a"
        },
        "item": {
          "id": "e5dfb4cd-2090-47ef-a879-752e85f28d99",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "50bc946e-55c2-4886-9af0-8f15184e4231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb49082b-3bcc-420e-8c95-20f54623f5f9",
        "cursor": {
          "ref": "85b1f14b-701c-4d4d-bc57-aafc12411878",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d560ae7e-260a-4eeb-8e8c-74ba90f8633b"
        },
        "item": {
          "id": "cb49082b-3bcc-420e-8c95-20f54623f5f9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "22887928-dcf4-487e-a03b-394f0066d769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eef9029-a128-44d1-9ff0-aafba2a4c820",
        "cursor": {
          "ref": "1cd3fae0-08ca-4a59-b9b7-25b9c59411df",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8ceed4e8-d5be-422e-b282-04312774b698"
        },
        "item": {
          "id": "3eef9029-a128-44d1-9ff0-aafba2a4c820",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2c23cce3-7879-4214-947e-ea3d9005b5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ef98f1-2449-4d0f-b923-dac3278ab390",
        "cursor": {
          "ref": "8fb00829-f45a-4b72-b037-6c962761a027",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ff5df23c-aee8-48d8-8afd-bbe43d5790c0"
        },
        "item": {
          "id": "b4ef98f1-2449-4d0f-b923-dac3278ab390",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bdfbd392-dfb0-4ec0-9598-5a356115e98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac445ea2-37d2-4894-808b-bbac5adc5c15",
        "cursor": {
          "ref": "1ccf8550-303e-41b0-a282-7975975bc085",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ac04dab4-1228-44a0-b5f4-e7f7dd0a2f52"
        },
        "item": {
          "id": "ac445ea2-37d2-4894-808b-bbac5adc5c15",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6b6d6c2c-40e4-4175-886a-cbf6c3c8f33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ab89ae-633a-424c-bacb-72489c0a34ff",
        "cursor": {
          "ref": "b784a570-6ac0-4063-9e72-f103692c60c7",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "30ab41d4-4ae4-41c8-80b6-c53855c3400a"
        },
        "item": {
          "id": "12ab89ae-633a-424c-bacb-72489c0a34ff",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8174e660-f8ac-402f-84ac-90c159e240a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f6acdb-703c-4277-bf61-2e64ce6133ba",
        "cursor": {
          "ref": "b853f01b-1220-4d19-adb5-34ea220fb2d7",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "931250f3-d716-4e87-8a53-b09c08205718"
        },
        "item": {
          "id": "d4f6acdb-703c-4277-bf61-2e64ce6133ba",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5c348fe8-d229-49a1-9510-e40e5fd8c09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e52f3dd-149c-4b52-a7f5-8a1a18961c40",
        "cursor": {
          "ref": "164d08f1-00b2-43ef-897c-d522c7833398",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b39b4c60-3790-4d73-9d19-56febd2d98ee"
        },
        "item": {
          "id": "9e52f3dd-149c-4b52-a7f5-8a1a18961c40",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cb078ccd-e997-476c-9add-92ab12bbaf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023147a7-65d9-4c6b-a100-93f18667bd40",
        "cursor": {
          "ref": "2b668447-d1c1-480d-b14b-c29a3a98c268",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c00d2c30-371d-4b9a-b55c-72ca2f712c17"
        },
        "item": {
          "id": "023147a7-65d9-4c6b-a100-93f18667bd40",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "94d81def-3525-4869-a516-c9b084472e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e341c9b-d269-49df-9241-31f3b439f60f",
        "cursor": {
          "ref": "9cf276fa-e55f-4a4c-8c88-84e120077317",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a97ba2f2-bbb1-48b8-abdd-d7c3ea48ea8c"
        },
        "item": {
          "id": "8e341c9b-d269-49df-9241-31f3b439f60f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ae982ea2-fb1f-4271-9920-ab2954552455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cee60d-d420-44bb-999f-7326c67cf739",
        "cursor": {
          "ref": "6853d159-d8b9-4d64-bd6f-5b0fb8747548",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ee3b279f-6cc1-40bc-9f71-fdfb701cbb06"
        },
        "item": {
          "id": "49cee60d-d420-44bb-999f-7326c67cf739",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a61602db-8437-41d9-858f-e4de6814e5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0ff6f2-d59e-422b-baaa-b374ee962259",
        "cursor": {
          "ref": "a91766d4-5eca-4dfc-9b14-00c0762c5fff",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6b6db1f0-cd98-4fa6-a721-e9ff7bd8f1d2"
        },
        "item": {
          "id": "8f0ff6f2-d59e-422b-baaa-b374ee962259",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "51757993-910a-432e-8771-1263e2fd6b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073d8d59-0643-45eb-a3b0-538e5a2e3f45",
        "cursor": {
          "ref": "8010aefc-65b4-4265-876c-1bb5c5ecfdc3",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bd757a04-a06f-4be2-aa9d-cf5307adde8c"
        },
        "item": {
          "id": "073d8d59-0643-45eb-a3b0-538e5a2e3f45",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4078c3bf-6439-4802-a399-f8c35eac12fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f93a50-e839-49a0-8713-3a17b210ac1f",
        "cursor": {
          "ref": "3aacb831-6046-4820-aa4c-82bb59a1bc6e",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f2633c4a-2925-4f9e-a8fe-96913c02636b"
        },
        "item": {
          "id": "84f93a50-e839-49a0-8713-3a17b210ac1f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4896d07d-47af-4ed6-a426-eb856e30239f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cfa308-7f74-4ece-a206-8e5c384ea739",
        "cursor": {
          "ref": "d71a1704-23dd-4b3b-8bb9-ab3c81f7ffda",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7c539fa9-d57d-449b-a77a-21236ec3c141"
        },
        "item": {
          "id": "99cfa308-7f74-4ece-a206-8e5c384ea739",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6c628c96-f0f1-4da6-a47c-23b4e1f0de33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0992233a-bc7e-4377-bbbd-50c3d8470413",
        "cursor": {
          "ref": "c5a559dc-e6cb-486d-b211-0c2de3b47163",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d9d7bcca-e39c-405a-b343-ed78000dd0a2"
        },
        "item": {
          "id": "0992233a-bc7e-4377-bbbd-50c3d8470413",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c5be40cc-a87b-4211-9a7c-41030e9106f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad145ec0-f3ce-4cee-807c-de60918173d7",
        "cursor": {
          "ref": "17493169-87ec-4d0e-b9d5-bae9579a2bf2",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "11ab392a-b1f5-4c5a-ad7a-976b54edab08"
        },
        "item": {
          "id": "ad145ec0-f3ce-4cee-807c-de60918173d7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "58abd6fd-467e-4e54-8782-c46b46d32386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43b669f-68ea-4aaa-8985-6b60c390d3e0",
        "cursor": {
          "ref": "e32aa7ef-5d4f-4eeb-a5a2-997d2c3b17b9",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5b38b5d1-97a6-4cec-b06e-a5428a96c04c"
        },
        "item": {
          "id": "e43b669f-68ea-4aaa-8985-6b60c390d3e0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b25b4608-be63-4c75-93a6-eb67f84c1dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff381d4-11b7-4026-b451-9769e35281b4",
        "cursor": {
          "ref": "ffbc8cc2-c192-4ab7-8754-24ff30ace565",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9abac798-3a90-48de-8dcd-7d0f3eb6142a"
        },
        "item": {
          "id": "cff381d4-11b7-4026-b451-9769e35281b4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ec60a77a-a2cc-46b9-b966-481b305732be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bac5fb-598a-4ec6-9188-e4ffa81a4be5",
        "cursor": {
          "ref": "d823d260-b0f9-4863-a7ea-a80782238597",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bfff3034-2003-407e-9d00-a583e277d0b5"
        },
        "item": {
          "id": "07bac5fb-598a-4ec6-9188-e4ffa81a4be5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "63549bf5-cc99-42eb-abed-f6918e49d7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55573bc1-0363-4bf4-87d6-09172eca98d4",
        "cursor": {
          "ref": "13a4e353-a0de-47e2-9a96-38602cfa0ac9",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "83680694-4674-4487-90d5-473ef1b97b03"
        },
        "item": {
          "id": "55573bc1-0363-4bf4-87d6-09172eca98d4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7721ffc6-dd53-4ed3-b3a3-3f58cf2f84e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a975248-e1a3-4cdb-8c1d-2f977ca66fca",
        "cursor": {
          "ref": "0ed3f73b-ba0b-450e-9c3e-c095c7d09de1",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5a3bc34d-5034-4caa-9efa-5a321465eb7e"
        },
        "item": {
          "id": "6a975248-e1a3-4cdb-8c1d-2f977ca66fca",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d612718d-f90e-41b9-82c8-0490799eecdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1ab6eb-f05b-41bb-a261-abf0b73dbec6",
        "cursor": {
          "ref": "12cf7b45-43f0-48b8-91db-cdb3393be8ea",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fc796f77-a1ad-4337-bdeb-899577516154"
        },
        "item": {
          "id": "8a1ab6eb-f05b-41bb-a261-abf0b73dbec6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9d9921a3-1adc-404d-b23b-4e005e1490da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3849e6-1fd2-491b-a9b9-14d08d4ea364",
        "cursor": {
          "ref": "9b488f45-63ea-4ae1-a458-56bc0c8a52e5",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8b52c68a-2f2f-419e-a7dc-4c4d93bb03fd"
        },
        "item": {
          "id": "6f3849e6-1fd2-491b-a9b9-14d08d4ea364",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cb975888-52e9-4cb9-b15c-1fe221bd2b55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b99d100-cab3-4273-ab98-7084680f3ba7",
        "cursor": {
          "ref": "630ed08f-ee69-4bde-9af2-423b515ebe08",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "72478a25-81cf-4fb7-a2b7-9b3bad65c0c0"
        },
        "item": {
          "id": "6b99d100-cab3-4273-ab98-7084680f3ba7",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "66a6e72e-932c-4e11-ade2-672ce3d91f76",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 383,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f652928-8d21-4f81-a5ce-87f974007050",
        "cursor": {
          "ref": "25e6ec12-ce23-4828-980b-4391069bc8c4",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a41a9754-3703-4c86-84fd-9af722edfa3f"
        },
        "item": {
          "id": "4f652928-8d21-4f81-a5ce-87f974007050",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "31e17e25-9d86-4e8f-a03d-3ccc814760b3",
          "status": "OK",
          "code": 200,
          "responseTime": 387,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7701dc8-5cde-4f8c-8082-a97c46cfd44c",
        "cursor": {
          "ref": "a9a7de18-959f-44c2-bd3f-ed95d82abb62",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2c81afbb-b290-4f54-b615-f969d41a72a1"
        },
        "item": {
          "id": "b7701dc8-5cde-4f8c-8082-a97c46cfd44c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6e096f17-2599-4f95-afc1-5f34e71b03e5",
          "status": "OK",
          "code": 200,
          "responseTime": 1883,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7039f9-79d8-4b99-9654-69e93e9dfdce",
        "cursor": {
          "ref": "395d893a-1a2b-4ba9-8f20-aba71ca30ca1",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8ed00efa-4dbe-4ddf-b4de-e61eb2dc41df"
        },
        "item": {
          "id": "2e7039f9-79d8-4b99-9654-69e93e9dfdce",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c7b29603-9aa1-4d88-a0e9-3263ca8fc5a5",
          "status": "OK",
          "code": 200,
          "responseTime": 2071,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "11109ff8-46ea-4314-ab63-dac5c1732342",
        "cursor": {
          "ref": "db8ba2c5-f7ed-4c9f-8cb2-d61e7bbb142e",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "86c70915-08a4-40e0-a285-e1ae6b557d0b"
        },
        "item": {
          "id": "11109ff8-46ea-4314-ab63-dac5c1732342",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cef92f75-3a9f-418e-8d23-4d8266756745",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11109ff8-46ea-4314-ab63-dac5c1732342",
        "cursor": {
          "ref": "db8ba2c5-f7ed-4c9f-8cb2-d61e7bbb142e",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "86c70915-08a4-40e0-a285-e1ae6b557d0b"
        },
        "item": {
          "id": "11109ff8-46ea-4314-ab63-dac5c1732342",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cef92f75-3a9f-418e-8d23-4d8266756745",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11109ff8-46ea-4314-ab63-dac5c1732342",
        "cursor": {
          "ref": "db8ba2c5-f7ed-4c9f-8cb2-d61e7bbb142e",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "86c70915-08a4-40e0-a285-e1ae6b557d0b"
        },
        "item": {
          "id": "11109ff8-46ea-4314-ab63-dac5c1732342",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cef92f75-3a9f-418e-8d23-4d8266756745",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed8df4d-3a47-477e-ba41-4a0dfbaf233e",
        "cursor": {
          "ref": "dc7f3831-9b11-4cde-92dc-2d42f46783bb",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a3b753a0-1440-4939-9e04-4e89a935e192"
        },
        "item": {
          "id": "8ed8df4d-3a47-477e-ba41-4a0dfbaf233e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "cf449fa1-554c-4607-9c5a-1a4b0c0a74fb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 342,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ada3c6-0ea2-463f-8e5d-6b4b00e42c9f",
        "cursor": {
          "ref": "794df7cc-f781-4f65-978f-af9e0e0cd551",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "22bf5aae-d542-49d9-9202-883ba7d7bbb8"
        },
        "item": {
          "id": "40ada3c6-0ea2-463f-8e5d-6b4b00e42c9f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4150d573-c793-4b1a-aa74-fbe31e16a9e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ada3c6-0ea2-463f-8e5d-6b4b00e42c9f",
        "cursor": {
          "ref": "794df7cc-f781-4f65-978f-af9e0e0cd551",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "22bf5aae-d542-49d9-9202-883ba7d7bbb8"
        },
        "item": {
          "id": "40ada3c6-0ea2-463f-8e5d-6b4b00e42c9f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4150d573-c793-4b1a-aa74-fbe31e16a9e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679b3a58-8976-459b-be4d-21e24d70d176",
        "cursor": {
          "ref": "c2b5f590-35c0-4164-8962-dde2cd6c58f9",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a519bbb-5953-47e2-9911-a21b3e57dcd0"
        },
        "item": {
          "id": "679b3a58-8976-459b-be4d-21e24d70d176",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "069decb7-26eb-4caf-b7b5-fce5073a0cd4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 578,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d811dd-8baf-4d72-811b-a8a2f6c183ec",
        "cursor": {
          "ref": "b397f5d9-6270-46dd-a7ed-d1d01bfc2d5d",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "20f853f8-46ee-4358-afa6-f63d97e4cf0e"
        },
        "item": {
          "id": "61d811dd-8baf-4d72-811b-a8a2f6c183ec",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "106543a1-8ced-4570-9e6d-ba51d8014696",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d811dd-8baf-4d72-811b-a8a2f6c183ec",
        "cursor": {
          "ref": "b397f5d9-6270-46dd-a7ed-d1d01bfc2d5d",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "20f853f8-46ee-4358-afa6-f63d97e4cf0e"
        },
        "item": {
          "id": "61d811dd-8baf-4d72-811b-a8a2f6c183ec",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "106543a1-8ced-4570-9e6d-ba51d8014696",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1339666-b5a7-4e7f-a324-babdea5dc427",
        "cursor": {
          "ref": "b501908c-d868-4dfb-a0e6-945d1e3c6757",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0df1af79-53f1-4ee8-bac3-4a37bba182ae"
        },
        "item": {
          "id": "b1339666-b5a7-4e7f-a324-babdea5dc427",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "fbe301dd-7764-4e09-8f19-5158aace599d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}