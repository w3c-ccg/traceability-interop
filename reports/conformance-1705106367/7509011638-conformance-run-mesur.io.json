{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d5c8b6ee-dbc3-4884-b7a8-80b365571987",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1e23e02d-a7ca-465e-ba62-5d687c6749ca",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1740c64e-6b7d-426c-8d31-38df0f1c2d4e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5874bcdc-e1de-4d3f-bbcd-dcffd27f75df"
                }
              }
            ]
          },
          {
            "id": "ee66c5ba-d386-4108-a532-e118dc8cd2ab",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90dc8d84-ed77-4fba-accd-d8e6f2f5fae2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "359a6fb6-035a-408b-a564-6f967bfbfd53"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "916a1491-4eda-439f-ba28-5e13035d1bce",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "faa5cb0a-078f-4846-8fc6-d1d64247bf22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b29477d7-a3ad-49ff-8037-08f9267e644d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "139984ab-bd45-452f-86a0-550176bf9eeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d9ad3ea-9efa-4a3b-b140-be9be66c1caa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63857e7e-26ae-4ae0-b19d-16919289e6e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c6fbb07-ba2b-4f75-ab73-a935f1b9db09"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7350d79c-b274-4e8b-b24a-f3152740da15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e193b793-410c-430d-a821-edef354e5f52"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9fac9f3-5f26-4868-b018-4102421faaf8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6e09ea6a-94fd-46ae-9e96-486a6110fa50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe1ae0cd-dd3f-465e-a144-291c17664c7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a0d66c1-941e-4102-8493-9efc9c32f5cb"
            }
          }
        ]
      },
      {
        "id": "895f4da6-6891-44f8-a79d-a8ebf9b5eb61",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1a66da48-5c22-424e-a1b5-c9a6b62a4e09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4509d81-f160-4fc5-816d-10d4cafabac4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44c0bbb8-87e8-4794-a7cf-70fa4389b86e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7175bd-4329-424e-9e4b-7c361191b422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "570763e3-22a6-4cff-be11-3476480caf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b11d3c4-6bba-4e1d-80c7-5e6328b41801",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e0727b-5598-4286-9e63-30d89f4ffd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76faa15f-987a-4a1f-ae10-e1959a4701ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a6f156-12d5-4e6f-958a-4afb58dc66dc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84383738-12f7-475a-9df0-37b898dd6a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d154e81-085c-48c8-9f52-18cdb937c628"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "65555d21-02d7-4d11-b5d0-aaa309ed8b64",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1374053-a2a2-451b-9ee2-461a05a923c9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b19567-569f-4095-bd97-f3f218a0e517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd537878-6fbb-45e3-946c-3eb015719b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd258f2c-bab6-49f3-82a5-b963b93ba1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887b3e85-ca1c-402b-99cd-3fe0b841ec89"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b8951a7-b8bb-4b6a-86b4-0a9d536db530",
            "name": "Positive Testing",
            "item": [
              {
                "id": "04efa9c1-612e-445e-9b50-e82ce8fb1f4f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "779d0093-5605-4846-9eb2-66079bfcce31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b5f3bf71-5bc5-49ad-a15c-91dcbe090ad8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5ecc852-dc2f-4ed6-b7bf-006779d59a1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c27b5288-0a19-409c-8707-1ebc3e0e8fb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "626b62f9-2752-42fc-acfe-029e0750c242",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fd7d297-8b45-4409-bdb1-e7db667a3fb8"
            }
          }
        ]
      },
      {
        "id": "1973a3c6-b604-4edf-8936-0c1caa5eabcf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "810f47c1-227b-42e0-b078-516a3289cbd2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa473f4c-5abb-4218-8591-ee097b5a296d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b3b8d458-9399-4cda-b1f2-d329985fe4a7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527ce441-ea19-4b45-b54e-98a70e309bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9db1e9-e2d6-43a8-a1b2-d642ba29121d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490fdec4-0fda-4629-a985-a9607bf062d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b05a76a-3163-44cb-91f6-99c7a222b38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67f3a2a-a828-4db0-8006-014906a0cfd3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a050b6-398e-4f67-b6d2-805e4a903fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b8e5f7-0ed1-4825-a032-258408165005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9198fdf3-9840-43a6-a79e-37fb0094f87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "885cace0-f445-4ec4-b025-ee4396fe581b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b6c305-e69a-4137-b990-81152b03d1e2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ba5618-d047-4ebb-b85b-f57ab0b53451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eab997e-c96e-4288-9d70-34c305b20961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca2966e-012c-4856-a551-39c9c914f8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb42d7f4-468b-496b-bc50-ecab3e6c8031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c05729-523f-4116-9f33-0d3b36f6bc33",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b56b1a-941e-4f6d-bfe9-dfa609fdc195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4020b7a-4f38-4cf3-b297-9c9d2b71869d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db36b7e-40db-4ce8-b426-8f0b277491b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0b11141-ca21-4f52-9405-149c20416a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecb0400-523f-4482-b681-e8eb2bfd2ba7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721c2c98-3720-48f9-a874-b47d5a3842f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de58bba-565b-4246-bb07-37376e9a1b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9980d00-1ead-439e-8b08-2336f2dbfa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3012b73a-0a43-4f55-8b50-a5129bb2f5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0ebb25-9ae3-4664-8134-bfe08093c49c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0517f406-37d9-4e20-b7d1-416bb94b9a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8b6dc6-417d-4cae-83e2-d95e8de27c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8760670e-bdc6-4220-a675-4e187e0cd3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f57614c7-d167-4a33-b01e-5c70517e8f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a9082a-5e01-49d4-a8e7-4ac60c78de11",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff6f2c9-098e-43ec-97c0-877af210dfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756e1987-abfb-49ad-a699-175060fd6cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e082b4-656b-4d0b-9697-8b50e6258e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12e4367c-7555-4905-a711-d5d657243a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a8f62c-8c12-4004-bde3-e32c42afed63",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa49d0b6-1252-49a7-a798-3c1185b03079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8847d8-700d-4b1c-9395-89787e1886e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842c58fa-2a10-4858-a49a-37a611e556b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "692f1c35-22df-40b5-a3a4-5fb62635fae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb412fca-0731-48a5-b463-b995fe75d8e6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b204aef-d3b2-441c-8324-11f60e013c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258cba3e-028d-4121-aa22-8f1d7d0200c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d82d67-20aa-44c1-8d91-07deba403d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "198612c6-8cb1-4460-83db-8c179510d862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ca763b-6709-4634-b8a1-aa6b0d27a791",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee33130-beac-4fdb-8f6e-63399095a77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4ff6ca-f640-49d5-8c99-ead5fdc5d5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37c70a3-6138-44d2-8dac-1a8cdfc8f3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9657d626-d175-4861-8270-bcfc3ecbed91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e277758-4176-4a53-b78c-7947ed131a5b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f603eb0-67e0-4666-825e-1bb61ff94ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60e4b7d-49f7-4d26-a452-1b319d0df204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8f155c-ad2a-4407-a099-f6669b572d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "644432e2-ba87-4a7d-8b69-4ab5766d27bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa946e1-8ec0-4c85-b0eb-65eef018acd3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80814aeb-0d4b-479a-9d60-daa777943709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d277fab6-9fc2-4d6b-aaa5-83e4546f7ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd069253-87a3-4cad-8994-2e190a6f3a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52b8d0ab-76f3-4229-8bcf-cf5c27fc26eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459f1215-4820-40dc-ba30-2e4fd3bb9a12",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fee737-e585-4ca1-8014-8030f7962313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993bdf3c-8d14-4f0e-b6d5-c46d210be734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c474ef0-859d-43ac-98db-a950b0b6f217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "347d1252-3e7c-41a0-b41d-c9bb6998436d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8b29eb-2b41-4a28-bb26-1fcd55e52d4a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baa3980-4258-4828-abdc-77bee1bc8c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fdd352-cbcd-4a11-af74-99d2417621e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b90103-c6e8-4a62-83a5-afe4f2a244da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11a9b4a3-d69d-46f8-97bc-95402de2e445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338d4c79-1e54-4fb1-8bd6-412f84e2172d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1a5885-fd91-4be0-87f0-16de39947d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7f826c-db67-47cc-84e5-f3aac79d4ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74aad065-3234-4af5-bc91-dc7fc7569dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb1d1cef-885e-45be-922b-07aa09dad4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc26ff93-10a6-4002-bb6f-fbe1367652d0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87033d34-04c9-4179-81a1-a394f1fc0eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6710f7aa-5b32-4a7a-a2b7-cef3a0e7c9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e946a022-2e2b-4018-ada7-261504617db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d3002cd-f184-4d6b-afd2-9783fbba3fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17db3eed-0ccf-4413-b3d1-c3ace0d63c91",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7684dd8f-8c13-4a9a-9b9b-505fc8d142d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4ff74d-aa32-4e3d-b26a-055c5a57ebfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ce45cc-7663-4590-8ba3-67ac7371dc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cc0ea6e-f3e6-4fa2-bbac-a1039fe757c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e234b1-df82-4837-9d83-14e32ccadcc5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f099e2f4-30fa-4c2b-9aa2-d6cf720b0dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382725ab-4745-4303-9742-bd0a340fa511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd19830-39f4-4c3c-98ba-07c96e3e0c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "370be87f-a6f6-4b19-ba1e-47f7c55a02f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe96baac-a578-41b3-9517-88e8b0405e9a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901f4cc8-6e39-42ba-a934-ccf2f6529ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afc91b3-40de-4ed8-8702-8d3d9f905028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bae842a-de72-43ad-a3e6-169a8f41ea25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d23c7b-5f20-42d5-a885-295eb7894517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d71926-8272-4496-b863-fb717b62ea33",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97e27f7-0b2c-461d-a24a-3665c8f92256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bc556d-38d9-475f-aa18-86c3e8fda3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84e588f-0995-4546-bd1c-e2223613dbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61bdf644-af5d-4365-92a1-ebd07db8b535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5f2c5b-0c1f-4aa2-9567-c72e8159f0e7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d9e967-dbae-4acc-b0d7-cf674cc84d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efe1096-02eb-41d3-ac53-8e81caf9550f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a40da7-e5ac-4555-ac50-ac90a0bca0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9007fd8b-8cce-4e35-b7e5-3626f28a0bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f5b9cd-76cd-444f-89b6-8ad546419844",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdba5f3-9cd3-4a73-b4b2-679a5ab3380a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd8acfb-f7cf-48be-a6ee-72e78e1cb848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd54cad-17a1-4b12-995c-261cc9911b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a72a5147-8489-4a6e-8742-e3a9e83fa604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69908127-54a4-4154-a3f4-f080ebb7755f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81557000-f8a3-4f30-8487-08e80aa2424e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56448b2d-dfad-491a-a2e2-39653ec8ae0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576222b9-eb28-4e58-b2a8-e5cd713e4ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d197ab-92cc-438d-acf0-7fee4774bbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f77441d-ac5d-49a8-a2be-97488e1bb187",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012751b1-5948-4a28-a970-e9e2a974cb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f97305a-314c-49ef-8d84-fe0504a2c51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4782efa2-ba63-4048-8478-5e49e9871f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b57fd71-9fa6-4f7c-b906-449da579354a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b482d086-e6da-4ea5-9fff-36ed97a29447",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37698bb8-5721-45b2-8c5f-1c86de2c77cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c813dc15-fc90-4045-8208-b71597c10dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00051a4a-00a6-4147-81eb-bf4ce88a5466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5a90e7-76bd-47c3-a806-83dd4a28595f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b97865-397f-43de-aa44-01e336ccbf56",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6fdcce-2288-4cc5-a372-c87de63e6d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f5896a-10a0-44a5-baa0-cc219c9406cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09903d64-40ff-4984-9876-f75e65dbd115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "318ca7aa-ec4f-49d7-8a9a-8611c90c637d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4d0c18-48e0-4444-a943-6ba602668168",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaba445-215a-4fee-b503-156028b7e538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028f6e4c-7944-4378-b4c3-39bbdf1e3013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0889def-b5a7-48ce-8ef9-95e08b8a20d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "516a5aec-937b-4710-8bb5-bb0de2763b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1ea59c-4027-4a61-806f-76b2a8495820",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e3fcbf-012f-424e-bd1e-b70f492629a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbc0f69-280f-4c6c-91fd-f6fab9b0ff5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9fd12c-dadd-4386-b4b8-9708d6ffbd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df2253fc-9cbf-4a30-a158-81c533881ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7185bb-c174-4a02-a7e7-e7edbada0ff7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e60ef85-8ca6-44e6-ab7f-6bdd9bbdbab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ff4dc2-6f56-4be3-a96c-4bb79de9d9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5482be-d5f9-4b1e-a00e-e229b69a163c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dae9723f-450f-4947-b46d-4a5e90398358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b640bd8-47ec-413f-9b42-d81a82cc1884",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf84613-1cc5-43b7-9978-7849481bb346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43533de3-772b-4925-9f69-5bd996666151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b2e5fe-056e-4f0d-b420-e37878025f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "02216bd5-664f-42d2-bb1b-d70c58e0313a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764df532-dadf-4dcf-80f0-263e1ce4a67b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36019b55-0a6b-4a6b-8431-90dc356c4187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f366b86-aa0d-4f4f-9376-bdfd09b8add4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a5500f-f600-4bca-8bfb-df9b13661690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f2f813-f578-4dd0-8be3-bec22dc59b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c171e388-f9b0-4a7b-b5a4-9759937f2738",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a67fb0-34be-458d-a05e-0ab8172f019f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f85a3f-4a17-4543-a94f-94176a602987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1cc871-66e5-479a-a45d-93e91ca16863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ef2f67-b199-4dd4-92eb-4c0b9ba09fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88473742-4ad1-4aa3-a2e7-4169b3695e28",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5af50c0-e896-4e12-b8aa-02af22236648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a08ad22-eef1-4cb9-9007-08a79db74916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0aa6337-1386-42d4-8d63-cbddf3808935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef603c0f-6154-4e07-bfea-462fe2138c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36baf191-4cc9-4469-acca-3899732e4a85",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9567de-7f51-4885-9304-c35b248d2d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397dccd5-7059-4db9-bf6e-54d3eac6a03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c142b324-e864-4236-aa67-e94003c6eba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6279edc9-a8dc-4204-b8c0-8867aca10fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ca818b-a0bd-4f50-bfe7-6a57b547937a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c66f326-f876-4028-9602-e7a0351aa00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e58e9f6-171d-432a-83a5-5b117417b1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fee53d-7cc2-4974-979b-06b770d20c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "326de739-eedd-4dd6-ba37-0d7f6a4ab16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83258289-0057-4c7e-a96c-3dda19eca826",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a26794-7b23-4d67-af57-ee83250230e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8c6e052-a8ab-4f87-8d84-f59255688bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39009bf-92d2-43ec-ad25-24f16b43feab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "256e1ed6-deb6-4ae0-b97d-3b4ca4c23e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af64cba5-18f2-444a-ae90-ac86eee9da70",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4da3c2-ecd8-4d60-badc-dee4a2cd0c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43dc45c-f546-474c-b135-83d3c4793b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87ccc1d-1e6f-4e93-936c-f270f161ca85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd4f89a-afb6-4eda-a0c5-84b448986018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47e2507-a812-4b68-94c7-a4d89b8e73ff",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2964cdf4-d7d1-4c16-bf58-43ce3d7a614f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed83ea25-7d22-4ac2-8203-c260fbb252da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7538c0be-0403-4f36-8acc-727803e8a29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83f37b70-a27b-4ca3-ba6e-8ede1c8dfbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a2d2dd-8210-47db-99a0-1850fc6d7f56",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c87b32-561e-42fd-ac54-1b6177fa119f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b261274d-6ebd-4054-919f-6cc3da268383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27a9cc7-cde7-4c4d-9484-f6dc9eacb665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a774666e-db6f-4520-83f7-8badb235194a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067d8bbc-3760-4624-9ad8-2b49bdf64877",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa0b220-6c03-4bcb-b1c1-a9ff91a14bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e30180-0c22-42b0-bef6-45c5b749faef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1196f073-ac97-41b9-b771-d9cd4fc8aa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a01875ab-0141-4f8e-84eb-28d3b6db6c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f60dc2-7324-42ff-a2f0-0c315eb38aa2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbefb732-697f-4d88-ab34-7d82a7a199bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c7ca4c-fbea-4254-ae48-be8532f67d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184241bc-46ab-4860-a3e9-6d7411a6aa85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee5c40a-7cd3-433e-8fa0-382d87937d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909aeb7d-8bd5-45a3-a5b0-01ba5818b4d6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0e34d3-b6b4-4bd8-a152-ecb32165af37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a46396-5a71-48b7-957d-c935f7949a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4069a0f-7b7c-4341-a526-2b976ab73b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e25f7ab7-be63-4404-abe9-9e5c4d25933f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0746392-16ac-441e-a446-758fd9bbbd7a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6faf9c4-ec3f-4cd3-8cee-3d582c25efe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8618d0-94c4-4d88-a097-ac2829730f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d519e113-98a5-4869-82fa-3fc1e9a7a70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f36b0393-71eb-40d5-8936-efd18e63837d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e83ffe7-064f-4b62-aa50-b2d61f0226bf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426a6abb-9ac7-44eb-b8c4-bc2d20d7a8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7901fd78-d9aa-4dd6-9ba4-3d66811abf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124c6555-7185-4d6c-9cae-f44ac5749073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "54aaad74-c054-4537-93ce-170589c396ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1f12e0-3b5a-4928-8d8a-10fea8acf361",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1f4b70-ad25-4c2a-866c-b0adf4d7350b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfd56dd-2ca5-46b8-baec-1ea7440caf27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d625e72-bf57-46ae-986f-e4b34ee80ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "210da2d2-cf11-4fd8-a1b5-98982f02000d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b883552-0457-4709-8acd-00fa97c41e13",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed35538a-91f2-4ae8-bba1-8bc3b886ec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1948519d-ddfa-43fa-b100-b7b87e1f2e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719a419d-bd16-493c-899e-73572eb9bdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c9597e-3023-491f-bd28-c4502c3ad488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce87d425-37ee-479a-aea6-b55faafc5973",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c274b7c5-5c61-4dfa-911e-ba7ea34ec833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2215e0f-6f55-472d-89b9-2e0788a4f418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bfae9f-a657-4d21-870d-6b47826db499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "116d2545-18ca-4c49-97d8-91ec65a37a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ca252e-e36e-4256-9aa5-f90ffa129f0d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a48977-c359-42aa-83d0-ab07ce22e122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c52e71-7cd4-47db-8ff1-00e13c6cf920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9523c49-1871-4194-acb7-fdd9d8a98258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afcaa91a-0e0f-4509-a057-3963281fcf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784d8dd3-0919-4e15-91e6-a1f7ecb782c8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755eece3-3c0c-4ec1-9860-814184a70c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a62579a-7320-4b76-887b-cfa89ada22d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4d122c-bca7-4857-8c79-79d915d408c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "589a3694-ac01-4c11-b8b8-9fbb5c9d80c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8688f57-3576-4237-a733-54321d67998e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ceecba2-3501-4c89-a36a-f87a1443c14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8116bbf4-c343-4d2a-b57b-c5dec5fbba4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832d4871-3d7e-4e90-a906-c16ff98d4489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c64fdb97-2e6a-4a1d-bd65-0c70a49539df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b3df7f-4bb4-4e78-a85c-f52d1367fc47",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2477683-92b1-46a3-81eb-76da98773e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8628281-55a3-45ed-b48d-af137d82a532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6d001d-1906-48e1-b8cf-244f19f393fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0370913f-93bc-4199-9122-33816c465331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75743270-dbf4-487d-8ba5-759e4dbdbca8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc6a8a8-c8b8-4f91-a811-74ed8cf9aa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7242a890-7084-4658-b5bd-606032fabacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ef93ee-a98b-4a5f-97bd-9f8bc750ba52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc94a5c-13ca-41d0-9de5-63fe23403de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f712995-e161-417e-a962-9d80c28849bd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d832416-a2ef-461b-a1c2-b6a0d76e29c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e072ff3-c912-4e2d-9cd7-e94910f2bd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2967bc80-9172-4e24-b8cd-603f89434fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc181c81-7719-4d4b-b332-18dcdd84f416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87664b9e-e0e4-4bb7-8dca-bec6c85fa633",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3cb53a-c97b-4c41-b4bc-3915a649f7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e8bbb2-30d0-4543-9cf4-90e74a6c9d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6176bba-b3cb-448c-9ad4-1a0b243e427d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2326574d-eb19-41ee-8b58-afacba9fc099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617a0d9a-da24-4339-953b-ce38849295b5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9688f34f-1ec5-4075-9bb7-1bd62563eaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b9bdd6-8493-4c86-a11b-b30ad140eb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df08920c-4554-48a7-a24a-34e7cff66681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15cddadd-860e-41a1-9d3b-e97b99b35beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1af4a04-d4cd-4e8b-9cb1-b601bbbfc4c1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b22b939-baed-485b-8cf9-244dc9dd0198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb8afaa-77d0-4efe-9b68-73320dc43518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bd291f-a8b6-41a8-9213-3a8081d1ad21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fba6da-29e6-4878-98fc-09b410ffab7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83dfaa4-d82b-46d0-97d5-88b5d4f1787c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679ca2f7-922b-4858-9d2d-f5fc359505e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4003eba4-0433-45be-a3d0-883a8fcaab36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6cc82f-370a-45da-b603-b9e1d921d91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "99ced0fb-86ea-4014-9190-47d7aa68fc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb6bd4d-0270-4828-87c4-f699bfac83b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180da8f9-9d25-41bc-9196-368cf18b1a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8988a0-94a9-4fba-99cb-5d682e0ee7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f5c25a-a451-4436-8b97-0fcb1be7d991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bed46645-6ff2-4f68-b6f1-416c26014129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e1e963-f22a-4b90-aebe-fa12a2b73d32",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b5a721-25e2-41b7-9829-ded1aaca59ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47573ad-93ec-4c42-ab9b-03ff66a1ab9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c383ca-903d-46a1-89dc-f5e2f45c36b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "553ec8e5-5f8b-4198-ac66-5040318567b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498e8693-4273-4543-9317-bebfc52a0549",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c145da63-e816-429d-93ad-afd9a16c598a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5394cbc1-c3f5-4782-b2ba-8cd819f237dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc979ce-f95a-4d7f-914d-a3ca277a76d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d60e4d49-69b7-4fce-b067-d979566ebd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0380fc3b-0057-4670-a564-737cec049696",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4693825-a922-4d7d-a11f-fc33098b2a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d438e40c-7115-4abf-9a28-633f2d6e7cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb33bd7f-eec8-40d6-9ce4-1755d9de2dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b224c7f1-db6a-4f53-b782-219c31f8be6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996fbc37-9fbf-419e-90b0-10a52b313bbf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbf201a-e43a-406f-9149-f346b25baf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2801ab52-3d36-45b7-b86a-b286cba71f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54b7a11-519e-460a-94ae-49c3dc6af300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "57369fef-0a3d-429e-88e8-d314254dd35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83cd605-7ecd-4336-84d9-5d465c7d273b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b741fc94-35b0-4fb1-826f-09525bb754a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992da56c-e4a9-4536-bbef-049c82ef18d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42c1b57-2a69-4e40-b208-afa991877365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dedde451-5f02-4942-a844-28e6d55a2538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dd7510-c250-44b0-9d4a-b5a79fc29b46",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c36250-96d4-4f72-ae70-bc9571eb4333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f9d958-4ac0-4c8c-ade9-105fc37882bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f0a932-fbe0-4a90-9485-26aa8b698ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b12c949a-7fd4-4eac-b241-6eba6792546d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdf0cd7-4846-4888-abd6-72d26d408d40",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5b13ea-f6c0-4471-bd7a-fd459ca7a1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fc1963-7f93-4065-9f80-0f8e33da7e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7813f1-96e2-477f-91a7-e937e7e1baeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1d56a4-68ec-4ee9-98fb-c122eb5a4985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac435f4a-9a1c-474a-96fc-2cfc96078c8f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfadb3d3-a29a-41b6-8723-8c061d57dbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e774e9c5-b080-4576-907c-93330903789a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0f91ed-d505-4606-b8dc-686a7318fcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "febcb1cf-4c0f-4a64-a62b-a4ca5f1624bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7316c6ad-aee8-49ba-b7ee-54e78cc6c384",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff455af-2a27-4886-9899-f2e6a74e196e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e62882e-616a-494d-bc88-cfc4eb8a7e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ca6abe-b777-4598-880c-938c8bfccbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b0f4d9-dae0-44eb-8cd2-447a7efa256d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c3fa6d-de93-444e-83bf-81af0f4eb44c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcd935f-db11-4e02-a08f-0668b4163605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2f29b2-78b2-4fc6-bed8-6585c8aada11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e288a5-564e-4392-acdc-d8b983a9576a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "08a02c4b-6b0a-481e-881c-6e225af8bd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9ff049-c9ef-4f40-a25c-f04b05ec9b81",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97307a16-d994-43fe-9416-af53609741e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a010c8fc-5d93-44e4-9c54-450ccf603105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ba4f1d-85f5-4a16-a32a-6e74c2f0b316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5055a22-b4fe-49f7-95fe-fea7d5bcee6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d485685d-aead-43ff-88d0-39faf425c622",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6dd577-f9ff-44c4-be23-cc129606c516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de9df4a-d4ab-4278-a594-049c12de0f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f1f475-f61f-4b42-beaf-12f4d805b3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f84313b-3223-40e6-aaf0-495755360c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c7d541-7d53-4143-a860-572fc0b06d0e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8f6f71-dceb-4d93-b278-01fbb1ac1da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9220074b-7e67-4eaa-b2ab-6c5f9a7cf6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3776621-6536-4b26-bc90-ae83502e16f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7ad9d5-40fc-488f-a886-844923ef4aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716499ea-a986-4cdb-aebd-a27def1640eb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12741795-2c6a-4418-834e-d07394e1fc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65da030-c013-40b6-864c-e1a538019c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a786cb14-6e0a-4668-a29f-0d1131376aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10677cec-3000-44ab-a849-9c6381a7b971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52ded54-f94b-441e-ad6f-1821c90d20d3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6494751d-fecb-43ec-a1d4-5a328d0e8649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bec8441-2f97-4363-a2fe-32e24f3daab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9ce46c-f497-4fa7-84d9-437c1ee26885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d543cf-18df-4584-b442-2c95a1e14735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09710901-d0fe-48a1-8d4f-bd56f3d04c8a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7e565b-5cef-4b75-963e-0a3a7108ae3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff7d106-9d46-4a1d-9afa-1f57a4ea86a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2070178-28db-4455-a636-cebf0cfee16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f746b57b-1e8a-4343-826a-fbdd0589ed39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30531d9-92ee-4c7b-af49-91501a7eab47",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc53386-5562-41f7-8f4c-ec1a4fc8e923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2868e9b-e791-4d3a-a753-b3d06fcb23d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce348b70-7e96-4da3-9925-e17e6c580dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d724991-2944-4af9-98f1-495b4a2a3d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f754d5f7-bf5e-41da-8dd3-d05e2a3c42b5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b877fc-b486-49e9-8751-261424b5f62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51487cec-45cf-4445-8855-946a618ffdfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3619c5-a4ca-48ed-adf0-318c9dfb3ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3ce47e-452b-4974-b013-1a49cba53d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29ad40c-7d6b-4747-9fa3-551bbbafae21",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3d997a-123e-41d8-8112-3b78e10e2e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5901ae4a-42e9-4cc7-a4ea-a50e8723e788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6868e202-0923-4d73-a68e-ae9ef87d02b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76e303e-6e09-4dc4-84f5-90f2a76d5c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ba95aa-4911-46f8-a59a-0743a1395634",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1163890-f5d1-4eb8-8d58-01e1fdb60776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cac6c72-46ba-4cc8-bc59-668a63d3c58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedb5e48-a027-4807-966f-7c417c6598cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc8b687-f739-4eff-8f5d-b680c8bb2d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2af260f-a6db-4b1b-8613-a46c9cbcabed",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eded704-7c7f-490a-ae3f-73d2ccc887d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91817ad-5b91-4223-9c4b-159a850d730c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bccee2-1a61-4394-ac37-e3a18cc6755c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf5bdbd-0461-4947-94d1-57d378667333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd78801f-1670-47f5-9d47-562eaeafbb13",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3897a79e-8893-41ce-8c3d-e97eadba0249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5cfc067-39bd-4b1a-9807-62dd8d7e35cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cc10f0-83df-411e-afd1-aa8a30d96d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66aa0e93-b4c3-49c9-a3cb-3a4e008d42e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a7067a-755f-4bb2-a834-a7e6fc749464",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf7f154-f2ff-4ac5-8c2c-29656adebd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd83a34-4419-4ccb-9a52-cf1c8e34ba42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e95df7-ce6b-4bca-b772-62428d4380ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbfdcd30-4f51-4e74-ad58-5a70a06b1537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2666267b-44ca-4ed5-9e1f-a8a5fc8d9952",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4b0517-6ee8-48bd-9b31-2139c6c22b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1365cae6-40be-4e24-90ee-9e25281e7edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc96d0e-5965-4411-a80c-96cf006c225d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bce54f-39c2-4972-8a54-f598e8cfbce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c430b523-2707-46ad-a407-17c9e9656e68",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404e7f60-7d64-477b-9688-14c1613d2e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86f0a84-11fc-4082-887d-4bca9fa5097b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d25d963-1c4f-43b1-b43a-38dd76a601ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eec9e48a-8a37-4b9c-bd42-75cf63e19137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68ceb3c-61f2-4a63-b2b9-9f4b43174b51",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedb7008-8da1-452d-94f2-3818992946b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf435ea-1be0-4aff-829c-ece8ac10d4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a1db3b-2f37-4d9d-8cd3-595132dabe11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13835f34-7865-4588-9c07-81926af094b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57b8ad6-3638-4202-a4b2-b355c86ff645",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269faa28-3200-40af-9f87-475d7e9cc13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fb4495-a492-40fc-b73b-eb56c2d78850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803775ea-1978-4be7-816e-65e05391a7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "255c1838-7ccc-47b1-b592-2a2cb156e41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f29260-c422-400a-83fa-bae0354b88a3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736c59fb-92c5-4526-a768-c450f546324f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f89832-d067-4029-9a2b-f2eed095bad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f7be4f-e7f5-4f14-b6c6-b98b1701cf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cffe82ff-b516-4e85-80e5-5b6297e26e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af246231-6567-4152-a1ef-aa03b2aa9d25",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1c7319-d1f3-481e-8343-fbe7d2aee28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97425c9b-f2c3-44c6-98df-6351763d36cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06fdaad-0a6f-4ec5-b577-5e001af7173f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7486a3-387b-40af-b28b-6d75a2de16a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204ce6af-31e7-4778-8921-aedc6ebf6020",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34fc7b7-2a04-4a87-be38-d5340a4f01c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20e288b-04f6-4532-bc93-7b0da908a3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bcd5a0-2f39-4040-8300-18bf90bec47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f08cfd5a-77e9-453c-8271-6063d693a706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de14064-469f-40c2-84b2-17b8ae74081c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799531e2-a3f2-4d78-bb73-f04dfe21c8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46096559-1b09-4676-b2fd-c1406601029e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f60526-aba5-4189-af4e-571247dadd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf47bab-f7ff-4341-9301-946766cfa3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e624bc4-2f74-4264-aba3-5dda34e358a3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3000ba-4cc4-431e-ad2e-bfd0fc6cb5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85669a0-862a-462c-b5e8-9ef2e5a1af23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22b22fa-0615-4032-9fc1-31ec62acf6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db3dd770-dcf7-4008-95ea-e29a8a400f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff21ae5-212e-4355-aca0-a98284305362",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21d4131-9170-420a-ba9c-98eb1f51217d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9671d0f-033b-472f-b5c3-183a9349d0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ff322f-652f-4b09-883b-49cc4124a320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f01fff7a-8256-49ab-9bd3-8289ac075322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb56804-824b-42ad-af0a-6eec55d0b4a6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65425016-44c0-4b10-8335-8a54119cfb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "996fd8e6-aa92-4af9-ba06-a3343b359258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efe4931-58ce-493d-9860-e3f235343da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "105cf338-4435-4f61-b085-05b485c5b19d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "82cc82e6-d166-4d97-9fd0-120fa13f8d60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff9a14f2-6335-45ca-9b78-27e028b12701",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90078b0-c3d1-4950-b67a-0e2691cc34e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e833e97a-0d16-4bc4-a6db-387315a31fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6985d2ff-1343-4ca7-b0ea-91bcecb7f490",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e463cdf-8f6c-41b5-b393-6d87357e8e8a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1ce0082-d6b2-41e0-8a28-c0c5f0bd7bca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c10b7386-b4e6-48a5-adee-852778a2a1a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e44cce02-88bd-4b46-abe9-623677657073",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4373924-ba57-496a-8266-8b8b3eaf81a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c40d73c-a56e-4495-a2cf-ead73b4903ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fde571c-bb0c-4c18-bfaa-ef3372ed4926"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2d3bae66-772b-4033-88a4-d8fbc0ed8bb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "51f66a02-552e-4c29-9aff-67c07316871d"
                }
              }
            ]
          },
          {
            "id": "8be5101b-9376-441e-83a6-cc965b6658a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "adb3cc99-f144-4696-9904-01c262cc8ab1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0e8cfc4c-cfad-4d46-b2f2-e3136978a499",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec5ff08-595d-4b8f-a95c-b09b23a797d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "03092e88-e2c6-4a1d-b9c4-bb7470b60479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4282a2-8385-47d1-a13f-8e49cc4703ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e986cbf8-2aec-4cb8-9ac9-25fd058036b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca9360a6-b9a2-4908-b4f5-fe2751810d7e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9785e436-e845-4e8c-849a-2c403e34255a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "638f81b9-d9f5-433c-904a-646ea78a2d6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5602b5f-e43a-4a9e-b3d5-9bdf13a9370d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86099edf-f7e2-4f8f-9754-820eb0db96e0"
                    }
                  }
                ]
              },
              {
                "id": "bf0ab949-6e96-4ded-ad40-f5825f80c819",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91d40524-e3ac-4b18-92f1-2307c9dfb067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d2dc98b-4e4b-4a47-9d5e-1cce3e886a9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95acf502-f3f0-4c17-b667-d578cfff5ac8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "007ef6a6-9b4e-4ffd-9f6b-3c2b937c392d"
                    }
                  }
                ]
              },
              {
                "id": "a0d54610-2d2e-4850-bffa-82d5ad1365b3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18f3ab82-a22c-4fa2-b082-ad89d7f859dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48bb54cc-372c-4b89-a535-7cb59145d84d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e33e9f3d-52f0-414f-b4ee-a2a46a72f2bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "553b8916-b710-487b-80fb-f702acbe0740"
                    }
                  }
                ]
              },
              {
                "id": "e2bc65e2-63bf-480a-a1ae-ee546a38c23b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee9ce284-ea3f-4802-83e7-85d058972049",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d81c39a7-ba98-4227-834e-d4e417e99cc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ae8f2cc-12c9-4b72-9a95-9586afdb541b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "98790838-1767-42be-bd0c-4839a0ff97d0"
                    }
                  }
                ]
              },
              {
                "id": "08680f9f-0b73-4f8e-b4da-2bd7c8ab27b5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e29a3271-62ea-4491-9690-8a05d6baff76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5326962-a8b1-432b-9849-ff3f8f75190b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b2da461-ed68-4763-8d12-fde66e5f63b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9ba4740d-0b5c-4275-8205-8a5eb8c9ea8c"
                    }
                  }
                ]
              },
              {
                "id": "b572c5b9-f7de-4f00-a140-c8cc5813ca49",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fff876fa-ef1e-415b-a4a1-f5ace3ec265c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cd5a9ae-5cab-4871-83f2-8bf22d8ccdad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc6f3162-5d5b-4fb4-9670-8deb4045e7f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a3cbc11-9f3c-4f25-8320-ee49f246e2fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a039a58-8033-480c-b81f-89d3569a61fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7b17c5c-7c03-4f5b-8ea1-632c1dc36e32"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "94568db5-e0b0-463d-b8a2-3fb57198da2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab897734-a7f1-40e8-945e-902566255f6b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c3b18a2-b597-4c18-9b0c-56405433db6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "09e83f32-531f-4d02-beeb-db83786a5e62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f578d709-e8c0-4b9c-b00a-3fa9eb037165",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4daedee-7310-4ea2-b7e2-f70442caf2c4"
            }
          }
        ]
      },
      {
        "id": "0195e7dd-5606-43b2-84fb-0119e9135e51",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a8a8fb24-1c9b-42dd-a836-9e76118f89ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abeab354-1301-4d86-a7b9-34e5ebcd451e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9931d477-a8ae-46de-a51d-abc1a71796c6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca30efc7-af6d-43b3-b28d-2e2321165837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e2a354-a3c3-4635-92fa-664d24ecd960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2fb269-94ba-4daf-9716-520990e610a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "da5dc27f-8ba0-429b-94df-0a3a54ddb9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e5c134-7ae1-408b-b48b-2b7ddb78f944",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c40dee-5318-41f3-b0c1-428f83cf3cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fb5fd6-db63-4eb0-9779-1f68de258f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2199ff7-4eef-44fb-97d4-9c90039fa43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0263bb-2911-4d4c-9bbd-dfa6e476bf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cc06c3-a9da-42ae-bf0b-f30b290bac5d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff19c37d-bfcb-4645-8c44-71265bccf3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36dff1ce-ba4a-46a4-8813-ec065c82a7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a86b153-0caa-465c-b4c1-1ccc1796ad3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59878578-5eb4-4e17-986c-85b2b65c3d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a936a73-79e6-49e4-bf8a-2239e77a1e71",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51267e95-fe8c-443d-b313-056eb9a4a678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3621ca2-d57f-4603-b16f-c777aaab1fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63667ac3-e558-4466-baed-b0904898745b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1527d43f-58dd-4083-ab1a-9ca9f59a7a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4489ccd-d233-42cb-8ce2-fde7b81d5658",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7462e517-a1f0-474b-b18d-46f8884fcf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e0ddc2-a5b0-408a-9b39-d18f07e6e900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4136d162-e6d0-4543-a607-6c34a3a087d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8e4e43-1b09-4b11-b16c-efd1f14dcaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbe3454-5ca4-4715-a7f0-36fb0c95758a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd64f970-68fe-4ef2-8f20-1514f43e9ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f2f93f-7cf9-4e02-9b0b-327a484aabd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6469a0c9-7249-4e39-9a40-daccf4469d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e64c41-eeae-4810-a6bf-5af2f6dd15be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45c452b-bbcb-41e1-97b0-5d7e2df61940",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7b66a8-3857-407c-b433-d47e8c0e6a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d32123a-000c-4f04-b836-087f93301a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a414bff4-a8dc-4fd7-8a5d-cfa19457a5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0cb5539-294a-4e1f-89d3-01d774b67d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38126e05-2dc9-40c5-8976-b726285c09d6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787e16ed-1ab7-42fb-8e44-dde6c3eec675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b63647e-7ea0-431d-aed2-b2821579285c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55523c8c-aed4-467b-a5f6-9747a6a32a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "555fc387-9727-4588-af55-6b2d900bb87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa488c5-0aca-4e24-8079-352b68d8d4fd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673e1841-e36c-49ca-b80f-e3c55678ed1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4e922d-077e-47aa-bcc9-14b54a54b5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62ac1f2-fa15-4e8c-be21-dbd66dac69f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a324da22-3589-4bf8-971e-261ec930ac41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81f21e2-534b-4eb7-8c89-e37721704ced",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac079de-fa92-456f-a5d5-4a8319396a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed81105f-70ce-416b-8742-954838520b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508501df-3d46-47fc-9622-a81522191b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06b1657c-d8e2-4fd5-b6c2-fcf783bc3301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffaefa97-b259-423d-9b63-ec0f88938064",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b6b05f-7d12-4339-8ca9-d7f0089cf6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2d787d-c7ff-4f1e-9ae2-54b41c12cfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e6688d-3a67-4020-b908-f7ac0672dc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ecaec3-4474-447b-8dda-eaf17637d329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32430e5c-9927-44d0-94f9-f95e4a71985c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4080228-7cf6-4f44-916f-11a6e76076f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba01255-427c-44ab-9923-41833a98443f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c609a7-150d-4cb9-9529-247d446033c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "558bea0d-50af-4801-aa6d-4f538e58d90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7eaf0fa-716e-4e1a-b776-95e6a4e01812",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c75ec8-1270-4483-a64a-0eb64b95306b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f970bacc-8ad8-4b3f-90b0-03fae46cbb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832f9ad9-7114-4d95-a20a-d6ac21a5aeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf11659-7a47-4fc4-9b2a-5af83161c528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdfd818-277e-44a4-8f98-d169cc6d1783",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d2b251-fcfc-41f2-a479-026fb9e3b3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c586b3b-7cd9-4289-b0f3-c0c5e36d6b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effd98bc-35c3-47ca-80d9-b153e66b57da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3cd19b-8ac5-4cb1-b1b4-3e1718fc2b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6135c9c6-6df7-47b0-a164-113c727f6d8d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6740d602-5bf7-427e-b633-7f065ea1dbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78d4028-c6d5-4e70-96cf-348b3f6fa718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba19d48-85cc-40a2-9271-166537d1bc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec91ac0-6cd2-45fb-a45f-e25a090b80bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd738c40-ada1-4494-8be3-422943e77db8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16eff47-77d3-4124-ad67-0c657a074a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f224e1-2038-4dba-89bb-3b22c095700b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699011dc-9ccb-4c7c-a360-ab2365718eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbcac3ee-7a7b-4deb-a96c-a6d176e0dfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6482ec3-6c11-44da-9a69-68cd125cd6bd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87baa3dc-b20d-4077-9e30-d9bd775cce89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234377e1-95e2-4aa7-b640-67acdb90a4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076bf39a-eed1-4156-9de5-739367719b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ccaf41-899e-4881-8dc3-c5823b2abcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f61c940-c9b9-4d9a-856b-02609124d9c7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883a0d2d-8b52-4f0e-b25f-a4b13be7278f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36be486-e6f3-41e5-a4ac-dab6379cbb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c506d948-8799-4f2c-bbdc-532218111162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9ff4e3-c08c-44e9-aba3-be0a796e5621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac60b638-e066-4561-ae89-843e0bb1a971",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec61f186-7658-46e5-b61c-f85cedc38749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1eaa21-7029-4c10-972f-c133f1b405fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e41fd5e-8b8d-4962-8ff8-08a2d760147e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "178a1aed-6340-446e-815d-ce3694a6ee09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32edc397-8152-4d66-9560-c6defc5c855c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37c1817-4333-4912-9df5-4562f9440542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91507d7-3d84-4e14-9b5c-0c519b960103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a375d68-91ff-4646-a5f6-588d3d17547c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33981055-3bcf-45a7-bdf5-1c0e617f47fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d3291c-06c8-47e8-986d-a4173fd08aee",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a0e02b-5425-4eb1-956e-46aa6b07933d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44284a40-38d2-4917-bc25-c18529514653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42b4c48-d25e-47c7-9bf8-82f04ef14104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc86d8f-bc6a-4680-8988-7137e10c1c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423278c3-82de-46fa-8368-871c1088e37d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b306b38f-a165-4598-be10-af490e810014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531c8ec8-d92d-47f2-aec4-72904bc3aa60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e529c221-eb95-446c-9a79-205cc8b74381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "226a91a3-8f1a-4898-81bb-ac8976135a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a496fe1-eebc-4443-bdc2-91a9a0101daa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fa41dc-9540-41d8-93e3-c5a4e2cfddd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f22a54-7493-48f9-940b-34083cdada99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0d0bf9-7dc1-4137-ae24-d67cae92c227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4222ba2d-4361-40ce-90a9-eef88f0b417a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07395786-14d0-4fa7-b5be-87bd6a566927",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811d46d6-c983-4b88-a7d5-727dca6d5944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9addde-d371-415d-b1f5-7eb665d37a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68512575-c907-4ca1-9481-1f5038d90f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "becd2538-dbff-469f-b586-a8a1bdfd5772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23b1280-72a8-4b7d-bea3-60a038b7f1ae",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03a738e-b2b2-4843-836d-c407d0e7df5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c8257d-a2ef-4768-a9fb-a7921d505169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fbb1f0-998e-483f-a485-7d4cf2abf95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa5a22a-9ef7-4077-b379-f36decd52c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9621c25b-4d4d-41cc-9e74-08b197406279",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e571c76-2a35-47a1-8f31-3a8c77fdc11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0e91af-d213-40ee-bde1-efcda80862fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f890cc7d-5f85-487c-8cd5-04ee22ae2ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccb7152-93ee-4f7e-b62b-a7746f240ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f27c74-8d06-43eb-b154-b7bdd2f9ffb7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff49d91-8d5e-49d4-ad80-da83e2770fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c43e01f-b5aa-497b-a2cf-cd91d00a52ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaecf5e7-6de2-4664-8b52-f4842ef92463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ede6fb2-8c6d-4f0d-9263-fb8dd0e8b273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c144e5-40bd-43e5-8f62-5c9990e1d446",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0edb941-a421-457e-b70f-c702b1c1f2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311fa679-9907-46e7-9e97-9b4f8ab1695e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe2a4ba-79b8-425c-8781-887629e8124c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f64cef-0f8a-42e9-9f9e-6b11ca1252c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3b4457-0000-413f-ab7d-986e697b101e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7a49cf-f84f-45e3-84f9-753111206aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf921f43-94b5-4ca6-b4f2-b0fd9451a61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f6b180-e729-49a4-b630-8c978d3def10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "894a40b3-6c8a-4142-ba17-4f5f22bb96a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c0da17-173b-4c54-950f-6030a343a1b7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb37fc6f-d2d0-4e10-8046-9ad84fc55206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71d54fc-dba5-4412-9f56-42e7245e6574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40bf45a-7524-4c08-b6e6-4005920b524c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6da9d20b-9f73-42ae-9d5d-b2df6f53c0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59935fab-3377-4ee8-a8b0-0455392746aa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117c3223-6a74-4615-b79e-4fe6f48cfe91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafa9c90-943d-46df-ba3a-acfb1626c677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3535240e-683a-4fae-afe9-b5923ae897d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07aaf6c8-e16c-45ca-8311-ef520204b181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee9f351-6894-4263-8f9d-942950fb408e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fb5ba4-ba58-4e42-a509-cf3bfcc73c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7936bc24-f9ee-4c47-bb98-c4861cb00714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a283ee-ee8e-444c-8b07-2637d2951566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "830c7d25-453e-47e5-a115-0271c729a2cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e7a2f2e-045f-40d1-8799-815f1aa8dba0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "315ddda0-43b8-4800-a096-6fd0b856ccad",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183135a8-bfda-4c04-952e-ea3b8ad7983e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "54b14674-d179-41cf-b9aa-6e524dce5b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e407c042-79c6-4a13-888c-4bc285195c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b18cf46-3d82-4878-8901-d71aa0cfda72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e2729dc-0d1c-46b6-8794-35aa6164cd9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83af3e40-8f2c-47bd-92f4-d34e2cbd766a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ea1b0c4-04e4-4814-82c3-2c352fe32da1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e72bba40-98be-436b-9960-d09a69c68986"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5a7fc3f-9874-40ae-b0ae-4ccb2ab45f1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e995494b-6ef9-4eee-949e-422f3f607733"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02ace4f4-905e-4e9e-921a-c2609005ddd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65db526b-6524-4a76-ace1-467272a336e9"
            }
          }
        ]
      },
      {
        "id": "5befe84f-eb34-4d95-b272-c95f42f4efa2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3fa3f73e-f133-4f6b-9600-33e3155bd9af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fb0a112-eb30-4c9a-8f34-c32aae7c8161",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff1cff62-7a1c-46e5-9a04-39be6894e70a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8450954d-684f-4c9a-aebc-d6215cdf8f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2a6ae7-61e5-449d-a468-36f885400c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3ea527-5c9d-47aa-9afa-52b16f4e5359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7e2fbf-162a-42a4-ab4c-df88194e0098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f526ae-35d6-4297-a45d-2a996ad0e9ca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eddf8e-d8e6-432f-945d-cc3d05e0d131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4570fd89-6f66-4212-9939-f9e81f00cb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7979bc09-4595-4070-9bec-2b8ab690084b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca08db2-36a0-4b68-8ad6-7e8d7c52dbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2944a5c9-fdc7-41b6-998d-244c4822119c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614d65e2-4adc-4a61-b7e8-057dd1e186c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f24205d-2857-425a-85b4-c82ec19052de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f134ae0f-add9-4f5c-9bdd-74cb77fb2a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef237a25-3ca6-45e7-b030-a774ca5b425e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7c3e53-b330-4469-8656-3cd4de17a8ac",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba62ab6-9ce1-4874-b766-78a2bd077035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01c198e-e852-4bf3-974a-731a1717032b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82956a7c-c87e-4c9f-997e-3686474c4580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6152f9-b212-42e3-8834-95aa24baa77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a275a813-b0ed-43dc-99fa-a1d5f46ff13d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b01b16c-be3a-4e64-9e3e-fccfb489a343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f3c97b-77e2-4e00-bab8-fa393afd9da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb0f3a8-6983-4ec4-8705-661b1e0a1e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dacaa79-81bf-49f2-90eb-b97ad39c3531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d44aa58-30f0-4474-828e-91c5925167c5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069e60f6-a82d-46fe-8f51-04a4248090ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85cb1d94-10d2-4e57-9727-cd9c54988fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3e19e0-bc9c-40f4-b1f8-1831646f2295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f063c7c-26bf-4c7d-a8c8-d4fe8f41c59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d0bf81-9093-4b94-972e-766ae66437cc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ceecd3-bcb5-4ba5-831f-b11574750401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000c7c4c-33a5-40df-bb48-c94c8f412e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b887e71-d710-4489-919b-049c6a91a1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7efe07bc-a5cd-415b-bfca-cc1051138a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379240fc-9668-449f-b70a-a6244ab77405",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff35ffd-fc72-423c-ba77-113de8aaf2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191bf448-5590-42c2-85c7-d85ac94d19b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0323bf0-eb36-40fd-bbec-35f337d872b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64989941-5a03-404d-b30b-7ff2e2a489a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ebac57-947b-4073-8d23-de34e4f628b5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace456da-ca78-4ecd-ad3b-ee12daca3619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55044dd-4a35-4998-b9dd-d46dfd7da83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc390dda-17b4-49e2-bf30-f6580855c8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8a4576-ed64-4752-9ce8-3fd5e61b295c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d742e06d-e90f-4934-9a71-135a54a80031",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82e7e9e-9c29-4cb9-928a-1f86b88d1d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08addd9-14d8-417f-9b2a-ee06bb247564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956ac7ab-960e-48cd-8a01-b13c11f64994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b19f281-f9cc-4959-8725-6e54bc51e7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dce061-a22b-4a7f-8847-8b47a6ee3f84",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff38cede-9add-4d11-90be-874daf5fff5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5788dc2b-97e2-4089-8ecf-c82ffdf8305a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b31150e-ecff-4e8c-bc6f-f1e5c87ab386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "040ddd0c-540a-4f4d-a2d3-8f10f7512954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc44960-219e-4406-b00c-f38f8f06c209",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aac15fc-0afd-40fc-9a34-a0150e0b93e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc45b032-e57e-4374-ac3c-e1f931cdf61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf523958-fac0-472b-ab49-2fbad17b3f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf77aea8-122f-40f7-acf9-cd615bac064c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55ab7ef-0839-4292-b214-4570ff919599",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc8af1d-4db2-4a3c-8a31-fef279afa5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03da34ec-d124-47df-a98c-fd0a4fe03e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1749225f-3ba9-44cb-ad0f-a2a350b1af6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c92a720-a652-42ac-adf2-43ef58a89cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e578cc0e-bdbd-49b4-bc88-031a3e705c74",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a90ead-b789-4154-baff-2a824a676978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bada4d2-28a7-4215-b73f-038f4163f9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5663e4fb-c23a-446c-a0b8-3d2b3e75ce88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8006ec-b0f6-478b-afc0-7b7c15e23f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee9ae3a-ce52-4e9e-8980-2910690658cd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985f84e4-b0da-4bfe-9cf8-c5077dab00d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5dee34-1c9e-4f31-8151-1b593a62dafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76843f70-4e5f-4229-8e40-b2d98a4c0548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "819a4990-1a7c-42c8-9ac9-797c3e63d657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fde5bd6-1d04-4abb-988b-b8edfa4ddabe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168483c5-eb38-450e-a6ce-729468ae2653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b97f3d7-7425-4a62-9e37-52d351c0a9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905371b8-218b-4cf2-a161-012100261de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d562baa-cb2a-46fa-8c6e-ebc99d34eda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafa71bf-6d62-497f-a26d-4da6aaddb426",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828f27a5-79fd-4f01-9e36-91d2c705ad58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76959110-7368-4350-a264-6dd4fcd81223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd06546-5fba-4223-b99b-6b2c18a6678f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "689de68f-5f8b-4aea-9960-5880caa4a25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161ffdee-2b0f-480a-b003-b5f9a9c5e55a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b791d8bf-2c4c-4823-8c38-2a5730826d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cf33f0-0ee7-4be2-a38c-272404ddf34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3564378e-f9a1-4236-a817-6036067a5bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6845dd88-39a7-4239-91f2-00bef0cb367a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05534897-ab4c-4254-a440-ca93029e7223",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69357083-5413-4542-b830-5a907b2018ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db547d7f-c3b6-431b-ae26-56a0a6e1b78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dbf4a0-5a70-4d27-9f3a-4a101bd0d839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9591a3-4899-474d-a6d0-703baaa3df0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26063c61-2ec3-4c88-ac69-2a6d062aa803",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da4889f-4407-409b-968f-23df9e56ff99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c192411e-8a94-40de-9644-02b100c069ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcd1d4f-0a69-44ad-b3e3-37c24f12bb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d945eb9-b07d-4313-9f74-71aa37090e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90f552a-6825-4fef-971c-64d602080a1f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe26960-7a82-45b9-b8a2-c2215918fdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575cc30d-763a-40c1-b105-e04135b369cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9f83f1-ee3a-4e40-817e-89b6a0c4fdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5954824f-ce83-4bb7-8e81-862daa27a59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb359630-c8d2-4be5-85d3-ea38ead608e2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9a2e33-0ef5-4568-874b-d665721beafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36bb623-4940-42e7-aca8-8ba8f7755bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7e066a-4faf-40ed-ae04-8bfdfc91342b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "033a3afe-929a-452f-b177-00412a34c442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8438da-280c-4c6e-9d5a-31a951bccd2e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dca2d66-effc-4ce4-80f9-1b5cb9966829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56ad588-6bbd-4fdd-b483-ebf674e2434b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5090897-cddc-49ad-b8b8-7461e45e1854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd501400-d2ff-490a-a1c3-40b1678cdfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71fa1bb-1a6c-4ec9-a243-bc7ec533c716",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3b4082-bc31-4a75-a96f-c1a86936e6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13384de1-b09c-4315-b85f-cc9edd979b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053f94f7-bf10-45af-9089-31dec65b352a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5f796e-9c4d-4f77-87e3-864bc81185de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541e544a-9da9-4750-ac7e-b4b15fa60738",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900add5c-7b31-427b-a7a3-9690f95798a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd768a82-055a-49cc-b288-761c3d25db46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2777e156-720c-4db4-8552-ba376c6e10bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0906f0-ad01-4d12-8cf3-85dc0c10c012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc031ac-34e3-4943-b852-40a10cc22cce",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170612bc-4a3f-4eae-9389-1d1aea6b8cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcaa79da-ee1f-415a-a637-a7cd36cce438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1cb7b7-97be-4244-b7e6-a45a991aa17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e75205f9-6037-4623-958d-6b9194cb7be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cabb1e-0209-4607-a508-53d0ee096cdf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7864bf0-2218-4c7d-847e-d9d01356e7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee77a1e-3742-4518-a283-093b34ab340e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5c3e3d-cb22-488b-8176-3ab83a80c150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbea1375-d3a4-4627-b77b-198beab33e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceeecb8-0d3c-4aff-8706-7969edd1f418",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a94963d-5cd8-4db5-9157-f59d9348a41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8296ac1a-ac56-4b30-9e96-e4be3c8e01ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bf68dd-93f2-4766-87f0-4a0de98aab36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7684ef-9ceb-4f17-9ead-57f54008119f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b615a9c5-6108-4a13-b9be-0c3c83f60cf2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc9b91d-2977-4afc-8bda-5c454f5c7e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc3d9b6-43bb-4265-b99b-7457bf9c3c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d479b60-e275-4ad6-9dd8-50a0c837632e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf37db0-80e0-4777-aeae-e2be5eb75a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5911f4c5-f43d-4495-b844-fc20334ed94d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4eaabc-4d31-4d61-957c-fe7b514d7eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed2ba33-738c-4b20-8823-d3c1bfd90c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f298df3-04cf-4fba-8f07-aee07337ee61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f7a8f0-f635-405a-b71d-cbd7daec1124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de88091-9cbc-4cf4-987d-80fa48ef5f30",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6375fb4a-704c-4d16-9e89-cdc0f5fda1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7c31a0-73d0-48de-944e-48e5e94d38ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc2fbef-d7e1-434b-a093-9e58b4db6dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d766a58c-4170-4c5b-9ef1-ef64a07de1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1367ef5-42b9-4762-bca7-12cbfb5b5f5e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1613b187-1b10-4501-a564-5c7df3a007a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f653861-0587-4e84-b814-93676f834137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cad4501-ff00-47eb-839e-126bac33d0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5879c47-7506-411d-b1d5-31dfa94904e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b0772e-1346-4a6f-aa1d-7a203876335e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fd7293-f417-45e9-93c9-3c01ba988fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b3a316-a943-4c52-9231-b20b9790eb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da40aa67-619f-404a-9d28-bfda6815f68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b61e9d-e70f-499e-ac8d-14f9eb8961fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57bfa4c-c5e4-49f1-bb01-3d2e382bd0a9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cae88f3-8b47-4e9e-b1bb-a993afd71fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73b6416-f558-4734-a492-be884b5292ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f2cd6d-8bff-49ef-9e7a-80597361762c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45a75bd5-05f0-402f-a76d-84d60f5e97a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6f9dcb-1966-40da-ab35-f8beed2230b3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b73fc2-ee64-4bac-94f5-0caeb1fc5fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f366df4-8688-4934-a607-73904f7f0174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892b2d46-2b71-465d-99ee-faedbefb3fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "353507db-7777-49af-ace1-852b5bc9e913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51eeb536-b201-4d31-93ac-ec8ef3c01759",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e9b312-7500-4cb0-90e5-14a9fe8b2751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342706e3-ecfa-4c29-96f9-1269c2ded962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cd956c-3dad-43bd-82da-ab4aec193570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8390535d-17c2-4ab8-85d9-42a7d94cd8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59b4f80-6d8c-4b3c-b87f-7f584bce4d7e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec21f9d-ba99-4c5c-95ef-827122308f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b2e086-4087-4503-a92a-e4d3a53a984f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb9536b-0e65-425c-9881-4db2b075f37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9251160-b4cf-4aa0-a66e-128063977a91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c788191-93ec-4cd0-8a87-2a609cbc7daa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a76c5b44-16db-4bb6-b1ab-9618464de80f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d506477-d539-4bb6-bfa9-109341728e9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0483f4fd-543e-4eb3-b6c9-f28ea97eb511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778818df-9eb9-4159-95d2-d4a70489ba1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02e46349-5ff5-4752-8eb4-1a3bafa1253e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bda982fb-777c-4752-9bf4-59206ea2e7ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63d30231-bccc-4875-b50c-802219feb6ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "503d2bf9-7e64-4687-afa8-4968ae164406",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62a39c52-6d6c-423c-924d-bc7009dcf2bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e914f93-eef0-4da1-addf-97687140b62a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9a463183-8dbf-4b99-bb42-9eda0ba599f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76e01e8a-8e4e-4d85-9f95-978ff6622037",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "455b70cd-fee2-4f5d-9b19-422b71533606"
            }
          }
        ]
      },
      {
        "id": "1037aa23-6bdb-46d2-aa46-df122a0b2938",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "18964bd9-6563-49ed-a278-28c65f1f2236",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f991f1ac-af82-4f1a-9ff3-6b73a1c19a0b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c403c9d6-1c02-4a5e-806b-9e1fe4ab9141",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f8fcd0-1dfa-41e9-8b26-67b43462b640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab82b10c-0c2b-4547-95b1-cd49083a1de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51a9e94-fa5e-4262-805c-0690b1dfd510",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ecfdd2-2a59-47fb-a6b1-9238132a356e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22fc8de-89e9-411e-bf3e-8ea76c44d2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99f045b-0f1e-4028-ba34-67884aee87f8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67eb973d-2654-49fc-8b9c-4067bc23f20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a4ad50-d746-46b3-8c58-a4861d6cc9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11277b8c-f862-48a6-8346-954793c6de82",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19d4e84-91ca-43ef-98f3-9f2c7fb10a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6f0fd2-4c94-491f-b4de-b90d32a5ea42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f677af7-fd93-44bb-89bd-128a7e27b300",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb49a17d-66d3-47ba-b290-6f356e53e85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8224e03e-845a-48b4-8fac-330fd30b54a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654558ee-3c27-4c3b-97f3-f14eb623e9d6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cdeaf8-f4a7-408f-8977-49b02bfa4273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3d85e2-a62c-4788-b2bd-6251240a6e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0814c147-7149-4879-a927-25e4bb2b6321",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f33b32-29b9-4122-a0b8-97a20aa681df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22594c7e-6f89-4f20-b466-1806385313ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38aeeb0b-6af0-496c-a3cd-ace544723ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed4bbcb-7291-4a29-9065-02d1e9b4af61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9094b964-c3c8-49ea-81d9-fb02d05ff4dc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a16e841-e117-490b-969e-827428c5c282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72990cdf-6db7-43b5-8549-890d2b736992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e51e4e-acdc-4b4d-b3b7-73a0f62c9b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcf443a-4ed3-4062-922d-2e2222421407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e23ec2e-e6f6-415c-b92f-0b244db37b7e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64fa52a-2541-44c7-b17c-db5f42c2a989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "408da35d-15bf-41f0-aeea-dcc697c1462a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ea99c4-9998-4235-89a6-7f63a1a2e9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39807194-b9bf-4aca-adaf-c544191aa5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8725ef-498c-4cfd-8375-7b282925e3f8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5886c6fe-c934-46a9-a884-574128555835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab705a40-d6d2-4c44-bb97-b5e9cc6ec989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296fe44a-b09a-4dc9-86d5-be8ee06c35de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a58785-b664-4ccb-863d-f0e096209195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fd0f4b-9e17-4edd-aedf-bd419df02f11",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13e52f7-daab-45be-a2d3-06d26500244e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1d6966-2acc-402f-a679-6670b78c8d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac460e83-1356-4ef0-adcd-de10257945d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24aaafc5-7e9a-426f-bd53-7decf0750f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4de321-9491-4443-9626-d1efd6fe4934",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ad2014-df42-424f-82ac-0b695109eccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b118de6-063f-419b-a8e7-bff5909d257f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eb851f-bd53-434f-8033-8312f6706ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb1f2f1-3cd1-449c-a835-7565fb33f873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c057e9d-0857-4d8b-8fde-542e47758f2c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd504a5-73c3-4b4d-85f7-72dd94a1119c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb80d92f-eb7f-411a-b2c7-99356cac7071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4945dc86-ffed-44e1-a74c-4d52ccf91870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64911b30-3ff5-4b5b-a6a2-aa1aa56e35f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a499675-2bfb-41c6-9675-3e78e16394c5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6445859c-9b1a-4d6c-b429-3ea89568c941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1579bee-9e09-479e-b431-cd3dd4265595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd4d5a1-bcc7-4589-8ec9-ac4b060b42ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbd0c86-32e6-4680-8807-7fa5c63fc6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7945c855-db81-41be-a504-61f40664a17f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0455613-7a4d-4072-90b1-54862808711e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fe2fe08-8ac3-4c40-bfd5-4441f0821b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3ddabb-b08a-4495-97b4-8511f231965e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43bf2db6-c6d6-4215-8470-5686a550cfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c873402-ea20-430c-8caf-6abaaa2f86fe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f91291c-e09e-4534-9df4-b7492e57c910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6cc1f79-0728-45fc-bb7e-1b31548ba75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0970600c-74ba-4b32-9dd6-0ff208e77f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c93123-17c1-487d-9e16-ac7020704be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eaceee5-4022-4d42-aea7-abbc2707afcf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fe7ff5-09ab-4308-a1c1-42168fef8940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae68e069-d607-4223-b93c-198efdc5c90d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a31fd24-8c82-4d78-b652-e4a7fbfe227f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e3d4f1-fce5-4100-91b8-bed5c73c32be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bd9640-b0e3-4397-ae6c-4f46843ad20f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c127e75c-68a7-4977-a210-5a4478cbbffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a9f6e8-884b-41d0-b902-fce2fccbc258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd6c7fd-bf14-4016-b1ef-60efa8b9120a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1677081-10ec-4944-97ed-e25d45428653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0820cad2-8ed4-4aa4-85c7-cc6fb8922d27",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e637600-2e98-4b03-a5c7-16a60f3e88a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7bb08e-70db-4750-bbaf-a1a9b1aa4821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62f73f9-4fb8-459c-9497-b41986b8376e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d82cc1e-9d53-4924-82f0-a7de39ba8f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c42947-2965-4d12-81ce-d028414c1dcc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0af962-4e81-4631-aeea-cf02eeab216f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ce99ad-991a-466c-964f-b6ae7b6be951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e593b4-60f5-4e91-b860-15629e1c76a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23fb051-f8df-4e75-a1be-e56055c4cca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104c686c-1e33-4f94-80e4-aaab101d5c7c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98634c03-eb66-4a1c-a659-2febe4e8f9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4a0bb0-db8f-438f-94de-a915701f07ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997096e0-d212-497f-b17c-7adbbe16bb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1761a84-059b-4d91-adb2-dc461576712c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9208e3b1-3436-44db-9ef3-82cd6a9218dd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22be0dd-796d-494b-b30b-d83b853b87c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b982b2df-f613-4611-ba13-09a7ed5ec591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cab862-11f6-4bcd-a7bf-98b586ca610e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6a1ac8-2fb9-4979-9c72-1737af4ec1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d176c0-8546-4a33-a10f-427bdb967d7e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35da1690-2af0-4c62-8678-3a553304cc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efcbcc5-d2be-4745-af90-7474f5d9e2f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff990598-6a56-4a6a-a4b7-37252801debf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88046d4c-a3db-490c-b211-f533a5b0c853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511e5566-d120-46cc-b965-d2b87e1d9e7a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bc2879-463d-4535-bad9-99cf7795418d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded4f389-e67b-44fe-839d-495eb87a35f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa70f56-358a-406b-9caa-6ea912f113f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3fef86-3ff7-490b-86c5-20f8277a1501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371579fc-cd87-4bc8-a1b5-008ef62296a0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fa9c0d-8d0d-4c63-90c0-22fd2e69dd2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a42583-0479-40f4-86c3-9300f4a113bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d09bd92-8661-4782-9d13-87e8fcb29112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e50172-4354-4c5e-9f4f-2a78ceb1fdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47a32c3-68fe-4686-9938-bb4a42fc47a2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdd020d-52f5-478a-ab9a-57f9102adfe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa99378-e4a0-4747-a8e8-2499a2a5361b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde0c15e-e514-4f95-9561-392a6bfecb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc556af1-21d9-443e-99a7-e729aeb85ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe27ca6-8fd4-4576-a6be-9de593df7647",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7292ff-ddc0-442b-9a8d-6b680b4d1d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d489c7e-2594-46b2-a951-441a3b2ec720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdba6650-f82a-4743-a91c-6670cc0fdadd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66342c50-b29a-44b0-a50d-538a7629d676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563f13d1-6d63-419f-a258-4e2127e90d3b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fec8520-99ed-4dab-a813-b01abb409e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f21b376-e1db-4460-afde-833d4f9fc956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41e5760-5e20-4434-b4e5-b6d5da4593dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898e9e06-3fc2-41f7-a287-b53088bd0979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6071fe-9583-4ee9-bee3-c2342d8508da",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877e142b-531c-490d-b7a5-d9643e047810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d5ab834-af93-4c4f-b96b-5e450882d392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3b65d9-601e-40c6-8853-80fcd771ffe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e750f5cb-bcd2-45cb-bfd4-cd09a9fe230b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a020c6-484f-45ea-baaa-17ad9a85fdd8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b57bca-fd03-4caa-b58d-2057607001da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e25cc7-6a0b-4b0f-b745-0806a44a9e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837585f2-a748-4941-ba3a-63d63ed44c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981866fa-4116-4e5e-8a53-bd8525246c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90fc239-600c-4061-b3ee-ca994713496b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb56f20d-32ff-4866-9d9e-11de448fe342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "426aa1c7-33a9-4fe9-bf83-7916c5283357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74db42d3-25f2-428d-b397-2d138652b080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ccc186-4bef-44d8-a61f-4b5c902c83cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb64003-6d17-402c-8813-0b467b29326b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212d5a7c-ad4c-4aea-8c59-f3595a23154d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527002d9-be7f-462b-9f99-c282fda4236d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3905c0e-1a90-4499-88b2-e538e3b7c95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e83d3d0-a138-44a1-b92c-ef53cf4eff7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b18c71-2e6b-45bd-ae8b-af79ae4f05d9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a329d56-c016-4cc2-ab23-03d2a5d8ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "338b30c1-d35c-4e33-9b01-c6d00595a140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9ee722-ca05-4420-918f-b8e12743715d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275e485c-45df-47d5-a84b-e1062a4d6360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a041039d-95e4-422d-bab0-30ac48aa8b43",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6249661a-b0b5-4e2b-aa6c-29a47f82dd27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9bfcfb9-0a68-4ce4-9277-f2fc7031d513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabf5ba7-c533-4334-815f-e5c160d92fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5ab031-9f1f-44e0-a8c1-bc14d7c1bd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3280b2a-3c91-4624-8bfe-a2e2c89897d3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5c13ff-8d07-4f17-a485-5f5c042ef56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854dff8f-f0c9-4652-bac2-51640614cf43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b4a960-a02f-47da-8c55-ed0d5d18b774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5edb0b-9599-4b08-804d-f1b743ab010d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f90ba2f-6ace-4bff-88fe-034353e691ca",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84adc5e-7690-445c-8829-0a1bfcc5a972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e456ca-310f-48bf-8b10-9c8dcf96abc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3050b7-4ea5-4b50-af1f-c3c304de92f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03328494-c7ee-467a-a834-c44fa09b1777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11294881-1d2c-48db-93ab-131e7efe60ee",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e04589-6432-4cb5-a27a-284d7d43e2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d2dc5d-c65e-42a4-9f65-bebeedb8b796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269a188f-230b-46c7-b63f-3c18d5f25761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99bad83-ff31-4581-8d6b-4c1551feb90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8956a9-8f58-4c26-85a1-e309bb163772",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f066ead-a9b6-485b-8455-4d16fae8c7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec43465b-eed8-48bc-86a1-84f881519e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7002b137-f0c0-4b05-83f2-6662822482d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5dbaf4-985f-433e-b342-8785862c69e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe0f1a0-1b83-471d-8970-8779442cc9aa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6f21a8-7fcc-4038-8daa-fc403b3f19c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fd8f07-97e7-4e18-b039-4e54a2943cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2793930e-8e00-4d5b-a891-ef1f3abb5c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9615e9c-28c2-42ac-8ed9-301241b4a2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db2dd12-ee9d-4426-bfcc-5df916be77b9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0bf3b7-ced0-4f25-a3a6-836c019f6e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9944a32a-04c5-466a-96be-c7705d4e3973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da019373-61fb-4367-a419-c5139ecc43a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b580260-4ebd-479a-9068-70500187c4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f81a15-0f53-470b-9bc4-62832a4afd15",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af34963f-0fc3-42e2-9e70-3239c0f45fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf83806-0594-431f-bad4-8cd5db657946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f06fc0c-d42a-4f45-a720-e2b5762b59a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7200f168-2647-4edc-b83b-dfe2e1ed6a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba1dc73-2fd6-4860-ac0c-651b370fbc7d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9d4055-2926-4a96-b679-24352ec8ce3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef4a686-e061-46af-96cd-b552732216ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2320f10-3b49-4918-b7f5-6cbd4884f483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6c49f5-d63b-4830-bda0-c4447e5725c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14f3011-c7ab-454f-9ee1-80579a7af70d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cff734-2cd1-4f33-b5ee-7f566e12f01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dffe23a-4155-44e5-8bf9-80fbe54c2565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa42b13-a371-4bc6-9e1a-fe44539218fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3ecbf2-16ae-4a2a-b966-d9284a5228d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501b36f8-97d3-4129-9419-b905f26cd9a1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b040f0bd-d6b5-4789-bb50-06898715cf1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350198dd-0382-453c-ad78-a61a1c11a21e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52cb159-2db5-408a-a94e-ae76ca2bd15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abdad85-462f-49c0-87af-c82e8baa38b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd82ba5-cfd6-4247-bdf7-a25321153efa",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ec5141-4062-45c8-86b1-cb0ab345dac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1e77f2-701a-4e82-bb7b-c7f141adcadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2164c0a6-faab-4d13-87d2-080acb0c93d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47499e59-072f-4b86-b168-f347cb6694c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c71a42-8025-4d26-b611-193e0a4ecfbd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c9723c-3e92-402d-8eff-573e53187717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df19d383-900c-48f6-9388-d0088a0495a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6358b9-2f6f-467f-b5ff-236dee01f3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a47cab-820e-475c-8e67-866cfd10d16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdce297-0d28-4d51-bdfe-fab3a1f9cd78",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80153303-cefe-411b-8178-6a32e9952b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f67943-723a-4777-aab6-df90ca8cfb4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21fbda1-0ee5-454b-9554-5d8d424f003a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fc153a-d93a-4988-a58e-fc530b94161b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2b4293-5529-403d-958b-99a3dee7e00f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1ab763-e9e0-44a2-95f5-2a5559bd514a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5db7d3b-f838-4662-8927-e9726c9c0f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206a3922-1398-43d4-952e-9dc1a3d53ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75801372-ce12-44cc-b472-b0b587bf7147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c39504-7790-4dd9-bb18-c267fc472c77",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c560eb-323e-480f-bfc1-4979cbefe377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93d2321-dcff-4477-8bf4-31bc678e5030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4659f2a0-362a-4a50-92f4-7881c346b699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3623dea2-0cf1-4787-b05c-7d914c108275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef19c145-2758-46a1-9db8-5da86eb50e68",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219d7785-aa02-4901-b531-4e74f77a046c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f6fb1e-c46e-46fb-a411-545e16936cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eff0c65-6e4b-47fc-bcbe-a6b61283bcc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42c1dbd-ebdb-4015-bb52-22289a25f45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421fcacd-106e-4417-b262-d430ceae6a87",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b30838-2cb0-4b31-91df-da8e6c190f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb043157-c109-42ed-980d-bf79fba6be90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3123bbca-91d3-4b1d-a378-716770e1ae16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116992e3-8f5e-4dac-af0e-9f9ff4347bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cf6868-c33c-47e8-94b9-78a451549d1b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233b9535-cc57-47c4-811d-ae8b33309c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9581ecbe-2269-4fc3-8440-513eb341dac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8dc125-c925-40fd-a794-b50a76de1682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d35e7c7-234e-4d60-bba1-adf8f899f961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d1e832-f58e-49a8-9be5-80eb8ba3c822",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874549cc-950a-46a6-a908-6c190a8f3a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d384d5-a6fe-4007-817f-df1b3ac6bf2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8bb295-0c4e-4b49-9076-f9cf8edae637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c44a35-024a-42b9-9e72-ac91de05ab07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a24968-981e-4511-b2b1-5814e6a4d99c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189645d8-f127-4f48-9c3b-dc23592076f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa1466b-ede7-4238-a141-a5fb34cbbf7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947660b9-207d-47ff-8e29-da5e894fb13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360d8fe0-043f-44b3-a273-700348aa7d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcae7db-4b55-4015-ab66-408cf2a623ef",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf53a5d-b4a5-4348-8616-531302eb17af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c33cc73-b91d-4abe-a050-1236f9eea1ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fe4aea-97eb-407c-a216-c3acdedc87c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2314d106-9dac-4491-80b4-b6aedcc54617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d012db-d413-4867-be09-fdc457e66e5b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a140d25-d925-49c7-8157-3c567f498b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152bfa54-33c4-4222-b876-0b132d0a0170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6316762-aed0-43b4-92c7-5f56efa811dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9335c5d7-2041-42b9-9d5b-663d2bc76e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deeb219e-1c96-465c-8e82-3b0fc46a3f7b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45df0dc3-22d8-4d81-a2a6-42a3a15a0d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23c51b6-2db2-42a3-a15a-fd74f0a3dc51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21278090-2143-4353-89c8-3b975acc9258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9133a9f5-b0bd-41c9-815d-1adf37326e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e9702f-353f-4b71-a485-b0e6449f2a8d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ec2827-57a7-4f2d-8688-61b5fb217fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebba276-0ec2-4daf-865d-e68cee116c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befbed3b-24a3-4d16-a301-77a4513823d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f172a966-2157-46e9-8e0b-67e98cfc755d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a16fb1c-3c7f-41a6-97ce-1097ea17d505",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150f4650-07a3-4721-b117-e1a3ec8ddb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c35e867-395c-4bf7-93c8-4d14bab1aaa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25a94c2-e428-43b0-a270-1d685a9b3f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832214c5-7929-4def-9a88-8fb847df2b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce07aeb-3aa3-4bad-9a08-6b7b222a8436",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a427d41-d90f-4600-b7e7-4b7503c06c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443fd955-d1e4-4067-8e5a-54ad95e86e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32de91ed-de48-4e1d-a985-de37ffa8dd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26bf49fb-d6d7-4c50-9aa0-73dd930ed27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3794ae8b-9afc-4a69-aa09-f523bfacd151",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1887c8d0-6fc6-4835-84e7-d447354f0ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd46e84-2825-4866-b3f3-b4da51dfee3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cbc0ba-14b8-43e2-85de-6e715ec70c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a5c3a2-dc28-450f-bb8b-978f3992e9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b533d73-ad60-406d-855c-89384876b1af",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138b6344-454e-429a-8586-81a8504a3359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76748837-f34b-40c1-a4d2-cc4cb3cbc93c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2e574c-9c8b-43ef-95e3-b9eb2ede72b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdaf613-5b79-4ffd-9316-014c371afa50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112abbed-273e-4761-9702-e40c84cf6181",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6e21d2-6d49-4be7-9273-9b4fc317b91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9addfa3-1846-4f94-9d08-c725be4faf6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199c8b35-a6ef-4802-b657-f7a3b3612bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c11cbe-e087-458c-b948-7d210c3e5b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e93394-1357-45a9-895a-14d0b9cebd06",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a12a5ef-b042-4271-a48a-af9b3bba6210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb55581-faf9-4922-b860-c154b478d8cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad45a968-75f4-4a3b-b1e9-ea4e2ebbce3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42464709-31f1-4667-bb90-0fa4ca8b4a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1308dd-0c80-416f-a66a-565e7c813f10",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be139ea-d413-43e0-86d3-e66b47ab076a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7394528-1fce-42eb-8d25-734eadb3aa09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72023005-9db1-4be3-b81f-1d068237d1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b601c1e1-7a8a-4a46-a249-5448f2d02ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61c78da-0053-493f-a319-e30f662b6140",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6930e1be-6344-4d12-9132-cf23f2322d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bcad584-b6c8-4907-b329-cd98daec7246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30277645-aea0-46b9-a078-aad453c33d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393572b7-444b-481c-b570-4357b1df2ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7281844e-d180-4b72-b60f-e80a8bd92024",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61841a10-1dc6-4be2-9a00-1496aec8f347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66257e01-4637-4409-8ab3-f4db0a38a7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461d0f6c-53df-434a-8058-b8e15e7d718b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f0e86e-53b1-42c0-9479-61cfcb9ff94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2805a69-c555-4c74-a1f2-7850b6c8b91f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2829650-5969-49a9-b8ab-f85bf1e331ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c6967e9-6e69-48ec-a3b6-128b6924e04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37896bd-b6d3-4fc9-8428-65cee416faa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e3f199-4933-4d6a-85ab-6ba70e4d32d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dca01d-d100-454f-9a58-43d294e38bc2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb195064-8c03-40ed-ba97-c0951ec937ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0cd690d-4193-486e-b9ea-c8ca6933b296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2def201-b58e-41ac-a050-b73ae4abbcaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d417ac-39c8-4d84-8202-e0c5b5240d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fdc55a-6c39-40fc-908d-3e64bbc08aa5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8494b5ca-c9c8-4d07-8d73-0e7284d868fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9914c28-acc9-476f-b33b-afe688277635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48b6b63-b374-4cc7-8d89-d9a29b296208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724ea23e-143a-49fb-a766-a4250e1992cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39456422-2d3e-4df1-94d0-9f4670142551",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7237a926-43c1-4782-bc76-ad285f73551c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a4e90b4-09d7-4f05-a7cc-11e8ad2355f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877886a2-fa44-4739-ac3e-63b8f94fcdc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854bd253-4933-4cc2-8072-5484e285b7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed47794-173c-4be5-a31d-89857b359086",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333ceb7a-b59e-4a7a-8e9e-547816c90af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a86e389-4283-412d-a601-994f9fc49672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158b17a4-c20c-4360-b452-aaecc0408dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13238c28-bded-47a6-b9d5-90790d38d313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7f3082-8955-4fbc-8010-b2a768440c17",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d857f91-2cc0-42be-87e7-e81156a5fcb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a9070cb-8a5e-405a-b27f-995b89d25d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b4496c-b996-48b2-a7a0-99fd4f6b573b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8bcbb8-8f7d-4848-a10e-60ec7f27435f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d567add-2c3c-494e-ad62-cdb6adc95ef7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34291ebf-cd32-4b1d-b87b-d046204d3940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e127984-ac77-402e-83ec-ea1005f859b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a29ce4e-97af-4e49-9682-bb3cdcc77aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594ee7ef-90bc-4a18-b843-16f15f975870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077e4099-2956-4883-a613-aa8414e5c5c0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295ee1c9-766f-4d66-9142-e74c45c29d36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c3d410-cef1-4864-a7ed-a39f27eeaf4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d93d9d-6068-41b0-8f43-7fc2e22d4f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d559126a-3b7d-41bc-bf08-4dccfa7375f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0604e100-65cd-410c-9847-5bc8077e5291",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253a04fe-36db-4260-992a-77fe876c19b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e90a3b-03f0-4da7-97ee-c22db4ce5172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbfc02d-ade8-4266-901a-4e7f3f06eb08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8226eb2d-2de6-4fd4-9f5a-b35612e1f519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d352902-32ee-4c3a-9c88-85ab556bbf88",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a272371-1ee1-444b-8c02-df1cbb37bd96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10bb0271-e8d4-4279-a429-a7446438c8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc45a485-cead-4276-aa82-2d91c947eab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c0b40e-14c5-40ab-b9a9-7c2eff674865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dbf891-55a2-4113-92c2-400b427d198c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6520e504-55a3-4661-b9cd-960b5aed2d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45396d27-9f33-4c56-98bd-1cf15692cc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b36ba6-34af-4c22-88bf-1f9e0910e5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0ae783-a1eb-4468-ba2f-829d7a581db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d387f0b2-1a3b-4226-935e-699a8a85db8f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e3718b-9524-4c0e-b650-9e4cbe8667be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f2ccc4-185f-4da7-a781-83b390b4f116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d0c327-bf35-4d54-acb9-a915987a9980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98450250-bb52-42f2-b397-5fe9c6ad89ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5af9ec6-0d06-49dd-94dc-694e61396c99",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb2df09-8067-450a-aa33-c298ba8a9d1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd8275fb-c15a-47d5-95c0-74a0e36d6a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14194698-9fe0-459b-b694-6d978b1439c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1378221c-9b3c-4bad-bc98-1cffd60c74fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8076f212-a308-4c5b-8db1-bf121db1728c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b583348-6ce0-48d3-adb9-be9c04152e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a70ecf7-8530-4915-bb53-39d8742b6495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8bf8e9-2df9-4dfb-ba28-4db2a12280ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6fda92-ee6e-44d9-a41f-f7d0bb4d8964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f200a5d2-2824-46a7-b4aa-8650dfdac4cf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ede3ec-8470-48db-bbec-905df58dc59c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8151f1b1-e9a7-4a83-9070-824f5ae12f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dbfe5c-955b-4a50-8fb5-a7c48b383521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb3f082-1107-4ef4-91c8-5edc113f5320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a1dc2e-7e66-4d1b-b248-87a78f90f976",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f31193-4cd4-47ac-90f4-36dd3a40ec33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a080505-cf4f-49db-a88e-1a5de6ea9e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fdb91d-29ef-4668-9f6f-71bda865f3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdf1cd5-6bc8-4dcb-ba08-e1f5997becac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27288c38-8c41-48e0-a3bd-e01187e37612",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59e3651-38a5-4e14-afc9-24a430600a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdad0fb4-97f5-44af-a530-5d4d2b860049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381635fa-dacb-4ca0-86d1-82aa581dbfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a0254e-fd00-475a-a46e-706a523cc11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac84dc6-38f1-470b-a54b-5904e784ffca",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd0a29b-79be-424a-bb75-377db939d868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e884bb-b00e-4108-aedb-aa5e1fd5d9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d50d371-1d18-4b79-93d6-d3eaa6ca5997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2b904a-ec8e-4585-8044-8b1ef577b127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25746580-cc28-41ba-8886-1c53c6e34c09",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf2200e-dd3e-45f1-a97d-4c402b3c776e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbdef439-6c96-4ce6-8cfd-5c3bb023bf44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd975ca-7da6-451f-89ed-1926e24d075d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26a8d32-0678-4a1c-be1a-9baae95d5379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae31c681-c2eb-4320-b848-8da7e7136785",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd5ff24-8160-45db-9c0d-7a386e7b900e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa07a42-5a3d-4646-847f-49f4eccbf898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bd2467-20b1-43b5-a38c-8be7df5c5551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc85166f-ca76-48dd-8411-49d42580ffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fc372d-dac5-44d6-aef2-9c7824ce620b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f9c4c1-b2f7-46e6-ae19-2932c9ddfa66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4867356e-bb69-484d-b116-d36b19ddcd77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af10727-b115-4394-be29-b55d99fda966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3a5079-a7a4-4bb5-a6d3-e9238bdcad4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8461ac-1c15-4031-9cfe-ee9aaeb4776f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f28e1e0-d16f-431a-9e1c-25f23bcfe1e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c012b82-972b-45e9-a4ce-57d53ee34dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c26bad-d7b5-4fb5-bc0f-a5a0b5509133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28068a7e-4df9-490e-991f-edfafa821566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18c842a-d296-4c8e-8938-402efff92610",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4450ab70-335a-4e87-8211-ba1e08da1792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd94947-3adc-4cfb-8a33-a0e114c9faef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b220ac-928d-44ab-aa5f-09e87695fceb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7235462-2d14-4618-81be-4b9071c07289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7c2d47-4aaa-4d2f-b3a0-2d95bf46182b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd0dbc5-bf9e-47aa-918f-dc68a7d83cbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65e0ff27-f1c0-4bb0-acc3-d76d528f900f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77111321-dc87-404f-9363-433f98da64c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfccc92-eec9-4c31-9cbc-c17f88ec3845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c93dd9-864a-448a-b699-e99206555bc1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8712e9e3-d489-4de7-9818-1b703c6057c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f571de6-c14c-4c21-8daf-f4e5b9288d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b54166-d239-4259-8d29-eca5ea088be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3adbe5-829b-4b51-b852-11c49d4c3997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54621d3d-f465-4c38-a1b1-e17965d35b31",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccaa8cca-6865-44a5-90ce-6d2db7af644b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2774a6e2-f54b-4877-bd9b-582f22d6161b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b439e6-d9fd-4cea-9f5b-2b77ace64e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7c8852-2db4-4f06-8530-10345f91dc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee58b06c-8e98-4ec1-a6d0-7676e78bb710",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c2fba6-c210-4202-bd4b-19a4dcf30093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e542c0-e2b2-4385-ac6b-785d3c20d0d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e53b39-4e98-454a-88f3-b223284565ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c95606-ff4b-4060-8d85-312dc9ac28a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887919a5-feb7-42ce-9ddd-b516b15d03a3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7458d973-3fbb-4f47-a43b-d4f1d7f6cbea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63720d1-10c1-4a05-b6bb-086d46bc3e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d19ab98-7997-488c-8ecc-d8cfc217bab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db157cd9-df4b-4555-888a-40d820f2a0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7f0dc6-9bff-4621-8def-7131c2e2ca3b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b27124-61ff-4ebe-a79c-6516c95d6c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85380949-e2a5-4b83-a5bb-da563884a7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56c9f1f-ec69-4e6e-b178-81b7f66f1b46",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fed1d1-af0f-4377-948c-20ad467b25a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5053b49-db47-4366-8715-80191a6139b0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedd1ccb-3d7f-4407-99b7-32c286725c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2964b9f3-82f2-487f-aa11-a089f9b5d7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a1d7df-6932-4280-9881-a4ec1004d152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfdeb08-396c-4df6-be4d-c4cc96319b3d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b240c247-865b-4443-803c-f4c3cdb64f9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b33dcfd1-3c25-4788-8481-11512e1a4930"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "179ada10-f725-4286-9649-41e545d2bfe6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78502841-bd89-486f-8140-e4288a6080be"
                    }
                  }
                ]
              },
              {
                "id": "a8dce1e4-c1c9-4bcf-8e69-37036fb79ae0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47d55b12-f673-481d-9e60-d375f744722a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a893861-33d4-4483-b7bc-9e1a67cd8fa8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "92d181e0-887a-4f48-b16b-9d20aa552987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225357ca-6e0d-46a2-91aa-9ea745edb77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a60302e1-e00a-4516-907d-7a1dfdf2eb12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b056882e-0ad9-44d8-a2a9-eb1a7e796471",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe87dd57-7fbe-400e-989e-3d002cf35f0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e81f8dc-314b-463e-a322-681d6f42c08e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2524d78-87e6-48ac-a21e-a66f6e230715"
                    }
                  }
                ]
              },
              {
                "id": "f294e00e-e341-4e8b-9188-cc117248b027",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "752bffff-4db9-4dfc-a021-b130d368109d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7b608b-9d42-4e55-a0d0-975ad9d4ad52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4d418081-478d-4c19-8163-762580dc6ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a243ff22-49c0-48c0-b59c-a922443144a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a650a29-2d58-44f0-8433-2a4c7541e3c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6a7908fa-9486-4479-a1a8-3894e9b721dd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0cab27a4-c96e-41ab-bd86-5614cbf86b16",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6b8d2bb-d30e-4ae3-bdb2-43c94bb68b9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fec63963-d366-4bc1-bdc8-24c1c98e0643"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3e074fb-36fa-4d60-9c1c-d980e50d9ca5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a710e27-87a3-4a89-b188-024cd81af834"
                    }
                  }
                ]
              },
              {
                "id": "e2994111-60b9-4159-9562-3d77fa5fdaaf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc9b8a76-f44d-4675-b626-ebdfba257968",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d246764-210a-4bae-b655-9fa564eb8ebf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "335f6c77-38b3-4f75-97bb-162984844d45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f91cd20-9195-4938-8dc5-40fbc0818563"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e602e3c8-2a13-458b-9a68-32181baccb11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e7aab0ff-3dce-4b14-9082-a03b72ebecba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb881ee5-790d-420b-8c2f-b21d1fdd723f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34a94c38-e2c6-41d4-b610-a1c600711287"
            }
          }
        ]
      },
      {
        "id": "ecefedd7-a9fa-4e33-8269-4d261a409378",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fa6c98a3-85f1-4b2a-8e75-76f6d57676ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "efe34d18-1821-4418-9d32-207f7a1ce7c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42389a5b-5a1c-4573-94d5-942fd90a9b33",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c5c559-0289-46fc-a4d6-994103ce971b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "61e463d9-08f4-422c-8640-c0a18483a038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe91380-1f36-4922-8d33-846659591d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52466ac8-bf98-4d03-a20a-72a9cd20d71c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc4a7467-3bf5-4319-8dca-04600f93b078",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9747636d-5cd9-4b7a-af79-791e6e7e0ca1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7c1d3ea-bda8-411b-a623-15c1f8344095",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39f3d161-8462-4716-9332-ebcbccf1a46e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21494bde-da6d-4543-82ea-b65e37adb675",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "47283dd8-b835-4dfe-8222-66040d0d9e72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b3bdeb5-64b7-4672-80b9-a99fdcf457b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73079177-31f1-4279-864a-b90d9e65b846"
            }
          }
        ]
      },
      {
        "id": "8357a343-e0d7-4d7a-be44-3645ef3d9164",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a2de2337-c227-459e-9d21-1bfe1694149d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa62a582-c523-4573-8839-b49803b03226",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57617760-1f67-4b01-92ab-c0f2e29cb5e5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2d0289-86d6-4efb-9ef5-82fb61373637",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bcf389c-0078-42d4-95ed-8cbf1cd35812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9628f0ca-5814-4e51-9b40-f7c93c98f5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57b5c413-da3b-4a94-bfb5-b8e43a1ad1a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "934d6520-54fa-46f1-87b9-31e736f0ebec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d20e0d82-6c2a-4dec-9b09-84aa4bd9b992"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f32e3eb2-57bf-4ed6-8990-1814c8292428",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d1ce55e-aad4-472d-b466-a89aa9219293"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97ba5fbe-11e2-4eeb-beec-bf816d9e92e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8d21c7e6-a500-4633-b30a-76c353233798"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a61c606f-cd6b-41ba-b477-b351fd219160",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8e6ec3c-da0d-4954-bc44-ef1c5b25f40e"
            }
          }
        ]
      },
      {
        "id": "164798e2-6a61-46e8-b20f-9899a62a0ae6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a1fcee8f-e600-49b3-8574-e7aa5eabeb65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d8d4dda-a2b9-47cc-9a29-a733bdced9b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bde9163e-2203-458a-bb76-f8486b1da059",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cae8b2-1b15-4706-8fb0-2822c552f7fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02db3bf1-dca0-48b1-b05c-c6232344c3af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01040e39-0226-48ed-b584-82763d1fb06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbda5b5c-5290-4f34-b5ed-ececfd2dad58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e19f566-05fa-439d-bac3-3ee76cbd7fc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae13141b-add4-44a1-94d1-b089da93f5b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c87b57cb-6f91-44bc-a736-3f0f6fc35a23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1ec10f0-1e30-4903-85a3-777b726810c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "496f16e2-bf7e-408e-98a9-9cba08b028de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "129de15b-ece0-4a05-8309-c436f0861797"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3803d0c7-0dcc-4212-a19b-97cdc29affb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8fe1c1f-a9d5-46e3-b7b5-7f3aeb2d0ffd"
            }
          }
        ]
      },
      {
        "id": "3f6fb921-c1ea-4e39-b622-759453f5eb3f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1b44a9f-52a3-4fb2-b25a-5d3201c47177",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cafb79f-b7de-4933-b796-73640f9fcdee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8224dd00-1d66-4f96-a5df-7671bde6c53b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26e20468-aa22-4e98-98af-99fe972a5e17",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb13eb26-978b-428d-9f6e-12cf7078a834",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 64.91578947368421,
      "responseMin": 5,
      "responseMax": 232,
      "responseSd": 21.143119568277633,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705106163337,
      "completed": 1705106190700
    },
    "executions": [
      {
        "id": "1e23e02d-a7ca-465e-ba62-5d687c6749ca",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "76c8c7ac-7ccb-4428-b425-ec2b64f534c8",
          "httpRequestId": "d2e7bc21-2724-400d-bc7f-9b9f31e8242e"
        },
        "item": {
          "id": "1e23e02d-a7ca-465e-ba62-5d687c6749ca",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f0632318-a71b-4ada-99c9-b7c1cf737bd2",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "ee66c5ba-d386-4108-a532-e118dc8cd2ab",
        "cursor": {
          "ref": "4e6efad3-2e1a-44fa-91da-c1befbbca230",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b6faed46-0994-4a14-9804-c57f1c0c0801"
        },
        "item": {
          "id": "ee66c5ba-d386-4108-a532-e118dc8cd2ab",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "63d1b39b-fb7b-4f64-91b1-a36aa5dd673f",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "b29477d7-a3ad-49ff-8037-08f9267e644d",
        "cursor": {
          "ref": "5280eda7-a18f-45a7-ba8c-32e7e1ad6b50",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0e6cb895-2a60-435f-96c4-a37889578f3f"
        },
        "item": {
          "id": "b29477d7-a3ad-49ff-8037-08f9267e644d",
          "name": "did_json"
        },
        "response": {
          "id": "594bc0e6-5965-43d4-a03a-e7ccbb9656f0",
          "status": "OK",
          "code": 200,
          "responseTime": 207,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c0bbb8-87e8-4794-a7cf-70fa4389b86e",
        "cursor": {
          "ref": "776a955a-b127-4e83-ba96-267504322bef",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c66ff7c3-a254-4abb-a264-7ff68b70ce25"
        },
        "item": {
          "id": "44c0bbb8-87e8-4794-a7cf-70fa4389b86e",
          "name": "did:invalid"
        },
        "response": {
          "id": "e50accea-ea43-4566-873b-56f294bd5ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c0bbb8-87e8-4794-a7cf-70fa4389b86e",
        "cursor": {
          "ref": "776a955a-b127-4e83-ba96-267504322bef",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c66ff7c3-a254-4abb-a264-7ff68b70ce25"
        },
        "item": {
          "id": "44c0bbb8-87e8-4794-a7cf-70fa4389b86e",
          "name": "did:invalid"
        },
        "response": {
          "id": "e50accea-ea43-4566-873b-56f294bd5ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b11d3c4-6bba-4e1d-80c7-5e6328b41801",
        "cursor": {
          "ref": "9974b62b-d737-4b8d-bc65-dd90ff0c6e66",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4a90dbe5-301f-4b06-b6b7-8ef039d792b1"
        },
        "item": {
          "id": "2b11d3c4-6bba-4e1d-80c7-5e6328b41801",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "73312a12-beba-414f-9de8-ee7c3e046a6f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 99,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a6f156-12d5-4e6f-958a-4afb58dc66dc",
        "cursor": {
          "ref": "611d4195-8def-41c1-9a62-8367a5d53f6b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "642c9fbe-de8b-434f-bdf2-1f569c281716"
        },
        "item": {
          "id": "75a6f156-12d5-4e6f-958a-4afb58dc66dc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "443fd55c-851f-4802-8378-baa6208a7ad8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1374053-a2a2-451b-9ee2-461a05a923c9",
        "cursor": {
          "ref": "4d3a3a0f-ded8-4f83-91c4-6d17264aab86",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4b9ad7af-a6cd-4730-acbf-0e58400c2c2b"
        },
        "item": {
          "id": "b1374053-a2a2-451b-9ee2-461a05a923c9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c9dd4ac7-05cd-4d62-8094-ddddaafc8af7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04efa9c1-612e-445e-9b50-e82ce8fb1f4f",
        "cursor": {
          "ref": "a7459f99-a52e-4bd3-a93d-ec3546200c1c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e1856fb3-6e90-4133-b3fe-98fe421bd8d8"
        },
        "item": {
          "id": "04efa9c1-612e-445e-9b50-e82ce8fb1f4f",
          "name": "identifiers"
        },
        "response": {
          "id": "fb654cd1-fe7b-4194-9ccf-b60e897a27ac",
          "status": "OK",
          "code": 200,
          "responseTime": 227,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b8d458-9399-4cda-b1f2-d329985fe4a7",
        "cursor": {
          "ref": "2d60aca9-0ad4-4772-89be-78a788912e73",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f4df248e-0733-45b5-b763-a945ec75a0c1"
        },
        "item": {
          "id": "b3b8d458-9399-4cda-b1f2-d329985fe4a7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "55167447-608e-4446-a70d-a3b1bde6a653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67f3a2a-a828-4db0-8006-014906a0cfd3",
        "cursor": {
          "ref": "05fc0910-c645-4adc-a751-6b22e593c4e0",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "26ae1df1-b22b-42ec-b731-16497111af07"
        },
        "item": {
          "id": "f67f3a2a-a828-4db0-8006-014906a0cfd3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "85f47ff6-3dc8-42b8-bfa1-1d3ce9d4d182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b6c305-e69a-4137-b990-81152b03d1e2",
        "cursor": {
          "ref": "d4c887cf-b2cb-430b-952e-c1acc8ad20ff",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a372ed61-473d-4e92-a6f0-5be8a357da45"
        },
        "item": {
          "id": "b2b6c305-e69a-4137-b990-81152b03d1e2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "56a38be3-bac2-414b-b087-3de553cb784b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c05729-523f-4116-9f33-0d3b36f6bc33",
        "cursor": {
          "ref": "c2c2f84e-5af4-4cc4-82c2-858a02cf5835",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "99018491-2dd0-4cdb-a375-ac8ae10a5913"
        },
        "item": {
          "id": "a6c05729-523f-4116-9f33-0d3b36f6bc33",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "698e8b2b-4e9b-449b-a3ea-436e8d698be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecb0400-523f-4482-b681-e8eb2bfd2ba7",
        "cursor": {
          "ref": "5f343a13-d214-4fb8-9a04-7da85488fa4e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c373db3f-3507-4978-9dfd-8aaf645edf05"
        },
        "item": {
          "id": "9ecb0400-523f-4482-b681-e8eb2bfd2ba7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e30bb884-e03c-404c-8bce-4187dd1c0d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0ebb25-9ae3-4664-8134-bfe08093c49c",
        "cursor": {
          "ref": "e902418d-f21e-4a9b-acaa-da5115655be7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "424c829c-3b12-4db8-b302-cbcc29dbffb4"
        },
        "item": {
          "id": "8f0ebb25-9ae3-4664-8134-bfe08093c49c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e478adda-a447-4ede-b264-c11e69d04a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a9082a-5e01-49d4-a8e7-4ac60c78de11",
        "cursor": {
          "ref": "dbf52e52-e686-48bd-905e-acc1b6e39ce3",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "db3f831b-d3e9-4c0d-b46d-28cd2570a2e9"
        },
        "item": {
          "id": "10a9082a-5e01-49d4-a8e7-4ac60c78de11",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a3de0552-a5e4-4474-80e6-5d1bbce3424f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a8f62c-8c12-4004-bde3-e32c42afed63",
        "cursor": {
          "ref": "20f8edb6-64bb-4d37-bcb2-73f0d42ce58a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e571722f-4cb4-4eea-8b95-9ed1c764ce43"
        },
        "item": {
          "id": "e0a8f62c-8c12-4004-bde3-e32c42afed63",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f79ef44b-8d97-4ac3-a7f5-a2bbd503796e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb412fca-0731-48a5-b463-b995fe75d8e6",
        "cursor": {
          "ref": "05627c86-8090-4939-9e7d-3637f4e810ad",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2f1b0012-2e5c-4182-ac34-93673ec98afa"
        },
        "item": {
          "id": "eb412fca-0731-48a5-b463-b995fe75d8e6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b2b6450d-9ba3-48be-afcb-7d22db666756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ca763b-6709-4634-b8a1-aa6b0d27a791",
        "cursor": {
          "ref": "cac52dd6-50c0-4a29-b0bb-ac104fd99609",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8a144709-90a7-4368-9c28-71646e06c3ff"
        },
        "item": {
          "id": "26ca763b-6709-4634-b8a1-aa6b0d27a791",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6da708f0-bd16-47be-ba09-717dcbb8a8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e277758-4176-4a53-b78c-7947ed131a5b",
        "cursor": {
          "ref": "8f21d54e-ec6b-4b63-9b87-37a2199cac4b",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4838528d-3fee-44ac-a459-e8e9922555f3"
        },
        "item": {
          "id": "3e277758-4176-4a53-b78c-7947ed131a5b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cb8b2d35-13fe-489f-b075-f70f69d781f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa946e1-8ec0-4c85-b0eb-65eef018acd3",
        "cursor": {
          "ref": "41746fa3-c4bc-4f42-92e3-6f9a5da58225",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e56b0bcd-9413-4ce7-b3f1-7cb0bd53df0c"
        },
        "item": {
          "id": "daa946e1-8ec0-4c85-b0eb-65eef018acd3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "073a8dc0-500e-4135-937d-506fa24ef61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459f1215-4820-40dc-ba30-2e4fd3bb9a12",
        "cursor": {
          "ref": "23a552f0-17b8-4c2d-af68-1390a247386d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f63bff6d-0b0b-4272-bfad-9877eacdc111"
        },
        "item": {
          "id": "459f1215-4820-40dc-ba30-2e4fd3bb9a12",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9457f628-b921-4110-9931-defd95a52647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8b29eb-2b41-4a28-bb26-1fcd55e52d4a",
        "cursor": {
          "ref": "c7f754e3-3496-4777-a090-bfef220c03c1",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c381b2c6-7222-484b-8da1-fbe8b4f7aaf1"
        },
        "item": {
          "id": "fb8b29eb-2b41-4a28-bb26-1fcd55e52d4a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9eefa994-a280-4a9a-a6cd-91808e323fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338d4c79-1e54-4fb1-8bd6-412f84e2172d",
        "cursor": {
          "ref": "eecba27a-4975-43f4-a993-3f4fa7b7e29d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2a29ff3c-a317-4243-b813-e97a5f240f47"
        },
        "item": {
          "id": "338d4c79-1e54-4fb1-8bd6-412f84e2172d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fcf433f5-8494-4eed-8689-316ba7f40dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc26ff93-10a6-4002-bb6f-fbe1367652d0",
        "cursor": {
          "ref": "02875bb8-672c-4dec-b8f5-7932c2fa7e4f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8c14bcef-ed22-486b-bef9-641ea6ab1949"
        },
        "item": {
          "id": "cc26ff93-10a6-4002-bb6f-fbe1367652d0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "027fd914-2bc1-4e73-a3d3-3a356e748c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17db3eed-0ccf-4413-b3d1-c3ace0d63c91",
        "cursor": {
          "ref": "e0c4fc64-86ad-4bfb-884e-c820bccd7fa7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5dd05cdc-59e8-4ac7-81ca-b4ff278604a0"
        },
        "item": {
          "id": "17db3eed-0ccf-4413-b3d1-c3ace0d63c91",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aa78742a-0ffa-484f-93ea-ddda3c7489d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e234b1-df82-4837-9d83-14e32ccadcc5",
        "cursor": {
          "ref": "2240862e-38e9-495d-93bf-1aaf34a9d55b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6b4f6435-eda1-4d24-9f3c-5cae456cccf4"
        },
        "item": {
          "id": "b2e234b1-df82-4837-9d83-14e32ccadcc5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "81aa23d2-a322-43e4-82ec-b02ed0803b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe96baac-a578-41b3-9517-88e8b0405e9a",
        "cursor": {
          "ref": "b5822399-efca-428f-bab9-be52da220b7c",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "11a8b695-f8de-4999-8f2c-c00871887b66"
        },
        "item": {
          "id": "fe96baac-a578-41b3-9517-88e8b0405e9a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4b02ddd2-d736-4201-9543-d9d05fd2aad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d71926-8272-4496-b863-fb717b62ea33",
        "cursor": {
          "ref": "80752172-5906-4860-8a58-d992948ae480",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "defbae2d-de15-4f57-a451-68ef0e6aa5e7"
        },
        "item": {
          "id": "98d71926-8272-4496-b863-fb717b62ea33",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5323ffa7-d2ab-4630-9aa2-f3929347d20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5f2c5b-0c1f-4aa2-9567-c72e8159f0e7",
        "cursor": {
          "ref": "42a97a4b-4f0d-4c7a-b304-f5f089e25681",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d6760993-ce52-404c-9f09-6d4360b5ef18"
        },
        "item": {
          "id": "ca5f2c5b-0c1f-4aa2-9567-c72e8159f0e7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "29f94f83-ebc8-4432-a064-2c0f0284827a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f5b9cd-76cd-444f-89b6-8ad546419844",
        "cursor": {
          "ref": "fff06ccf-3067-41b1-9536-c5907c151e7a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "00687ca6-8384-4a67-8a36-f930f6d66f9b"
        },
        "item": {
          "id": "38f5b9cd-76cd-444f-89b6-8ad546419844",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "84ee3df8-975e-4b86-bfc5-2520caa66279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69908127-54a4-4154-a3f4-f080ebb7755f",
        "cursor": {
          "ref": "44822d6a-2fe1-4d41-b49d-5e73e55795aa",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b4da61b9-cad3-499e-9846-9999f14b7779"
        },
        "item": {
          "id": "69908127-54a4-4154-a3f4-f080ebb7755f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e560d43b-6a84-45d5-90d0-945f25ba8b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f77441d-ac5d-49a8-a2be-97488e1bb187",
        "cursor": {
          "ref": "000decda-345a-4d90-b69b-16fafbe9f51b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1e2ec31a-0656-417d-8ebd-c40c09d6e36e"
        },
        "item": {
          "id": "9f77441d-ac5d-49a8-a2be-97488e1bb187",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "45924fb2-a203-4483-bb2c-d241d03a1729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b482d086-e6da-4ea5-9fff-36ed97a29447",
        "cursor": {
          "ref": "71e4ba50-52d7-41c9-9edf-850e90e5e83b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e9941a89-3b6f-4aee-8c3f-44fafb34e671"
        },
        "item": {
          "id": "b482d086-e6da-4ea5-9fff-36ed97a29447",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c13c60b3-8755-46c6-aa2d-b92ab4393bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b97865-397f-43de-aa44-01e336ccbf56",
        "cursor": {
          "ref": "4b1bc259-4b3f-49da-86ec-fb66fa533720",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b379f59d-7b10-452b-958d-1f3c2d3cc5e4"
        },
        "item": {
          "id": "99b97865-397f-43de-aa44-01e336ccbf56",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "28f94ce7-5176-48ac-93a2-9af72b23cb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4d0c18-48e0-4444-a943-6ba602668168",
        "cursor": {
          "ref": "e88b9a0e-8d2d-41c2-832e-0c3118953c8f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "eabee9ad-7bad-40d2-90cf-ca30ce9baeae"
        },
        "item": {
          "id": "2d4d0c18-48e0-4444-a943-6ba602668168",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2b7f6823-f7bb-4a14-9626-c6869a3589ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1ea59c-4027-4a61-806f-76b2a8495820",
        "cursor": {
          "ref": "5a2025dc-4b1c-40f0-8230-2a412f7bb78d",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "47ae8927-6574-4b4a-a805-f7a53ed40471"
        },
        "item": {
          "id": "1b1ea59c-4027-4a61-806f-76b2a8495820",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "997212da-ae58-4b06-8fd3-14286145e481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7185bb-c174-4a02-a7e7-e7edbada0ff7",
        "cursor": {
          "ref": "1f5447d4-6003-4707-907f-2f75b889e39e",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "08e0647f-8de1-4e1d-8864-938350c877c2"
        },
        "item": {
          "id": "6c7185bb-c174-4a02-a7e7-e7edbada0ff7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d4c3daed-ece6-4215-971c-13ac66eec154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b640bd8-47ec-413f-9b42-d81a82cc1884",
        "cursor": {
          "ref": "c4b15203-5a84-4b1f-93e0-00e8d3efa9df",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1d56c4cd-791a-4d88-886f-3726a3140a4d"
        },
        "item": {
          "id": "7b640bd8-47ec-413f-9b42-d81a82cc1884",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ed9d2b5f-784d-4bb0-a375-e68e21a54996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764df532-dadf-4dcf-80f0-263e1ce4a67b",
        "cursor": {
          "ref": "e85e5f59-2231-486e-bce3-43fac6538468",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "73e0f947-7ab4-4654-86db-d39451ca5ad0"
        },
        "item": {
          "id": "764df532-dadf-4dcf-80f0-263e1ce4a67b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9c49de5e-21dd-4065-81c2-329c12b511ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c171e388-f9b0-4a7b-b5a4-9759937f2738",
        "cursor": {
          "ref": "a23ff3a8-cf21-486c-9393-7097ff9e06f9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c947be49-3068-404e-9821-a5076139950b"
        },
        "item": {
          "id": "c171e388-f9b0-4a7b-b5a4-9759937f2738",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e72e92a2-4fd3-41a2-8648-7c1f59bd7ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88473742-4ad1-4aa3-a2e7-4169b3695e28",
        "cursor": {
          "ref": "3dacf8c9-c89e-45be-b246-a08757356ebd",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "64373b99-3313-4864-b5d6-9cf178c3cbf1"
        },
        "item": {
          "id": "88473742-4ad1-4aa3-a2e7-4169b3695e28",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fbefd190-09f4-4a0f-9d4a-a1f9314bff9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36baf191-4cc9-4469-acca-3899732e4a85",
        "cursor": {
          "ref": "1bedb60a-a473-4bb0-8381-62e70ce5513a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "239e9841-b32a-4ddd-9c82-710b22e826df"
        },
        "item": {
          "id": "36baf191-4cc9-4469-acca-3899732e4a85",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "61fecf3a-253e-4412-995e-5d11acb14336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ca818b-a0bd-4f50-bfe7-6a57b547937a",
        "cursor": {
          "ref": "eec927da-e2fc-46a9-960e-7c3c66e8a8b7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bf15edc7-6195-4ae1-98e2-18e32b4aa203"
        },
        "item": {
          "id": "55ca818b-a0bd-4f50-bfe7-6a57b547937a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c230c27b-9429-4644-a219-34b755a1ac78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83258289-0057-4c7e-a96c-3dda19eca826",
        "cursor": {
          "ref": "8928a469-0fec-4496-9ed5-43a69141e6c3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2d5de727-597d-48d4-be3e-b2c7b048c9a0"
        },
        "item": {
          "id": "83258289-0057-4c7e-a96c-3dda19eca826",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7d929307-6abc-4fac-ab00-cfaa0f649fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af64cba5-18f2-444a-ae90-ac86eee9da70",
        "cursor": {
          "ref": "9ff171ad-37ed-4edb-8e24-a5b2ab78b541",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5069a50a-8127-4690-bbd8-ddf16c044677"
        },
        "item": {
          "id": "af64cba5-18f2-444a-ae90-ac86eee9da70",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "999d17fd-d341-467e-9398-840a5fbcedf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47e2507-a812-4b68-94c7-a4d89b8e73ff",
        "cursor": {
          "ref": "d006646f-83f1-43f6-8617-d374b271b4f3",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "37e80659-49f3-4064-a435-b5fa1e95657c"
        },
        "item": {
          "id": "b47e2507-a812-4b68-94c7-a4d89b8e73ff",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ff137ad9-48df-47ea-a9dd-981edd78f51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a2d2dd-8210-47db-99a0-1850fc6d7f56",
        "cursor": {
          "ref": "00ae03a9-2d20-475a-8802-b7222208a80d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b7aee3a3-c798-4368-a200-0aa91791c487"
        },
        "item": {
          "id": "23a2d2dd-8210-47db-99a0-1850fc6d7f56",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "77ac4640-620a-4fd0-b6f3-d5f601940962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067d8bbc-3760-4624-9ad8-2b49bdf64877",
        "cursor": {
          "ref": "1749c356-fe7b-45c5-be9b-d0d161df20eb",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eca2bc69-26c6-4b7d-a0fa-a5ab377f5828"
        },
        "item": {
          "id": "067d8bbc-3760-4624-9ad8-2b49bdf64877",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d108832c-5c36-4cba-8361-08db15107eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f60dc2-7324-42ff-a2f0-0c315eb38aa2",
        "cursor": {
          "ref": "e5a67654-e8a7-4401-812e-62767afb51d9",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "600cdaaa-632b-4659-9259-4b9cb28ced4e"
        },
        "item": {
          "id": "a5f60dc2-7324-42ff-a2f0-0c315eb38aa2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6befdf3a-2c6d-42ba-a5a4-ca8e98ae3ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909aeb7d-8bd5-45a3-a5b0-01ba5818b4d6",
        "cursor": {
          "ref": "d86550fb-6d75-4021-b5c0-d3c99e6bc05d",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a07cf5c7-0603-4c2d-b29c-b4525af0431f"
        },
        "item": {
          "id": "909aeb7d-8bd5-45a3-a5b0-01ba5818b4d6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "884d8b44-184d-4f77-a4ca-6850f7c80327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0746392-16ac-441e-a446-758fd9bbbd7a",
        "cursor": {
          "ref": "417d8e27-3647-4920-bc31-05ed55672b3d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "47507fbc-f41b-4162-90df-de4bfc6db830"
        },
        "item": {
          "id": "d0746392-16ac-441e-a446-758fd9bbbd7a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e8ebe18d-7b4d-42fa-a140-e3d36f99eed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e83ffe7-064f-4b62-aa50-b2d61f0226bf",
        "cursor": {
          "ref": "d3d73f15-7871-43d8-a225-2e74e4ef80bf",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a425b068-a519-40bc-b303-3f77d724e203"
        },
        "item": {
          "id": "9e83ffe7-064f-4b62-aa50-b2d61f0226bf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2f5b68fd-a8bc-4860-9aff-487f42247021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1f12e0-3b5a-4928-8d8a-10fea8acf361",
        "cursor": {
          "ref": "c77e0ae2-9235-4ee5-a1eb-ff1a4587092f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "119e6f22-fafa-4dba-824d-8ae13dec7a59"
        },
        "item": {
          "id": "6f1f12e0-3b5a-4928-8d8a-10fea8acf361",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3570caea-398a-4310-b5aa-d00fb5223119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b883552-0457-4709-8acd-00fa97c41e13",
        "cursor": {
          "ref": "e4b8adc4-957a-40cb-947a-148807b5d4c2",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "127a484d-ef17-4f0b-a537-28a80ed3b83d"
        },
        "item": {
          "id": "1b883552-0457-4709-8acd-00fa97c41e13",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a9136212-a6c2-4600-8c63-bc78a6096d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce87d425-37ee-479a-aea6-b55faafc5973",
        "cursor": {
          "ref": "f63bc749-6869-48d4-a49f-6c0b903702ce",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6848e9d3-a871-43ba-9ba8-98ca239c2719"
        },
        "item": {
          "id": "ce87d425-37ee-479a-aea6-b55faafc5973",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6da337f6-0fe9-4311-a6e4-1274d797d6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ca252e-e36e-4256-9aa5-f90ffa129f0d",
        "cursor": {
          "ref": "684e1980-de80-431d-b82c-65e3a8d814f7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b342dc59-3862-4a1e-9608-a80cdd998f62"
        },
        "item": {
          "id": "12ca252e-e36e-4256-9aa5-f90ffa129f0d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "374bce95-cf04-4067-93ba-dc8ff6ea6399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784d8dd3-0919-4e15-91e6-a1f7ecb782c8",
        "cursor": {
          "ref": "b31541b5-8347-4d99-9b2b-70dc5730bdd3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5b3c1816-4c7f-40b2-91bf-d6fce972c625"
        },
        "item": {
          "id": "784d8dd3-0919-4e15-91e6-a1f7ecb782c8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "274835d3-b167-40db-89f5-80254e7f80f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8688f57-3576-4237-a733-54321d67998e",
        "cursor": {
          "ref": "5843a02a-9f24-4056-8439-f560bef87d33",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c96bcf6e-5c25-4e23-835f-0f9743789a8d"
        },
        "item": {
          "id": "c8688f57-3576-4237-a733-54321d67998e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a547d5a7-99bf-4f0c-a16e-734cbc42875d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b3df7f-4bb4-4e78-a85c-f52d1367fc47",
        "cursor": {
          "ref": "b06ffaf4-c650-4ab3-8f18-16f71c463f02",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1e03c82e-c1c6-4a3f-ad7c-6f090faa803d"
        },
        "item": {
          "id": "99b3df7f-4bb4-4e78-a85c-f52d1367fc47",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5b1ac1d5-cadc-4ef0-9659-0a7d91adf42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75743270-dbf4-487d-8ba5-759e4dbdbca8",
        "cursor": {
          "ref": "4b4b1e52-7d0b-4de6-a449-88e208db6ae5",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "754d882f-678a-46df-83ae-66dd0d0f0357"
        },
        "item": {
          "id": "75743270-dbf4-487d-8ba5-759e4dbdbca8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2e6866e4-b7bc-4c55-94b9-4cb565265d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f712995-e161-417e-a962-9d80c28849bd",
        "cursor": {
          "ref": "b5a9e24f-562f-4580-826a-799c6243b4a5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d63d1c74-c6b4-4efe-b4fa-c5512e499f91"
        },
        "item": {
          "id": "9f712995-e161-417e-a962-9d80c28849bd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4f61120d-3c05-4c2c-a2df-f0a2d8033218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87664b9e-e0e4-4bb7-8dca-bec6c85fa633",
        "cursor": {
          "ref": "9d863400-8dbe-4d99-9bae-846d2ad1fc1c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "83c14625-55c3-465f-802b-4c8f6bf5dbf5"
        },
        "item": {
          "id": "87664b9e-e0e4-4bb7-8dca-bec6c85fa633",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "12180cfa-1e50-462e-a746-8fba16f6d352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617a0d9a-da24-4339-953b-ce38849295b5",
        "cursor": {
          "ref": "407cfdce-d037-4f8b-a083-d66eb4798ffd",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "37357282-6a7c-4095-8ffa-cdab52cb568e"
        },
        "item": {
          "id": "617a0d9a-da24-4339-953b-ce38849295b5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ac9ccd0e-30a1-4907-9906-328dd57c09da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1af4a04-d4cd-4e8b-9cb1-b601bbbfc4c1",
        "cursor": {
          "ref": "d83f8967-c377-46f3-8a86-9d2113338ca0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dbe4f249-0cee-4fe0-8eee-b9650e7d110d"
        },
        "item": {
          "id": "d1af4a04-d4cd-4e8b-9cb1-b601bbbfc4c1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8a0d9923-b047-40c2-922d-4911cdb2516a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83dfaa4-d82b-46d0-97d5-88b5d4f1787c",
        "cursor": {
          "ref": "4590d6c1-436b-4b55-bfac-8f969d17a759",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "414d0585-697e-496e-92af-a2958ba5555f"
        },
        "item": {
          "id": "a83dfaa4-d82b-46d0-97d5-88b5d4f1787c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a4dc05fb-f786-4f2f-87f5-307311fac461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb6bd4d-0270-4828-87c4-f699bfac83b3",
        "cursor": {
          "ref": "8933ffea-0350-40b8-8fd6-3af430982850",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c703afff-86b2-4aa3-bb32-e038b0ea75c4"
        },
        "item": {
          "id": "ffb6bd4d-0270-4828-87c4-f699bfac83b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7a52d854-47b5-40fa-ab21-3fdd09c66a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e1e963-f22a-4b90-aebe-fa12a2b73d32",
        "cursor": {
          "ref": "d1866848-2f2f-499d-bb2d-c221449539bf",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "48fc7c87-b889-4ae2-8324-749014410887"
        },
        "item": {
          "id": "60e1e963-f22a-4b90-aebe-fa12a2b73d32",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d9c43ea5-0b5c-4f69-a8c5-eec27c9df8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498e8693-4273-4543-9317-bebfc52a0549",
        "cursor": {
          "ref": "bc958175-86eb-4392-9ba3-c37279ba497d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "28bf11b2-b077-4296-b9ab-784fecb64966"
        },
        "item": {
          "id": "498e8693-4273-4543-9317-bebfc52a0549",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f3f83e9e-ff7b-4e3f-8ce3-23e03563f849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0380fc3b-0057-4670-a564-737cec049696",
        "cursor": {
          "ref": "1c82fe79-9b0d-4160-801b-6e44b9d8dd23",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4786ea3e-5375-4501-92e5-f52729e4f0ce"
        },
        "item": {
          "id": "0380fc3b-0057-4670-a564-737cec049696",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "93b4318e-8cd4-4630-a4ff-a8bd076c3da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996fbc37-9fbf-419e-90b0-10a52b313bbf",
        "cursor": {
          "ref": "8ddd3817-aca8-4416-b5e4-d86c1f393359",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8373484e-3d19-484d-a9a2-340ad94131e0"
        },
        "item": {
          "id": "996fbc37-9fbf-419e-90b0-10a52b313bbf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1e575232-951f-4626-9c6a-09ef91ea8d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83cd605-7ecd-4336-84d9-5d465c7d273b",
        "cursor": {
          "ref": "e0a8b6cc-6d0b-4962-b2a2-213926e276ef",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2fd13bf7-e364-4f50-9759-8522c20702ba"
        },
        "item": {
          "id": "b83cd605-7ecd-4336-84d9-5d465c7d273b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5f1d5202-bd21-4ebf-b030-51bd82d89662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dd7510-c250-44b0-9d4a-b5a79fc29b46",
        "cursor": {
          "ref": "db7c8ccd-833b-431d-8595-19f320f0cecb",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8c9e1263-938a-43cb-83a8-52408eb255f5"
        },
        "item": {
          "id": "44dd7510-c250-44b0-9d4a-b5a79fc29b46",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "641afcb2-72e0-4ff9-96b8-2f3471c8d259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdf0cd7-4846-4888-abd6-72d26d408d40",
        "cursor": {
          "ref": "7888c85e-d1ea-4a68-868c-3e2bddd11b8d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "268d7f19-d24d-48b3-9e25-fe6b8ad33b6c"
        },
        "item": {
          "id": "4fdf0cd7-4846-4888-abd6-72d26d408d40",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e5fc105d-de80-4b93-a5be-04578711eb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac435f4a-9a1c-474a-96fc-2cfc96078c8f",
        "cursor": {
          "ref": "5f11b864-771d-45fc-9570-6d6b7dd5435f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d9222168-cbf1-4fba-808a-016d007eeb72"
        },
        "item": {
          "id": "ac435f4a-9a1c-474a-96fc-2cfc96078c8f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9b0ec3da-5143-4269-b499-a1940b25e09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7316c6ad-aee8-49ba-b7ee-54e78cc6c384",
        "cursor": {
          "ref": "9bff9480-88b7-48e5-942f-de9020a8f8c2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7235824d-4a57-48a9-a839-979b957ef3e4"
        },
        "item": {
          "id": "7316c6ad-aee8-49ba-b7ee-54e78cc6c384",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5c6ef6b1-201f-417c-bd7e-85b09e90b8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c3fa6d-de93-444e-83bf-81af0f4eb44c",
        "cursor": {
          "ref": "838388ec-2729-4cf0-9cd6-1464901e8ab0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d607b2b5-d2e3-4dbd-8285-200a77e723e1"
        },
        "item": {
          "id": "46c3fa6d-de93-444e-83bf-81af0f4eb44c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9db1301a-977a-4ae0-b7ea-8c4d3df52799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9ff049-c9ef-4f40-a25c-f04b05ec9b81",
        "cursor": {
          "ref": "803166b7-481b-4c87-80dc-512d0a5fc44b",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "49f91572-77e8-48f8-9d40-68dd3429c7c8"
        },
        "item": {
          "id": "5b9ff049-c9ef-4f40-a25c-f04b05ec9b81",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ae2440c1-bf4f-4a40-a262-a171e1fb1ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d485685d-aead-43ff-88d0-39faf425c622",
        "cursor": {
          "ref": "d86bf67f-643e-4c47-9568-5f987d0d93bb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5c3a0109-9af6-4775-be63-01337ee90e92"
        },
        "item": {
          "id": "d485685d-aead-43ff-88d0-39faf425c622",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "28bfe01e-ae34-4de2-b403-e69fa0c0b6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c7d541-7d53-4143-a860-572fc0b06d0e",
        "cursor": {
          "ref": "24ee7de8-a33b-4a3c-a84d-5f7673a82e28",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "627b87e4-248d-409d-a805-d33045ce292b"
        },
        "item": {
          "id": "a7c7d541-7d53-4143-a860-572fc0b06d0e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ccb71731-65a5-4bf1-b793-8b9005ef7110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716499ea-a986-4cdb-aebd-a27def1640eb",
        "cursor": {
          "ref": "273de7d7-4c38-4903-b5b9-3edac23162e6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8699dee8-e316-45e0-826d-cc1ddba3f444"
        },
        "item": {
          "id": "716499ea-a986-4cdb-aebd-a27def1640eb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "de773824-f51c-421b-840c-0ae3c2afe520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52ded54-f94b-441e-ad6f-1821c90d20d3",
        "cursor": {
          "ref": "70d02021-113b-444e-9a26-35cb720c0d5b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d39336ba-c3c6-4f94-a2d4-7a6b429c77c0"
        },
        "item": {
          "id": "a52ded54-f94b-441e-ad6f-1821c90d20d3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "345d3a2f-3f0f-4ad2-b2f6-fbf91afbcb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09710901-d0fe-48a1-8d4f-bd56f3d04c8a",
        "cursor": {
          "ref": "7447eacc-3651-4c77-ac0f-bc3ae1cd017a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "94530d77-c887-466b-9c68-fcd7b94c263e"
        },
        "item": {
          "id": "09710901-d0fe-48a1-8d4f-bd56f3d04c8a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c9f3e0ca-f196-488d-bee6-50c6298ee7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30531d9-92ee-4c7b-af49-91501a7eab47",
        "cursor": {
          "ref": "a8fb2481-4fe9-4836-8d35-c18f0ea644b5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f5226b59-60f6-471b-93d5-0432c828c4b4"
        },
        "item": {
          "id": "c30531d9-92ee-4c7b-af49-91501a7eab47",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "60dae1ae-4fe9-42fc-a82f-a2118255116f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f754d5f7-bf5e-41da-8dd3-d05e2a3c42b5",
        "cursor": {
          "ref": "11223f53-80a4-4e0f-ac06-ec6d259865d8",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f5ef2af6-bbf1-44bc-bb09-c4eee2874293"
        },
        "item": {
          "id": "f754d5f7-bf5e-41da-8dd3-d05e2a3c42b5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "01244984-06a2-47bb-af1b-d11bd9cc98a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29ad40c-7d6b-4747-9fa3-551bbbafae21",
        "cursor": {
          "ref": "2549c6c3-7c22-4432-a9b2-16cfa06329d6",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fe124a7e-b491-4605-92e0-71896804d033"
        },
        "item": {
          "id": "d29ad40c-7d6b-4747-9fa3-551bbbafae21",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2a34b30a-3822-4a4b-86d1-cfe00a72ca1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ba95aa-4911-46f8-a59a-0743a1395634",
        "cursor": {
          "ref": "f2165480-4cfb-4ff0-bb78-06698b022253",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a9936e35-8c05-4839-8e8f-f648f0602d08"
        },
        "item": {
          "id": "47ba95aa-4911-46f8-a59a-0743a1395634",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cec44bfc-3a66-421d-89e9-57a457dccb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2af260f-a6db-4b1b-8613-a46c9cbcabed",
        "cursor": {
          "ref": "87c9582c-3ebe-4882-b68f-2ae3987e74c1",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d970c529-0b2d-47e5-a5d6-8c766e86b5a5"
        },
        "item": {
          "id": "e2af260f-a6db-4b1b-8613-a46c9cbcabed",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f62b5337-b3a6-4ef1-81c7-2971a5c69d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd78801f-1670-47f5-9d47-562eaeafbb13",
        "cursor": {
          "ref": "5ee30890-ba16-4393-aee7-8a98f6aa77ca",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9e218a2a-4f07-4a4e-a52c-bf8e859629c5"
        },
        "item": {
          "id": "bd78801f-1670-47f5-9d47-562eaeafbb13",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ab334197-a695-41da-99bb-1290e45226bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a7067a-755f-4bb2-a834-a7e6fc749464",
        "cursor": {
          "ref": "b96d3f63-f6d5-440e-b981-90d92dc8bcac",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "83b343c9-f2c7-4b05-847c-0d6356c7a07a"
        },
        "item": {
          "id": "12a7067a-755f-4bb2-a834-a7e6fc749464",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0e8199ef-3a2a-4d51-a068-2f6845a3af65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2666267b-44ca-4ed5-9e1f-a8a5fc8d9952",
        "cursor": {
          "ref": "f7b3a466-7322-488d-88ff-9a7d49dddc2b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3cbbe2b4-059f-45dd-ab4e-16d65d449a0f"
        },
        "item": {
          "id": "2666267b-44ca-4ed5-9e1f-a8a5fc8d9952",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "84acc436-9013-431e-8ff3-a5a079f9d64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c430b523-2707-46ad-a407-17c9e9656e68",
        "cursor": {
          "ref": "e770058f-1e8b-4701-9d4a-841bf970b6f5",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "46891ada-423d-41bd-9fed-eb4d1cba3d41"
        },
        "item": {
          "id": "c430b523-2707-46ad-a407-17c9e9656e68",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "092fe451-7c1e-4cdc-804b-bd7cd09ae6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68ceb3c-61f2-4a63-b2b9-9f4b43174b51",
        "cursor": {
          "ref": "a1a613b8-f7a0-4ee2-8757-72f1addf70f5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0108a040-24ef-4a11-ac91-4e0a3bfa5a37"
        },
        "item": {
          "id": "a68ceb3c-61f2-4a63-b2b9-9f4b43174b51",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "18b51beb-fc0a-422c-a585-4d1ca06c0b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57b8ad6-3638-4202-a4b2-b355c86ff645",
        "cursor": {
          "ref": "ce6cd629-46ea-4637-9c78-d6969a39895a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "104bafa4-04a1-49cb-b030-4b9b4d92cd23"
        },
        "item": {
          "id": "c57b8ad6-3638-4202-a4b2-b355c86ff645",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a8ab7b7f-5160-4909-b89b-f4cc7fdbb2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f29260-c422-400a-83fa-bae0354b88a3",
        "cursor": {
          "ref": "e770bff4-4981-48fc-88b8-969b2179c3ed",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fd9d04c3-e0f0-497d-9369-1889f235e95e"
        },
        "item": {
          "id": "68f29260-c422-400a-83fa-bae0354b88a3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "23c94d4c-9eb8-443e-96a4-4c9f10b0cb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af246231-6567-4152-a1ef-aa03b2aa9d25",
        "cursor": {
          "ref": "e73d1ee0-9a4e-47f1-aa26-de11786319a1",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dc610591-e65d-4226-8dc5-33e2c01cd659"
        },
        "item": {
          "id": "af246231-6567-4152-a1ef-aa03b2aa9d25",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a7409165-752a-45d2-bebf-799959b7f203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204ce6af-31e7-4778-8921-aedc6ebf6020",
        "cursor": {
          "ref": "d50cf63c-db20-4bb9-8266-856c457eef97",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f94f58a5-2f94-4a1e-80db-501957b2dae1"
        },
        "item": {
          "id": "204ce6af-31e7-4778-8921-aedc6ebf6020",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2a61a133-0241-4d89-a00d-f170fdecc6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de14064-469f-40c2-84b2-17b8ae74081c",
        "cursor": {
          "ref": "cea61621-c991-4bf7-ad16-cf37dadbe0cf",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "549280fe-4f4c-48b8-bcdd-89cd878b7871"
        },
        "item": {
          "id": "1de14064-469f-40c2-84b2-17b8ae74081c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "324e0af9-96d9-4638-9dfa-45e2c231c3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e624bc4-2f74-4264-aba3-5dda34e358a3",
        "cursor": {
          "ref": "fcece123-b49a-4c62-ad1c-8e09c691baae",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "07c588c1-0acd-4d15-8d27-08ad8f46b026"
        },
        "item": {
          "id": "0e624bc4-2f74-4264-aba3-5dda34e358a3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "daced46f-9dea-4fb9-9890-0cab13a1b84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff21ae5-212e-4355-aca0-a98284305362",
        "cursor": {
          "ref": "4a11c395-1d48-4114-881a-2019b63ce00e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bffd68be-0635-4570-a534-9f7a5017378f"
        },
        "item": {
          "id": "dff21ae5-212e-4355-aca0-a98284305362",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b366f8b2-08ea-4614-bd57-d4ae79d68b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb56804-824b-42ad-af0a-6eec55d0b4a6",
        "cursor": {
          "ref": "b15a57ba-91cf-4a18-af1a-53630bf9a845",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4c64655c-b6bb-4f19-813b-1a994e44df93"
        },
        "item": {
          "id": "bcb56804-824b-42ad-af0a-6eec55d0b4a6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d2fe86ba-e9c8-4ded-8db2-6d4e4006ea31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9a14f2-6335-45ca-9b78-27e028b12701",
        "cursor": {
          "ref": "6eca6ac7-d646-49c2-aad8-620b40aefd5b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bcc66aec-5e72-4948-9516-952f6e96f368"
        },
        "item": {
          "id": "ff9a14f2-6335-45ca-9b78-27e028b12701",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e25ace57-03da-46c1-af43-66f37fa4c059",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8cfc4c-cfad-4d46-b2f2-e3136978a499",
        "cursor": {
          "ref": "0ef9ebea-a5cb-48cb-9842-bdb0c6ab22c5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "abcf1a32-54e2-4640-ac19-6ae0d5c0b292"
        },
        "item": {
          "id": "0e8cfc4c-cfad-4d46-b2f2-e3136978a499",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "63b3f228-575d-4cb6-a5b3-7b5bfe7409af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ca9360a6-b9a2-4908-b4f5-fe2751810d7e",
        "cursor": {
          "ref": "5fffbc31-e747-405a-bffe-86182e3da295",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8ea4aa8b-3a4e-455b-8dac-a948c7024c6d"
        },
        "item": {
          "id": "ca9360a6-b9a2-4908-b4f5-fe2751810d7e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "31c7c5b0-fb69-4b42-a1b6-8f4b9a2310ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "bf0ab949-6e96-4ded-ad40-f5825f80c819",
        "cursor": {
          "ref": "4940840a-05bf-49bf-9a0b-74107d247513",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cb5baa53-8a3a-4cfd-af54-c990009f15e5"
        },
        "item": {
          "id": "bf0ab949-6e96-4ded-ad40-f5825f80c819",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "79936903-214c-4cd6-a1cc-c18392462994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a0d54610-2d2e-4850-bffa-82d5ad1365b3",
        "cursor": {
          "ref": "f2f445d5-2e68-47bb-9219-090b917f56e3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ab0a1a68-da7b-4cad-b12a-478a69c79f6f"
        },
        "item": {
          "id": "a0d54610-2d2e-4850-bffa-82d5ad1365b3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "67ff131c-88ef-4645-a8f3-b3d6b1e4e648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e2bc65e2-63bf-480a-a1ae-ee546a38c23b",
        "cursor": {
          "ref": "65fa68f7-400b-4400-92e8-147c6322450d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "97015f90-e510-4721-a342-8671f7c1f915"
        },
        "item": {
          "id": "e2bc65e2-63bf-480a-a1ae-ee546a38c23b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5b4fec4e-5d3b-43a2-a682-29442bdef140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "08680f9f-0b73-4f8e-b4da-2bd7c8ab27b5",
        "cursor": {
          "ref": "f779d6ef-eb8a-43fc-bf60-44d919bb992b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a0ad06e0-768a-41d9-82ed-41de6d12006c"
        },
        "item": {
          "id": "08680f9f-0b73-4f8e-b4da-2bd7c8ab27b5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ebe1692a-0c08-43ca-b08b-8f332428a95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b572c5b9-f7de-4f00-a140-c8cc5813ca49",
        "cursor": {
          "ref": "40e99562-69f2-4ef9-8cfb-61e696416ab4",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "22efef88-d06d-4872-947b-0c0ac0782218"
        },
        "item": {
          "id": "b572c5b9-f7de-4f00-a140-c8cc5813ca49",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "069fc44e-b232-4e22-aca3-7be20d77e7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9931d477-a8ae-46de-a51d-abc1a71796c6",
        "cursor": {
          "ref": "d05ba139-624f-4538-be34-ceecb73e2f5d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "098fd0c4-e000-4185-aaa8-d0ffcf9e40df"
        },
        "item": {
          "id": "9931d477-a8ae-46de-a51d-abc1a71796c6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8c95f2ee-db72-4b3a-aba1-140e23ab52e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e5c134-7ae1-408b-b48b-2b7ddb78f944",
        "cursor": {
          "ref": "80f944cd-f861-4229-a28b-4b230ecafcd5",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f3e755e7-bd61-4156-b2f7-51a2233ecf2c"
        },
        "item": {
          "id": "60e5c134-7ae1-408b-b48b-2b7ddb78f944",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "52959601-48e7-4617-ba9b-53c3e4218f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cc06c3-a9da-42ae-bf0b-f30b290bac5d",
        "cursor": {
          "ref": "dd301e02-a647-4a48-8840-796f45ad2f36",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2724ff2e-dc47-47d7-a0d2-5b02c92ae574"
        },
        "item": {
          "id": "96cc06c3-a9da-42ae-bf0b-f30b290bac5d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d5de0c03-ec74-408b-9f28-8fc59e415464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a936a73-79e6-49e4-bf8a-2239e77a1e71",
        "cursor": {
          "ref": "a73c6c60-fb7f-4c96-a083-1d01f24b565e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "788dcf5c-6e9c-4ac3-9a4b-9af4c5473a7d"
        },
        "item": {
          "id": "2a936a73-79e6-49e4-bf8a-2239e77a1e71",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "28d954c3-5326-4a72-9d39-215096d8b0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4489ccd-d233-42cb-8ce2-fde7b81d5658",
        "cursor": {
          "ref": "b287f4ea-56b9-49df-a0be-4b8b7cfc7ee6",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6313dfa3-3392-4b79-836d-857f3062ab74"
        },
        "item": {
          "id": "e4489ccd-d233-42cb-8ce2-fde7b81d5658",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7423fdad-85fb-4bcf-b708-2cda5182357e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbe3454-5ca4-4715-a7f0-36fb0c95758a",
        "cursor": {
          "ref": "90319a26-c103-4f50-a986-ed5310d95215",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "af68705f-49f5-47a2-8a72-38ae06358e88"
        },
        "item": {
          "id": "0cbe3454-5ca4-4715-a7f0-36fb0c95758a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d51e4eba-364c-45a1-8491-85f4cf4ae28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45c452b-bbcb-41e1-97b0-5d7e2df61940",
        "cursor": {
          "ref": "9f82f7fa-6928-4083-a8e4-4c22fc911275",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "673618d2-6b3f-4454-bd50-83c3d4da2f53"
        },
        "item": {
          "id": "b45c452b-bbcb-41e1-97b0-5d7e2df61940",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bbc1b26f-5d0e-4005-aad5-bed81256bafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38126e05-2dc9-40c5-8976-b726285c09d6",
        "cursor": {
          "ref": "5b78a0bb-40bf-4d82-afdb-2335bfa057da",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2343ea67-09b9-4054-9ffd-9e2ad51fc210"
        },
        "item": {
          "id": "38126e05-2dc9-40c5-8976-b726285c09d6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e07d30b4-a8c2-4e5f-af01-94f760be707c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa488c5-0aca-4e24-8079-352b68d8d4fd",
        "cursor": {
          "ref": "64922448-e1ed-499d-85e7-bfc5990783f5",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4705d60a-5579-4797-b044-86419f2b0f47"
        },
        "item": {
          "id": "dfa488c5-0aca-4e24-8079-352b68d8d4fd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ea3ba305-85ca-423d-9006-9a29cbde96e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81f21e2-534b-4eb7-8c89-e37721704ced",
        "cursor": {
          "ref": "30397f9e-a4d2-428b-a06b-909cb5cecab1",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "37666e4b-e462-4e0d-a9f9-39cb77fdcd1b"
        },
        "item": {
          "id": "b81f21e2-534b-4eb7-8c89-e37721704ced",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ecf01f2e-40cf-45da-a8e6-8066f062058f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaefa97-b259-423d-9b63-ec0f88938064",
        "cursor": {
          "ref": "857e5bfb-b621-4747-9efe-de50e9b8618d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "47c2caef-b0c1-49de-ae44-c43320f8ffc8"
        },
        "item": {
          "id": "ffaefa97-b259-423d-9b63-ec0f88938064",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6896dab4-452e-4a79-ad38-3af80ffe4ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32430e5c-9927-44d0-94f9-f95e4a71985c",
        "cursor": {
          "ref": "dda23b74-b53b-4c54-a551-28dce6e8d332",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "636ec452-bccf-430a-96b9-5971fc9b51f3"
        },
        "item": {
          "id": "32430e5c-9927-44d0-94f9-f95e4a71985c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1c0ce3a2-640c-4f3c-95cf-b8fafd4bc3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7eaf0fa-716e-4e1a-b776-95e6a4e01812",
        "cursor": {
          "ref": "191ef11c-9c52-4cdd-bab3-6b5f60911f16",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7222c7db-cf11-4635-906b-db8c1455d329"
        },
        "item": {
          "id": "d7eaf0fa-716e-4e1a-b776-95e6a4e01812",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c400801a-a8ec-47bc-93be-799aef51d929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdfd818-277e-44a4-8f98-d169cc6d1783",
        "cursor": {
          "ref": "4fab4841-8855-4629-bd87-63daea56103c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b24214a4-c7cf-43f5-9256-5e7498a91755"
        },
        "item": {
          "id": "abdfd818-277e-44a4-8f98-d169cc6d1783",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e4a2d888-b717-4a50-9b09-27ab4b9efd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6135c9c6-6df7-47b0-a164-113c727f6d8d",
        "cursor": {
          "ref": "d5ce01bd-d672-4191-8498-54a3904152ab",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f956c044-8944-4c3a-8daf-76657f5ace9e"
        },
        "item": {
          "id": "6135c9c6-6df7-47b0-a164-113c727f6d8d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "27b9f98c-a010-4cb7-b94d-440dfe0fbec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd738c40-ada1-4494-8be3-422943e77db8",
        "cursor": {
          "ref": "87c1fb91-cbdb-40e0-8757-749c4ee36876",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e9c9db03-368b-427b-a54b-6c006fe9e6fb"
        },
        "item": {
          "id": "dd738c40-ada1-4494-8be3-422943e77db8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e166b261-9854-43ce-bb2e-4d51d7b70a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6482ec3-6c11-44da-9a69-68cd125cd6bd",
        "cursor": {
          "ref": "4bc6abd8-8c93-4bb0-8e29-a0fc3f96ee21",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e75525b9-165b-4c38-b68d-ee34f87e51d9"
        },
        "item": {
          "id": "c6482ec3-6c11-44da-9a69-68cd125cd6bd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ff94b0c9-3455-4a9f-ab43-bec0f1eb33c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f61c940-c9b9-4d9a-856b-02609124d9c7",
        "cursor": {
          "ref": "1516e77a-4584-4055-a7b0-34140c0eb6b5",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c0c12956-65da-4e51-bc0e-f87d1f93911d"
        },
        "item": {
          "id": "0f61c940-c9b9-4d9a-856b-02609124d9c7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7972ba8a-2cc9-4f50-a21c-76c4439d59eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac60b638-e066-4561-ae89-843e0bb1a971",
        "cursor": {
          "ref": "68163938-adfa-463a-b213-006fe5b15b6b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "476c81e9-85ab-4f3d-9211-3dc0b244f57b"
        },
        "item": {
          "id": "ac60b638-e066-4561-ae89-843e0bb1a971",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e5d8ce45-b242-478b-ab42-ae0787ff5c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32edc397-8152-4d66-9560-c6defc5c855c",
        "cursor": {
          "ref": "6260fbac-0b39-4bc3-a307-373ca463f726",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fdce42c0-55c0-4926-b8ba-a421fe6e37ac"
        },
        "item": {
          "id": "32edc397-8152-4d66-9560-c6defc5c855c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1a11433b-c6ac-4287-82e0-e6c6432ff87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d3291c-06c8-47e8-986d-a4173fd08aee",
        "cursor": {
          "ref": "6fc6f8b1-9ee1-42ec-982a-b57defbd881e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "aef13f53-6c97-48f7-bde3-76266fc43ebd"
        },
        "item": {
          "id": "d2d3291c-06c8-47e8-986d-a4173fd08aee",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9b9ccacd-d234-42ef-8a3b-4cfe789f6c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423278c3-82de-46fa-8368-871c1088e37d",
        "cursor": {
          "ref": "5388ed80-76a7-40a2-9b52-d7c99ab33e1f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d29435a4-2c4e-4979-bfa4-8f636b3ecc0c"
        },
        "item": {
          "id": "423278c3-82de-46fa-8368-871c1088e37d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "57da5c99-ebab-4807-adb9-2a225071feef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a496fe1-eebc-4443-bdc2-91a9a0101daa",
        "cursor": {
          "ref": "1876c250-cdc9-4921-b0bf-48ec0d998d3c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "47527172-4dae-4945-a7c3-cda5495e7f4a"
        },
        "item": {
          "id": "6a496fe1-eebc-4443-bdc2-91a9a0101daa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "23a19597-cde6-44f1-b4cb-670e7bf0f12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07395786-14d0-4fa7-b5be-87bd6a566927",
        "cursor": {
          "ref": "4e915fd9-4bf7-4531-b0f9-6d5184a30a06",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "75e1db71-fdad-46b4-949a-576cf28d21d8"
        },
        "item": {
          "id": "07395786-14d0-4fa7-b5be-87bd6a566927",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f30575da-b247-436f-9380-688904032a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23b1280-72a8-4b7d-bea3-60a038b7f1ae",
        "cursor": {
          "ref": "d243c00b-82ab-4431-9f98-4ba8955d5a46",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c2d52d93-7057-48b9-91fb-f0732fd939c0"
        },
        "item": {
          "id": "e23b1280-72a8-4b7d-bea3-60a038b7f1ae",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cbf7fa22-a2ee-4d04-a3ee-f440ae126333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9621c25b-4d4d-41cc-9e74-08b197406279",
        "cursor": {
          "ref": "52200ae8-14dd-41b4-816e-933c63456366",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "451f0fc6-37b4-4679-bab0-2dfa5f0b6fc3"
        },
        "item": {
          "id": "9621c25b-4d4d-41cc-9e74-08b197406279",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5b191d48-98f6-408a-ab30-f6ed485922b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f27c74-8d06-43eb-b154-b7bdd2f9ffb7",
        "cursor": {
          "ref": "d4e05f35-c875-474a-8339-5270c27f18d7",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7ca7c6bd-6099-4276-9a40-1e304be244b3"
        },
        "item": {
          "id": "e9f27c74-8d06-43eb-b154-b7bdd2f9ffb7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2336c016-b5d1-4106-813e-0d4005517bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c144e5-40bd-43e5-8f62-5c9990e1d446",
        "cursor": {
          "ref": "06ae1253-1d84-4ae5-9744-8aedcd4a8544",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a3677099-6c07-47c1-a7c6-5efc0daa8cc5"
        },
        "item": {
          "id": "a3c144e5-40bd-43e5-8f62-5c9990e1d446",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e8e37253-697e-429c-b028-75ef45743e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3b4457-0000-413f-ab7d-986e697b101e",
        "cursor": {
          "ref": "6f73af92-b8a9-41e3-ba85-de23539d3995",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d1bb6b78-a384-409f-b94f-d8dca3ee1122"
        },
        "item": {
          "id": "8e3b4457-0000-413f-ab7d-986e697b101e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7f132568-e46e-4ac8-906b-f3897a79e568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c0da17-173b-4c54-950f-6030a343a1b7",
        "cursor": {
          "ref": "31814100-4d8e-4640-995f-d5c763c098dd",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1c56589d-3ad9-4578-9094-b9ea7fcf4624"
        },
        "item": {
          "id": "87c0da17-173b-4c54-950f-6030a343a1b7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0d3be17b-c3ad-4e44-a3b8-eb242504eb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59935fab-3377-4ee8-a8b0-0455392746aa",
        "cursor": {
          "ref": "385816e4-28b5-40e5-a36f-a31b74befceb",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "54ec66e9-4ee4-406d-bc0a-7fa68307492c"
        },
        "item": {
          "id": "59935fab-3377-4ee8-a8b0-0455392746aa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7ef7f389-c32d-4134-8a81-91e0bf3ef0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee9f351-6894-4263-8f9d-942950fb408e",
        "cursor": {
          "ref": "0d9a6a44-064f-4e6e-bf0a-2e28bb8e4974",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3b7c74ec-b4c4-4f70-b3fe-1e4ab5c850e3"
        },
        "item": {
          "id": "0ee9f351-6894-4263-8f9d-942950fb408e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9b2f2bc4-489d-4315-a48d-dc8273216f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315ddda0-43b8-4800-a096-6fd0b856ccad",
        "cursor": {
          "ref": "4e37c642-1463-4a88-8484-f8d272664045",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6554a375-66d0-4ae2-ac80-7fb9f756a13f"
        },
        "item": {
          "id": "315ddda0-43b8-4800-a096-6fd0b856ccad",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c4a8fc98-eaf8-41f2-b137-18074cee9459",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1cff62-7a1c-46e5-9a04-39be6894e70a",
        "cursor": {
          "ref": "231b8f75-9cf6-474e-bc10-de6dc2977dc8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7c16c712-3672-4522-88c6-43ff9f848e1f"
        },
        "item": {
          "id": "ff1cff62-7a1c-46e5-9a04-39be6894e70a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5bcc6451-1e86-456f-93e4-a4c1c04bb891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f526ae-35d6-4297-a45d-2a996ad0e9ca",
        "cursor": {
          "ref": "c3f1b411-2e39-4cff-9cb2-48131221d473",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d3dd9f27-2b4a-4c55-91cc-1b79d90e9f18"
        },
        "item": {
          "id": "72f526ae-35d6-4297-a45d-2a996ad0e9ca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0af3d91e-69f3-4280-8ee7-18cf5504310d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2944a5c9-fdc7-41b6-998d-244c4822119c",
        "cursor": {
          "ref": "15545174-4ebe-4f6e-8219-92dab0466874",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "029509bb-0eb7-4604-a043-588688e1c304"
        },
        "item": {
          "id": "2944a5c9-fdc7-41b6-998d-244c4822119c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9e3c4d32-67dd-4e18-8e6e-20113214515c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7c3e53-b330-4469-8656-3cd4de17a8ac",
        "cursor": {
          "ref": "028e42bf-bb91-495e-ab27-2e137ed1a458",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f0ab6906-c626-4d5a-a6d6-01bb8e6fb2f6"
        },
        "item": {
          "id": "3c7c3e53-b330-4469-8656-3cd4de17a8ac",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "18031d48-5e2f-4d93-9c4b-71a73972212e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a275a813-b0ed-43dc-99fa-a1d5f46ff13d",
        "cursor": {
          "ref": "d125fd9d-a571-44cc-82fa-f5b907ca07ee",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e5eb369f-8516-4708-b085-fb27a627f773"
        },
        "item": {
          "id": "a275a813-b0ed-43dc-99fa-a1d5f46ff13d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0a603399-29f4-48ac-8e0c-33945b891540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d44aa58-30f0-4474-828e-91c5925167c5",
        "cursor": {
          "ref": "6bef0047-2844-4832-9a54-4ce58bf7ed9c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e33ce997-9192-4dce-8130-4d8ab6ce3bbf"
        },
        "item": {
          "id": "2d44aa58-30f0-4474-828e-91c5925167c5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "316b82df-6372-4981-8009-080572d985c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d0bf81-9093-4b94-972e-766ae66437cc",
        "cursor": {
          "ref": "52d17360-6ceb-4b81-a010-cc2a348d13e1",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "34aecacc-9537-4220-bd6c-be0f9de1f7fc"
        },
        "item": {
          "id": "24d0bf81-9093-4b94-972e-766ae66437cc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f13faae5-a1d4-479b-a1d1-927535fed5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379240fc-9668-449f-b70a-a6244ab77405",
        "cursor": {
          "ref": "8e2def79-2841-4eae-9a86-119dda35d672",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d6ec60b8-cc8d-4125-a2fd-3ec83a251e3b"
        },
        "item": {
          "id": "379240fc-9668-449f-b70a-a6244ab77405",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c2cdd860-96b8-43db-952f-911b71162a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ebac57-947b-4073-8d23-de34e4f628b5",
        "cursor": {
          "ref": "ea6acbbb-2e63-47c8-9522-dbbe6ead8a69",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "caf1218b-26dc-459c-a2b9-e7dd74f88c9c"
        },
        "item": {
          "id": "b2ebac57-947b-4073-8d23-de34e4f628b5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7bcba818-aef5-494b-ac44-6d715db52daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d742e06d-e90f-4934-9a71-135a54a80031",
        "cursor": {
          "ref": "a2f48435-f5c8-4792-b35e-ff4078439efe",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e89e9bd5-7b95-4213-b095-8f9a1e182b12"
        },
        "item": {
          "id": "d742e06d-e90f-4934-9a71-135a54a80031",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1527d32d-0403-45b4-aba5-677f6886298f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dce061-a22b-4a7f-8847-8b47a6ee3f84",
        "cursor": {
          "ref": "0c983b81-6a27-4fbc-bf24-3b6701cb1512",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3b9f279c-ee96-4052-b225-4adaf0c6001a"
        },
        "item": {
          "id": "89dce061-a22b-4a7f-8847-8b47a6ee3f84",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0ec942f5-7235-4020-a0ce-b7b2a3eb64a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc44960-219e-4406-b00c-f38f8f06c209",
        "cursor": {
          "ref": "ff02f290-ba60-4203-84a9-fa3d66ab30de",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "36e3378f-4877-4119-ba6c-1b6ed1718380"
        },
        "item": {
          "id": "4cc44960-219e-4406-b00c-f38f8f06c209",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "66ad42ef-08d0-4faf-9c39-af6bc4c27b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55ab7ef-0839-4292-b214-4570ff919599",
        "cursor": {
          "ref": "30450b35-9834-4aae-8203-9f9a1da1e4e4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "036603e2-152c-44f4-ab87-2b1cbd57c104"
        },
        "item": {
          "id": "c55ab7ef-0839-4292-b214-4570ff919599",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6b610b7d-8d8a-438c-bedb-d8f3ff7c07a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e578cc0e-bdbd-49b4-bc88-031a3e705c74",
        "cursor": {
          "ref": "89a0ecc6-cc0b-4a3e-bdad-c8d5ea5b6c15",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fc35a565-cb60-4e40-957b-0cabee5d36a4"
        },
        "item": {
          "id": "e578cc0e-bdbd-49b4-bc88-031a3e705c74",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1334c4e4-23fe-49ae-aba3-41e4155a0204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee9ae3a-ce52-4e9e-8980-2910690658cd",
        "cursor": {
          "ref": "6e130a28-3a62-4e7b-9bf8-4f6ccbf4d3f2",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a74d9c00-0469-49e5-ac01-b68006ab5f5c"
        },
        "item": {
          "id": "3ee9ae3a-ce52-4e9e-8980-2910690658cd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "605ef0db-31bf-4f0c-841e-83c21d01fc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fde5bd6-1d04-4abb-988b-b8edfa4ddabe",
        "cursor": {
          "ref": "b0731421-7146-42d0-ab95-6bbd98994291",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "29f10c54-7315-47dc-a4cf-46a22cb391d3"
        },
        "item": {
          "id": "9fde5bd6-1d04-4abb-988b-b8edfa4ddabe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "00bf8680-1d2c-448f-a32c-1e264af3cb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafa71bf-6d62-497f-a26d-4da6aaddb426",
        "cursor": {
          "ref": "9b630d0d-1406-4de6-a1ff-ae09a402e87d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bd224ccd-4292-4242-870e-358d259bf89c"
        },
        "item": {
          "id": "aafa71bf-6d62-497f-a26d-4da6aaddb426",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ea8217b0-68af-4a30-af0a-891adda3552f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161ffdee-2b0f-480a-b003-b5f9a9c5e55a",
        "cursor": {
          "ref": "410c7f30-358b-47bc-83fa-7eef0310548b",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7ecd17de-6d6b-4525-a7c0-e8407b4076c7"
        },
        "item": {
          "id": "161ffdee-2b0f-480a-b003-b5f9a9c5e55a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "187b5427-1e58-484b-92eb-18fc527ac36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05534897-ab4c-4254-a440-ca93029e7223",
        "cursor": {
          "ref": "cb30e5ce-cfed-4148-9f75-6741f635ef68",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d28820c1-a9af-43f8-b095-c64b89895e51"
        },
        "item": {
          "id": "05534897-ab4c-4254-a440-ca93029e7223",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6a647284-672a-42e1-925c-f96fb75569e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26063c61-2ec3-4c88-ac69-2a6d062aa803",
        "cursor": {
          "ref": "550dcfd9-20d6-4539-a461-511ec5c3fe92",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ef1fde4c-7317-4879-9a90-910e00fe5686"
        },
        "item": {
          "id": "26063c61-2ec3-4c88-ac69-2a6d062aa803",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3fbea110-24f9-461e-a451-a1bf8f26886b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90f552a-6825-4fef-971c-64d602080a1f",
        "cursor": {
          "ref": "f0922cfe-030f-436e-abce-9ce2fd212c47",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "18865993-ffa0-40f8-8702-8b6f3696301f"
        },
        "item": {
          "id": "d90f552a-6825-4fef-971c-64d602080a1f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fff79572-7872-4b5a-ac04-57a89d42c522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb359630-c8d2-4be5-85d3-ea38ead608e2",
        "cursor": {
          "ref": "848f9b71-27b4-4be3-83d8-60cdc285a436",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "27402690-efe3-4eed-9d16-e4a44ab5c1cd"
        },
        "item": {
          "id": "eb359630-c8d2-4be5-85d3-ea38ead608e2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dcebc0a7-1037-406d-a1e0-4335bef4617c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8438da-280c-4c6e-9d5a-31a951bccd2e",
        "cursor": {
          "ref": "fcf8f64e-4dc6-4ee0-a1f4-522264af405c",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "566dd7e1-fcc3-4c76-ba0e-f356f33a79a3"
        },
        "item": {
          "id": "8e8438da-280c-4c6e-9d5a-31a951bccd2e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "87b5ef72-0f1b-4033-a40f-f794eb36c1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71fa1bb-1a6c-4ec9-a243-bc7ec533c716",
        "cursor": {
          "ref": "1816aa81-4a0e-47f1-88ee-1d1c9f372f23",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2df878f7-161b-4fc2-900f-81d6bdc4bf12"
        },
        "item": {
          "id": "a71fa1bb-1a6c-4ec9-a243-bc7ec533c716",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4a44807d-adaf-4acc-b403-112bb4a5fdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541e544a-9da9-4750-ac7e-b4b15fa60738",
        "cursor": {
          "ref": "ddc00473-c697-45d7-85bc-0544ad4c433d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1ea0341e-11ac-4476-9077-c0aae74f9ead"
        },
        "item": {
          "id": "541e544a-9da9-4750-ac7e-b4b15fa60738",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "979130ce-fe6e-4aad-984b-099c6c5831d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc031ac-34e3-4943-b852-40a10cc22cce",
        "cursor": {
          "ref": "52340c10-07e2-40f2-af30-f5f4ff90a27c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "42ff0c5c-4986-42c3-a7bc-dc2b76148582"
        },
        "item": {
          "id": "bcc031ac-34e3-4943-b852-40a10cc22cce",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "18e825c2-1927-46cd-baba-3c33a124e848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cabb1e-0209-4607-a508-53d0ee096cdf",
        "cursor": {
          "ref": "d50fb392-d799-4d60-ae29-a01df6cc4a9a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f5f774fe-f5ce-42e9-94da-fb747ae29e73"
        },
        "item": {
          "id": "e3cabb1e-0209-4607-a508-53d0ee096cdf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c0a8ab05-6aad-4f04-96a8-895ec5016de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceeecb8-0d3c-4aff-8706-7969edd1f418",
        "cursor": {
          "ref": "b1ba9cf8-c271-44d6-a171-9e9cc656c44f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6073330b-ea00-4080-988e-72a48fcba29f"
        },
        "item": {
          "id": "1ceeecb8-0d3c-4aff-8706-7969edd1f418",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a824bc11-81c7-4a72-b492-2ba0cfbaabbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b615a9c5-6108-4a13-b9be-0c3c83f60cf2",
        "cursor": {
          "ref": "30517c0a-c3ef-4e87-915e-b4529a8803f8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "10ce39cd-e9d7-463f-94ec-9c4b8dc6c7f6"
        },
        "item": {
          "id": "b615a9c5-6108-4a13-b9be-0c3c83f60cf2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "73db5f3f-cc3a-462c-a7b8-8d07800626d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5911f4c5-f43d-4495-b844-fc20334ed94d",
        "cursor": {
          "ref": "93633dc4-65e5-43ca-b209-2e88dbfe13c5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a1b78935-18b2-401e-96dc-cec49fc38c8c"
        },
        "item": {
          "id": "5911f4c5-f43d-4495-b844-fc20334ed94d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "503c92f4-8aa0-48fd-bd49-d29635cc75ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de88091-9cbc-4cf4-987d-80fa48ef5f30",
        "cursor": {
          "ref": "dd88a350-88e6-4b39-b0c7-aef3ac928263",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "766c419a-88c2-4c4b-8534-e1f0ca49a6bf"
        },
        "item": {
          "id": "6de88091-9cbc-4cf4-987d-80fa48ef5f30",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a61f0211-3a61-4e12-a65b-4c54f10ba62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1367ef5-42b9-4762-bca7-12cbfb5b5f5e",
        "cursor": {
          "ref": "e43f213b-9aa2-4d9a-ae8e-9cff78da4f1f",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "000e3ee1-597b-4fd3-b49d-3d62fb425363"
        },
        "item": {
          "id": "e1367ef5-42b9-4762-bca7-12cbfb5b5f5e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ee60dfc9-9424-442e-b5a9-bfafcb95c800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b0772e-1346-4a6f-aa1d-7a203876335e",
        "cursor": {
          "ref": "b2480c9b-d939-4b63-8e8c-1745858b37fb",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e5d6736f-020c-4f49-a1c0-a6ae0b34f794"
        },
        "item": {
          "id": "d7b0772e-1346-4a6f-aa1d-7a203876335e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "db71dd72-3a5f-4299-8151-52a119c2ba5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57bfa4c-c5e4-49f1-bb01-3d2e382bd0a9",
        "cursor": {
          "ref": "37519890-0a85-4831-a16b-bf82ecee753d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "64c518aa-440a-45a2-8a7f-f749c30d1f2f"
        },
        "item": {
          "id": "a57bfa4c-c5e4-49f1-bb01-3d2e382bd0a9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "84310ee7-9925-4765-ad4d-569e843efabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6f9dcb-1966-40da-ab35-f8beed2230b3",
        "cursor": {
          "ref": "0d494571-67f8-4c0a-9030-83e444dddda6",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8f007bdd-8ae4-4788-84f3-c8a0aad85fbd"
        },
        "item": {
          "id": "ee6f9dcb-1966-40da-ab35-f8beed2230b3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "68d057d5-9d91-4fff-ba3d-4405bb157f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51eeb536-b201-4d31-93ac-ec8ef3c01759",
        "cursor": {
          "ref": "496405b2-219c-4df9-a972-ddf412c7d84f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "019d0cb4-e235-4411-b7dd-2d7f4d5fb6c7"
        },
        "item": {
          "id": "51eeb536-b201-4d31-93ac-ec8ef3c01759",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c5446059-39f3-4d4f-8b89-233f855f95eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59b4f80-6d8c-4b3c-b87f-7f584bce4d7e",
        "cursor": {
          "ref": "e114f113-5006-4f49-8ca3-f6b196fdb6da",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b8e5f347-4236-4ee9-b7a0-8152109e4d7c"
        },
        "item": {
          "id": "c59b4f80-6d8c-4b3c-b87f-7f584bce4d7e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a6fb04ae-ce53-44cb-94c6-1d4c01b729c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76c5b44-16db-4bb6-b1ab-9618464de80f",
        "cursor": {
          "ref": "67f6bb27-9ece-4169-bf67-d257c76ce04c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "129ec504-18d6-4dd8-9318-019dd0536278"
        },
        "item": {
          "id": "a76c5b44-16db-4bb6-b1ab-9618464de80f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3f1f545f-db33-400e-a832-7a4873119448",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c403c9d6-1c02-4a5e-806b-9e1fe4ab9141",
        "cursor": {
          "ref": "e115378c-0dff-40c2-b347-14767a0a96fc",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f7387022-4518-48bc-af93-d9e8cda1cfd0"
        },
        "item": {
          "id": "c403c9d6-1c02-4a5e-806b-9e1fe4ab9141",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b99fceb8-5124-46c6-811e-8e7a9e577140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51a9e94-fa5e-4262-805c-0690b1dfd510",
        "cursor": {
          "ref": "05ec653a-5de9-41c4-92a3-0843c70e93f0",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "517c2383-7884-4016-b60c-7b4b1ad0bdf0"
        },
        "item": {
          "id": "a51a9e94-fa5e-4262-805c-0690b1dfd510",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "05caa819-cf24-4fd1-8c8d-8cd173cbf178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99f045b-0f1e-4028-ba34-67884aee87f8",
        "cursor": {
          "ref": "132b84ae-67b3-405e-a549-65acbdc7eb53",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e86b2928-783d-4b0d-977b-b3f68397d7de"
        },
        "item": {
          "id": "b99f045b-0f1e-4028-ba34-67884aee87f8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9990b6e1-6a02-4f44-adc2-12bcba461546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11277b8c-f862-48a6-8346-954793c6de82",
        "cursor": {
          "ref": "725e86b6-daa9-40c7-9132-a94a2dd74307",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6350ff79-7c52-4fec-bbd3-275ea4492169"
        },
        "item": {
          "id": "11277b8c-f862-48a6-8346-954793c6de82",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5b787650-986f-455d-ab07-6d7c489ce49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f677af7-fd93-44bb-89bd-128a7e27b300",
        "cursor": {
          "ref": "0824ff72-9119-4574-b1b6-1a14957abd07",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bca803f1-982d-4f64-8aae-93b5c3e4d697"
        },
        "item": {
          "id": "7f677af7-fd93-44bb-89bd-128a7e27b300",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "50df5925-0805-4df7-91b8-606055e22a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654558ee-3c27-4c3b-97f3-f14eb623e9d6",
        "cursor": {
          "ref": "484bf3ca-2b16-466d-b05e-f912d8884521",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c82fea65-dd3a-4ae6-af84-27ccc9b25fc6"
        },
        "item": {
          "id": "654558ee-3c27-4c3b-97f3-f14eb623e9d6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "88e50678-be9f-4999-aa3c-46780c9c5286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0814c147-7149-4879-a927-25e4bb2b6321",
        "cursor": {
          "ref": "ec464a2e-99d3-45a2-a9cc-709e8009ed8a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d39334d6-4793-4e74-9796-9ae262800545"
        },
        "item": {
          "id": "0814c147-7149-4879-a927-25e4bb2b6321",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "abe8770f-2989-4f64-a336-677656ef2917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9094b964-c3c8-49ea-81d9-fb02d05ff4dc",
        "cursor": {
          "ref": "eeb7b385-c971-41cb-ad8d-a8b489c6e9db",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6336da96-e949-4ede-9065-ec8575e7b2de"
        },
        "item": {
          "id": "9094b964-c3c8-49ea-81d9-fb02d05ff4dc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a9697ad6-f68b-4435-9762-3db4cff6ee22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e23ec2e-e6f6-415c-b92f-0b244db37b7e",
        "cursor": {
          "ref": "1138e7d6-212b-422f-8686-c1b8d310a44f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "19a5e234-0b07-4cb4-9af4-16d0905f3655"
        },
        "item": {
          "id": "2e23ec2e-e6f6-415c-b92f-0b244db37b7e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3acc443c-fb1a-4de9-a473-f2b5b59c148f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8725ef-498c-4cfd-8375-7b282925e3f8",
        "cursor": {
          "ref": "d1c65ca1-7c82-4f9b-8d05-2c9c6a51f6d9",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "eec18d53-f39a-4cca-be8f-c1cac3602ab6"
        },
        "item": {
          "id": "9b8725ef-498c-4cfd-8375-7b282925e3f8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e214eb5e-83b2-4fde-873b-4e050e44f690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fd0f4b-9e17-4edd-aedf-bd419df02f11",
        "cursor": {
          "ref": "27ae69cb-b682-44dd-88d4-78059b6bdec4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a6bca9d1-9785-4450-a7e5-682755f60e9e"
        },
        "item": {
          "id": "b1fd0f4b-9e17-4edd-aedf-bd419df02f11",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b2e596d9-4c07-4b91-800b-c5b7df310ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4de321-9491-4443-9626-d1efd6fe4934",
        "cursor": {
          "ref": "bd823000-a336-4ea9-b481-fcdaf1fcc8a6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a04e190e-472a-4b1a-8a1f-acf0595acb38"
        },
        "item": {
          "id": "6d4de321-9491-4443-9626-d1efd6fe4934",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "00e49a94-3618-4fd0-8f5d-a39686939f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c057e9d-0857-4d8b-8fde-542e47758f2c",
        "cursor": {
          "ref": "29abefc4-7540-4486-a530-04129db4df86",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "492d7754-9432-4ac9-8f30-2a6e90158384"
        },
        "item": {
          "id": "0c057e9d-0857-4d8b-8fde-542e47758f2c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d6b05942-9001-4b28-9ad7-cdbdb1438c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a499675-2bfb-41c6-9675-3e78e16394c5",
        "cursor": {
          "ref": "c362f9b4-1f1a-4f2e-a80f-eaeff2d3b705",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6d3ce819-457a-408c-86ae-a0bcf198a8de"
        },
        "item": {
          "id": "0a499675-2bfb-41c6-9675-3e78e16394c5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "743e6693-2512-4a8b-a634-dd8f2a31f823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7945c855-db81-41be-a504-61f40664a17f",
        "cursor": {
          "ref": "a9b8d269-0e95-4784-b946-976b04d553d8",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5a714557-191e-4659-b48f-b3dac153cc04"
        },
        "item": {
          "id": "7945c855-db81-41be-a504-61f40664a17f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1f2c62be-3b68-4f91-abf8-0ec3562fc70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c873402-ea20-430c-8caf-6abaaa2f86fe",
        "cursor": {
          "ref": "58ce54fe-59ef-4b3d-949c-72a2f39fe53a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a8fd58ca-d88b-44ca-92a4-fee269c8ebe6"
        },
        "item": {
          "id": "0c873402-ea20-430c-8caf-6abaaa2f86fe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d5316c0f-ed85-45ad-b495-8e4f81d35be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eaceee5-4022-4d42-aea7-abbc2707afcf",
        "cursor": {
          "ref": "c90e3bf8-820e-4a60-9141-e9cd8dab8d75",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3a68aa3e-f966-4b3b-945d-24c6e348008a"
        },
        "item": {
          "id": "0eaceee5-4022-4d42-aea7-abbc2707afcf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7cc113c1-e758-4a70-8bec-a40e6f7c7043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bd9640-b0e3-4397-ae6c-4f46843ad20f",
        "cursor": {
          "ref": "43b4591e-cb36-4dea-9b1e-ffd65b20910b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "82db25fe-8abf-43e6-a132-9ffcdf2a0eeb"
        },
        "item": {
          "id": "02bd9640-b0e3-4397-ae6c-4f46843ad20f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ef197573-17b1-466e-beb3-475980820cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0820cad2-8ed4-4aa4-85c7-cc6fb8922d27",
        "cursor": {
          "ref": "11d46c48-d776-4185-a33d-46522a64af36",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1deaa52a-a8fd-48f2-95d3-dc7e2af7d7bc"
        },
        "item": {
          "id": "0820cad2-8ed4-4aa4-85c7-cc6fb8922d27",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4d892a25-6bc9-4fa5-ae67-158567ac8ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c42947-2965-4d12-81ce-d028414c1dcc",
        "cursor": {
          "ref": "1d1d3c74-1e6c-480f-b0a6-878d62e8afb7",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "afe333d8-5642-4168-aea8-ece17042b5bd"
        },
        "item": {
          "id": "48c42947-2965-4d12-81ce-d028414c1dcc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d5b67c94-a404-413f-9b4f-6af056a389a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104c686c-1e33-4f94-80e4-aaab101d5c7c",
        "cursor": {
          "ref": "8562ec67-944c-45fd-ae81-bdee8e529e5c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "940e4fce-b568-4d50-aefd-f95b82592a8c"
        },
        "item": {
          "id": "104c686c-1e33-4f94-80e4-aaab101d5c7c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a863d315-7d22-40a0-b723-d76ef4be50e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9208e3b1-3436-44db-9ef3-82cd6a9218dd",
        "cursor": {
          "ref": "28da2126-093f-4b21-93ab-0e2828052f9a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6c606fe4-7c94-4d82-b3dc-edb7142cb88a"
        },
        "item": {
          "id": "9208e3b1-3436-44db-9ef3-82cd6a9218dd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "73d96586-6ca9-4177-a631-abdde9a0edde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d176c0-8546-4a33-a10f-427bdb967d7e",
        "cursor": {
          "ref": "088c9df4-efbb-4e5a-b1c0-4bdf63bec674",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e0674cdd-4957-4a7d-b8d6-6fc5e0cf65e2"
        },
        "item": {
          "id": "53d176c0-8546-4a33-a10f-427bdb967d7e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "10b86969-08e5-4272-adfb-5c0ed77bf55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511e5566-d120-46cc-b965-d2b87e1d9e7a",
        "cursor": {
          "ref": "e92de8f2-12df-4233-a54d-2a589016d09c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f2c893b1-837c-4ebd-b484-b609a4877639"
        },
        "item": {
          "id": "511e5566-d120-46cc-b965-d2b87e1d9e7a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5e4af8fb-dc24-4cda-b67c-dc7b6d842138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371579fc-cd87-4bc8-a1b5-008ef62296a0",
        "cursor": {
          "ref": "b9e9f9e9-1d16-4696-8f4b-f97355f06508",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b4c55a44-c02d-43a0-8824-6f1baa93ceb6"
        },
        "item": {
          "id": "371579fc-cd87-4bc8-a1b5-008ef62296a0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "08ade5c7-ebce-446f-9a02-0559bd580d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47a32c3-68fe-4686-9938-bb4a42fc47a2",
        "cursor": {
          "ref": "4b6bcc71-7ed9-4676-b8c9-8bb97a16a278",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "99a29486-224e-4f39-a898-6d620624e4d5"
        },
        "item": {
          "id": "b47a32c3-68fe-4686-9938-bb4a42fc47a2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4e543a62-c56a-4131-bd66-f3c06fecc937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe27ca6-8fd4-4576-a6be-9de593df7647",
        "cursor": {
          "ref": "c065a636-2c1c-4332-b2a0-5cf0157de113",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ca876826-cef1-4a0f-9660-09d9926541d2"
        },
        "item": {
          "id": "5fe27ca6-8fd4-4576-a6be-9de593df7647",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "abc43ed3-1f82-4480-b5c7-2f76a3bf32ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563f13d1-6d63-419f-a258-4e2127e90d3b",
        "cursor": {
          "ref": "b993dc4e-9a5c-4cd5-9cc1-292a945be54f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5b1065c4-eef3-4065-80dd-eefe4449b99f"
        },
        "item": {
          "id": "563f13d1-6d63-419f-a258-4e2127e90d3b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2c5cde96-a89f-4e3e-9f5a-48108abd589f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6071fe-9583-4ee9-bee3-c2342d8508da",
        "cursor": {
          "ref": "43ed8971-fb9a-4ee9-9d9c-59ff0af87731",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5db725aa-aced-4b4b-bfd4-4aea51693b9a"
        },
        "item": {
          "id": "cd6071fe-9583-4ee9-bee3-c2342d8508da",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8ab9f501-7d2d-4545-9aa3-1a4bbffd949d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a020c6-484f-45ea-baaa-17ad9a85fdd8",
        "cursor": {
          "ref": "25de04fe-d131-45a9-b208-6c4f6ca26bb1",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1fb519c7-89df-494e-a03e-90b625577604"
        },
        "item": {
          "id": "89a020c6-484f-45ea-baaa-17ad9a85fdd8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8457cc6d-5c44-418b-912f-d4ef7e5cae1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90fc239-600c-4061-b3ee-ca994713496b",
        "cursor": {
          "ref": "7080f076-96a0-40a9-9a65-d97723360180",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c93bb18d-59e3-4731-831e-c574b10d9d9e"
        },
        "item": {
          "id": "b90fc239-600c-4061-b3ee-ca994713496b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1238e075-2ffb-4f39-b660-7f87f4dfb2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb64003-6d17-402c-8813-0b467b29326b",
        "cursor": {
          "ref": "f44df4e8-bd93-4799-b570-4b10bef286ab",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "48e80eb4-4d98-4982-9103-670a32be35cd"
        },
        "item": {
          "id": "2bb64003-6d17-402c-8813-0b467b29326b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8ce33c16-c336-4e82-b454-e0d2ad0e9e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b18c71-2e6b-45bd-ae8b-af79ae4f05d9",
        "cursor": {
          "ref": "1f7bd4a6-9b0a-4d6d-ae23-42fcd3cf7ff0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9d6a0b0b-c6a2-40f8-baa2-dd627d4ad097"
        },
        "item": {
          "id": "40b18c71-2e6b-45bd-ae8b-af79ae4f05d9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "18c4bffc-e895-4177-8d05-bde1bf4dea17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a041039d-95e4-422d-bab0-30ac48aa8b43",
        "cursor": {
          "ref": "1137d5a2-40c3-4f86-8e15-4ff44381aaef",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b85483b8-062a-4a28-92b6-090269a6f3b0"
        },
        "item": {
          "id": "a041039d-95e4-422d-bab0-30ac48aa8b43",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f9f9b936-e240-4a6f-a570-13eb96c8a7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3280b2a-3c91-4624-8bfe-a2e2c89897d3",
        "cursor": {
          "ref": "df77003c-f484-406b-98de-1e8f26110f6a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "67be74c7-d343-42f3-bf31-b6ebc6dee256"
        },
        "item": {
          "id": "a3280b2a-3c91-4624-8bfe-a2e2c89897d3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fb90fc10-42f8-435c-9492-56a2858bd536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f90ba2f-6ace-4bff-88fe-034353e691ca",
        "cursor": {
          "ref": "8fb61924-b6ba-4a11-a351-017364168554",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "99c7de68-aa7d-4a68-b698-d2612a1a3535"
        },
        "item": {
          "id": "5f90ba2f-6ace-4bff-88fe-034353e691ca",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "33f6b3a6-d7a4-43d6-aa81-5e1d64ff1587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11294881-1d2c-48db-93ab-131e7efe60ee",
        "cursor": {
          "ref": "d950ac62-3dcc-43fa-a480-189384aaea49",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "46850b9e-5538-4543-b6f6-dc69fa04e5b7"
        },
        "item": {
          "id": "11294881-1d2c-48db-93ab-131e7efe60ee",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fc02afe4-d757-4dfb-bd20-2203e7805fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8956a9-8f58-4c26-85a1-e309bb163772",
        "cursor": {
          "ref": "1201b3b9-5c7d-46e3-a415-b5988b14e096",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a3fb4e5c-f8e4-4c0d-af02-223c49b7ddca"
        },
        "item": {
          "id": "2b8956a9-8f58-4c26-85a1-e309bb163772",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "76ae8e09-3227-4f83-813a-ec09e4308596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe0f1a0-1b83-471d-8970-8779442cc9aa",
        "cursor": {
          "ref": "c749396f-d792-4a9d-b71d-d46ab5ca8e38",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a9ac110c-5665-403b-ba60-20a47116e5f5"
        },
        "item": {
          "id": "1fe0f1a0-1b83-471d-8970-8779442cc9aa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "33570d40-1d57-409f-a369-de4e57d9d727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db2dd12-ee9d-4426-bfcc-5df916be77b9",
        "cursor": {
          "ref": "f48fb249-e950-4a31-9d48-adda264b74f6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c033bef9-0e0c-4c71-ba85-90d8ad4f1313"
        },
        "item": {
          "id": "7db2dd12-ee9d-4426-bfcc-5df916be77b9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "11083bfe-58ca-43a8-abf7-79e3ae505b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f81a15-0f53-470b-9bc4-62832a4afd15",
        "cursor": {
          "ref": "19517bfe-1ae8-40d8-a7f5-e6b70973d709",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8d4efab8-d3ab-4d75-b358-a658061ac810"
        },
        "item": {
          "id": "c4f81a15-0f53-470b-9bc4-62832a4afd15",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "20dcc2c4-d255-4b98-9b7b-38f578de0a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba1dc73-2fd6-4860-ac0c-651b370fbc7d",
        "cursor": {
          "ref": "e383365f-85eb-4279-96a1-f98d8cee82d3",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "abd496a4-3dac-45d0-9700-8bf16ca7707b"
        },
        "item": {
          "id": "aba1dc73-2fd6-4860-ac0c-651b370fbc7d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "56daf82a-7b4a-4cee-8875-cbf696e9b8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14f3011-c7ab-454f-9ee1-80579a7af70d",
        "cursor": {
          "ref": "d5e7d9ad-23ac-4283-b947-ae3953bb509e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4f317b46-b0dd-42f7-8c1f-1b7f958e543d"
        },
        "item": {
          "id": "c14f3011-c7ab-454f-9ee1-80579a7af70d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ff85f126-009a-40d9-830b-cb0a02ed575c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501b36f8-97d3-4129-9419-b905f26cd9a1",
        "cursor": {
          "ref": "abfa7344-fd15-435c-ad47-8318bb71f834",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8eb6aaa6-16d9-409b-9e85-28d33d0e7802"
        },
        "item": {
          "id": "501b36f8-97d3-4129-9419-b905f26cd9a1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d7716a7f-9a96-42dc-9cae-ed5e921ba9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd82ba5-cfd6-4247-bdf7-a25321153efa",
        "cursor": {
          "ref": "c63f342c-54fe-4421-9d94-bd0f1e2effe8",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a29521dd-9737-4cf8-8445-7d1dec178338"
        },
        "item": {
          "id": "5cd82ba5-cfd6-4247-bdf7-a25321153efa",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "74496c6c-b3ea-4fbd-9f9e-4e099f8fa6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c71a42-8025-4d26-b611-193e0a4ecfbd",
        "cursor": {
          "ref": "49c0d0bc-588e-4dff-a20d-819b3f94db2e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2d708cfc-896f-4e7c-8bbe-fde6b5e9a3be"
        },
        "item": {
          "id": "a9c71a42-8025-4d26-b611-193e0a4ecfbd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "24c796bc-f0e5-4a6b-ba52-d02c09e32003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdce297-0d28-4d51-bdfe-fab3a1f9cd78",
        "cursor": {
          "ref": "9151fa52-c39a-475c-afa4-2ecbfb2b1070",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bc4b1615-5d9d-4abf-95fa-39a91fca1a46"
        },
        "item": {
          "id": "afdce297-0d28-4d51-bdfe-fab3a1f9cd78",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4cc41f09-a88f-41f8-9fcd-99a184945779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2b4293-5529-403d-958b-99a3dee7e00f",
        "cursor": {
          "ref": "beceb252-9525-4415-9b4b-2bd95ff4ad15",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "de87cef4-875e-4e7e-b0c3-384f6ddb79f9"
        },
        "item": {
          "id": "fc2b4293-5529-403d-958b-99a3dee7e00f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5b7a4565-0494-49e9-bbc7-665949b74550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c39504-7790-4dd9-bb18-c267fc472c77",
        "cursor": {
          "ref": "a2f5653e-eb92-4d50-991e-2c2d86cfa16d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6c7ebd9e-58a1-4ec6-bc9e-fb889703be73"
        },
        "item": {
          "id": "49c39504-7790-4dd9-bb18-c267fc472c77",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bf81f60f-cd82-4bbc-9a2f-731ee279bd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef19c145-2758-46a1-9db8-5da86eb50e68",
        "cursor": {
          "ref": "984d214d-9731-414a-8fed-15db08654e3b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1223433a-b59e-4762-874a-78b62d3b0b18"
        },
        "item": {
          "id": "ef19c145-2758-46a1-9db8-5da86eb50e68",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dad0fe03-337d-4d41-ad94-b31244c91950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421fcacd-106e-4417-b262-d430ceae6a87",
        "cursor": {
          "ref": "1140bd9f-d95b-422b-b299-d713ec393cbe",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5b49cb5b-f0b5-4380-a594-5d0f29adcb9a"
        },
        "item": {
          "id": "421fcacd-106e-4417-b262-d430ceae6a87",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c8dc73ab-38fb-43c2-8cf0-e6a217deaf2b",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "b9cf6868-c33c-47e8-94b9-78a451549d1b",
        "cursor": {
          "ref": "9a59c0be-aa37-4905-b93a-d25505e763a1",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0c44d74d-3f52-4fe4-863c-2e71ba3cccc9"
        },
        "item": {
          "id": "b9cf6868-c33c-47e8-94b9-78a451549d1b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c9b71bc9-3250-48d1-9ff4-bdf968cf6b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d1e832-f58e-49a8-9be5-80eb8ba3c822",
        "cursor": {
          "ref": "7c99f7a9-9ffe-4d5b-a892-096091cbf917",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "648e11d6-d512-496e-92c5-31098fcb99ea"
        },
        "item": {
          "id": "16d1e832-f58e-49a8-9be5-80eb8ba3c822",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "02b7bcb5-8831-4b07-951c-b76af124cdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a24968-981e-4511-b2b1-5814e6a4d99c",
        "cursor": {
          "ref": "828b25a8-83ee-45cb-9587-17976d4690a5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "156f7d1d-dbd7-4f4c-abdd-b1c3472a99e8"
        },
        "item": {
          "id": "92a24968-981e-4511-b2b1-5814e6a4d99c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "981d32ef-cce9-43e1-8eab-3f02e7cf6b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcae7db-4b55-4015-ab66-408cf2a623ef",
        "cursor": {
          "ref": "c344a305-f316-4284-9643-3339ca011960",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6ad8c0a8-a0e6-481e-b046-6b9e91e8c71f"
        },
        "item": {
          "id": "7fcae7db-4b55-4015-ab66-408cf2a623ef",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ec848b23-273b-45b2-93c7-f47bbb4f5069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d012db-d413-4867-be09-fdc457e66e5b",
        "cursor": {
          "ref": "d5929651-952e-4c66-875b-ba587ba24d89",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "61051940-8b61-45e0-94f2-d6d241ec5495"
        },
        "item": {
          "id": "36d012db-d413-4867-be09-fdc457e66e5b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3763aca1-d16d-4504-ad86-1e8f891d8fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeb219e-1c96-465c-8e82-3b0fc46a3f7b",
        "cursor": {
          "ref": "c33b0c4d-0e82-4d03-a41b-1d774ecf8f9a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "efa7eb03-aa53-4b95-8bc3-49b2a4f1b486"
        },
        "item": {
          "id": "deeb219e-1c96-465c-8e82-3b0fc46a3f7b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b5a8a7a4-a9b2-4faa-abbf-3e8134112c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e9702f-353f-4b71-a485-b0e6449f2a8d",
        "cursor": {
          "ref": "562a3cbe-bc49-4789-abf0-226cba36ee94",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c0b20e40-6193-4e1c-a392-405ab2269109"
        },
        "item": {
          "id": "91e9702f-353f-4b71-a485-b0e6449f2a8d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8a34649c-e139-4448-b933-288232be7ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a16fb1c-3c7f-41a6-97ce-1097ea17d505",
        "cursor": {
          "ref": "640f4688-a197-42a2-aac1-fbff4b7b86f8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0da954a7-bd53-4ede-95f6-b09ff7d30e3c"
        },
        "item": {
          "id": "1a16fb1c-3c7f-41a6-97ce-1097ea17d505",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e1e00159-2fc3-4343-b2c6-6d183c912e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce07aeb-3aa3-4bad-9a08-6b7b222a8436",
        "cursor": {
          "ref": "18ec57ab-4216-4dae-a236-a417347fb5cc",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6e8bce67-115b-4d74-b533-cfd8a1092cf6"
        },
        "item": {
          "id": "2ce07aeb-3aa3-4bad-9a08-6b7b222a8436",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b51601c9-8c29-4c77-9e67-8bde70c23bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3794ae8b-9afc-4a69-aa09-f523bfacd151",
        "cursor": {
          "ref": "f25c3d1c-d247-43d8-925c-e14768f95dce",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "da449bc6-5044-4849-aca4-3c295ffc172b"
        },
        "item": {
          "id": "3794ae8b-9afc-4a69-aa09-f523bfacd151",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a93b4243-ed2e-47d0-bf04-3b053e05c9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b533d73-ad60-406d-855c-89384876b1af",
        "cursor": {
          "ref": "c7180b97-7794-4f3b-8e44-230aaa8af215",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a59c4816-6662-4386-a741-84210905dfdb"
        },
        "item": {
          "id": "3b533d73-ad60-406d-855c-89384876b1af",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c799cd9f-aa4d-4bd2-b007-0fefe17c68a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112abbed-273e-4761-9702-e40c84cf6181",
        "cursor": {
          "ref": "b1d0ff63-e2d7-447e-92b5-763531c4b8e0",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "76c966e1-37c9-4774-8f78-2e95507affcb"
        },
        "item": {
          "id": "112abbed-273e-4761-9702-e40c84cf6181",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4bf0915b-ad10-4b24-9113-cd77cc12ff8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e93394-1357-45a9-895a-14d0b9cebd06",
        "cursor": {
          "ref": "5dd312d0-fa72-441c-a5c4-20a8226df58e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c758d404-a65c-4012-aecc-7f5bf7023e4c"
        },
        "item": {
          "id": "e4e93394-1357-45a9-895a-14d0b9cebd06",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0a9e5f04-5f8b-478f-b069-7dd47eb153ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1308dd-0c80-416f-a66a-565e7c813f10",
        "cursor": {
          "ref": "a2089a24-c5ad-4750-9f6f-042b3143de9c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "100d2f03-5c4b-4a9d-b1b5-0f4538bfa1cd"
        },
        "item": {
          "id": "9f1308dd-0c80-416f-a66a-565e7c813f10",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1f494423-e82f-4ff7-a758-1b9d3a75a35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61c78da-0053-493f-a319-e30f662b6140",
        "cursor": {
          "ref": "916eb014-c801-4077-a547-acf1ae8c22d0",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8d5a7067-9b96-49ec-9af4-94bd88d4d422"
        },
        "item": {
          "id": "f61c78da-0053-493f-a319-e30f662b6140",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2a9b855a-59a6-4a37-8428-2ea6b41b2983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7281844e-d180-4b72-b60f-e80a8bd92024",
        "cursor": {
          "ref": "39c41024-4125-4be9-98eb-379ed01e9f3b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "105c4cba-7fd9-4a7e-9006-e1520e34d842"
        },
        "item": {
          "id": "7281844e-d180-4b72-b60f-e80a8bd92024",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e5b22768-0284-4b0e-8a7b-79c888a46157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2805a69-c555-4c74-a1f2-7850b6c8b91f",
        "cursor": {
          "ref": "bf1fd6ba-edad-44a6-83b6-bfab5cafe7b4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c53edcff-0b19-43a8-8f38-441ec7795ce4"
        },
        "item": {
          "id": "f2805a69-c555-4c74-a1f2-7850b6c8b91f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "10d9580d-98f4-414c-b8c8-77599c65f0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dca01d-d100-454f-9a58-43d294e38bc2",
        "cursor": {
          "ref": "7814302d-7b16-47b4-bdf2-0c6ceaaa1416",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "624bacb6-8812-4bdb-a6a2-67c8a198fa72"
        },
        "item": {
          "id": "c5dca01d-d100-454f-9a58-43d294e38bc2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f4a66825-58eb-411d-b8f7-e1dbd48f0e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fdc55a-6c39-40fc-908d-3e64bbc08aa5",
        "cursor": {
          "ref": "33ac7765-6798-4aee-b532-31bca6262742",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4c2a2db6-6966-4033-ad5f-2adbd66117ae"
        },
        "item": {
          "id": "16fdc55a-6c39-40fc-908d-3e64bbc08aa5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ca697410-c7d4-4f35-9c26-c2ed6e9a193f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39456422-2d3e-4df1-94d0-9f4670142551",
        "cursor": {
          "ref": "76a252de-96e1-4b17-86a6-e9fb97d3aa44",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "75d27b91-1c72-477b-ae12-c6962473148e"
        },
        "item": {
          "id": "39456422-2d3e-4df1-94d0-9f4670142551",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3e59edda-c9bb-4350-9122-3d2048586a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed47794-173c-4be5-a31d-89857b359086",
        "cursor": {
          "ref": "5e51dbe9-88f8-4f48-b155-0212ffce7586",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0c5a09f7-ff74-4efa-8fa0-624a22dbb418"
        },
        "item": {
          "id": "0ed47794-173c-4be5-a31d-89857b359086",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0aa5232b-200e-4c83-bc1d-f602ab4a92a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7f3082-8955-4fbc-8010-b2a768440c17",
        "cursor": {
          "ref": "0cdb8095-2202-4fde-9603-2be275008267",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4e081565-65b1-44c8-ace3-066ab430ccb5"
        },
        "item": {
          "id": "3e7f3082-8955-4fbc-8010-b2a768440c17",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9ba42e9b-ba68-40fe-a748-638bb01b5840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d567add-2c3c-494e-ad62-cdb6adc95ef7",
        "cursor": {
          "ref": "91717ceb-58b3-45f8-8223-8bd7f251dd62",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e4383711-32bc-4ca8-9c29-93030172b7ab"
        },
        "item": {
          "id": "4d567add-2c3c-494e-ad62-cdb6adc95ef7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "224179b6-4122-4297-b567-f47e888a39c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077e4099-2956-4883-a613-aa8414e5c5c0",
        "cursor": {
          "ref": "31142416-fa28-4984-a1cd-890372c2923d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c32f2b27-3d84-47ee-8ad9-e5b411369ac8"
        },
        "item": {
          "id": "077e4099-2956-4883-a613-aa8414e5c5c0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8aee4561-cff5-407c-b266-d0864d170f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0604e100-65cd-410c-9847-5bc8077e5291",
        "cursor": {
          "ref": "66f44690-44ec-42e1-b19f-3df7ef071c27",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ec398f78-ecf6-4a14-b3a2-227fc542c90d"
        },
        "item": {
          "id": "0604e100-65cd-410c-9847-5bc8077e5291",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0d6dc4c4-1234-41d9-9d73-90e5f5f8302b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d352902-32ee-4c3a-9c88-85ab556bbf88",
        "cursor": {
          "ref": "315c8dd7-b4f1-43ff-89e3-4b7e61ea0508",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "01a99c9f-5f21-48fd-8df8-de29cdf39393"
        },
        "item": {
          "id": "2d352902-32ee-4c3a-9c88-85ab556bbf88",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "308f5598-74af-43d4-95cc-47116bf49562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dbf891-55a2-4113-92c2-400b427d198c",
        "cursor": {
          "ref": "a1221027-ff35-4bc5-b788-4a046b7e6b3f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bd1dc141-1729-44fe-82af-bb6d89ece15a"
        },
        "item": {
          "id": "b9dbf891-55a2-4113-92c2-400b427d198c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6b02328a-fcdd-4a13-9ec3-ea7e101ad6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d387f0b2-1a3b-4226-935e-699a8a85db8f",
        "cursor": {
          "ref": "7baea164-8ed7-4689-b65d-7b53c4a9c6f2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a639f5d5-663b-4c58-ba16-e871535157a3"
        },
        "item": {
          "id": "d387f0b2-1a3b-4226-935e-699a8a85db8f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c8f8e389-cf4d-4d24-9e59-0a5e2192fadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5af9ec6-0d06-49dd-94dc-694e61396c99",
        "cursor": {
          "ref": "3b4a3f06-38ab-47ac-9f46-23290daf8357",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d0fedbba-e042-4fa1-b90b-1ddc067f910f"
        },
        "item": {
          "id": "c5af9ec6-0d06-49dd-94dc-694e61396c99",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "044814ea-b96d-4df6-a6dc-d8494bf056f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8076f212-a308-4c5b-8db1-bf121db1728c",
        "cursor": {
          "ref": "78d10948-f880-422d-8525-b36c771081b5",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "05be93b4-ef46-45c8-9557-7589bd420b8b"
        },
        "item": {
          "id": "8076f212-a308-4c5b-8db1-bf121db1728c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "182a9652-d5f3-468b-a748-cf1f614cc5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f200a5d2-2824-46a7-b4aa-8650dfdac4cf",
        "cursor": {
          "ref": "5864cf26-d59d-4280-94f5-c3f1fae5d65a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d77c3d21-5341-4c6d-891b-fae87e90a20f"
        },
        "item": {
          "id": "f200a5d2-2824-46a7-b4aa-8650dfdac4cf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cb60fdb1-741d-4002-af76-7634918c0c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a1dc2e-7e66-4d1b-b248-87a78f90f976",
        "cursor": {
          "ref": "e21aed51-da61-4eb5-baee-348042a4d7d1",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "92afa4e8-b959-483c-919b-08398f0e979a"
        },
        "item": {
          "id": "34a1dc2e-7e66-4d1b-b248-87a78f90f976",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b7dcfdf3-7bff-45bc-bc03-2c857529ace5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27288c38-8c41-48e0-a3bd-e01187e37612",
        "cursor": {
          "ref": "22327472-c0c5-476f-9841-e0c35f53feac",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f2d45ba1-4886-4fc6-ae49-481db4475484"
        },
        "item": {
          "id": "27288c38-8c41-48e0-a3bd-e01187e37612",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0000a6fe-c464-4a04-b0cf-fad326408a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac84dc6-38f1-470b-a54b-5904e784ffca",
        "cursor": {
          "ref": "66867e3a-6cba-4624-a7ba-763b7d0ef801",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "eb6b3522-b821-4cec-ac2c-2e3dd38f3dee"
        },
        "item": {
          "id": "aac84dc6-38f1-470b-a54b-5904e784ffca",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c9e37724-222b-4178-829e-011ab0f2c75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25746580-cc28-41ba-8886-1c53c6e34c09",
        "cursor": {
          "ref": "de4694d9-f78c-4d40-a4da-585c23ac037d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9557c2a6-0b50-443c-ab13-b44e8866ff14"
        },
        "item": {
          "id": "25746580-cc28-41ba-8886-1c53c6e34c09",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9ae71770-64f8-42d8-8ad3-878352e9e933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae31c681-c2eb-4320-b848-8da7e7136785",
        "cursor": {
          "ref": "8f1484d1-64b9-442e-918e-b1c1f80b9c4c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1d224d2d-c5a9-4173-b9ba-20e6b33e4fc7"
        },
        "item": {
          "id": "ae31c681-c2eb-4320-b848-8da7e7136785",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f8b3449e-cfd1-4384-8ffe-259fbdd0a23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fc372d-dac5-44d6-aef2-9c7824ce620b",
        "cursor": {
          "ref": "57e4fda1-753c-4bba-9dca-dda50fb708f0",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c4fd659e-ef71-4a10-aea7-b6b1d1ab2b38"
        },
        "item": {
          "id": "11fc372d-dac5-44d6-aef2-9c7824ce620b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1702dd56-8e4e-4081-9cda-f27eba551ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8461ac-1c15-4031-9cfe-ee9aaeb4776f",
        "cursor": {
          "ref": "033e5369-bb55-43a0-81b5-7de8730ce7ae",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c52bfb81-5571-4810-801d-05eb5569d70c"
        },
        "item": {
          "id": "7c8461ac-1c15-4031-9cfe-ee9aaeb4776f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fc0338fd-0667-4412-a719-1b8e27a0533e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18c842a-d296-4c8e-8938-402efff92610",
        "cursor": {
          "ref": "3d462efd-ee14-4ce1-9e08-c17f47aab6b5",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "951d0d66-43cd-4b5d-bb8c-5339bd72a084"
        },
        "item": {
          "id": "d18c842a-d296-4c8e-8938-402efff92610",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c572442b-3c5b-4995-b1a7-a4012020c303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7c2d47-4aaa-4d2f-b3a0-2d95bf46182b",
        "cursor": {
          "ref": "820e605c-e4dc-43b9-90ce-09e4ba520bef",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9e6ac91e-92ea-461b-afd6-fa355363b0d5"
        },
        "item": {
          "id": "7f7c2d47-4aaa-4d2f-b3a0-2d95bf46182b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "477ab904-ac3c-4f28-abd7-be66a9ebb88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c93dd9-864a-448a-b699-e99206555bc1",
        "cursor": {
          "ref": "30bf5161-efc6-41e8-87df-46d192e12564",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "989e5c51-d387-4a74-b84a-962659fc56b4"
        },
        "item": {
          "id": "16c93dd9-864a-448a-b699-e99206555bc1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6d52abfd-c198-4b80-a3ae-1021e071e124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54621d3d-f465-4c38-a1b1-e17965d35b31",
        "cursor": {
          "ref": "26da5c7c-a5c0-4d57-ae68-f9a9e4c5723d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4719374a-66d0-4955-9d74-571e9b4932c6"
        },
        "item": {
          "id": "54621d3d-f465-4c38-a1b1-e17965d35b31",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "002c9205-e798-43fc-b4aa-b1f0b368f82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee58b06c-8e98-4ec1-a6d0-7676e78bb710",
        "cursor": {
          "ref": "2f5ab30c-15d7-4863-ae19-730954af6aa6",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1606872d-a0d8-40d2-9a77-ae6d0d9e2fc8"
        },
        "item": {
          "id": "ee58b06c-8e98-4ec1-a6d0-7676e78bb710",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0595958c-1f48-4dc5-8f87-32f0c0e74fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887919a5-feb7-42ce-9ddd-b516b15d03a3",
        "cursor": {
          "ref": "3faeac75-fa9a-44dd-848c-bde62d080521",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7165a5fc-076b-4117-89b3-12d5e00d8342"
        },
        "item": {
          "id": "887919a5-feb7-42ce-9ddd-b516b15d03a3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4129f368-01d5-44d9-a6e8-c664797c88af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7f0dc6-9bff-4621-8def-7131c2e2ca3b",
        "cursor": {
          "ref": "58bb8446-f2cc-41a0-bf8c-a07bc2543380",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "55c31f86-d12c-42eb-ae71-3f053f050772"
        },
        "item": {
          "id": "de7f0dc6-9bff-4621-8def-7131c2e2ca3b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "daa2a510-678f-4776-8a8f-f6784a441335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5053b49-db47-4366-8715-80191a6139b0",
        "cursor": {
          "ref": "f5da420f-210e-4fc7-b80a-89ad0c0a3d06",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "da5b9c89-8002-4849-b079-ee3ad20551f1"
        },
        "item": {
          "id": "a5053b49-db47-4366-8715-80191a6139b0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d0a08400-76c6-49a4-90af-26cecba27df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d55b12-f673-481d-9e60-d375f744722a",
        "cursor": {
          "ref": "26c561d4-4a43-4fc8-87a4-2c8b58040990",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2d1d21b9-5b9e-45f1-91d7-a19d63c22e12"
        },
        "item": {
          "id": "47d55b12-f673-481d-9e60-d375f744722a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b7a3a3d3-3daa-4a45-8834-7b585f48e00c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752bffff-4db9-4dfc-a021-b130d368109d",
        "cursor": {
          "ref": "42fc1caf-7f52-48a8-9175-960d2dd35aec",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "209a4665-7301-40f0-b533-20dc4cdefbb5"
        },
        "item": {
          "id": "752bffff-4db9-4dfc-a021-b130d368109d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d7d6dca5-13d1-4ca3-b9c8-c9f7fdef682b",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cab27a4-c96e-41ab-bd86-5614cbf86b16",
        "cursor": {
          "ref": "13e97d55-d607-40ea-8141-2dadb6c4e944",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "186e93cb-8b57-43ce-b385-fd2f3a8bc478"
        },
        "item": {
          "id": "0cab27a4-c96e-41ab-bd86-5614cbf86b16",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ae4bd669-66da-4c60-9484-f5233b9b0e9c",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2994111-60b9-4159-9562-3d77fa5fdaaf",
        "cursor": {
          "ref": "ed0f516a-90f8-4464-a2e0-9b4677ac51fc",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f3c3a454-b464-4db0-98be-adba4c65ffe9"
        },
        "item": {
          "id": "e2994111-60b9-4159-9562-3d77fa5fdaaf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "612156fc-e00d-49ea-827d-bca7052984b7",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "42389a5b-5a1c-4573-94d5-942fd90a9b33",
        "cursor": {
          "ref": "47a50cbf-18ab-428a-8841-8858fc92761e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "04884b5b-9b40-468b-8378-0ebb7faab283"
        },
        "item": {
          "id": "42389a5b-5a1c-4573-94d5-942fd90a9b33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd26b0c4-9967-4c50-86d7-cd86e16edb45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42389a5b-5a1c-4573-94d5-942fd90a9b33",
        "cursor": {
          "ref": "47a50cbf-18ab-428a-8841-8858fc92761e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "04884b5b-9b40-468b-8378-0ebb7faab283"
        },
        "item": {
          "id": "42389a5b-5a1c-4573-94d5-942fd90a9b33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd26b0c4-9967-4c50-86d7-cd86e16edb45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57617760-1f67-4b01-92ab-c0f2e29cb5e5",
        "cursor": {
          "ref": "c143ea16-185e-4876-8e33-43ac41549a1c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6a5adfb3-9933-476c-a716-af77fdaaf4c9"
        },
        "item": {
          "id": "57617760-1f67-4b01-92ab-c0f2e29cb5e5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b7c5e609-1210-48a1-9a2e-9c757faa0ab6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde9163e-2203-458a-bb76-f8486b1da059",
        "cursor": {
          "ref": "2eb6cb14-2b5f-43c6-8f7d-574a28816feb",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "4a41535f-0ba8-462a-a326-54ea044bdb7a"
        },
        "item": {
          "id": "bde9163e-2203-458a-bb76-f8486b1da059",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3b2dfae6-bec3-4c8e-998b-ad3e9e47dc99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}