{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "05f0c0cf-eceb-4e1a-bfd4-57ddce720c19",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3139b23c-112b-439c-8a99-bc9b0eddd133",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f14b0ea5-cd7f-45f1-95f9-921a0497091e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75ce9003-dd5f-43bc-b3df-81a67fbbd756"
                }
              }
            ]
          },
          {
            "id": "f84abd53-2784-42b1-a17e-c35ee783c407",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4aabdac-266c-4df4-9591-ae2d4d9da3d2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bb696b0b-9a49-4854-9a85-a852d8afc320"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f49def8f-ec4e-49eb-8438-9a6d52cc1d70",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7a457a5f-209b-4640-a56d-e93e7b613a4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7593e909-4f5a-4091-8114-4156ed1d2873",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bdab445-4c14-4496-b906-c31c58c76c60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c79eea8b-0be2-488d-a7a0-50f289a113d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a01548ba-f2a3-48f7-b14f-fc29ca4a76e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74079ef2-528e-406d-a3a4-89382dfab5f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c435c3b9-53f3-4a09-bc0d-eb0b20090984",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44c7b873-7d06-4685-b939-bd2d721802b0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfc26e7b-2051-4282-a10a-4ffa235b5743",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "54af63fb-3bd4-4633-908f-dec61dc650a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c1e0f52-f841-4196-8f6c-74579725d6bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d0d2af3-2c53-432a-9bf2-fd33f5dbe350"
            }
          }
        ]
      },
      {
        "id": "cfc53550-1faa-4900-8d3e-5e88ef9091a8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f57715a1-716e-4c28-b707-3bf0d50eff7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "041d9278-1767-4ae3-a3b3-12e76759137a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "108128eb-86c1-499f-bfa3-ddd803fadb5a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9350b01-7686-46f3-a734-c87f28802649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b1aba37-5948-461d-903f-755d014df9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96017e62-f2d1-4eb1-96cc-fa5dcf72991d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ad0930-8bfb-4d69-8d61-7c25bcf6e65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92ffcb77-f862-4bd8-ad8c-5dc539ec1d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fbd933-fd18-40f8-a3cb-c47e5f9116d1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8e9acb-1582-46dd-a271-1af35a37d5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "402ce965-8c21-41f6-9f0e-202c8db3b9bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e81ebab1-6330-48c2-b8bb-956661fb3972",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00f84aad-beee-4ca0-9cc8-f1ff31c13052",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572b2719-5561-41e3-8015-da4240c01e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c284b55-f8a0-4ea7-bc41-1cff04169be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c361412-1d86-4a74-b35d-fbe5e7e2d7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b5f9e1-a9b6-4c93-be25-9fb5048c27a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8c8d4217-55a5-4541-a07a-0701d2ce29af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6cc72833-7759-4f3d-bf8d-43355b09e065",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "638eab99-a8d7-47e3-9d98-7ce081d8c0f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "03915462-0ce6-42b1-9513-9e60bc7a2d80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bbf1d12-c78d-48c7-8319-e36b0f6c4bef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f88eed4c-d47c-4c04-8b61-ca1b2097a507"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38d04d0e-9901-49ea-8732-1bf9c17c40b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ef2c02a-153b-41d6-b3b2-6aa400059f19"
            }
          }
        ]
      },
      {
        "id": "72043c19-a9b6-4f34-b666-33b0f46efa05",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e9ce565a-4c07-4327-b33e-034b1e6e3154",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee63b105-0d3e-4052-beee-de42d39d852d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7f2da3a7-0018-434b-8801-06ff03afbb18",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025cd609-ff21-4d50-ae84-4467b30c480b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24e34af-c26f-4d0d-bbb1-d54a872bb7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5fb715-4f8d-4e6c-be6e-5cb22fc73914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "129d2380-22f2-4d0f-94cc-54cb0640bafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcb29c9-4cc8-44f2-bdea-1ba924280eb9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06897df0-28dc-4f6b-86be-9666035fde18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64143be-640d-4b1c-a12d-f27f367a316b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28ad66d-d25d-47de-b51c-f466da7ff85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad1b62e8-89dc-4141-8603-9968a19a7a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009da517-9a72-491b-aa61-6c345776487a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ab6205-fa71-459d-90be-193afdbdf6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8ea2e9-3967-47d4-bf24-8fc2893eef12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c5febf-1a07-4933-ab96-63b01ef5372e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c01bc34-c40e-4ec3-b7b0-20d55afdf5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8f7e58-29cb-4d5a-b008-36abe7c23c6f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3658616-ca2d-408a-9702-e1a593435f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4dc062-24cd-4cc4-98b4-e8bf78107450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f668d71d-2e45-464d-a250-2fbee142e370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5484d20d-2ab5-4a0e-a175-495541a4cc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261ead59-f986-4bb7-aadd-6461a855e1e8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9b226f-5577-4b6a-abcc-a9186cc76442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938e9041-c09e-4990-8956-2900d175cf36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46cd4a8-ce36-483e-9e9a-e11f3089b92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1c52cbe-ccad-4893-82f8-948c914f958a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa31553f-81a9-490c-934f-4bf742df4dd3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c222a56b-31c2-4d70-9ba3-e9ba34fac492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d6e5a3-bc3b-406a-b0aa-d1deea5d49f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b578e29-fbc5-49c3-9d3a-806f7fd6b2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b0070fe-cd0d-4ea1-ac8e-bf67bdc65055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1768f411-4dbe-48f2-a2a7-9bfd95b90722",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb92c9e-c902-41e2-9804-66192fd11501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36caa6b-fb82-4a8d-b6c5-01ecf5bd405e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56009396-2d63-419f-a062-22eca7ec47d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba762d3f-082b-490e-a680-ee0b6cf2bc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5116743-f9e9-4416-a27f-fe00a92185b8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f955a86-2e9d-477c-bf09-287f47c84daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965c59b7-18be-42cb-be06-7cfd54f8e128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c1a0f2-0386-4e5c-8693-06fb49614769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea35e342-33f5-4b51-91dc-31da5fda17a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d346f2f-e672-468c-9729-5aac74def403",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1be69aa-3890-4296-a98c-bf36e8685967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dadba45-34ea-4819-ba69-56ea06be7eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56455cce-df86-496e-a3d0-90654aec2308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aab5f891-2a98-40a8-aca8-28fb4e5f0f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261e09db-68c1-4ec7-a163-8e58154211f2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc93118a-eb9b-4f5d-a934-72619d4a88a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645f163b-4e8d-4d70-8dc3-e62ae39e80c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1591ab3-5fdb-40b7-9995-06c97971597e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbd31f26-209f-4aed-a5ff-96139a748926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28092822-4665-45e5-ac64-34e5631767f7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10824b37-2540-4cea-bc7b-ad00edd0aaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7635f556-d8d7-48ef-a46b-a736ab4a84de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274bc660-c374-4195-a4da-c91d7c02b32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18f45590-0307-4710-839f-44f690f23a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950c560e-10ec-4b66-8de5-f883b03cc7e5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5db1d66-9f08-48f9-87b5-179b39910a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22630cfd-1ee6-48df-ac82-ca62c360eb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d65eeec-ebff-48bd-8a73-f1d3adb5169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77e995c1-053a-4856-a0df-74218e9f695b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3b03c6-789c-4280-9d9c-bd61ba696e02",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefd613a-1cd4-4f96-91e6-a5b185ff48e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e6b368-d52f-4a0e-b45f-da43cfc1fb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074020f8-a189-47c2-8991-612a5c9c0dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8cebea2-8975-4996-8c8b-243908f64d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66a51b2-3f98-404f-8067-37cef4d541d6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3834d5ed-03a1-4ac2-8cff-dd8cc3c1260a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b83c85f-3caf-4c76-95f0-a4e2a934deac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4903c860-e811-4b48-ac0c-4bab07e59176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82cb5e8a-ee98-44c7-a773-9231ad6fd934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a874aa-d6e3-497c-9724-d6f38a613cca",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc1ffd3-c61d-489f-8391-714d47adeb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2f81c8-88c0-415f-bb84-9059ae7707ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d762c6-7d5b-4820-983b-3b3c8725a798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "792a695c-cac0-4467-8082-a9edecf580a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82226a10-2a43-4213-b3e3-f0e9518eccfc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb93f9d-f3f6-4daa-a92c-a266eff3af2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048f917b-06eb-401e-9630-121270129534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faea861-f185-478b-a0e9-4a4761837234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b39c008a-1f00-4729-b153-90cf43e8be47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4998e4-42a3-49e5-b7b5-a1d7f11cd566",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98decd17-edf5-4e77-afc1-4d699a29fe59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21a3dc1-853a-4e73-9893-543a984867b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47044522-e470-4858-a702-72e536d42dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c36d583-4ac0-4e6c-9303-56073a4caf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d505da6e-80c8-4ac1-896f-db3502d43269",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0573350d-2269-46f9-9c44-e6a2642f6b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282f2cf3-19e0-4526-860d-2242316715a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15be27e9-dc94-4110-903f-10378f1adf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b287b5f4-7531-4d22-b472-2dfbbad6eebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efce714-b2c8-425b-ad00-7ea0c7b322e9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8359f29e-63a1-48f3-9f96-7eabd431c976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ddb977-a7bd-48a0-a95a-c7b27caeaea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d403b041-edf9-4cc5-a2bf-ea9b8ed06716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad1badd-f377-45e3-896a-886efb3ea16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89342d70-edbd-4ad8-b536-3f138e1ce1ec",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cda8cd6-b4b9-4b15-8133-ca3bb554511a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7231025e-23fe-4822-bb55-c40fda5308c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6946ada-6b46-47bf-a067-4c1c309743c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "041374a5-99ea-42ab-af29-0b150ba02fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edeb7d33-ac7f-44ac-9973-aebfa65c93a0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d108bd7-24ea-4de8-a023-cd6636415562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d017853-6b2e-4f36-ac54-5b2058ddea25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1500b488-cb61-4cda-8a2e-26e3ad3e9cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b95012e0-93b1-4a81-84bb-a6e65b38901c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bdba84-38cf-45a8-9e30-90c5a15323eb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2e11c8-a03d-4445-8dd1-b846c3365968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c90d06a-10ae-44ac-9661-032ff1fdd8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de95e641-35b2-4d5c-bae8-7185b2016331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "607ac417-cbf3-4161-b6c4-6a83c77f6269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354b091c-c4e8-405e-895c-3879059459e1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f6a27c-3ec2-45ab-b5e0-864fc33c2a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8764fdd8-317f-492a-9005-f2659eed7e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1e8004-5c9c-4c05-bf1f-fc15ea165ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05a2ddaf-3518-439a-85cf-66f45afb46be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bb59f5-4130-4c57-bf55-e0543b0ae02b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bbece8-ac60-4ff8-a1b8-a838bc8b1a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc098a3-1ec9-4624-a08f-c31f7061885b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3d7925-13a8-4be9-b73f-434e9e765733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3ab5f8-0138-4b1f-a05a-5fc6fca8d01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbef314-b142-4815-8f93-ce7603f143b2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb3220e-f700-4acd-a210-797e972640c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866dedb1-15ec-414f-b19c-30139ddfcbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef336993-094c-478a-9ca7-5a22f92227f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4412d05a-5b51-4fa6-9c34-0c620e62ab57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369b3a0e-ce9e-4174-97f1-325038d0977d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974e2906-c85c-4db1-a53b-626cf175cd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a595e3d0-f3e7-4669-8c6d-e8e4fe7b91f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37168b89-1e71-4049-b41b-7b72679852c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5be14c9c-77b1-40ed-8b1e-28571cbae29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5764453-7bda-41f5-9669-904c42958240",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a320270-34c6-44ab-86c3-217248790e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a6fd56-76b7-4459-b68c-58e13b2af1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715ded14-bbea-44d1-a9c3-597db0335d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18c2b83c-ebe2-4c44-acf3-2b5208f24a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8719d707-7d46-4a88-8ca6-291d9991008c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2fbfe6-738c-4b0d-a0cb-8f3f2963a762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a186c1-cab4-40d7-8368-36e275156317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7770544-ca2c-4ff2-9248-3ca51f1ab233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0dafd9-28e3-433c-9754-6503fa04b570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368686e5-3b14-4b62-8b26-5ed5231e25fe",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cff53cb-4786-489b-b1fe-9eebad7f30df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717ac420-681b-4ca4-826c-34dd616ce23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f18252b-1fce-491b-9ac1-37e1753fc41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2455378-e347-4092-89e0-65d7f26f507d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35f8f1c-5c88-459b-94fa-028601225bef",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e941579-0025-40c8-b8b7-003198f404ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518b9182-c198-4554-9ed8-ad445a5cab02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744efcc2-215f-4f79-b261-1915ac6cb112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "03a88995-5c53-462a-a3c6-e4b9b1b56289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c48cfab-0e50-4819-a666-b5d6f9af6cee",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0710fb27-a7e0-4eeb-9aa7-125c44bd7f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc97f491-0550-4b11-bde8-21e3a9205ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576f0dff-45c1-4416-8deb-e703c0fcc91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6cd420-ebd1-445b-b790-7f25142d7f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb08dd8-f695-4f8c-9154-9d2175535e53",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07da635-84f3-4b1d-8262-211a037054b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9826ea-f29c-4402-9848-b4d72598e8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2620ba6-fd35-4851-ab22-3ab8f2275297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6260b3f5-119d-491d-9f63-f0e25f0a946b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17494227-8c72-4401-aaa0-1f828e520050",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4566eb6d-9ca8-43bc-a00a-f3640ecd6952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a02183e-7710-4778-bc90-a5abf260ad1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12719aed-e61e-4ad0-8da5-e03e2bf03cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "022be118-77c5-4781-9c4a-e212a6ea5edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0dbd13-7a4f-438b-8533-e31a9a8acc14",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363cc0f3-ea2e-413f-954e-302b7064a9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84db09f-ec54-4be3-b76a-ee58d06ed9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59b6ceb-52bf-44a4-ac82-a09786b2dcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9a358e-800f-421c-9efd-b5c1160aa506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358cb305-b75d-436b-a32a-5305b2dc187c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c094053-651a-4eac-85c3-ca16576ac7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3e524a-5d9d-40e2-a602-eef5da2f898a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b47855-dfd8-4eb7-b675-e139d70601d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0074c599-8743-458f-a48a-05a1742e55a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867888b9-6358-4454-8424-a5711ba41f45",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a66588b-2b37-4da8-a713-60d5205f2b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b830016-eebf-4162-a110-03346b9d82ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5540a94f-75f6-4a98-a011-e22c9f663cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2fee5c-4cfb-4c86-bfa9-618f891bde77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9462f726-b4fd-4149-a1ff-c0aa00d936ce",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040a1542-ea5d-4446-873a-3561fc8b8237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8b8b61-fc4c-4941-9358-24d89417edf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3506253b-7218-4230-9d43-7252f973e2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3cdca18-1b87-469c-a3d2-c65b7db24260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfabc1bb-eb20-4da6-a9ca-a63ff8f150f0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe18b4c-b3c5-4d2c-a148-bc78de648f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8259adbe-646a-4e8a-956a-5c4a890644e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bf5965-25f3-472a-9bc8-a588ffbf404c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "36619453-bd75-42b8-ac84-02c81a09e3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447fc4b4-cfa8-4b9a-abd0-d42c4251d2f9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaca698-bf1f-47ac-b8a2-19cf03d53f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a130a809-dcbd-4311-8988-919a26eb001c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e922c7cf-7c4b-4f11-bcd1-5f152568a168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "352622ca-e015-47e4-9722-80b73a697663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3542cd1-1c28-45c3-a152-0f2d0fab8e40",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5830c5a0-1649-49e2-b512-fde67d25633f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9d1d49-80b2-4fbc-a16e-a08a7ac5501c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7eea3b6-be46-4982-8c54-266b9a5f764b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8a8851-3d26-49fc-8960-cddaf4bd3e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66d9372-8b52-46a9-8ca8-2d94acfea767",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9849aa-bd18-43eb-a1c9-ef870ce43757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1401524-8ef6-4d92-9147-84d3cf816e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c01e5cf-befd-4823-8186-91b41a13485c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "94cadf6c-6b36-4e85-9b6e-94ac73f67e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cc3218-0e67-441e-9ac9-ae22c29b9086",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44af3c73-e169-48dc-8a05-b9f21c72fa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ec2b91-18b7-47cd-9794-987e90168b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380e137f-d6a5-4f89-893d-a74de05baedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "25cbb42b-95c9-490c-b105-c7a34c9c50d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbecfa00-13df-4160-b2d5-ecc722ff4dab",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc291b8-9a5a-425c-8985-1a2794731cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6080bb39-0d79-43b6-a151-1e3a1fc90b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e62b934-b903-4294-8485-b22ef1440056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d14a19-7314-4263-a2c0-3c7f953efbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754082f9-6a16-4c86-be98-331ea4967fab",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a301a640-9e51-4782-bd1e-1b21aa386ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d1989f-ba9c-47a7-a384-0cf9eb368057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e22367f-11c6-4e87-9c52-6945ed176271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "360bcd5b-9997-4a48-a37d-83b83a688fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b776b7ef-b0cf-4be0-8979-89720f428e6e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007fe571-7414-4b65-bc87-b035e5ff9aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6bfe67-8a5c-4d1c-8fca-17fdc4d5b49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44f411b-9f18-4a4a-ae51-e6a31f94e720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28bdb041-1e9c-4910-8998-a63e9ffd0c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce51817d-74c4-4ad2-8f78-aca31ec6d354",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9e0cec-87f2-40c5-816d-fb580b09967a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad051b66-be98-4830-b24a-06ff84dbf8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c3daa7-c03e-49bf-904f-7c622a75b2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0630fc42-97a1-446a-aaab-096123caafca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2503c47a-2507-4c11-9312-c7345657e9d0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8854a3-e074-40bc-ab09-da68dbe62f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0e86c4-66e3-4b51-a070-2676e86dfe51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30159de6-622c-4502-bb84-592acc51fb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70f94797-b125-438b-b1b4-e43d80164496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f0bd85-4b48-4cba-85ab-e189bdfc3693",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a97dc0-be68-4c8f-8391-c2b3219dd6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12a30e3-5693-4452-b472-decb26af193e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ea690b-791f-40d9-bd60-e3a656e0bc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92836378-02c2-4017-bc93-a6f66c00b97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7649de-17cb-4343-9384-9d80cd8d7b19",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ad0764-7f7d-4e80-b9c1-7e4b32f866fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdbb5d7-28d5-4966-bff9-6b0cd6fd44ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96809479-1096-4382-a40e-ebb61ca459a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a16bd93b-a5b6-48d8-97e1-7d09bf52bcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f946a841-540f-4045-89d4-d45abb0b3648",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa48ae71-3664-4275-906f-c177a2fe7bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e5a7bb-5b85-43f1-8ce7-f435021dd21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4e7e33-e452-48f6-915e-f8a18fbef861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58613154-b443-4fd7-abf8-015480354826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782206e2-ab82-4567-b125-d9034b5c5cb4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2be4677-3a18-4c33-9625-b027e9e68197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c25610-f1b4-4032-9252-631e6f4d1f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43cbc28-000f-44b0-a432-81661af5adc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b003ebf-300c-42aa-b195-97c8172cb475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d6f9da-783f-49d0-b33b-61b42cd8f8a3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e3fafb-82bd-4cf1-9a11-7f349e53a884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4ba0c3-8bf7-4f26-8573-42ae011b0acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ac0009-4e4a-4d78-838b-5133acadacb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf27f52-d13c-454e-8eac-22ef29a3116a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3b1913-d0ec-4a3e-a93a-29cd660b6f8c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a71e18-2117-4730-98e2-148f14b6d40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a7e99d-5b74-48e2-ab32-62e69f0e35ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0957ce45-fe12-402e-8558-bbe7bae73eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "180b20e2-6034-4520-9235-64d348f89c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f5447f-990a-469c-bb89-495d34518449",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f83d781-2d0c-4214-8ae2-345ec9bf5c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b18b6e3-3061-4b52-9196-d43da9dd1ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9541fbf4-8924-4fef-8af9-90c64f7e9889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f443ae96-333d-486c-9f39-625975cf7090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1233ca5c-3697-436d-ae8f-39c612ab3fa3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d5d9b7-9f38-4678-854c-4fa07b8b2fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cf577d-4914-4635-929a-5245ed11596b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cf63be-33d5-446c-a22c-9a492edc8c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd27290-c9f3-464b-ae96-235e3235c54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0fd7aa-281b-4734-9686-b7ece4c3ad1b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde4225e-69df-4992-bf77-0c55c9307254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20886b77-45ba-43c4-94e7-6dd12214ae03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7cb27a-6938-42da-b795-568707767482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "42df35b0-9eaf-4ecb-8d73-5e313b4cf674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea446c7-9ec6-41ff-86b1-eeed9b01e5eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fc0764-0643-480f-b2ac-eecdd4147288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0865561a-522f-479b-9d04-610e9556567b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ab778a-0358-4be6-98bf-491fa6db0b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3392b8-2125-4fe4-b27f-bca13c05d792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebc30c4-ce41-4cae-8fd2-ddfe690ab6f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e737585-784f-4f62-8ea9-531b3a59c36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac34cbde-770d-40b7-bffb-ddd2f0552341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620afda7-3039-4e62-bec8-862d778fe9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eac97034-e330-4cff-a647-122e1827dbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814d4baf-d21f-4992-8a41-8a39c55eeafa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc9512f-8674-463b-823e-60ca91357c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b810016-30d8-4d83-9598-4e647eb4cae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0693d7-2661-40ef-b39b-84ae6ffe4deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b83e6a1-df2c-4096-93fa-beefc0d93a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f0a235-cb43-4700-a0f4-7b78ad0dc8fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a85e851-0503-4713-b3a3-727aa3f3155e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91982be4-171c-46ca-ade7-061efbb020c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35471ab-a66c-4f84-8555-7647275985ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "269db993-a846-4589-a3f5-f0b01c53d277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c7eb3c-b5d5-4eb9-8de1-8fa3ba16d8ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b127ef2d-f73f-4a41-9a69-86750dd72089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5b1db1-4e6b-43d9-b4ff-b350e6cbe240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131435a6-f58d-4d6e-8438-7146eccfcdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1501dab0-fd87-4ca2-b449-dd0803f12eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1df307-1c13-4f74-8d35-63858429968c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a11847-b3ba-442e-b3e9-e67193015da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15c10e6-c9e8-4afc-a55e-f01bfb8fb578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cbd770-2e33-4a4e-b4c5-7444d50ff80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "948f818b-ef3f-41b3-b109-ea50eef0df1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981994dd-0143-4df5-a95f-69e0adfe6b2a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd03020-e1ac-489d-8483-db471be6711d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6045e19-c162-4087-8f7b-32a60c25c668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1065295c-6229-44c1-b3fc-dd9df7922739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bced0fbc-4292-403b-9d59-72f13821c217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb817cc-6a3b-4849-b8be-8fd211842f29",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e832aea0-b50b-4c29-a461-1401fa03b70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3eb158c-f93d-45f1-98fa-2247c757d52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ae8611-ca00-4855-be2a-373be59eca9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "291458a5-c0cb-40f7-8a79-4293f501d727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c458a5ab-6d0d-4167-a448-50b892ec7552",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41edf7b-8170-4fa4-9e84-33d6544b4655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1860683-89ee-485e-8898-985e02062e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1da65ac-6509-45f0-ba40-1e9e47b7f3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eff2ce8d-bdab-4ae9-9e0b-8544ac6e2d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5dfdad-c75a-4845-a934-486324e1178a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff0fcf6-3431-456d-af11-6cc0ab98f609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7745956e-215e-4b4d-825a-0b722f1b9c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82f4e70-78c0-42b2-a34a-f5d07069d56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2611827d-c216-4fd8-8a1f-1a680f8f8843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e692449d-2e41-4568-8dc3-f4fd43688674",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06f813f-1c64-4448-86dc-083bd20c38ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc59c61-9893-4ec5-bdd3-a55d86611007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84317a2-f355-4e4e-bf78-2b82d8aad798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6ab0bf-55ca-4a8e-9e1d-f0a707ffded8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9b4208-64d9-4b2b-b80b-77fee4032559",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8a2073-d852-43b7-b429-2b64a0b11be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e251ff31-fde4-4200-8be1-9816ef9406e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0fcc17-7e3d-4dad-89d2-62782a75505e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "63d5df53-fc0c-4945-85de-657e559c50b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1a9a8f-2d5b-4203-b282-10f6056da90a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f05e0b-0c0c-4884-ad5a-2b9b17f9bcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9cbd0e-cd81-459a-b27d-5e8004f54d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd2a4e1-5852-441e-9d2e-34aa4b4ae88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "71b8757b-d06a-47a7-8b96-8891b3fa73b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f5758f-2d12-4cd4-8645-7fbd15493074",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d931b61e-a857-4ae2-89e1-df8830a1cce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9341dc-e1b8-495a-b867-cfc83e8ea59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906294f9-ca60-4c7d-8d08-167d4660fb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "608e5f18-ce4f-4ad6-88ae-e7a00507d998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba62c88-e8b5-4bd9-bade-cba471d5b436",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04700d42-2537-4e3c-92ee-54ba785d2b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2427d9-a4c6-4799-9c13-2d0f5f6a6bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4522e36c-265a-40fe-9759-15967d38965b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54f43509-a27b-445b-856d-92459c53317d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3c84e5-f8c6-4395-86f3-bc9ce170bc7c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decc105f-c540-44f4-83f9-dcbdcccd4dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d04fb1-74f3-4638-a70a-d6518c7d5cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c637fa0f-5e9b-4fc6-a55b-09f29e47e077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1632747a-d2fd-4c28-aee9-f3773073a2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b618a04c-beca-4534-b4ba-709900fd4d6b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bd35ec-a532-4951-a025-0e626543cf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0226bb09-5c32-4184-8929-1ce17df9c0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd2434d-d34d-458a-be0e-59a196099c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1317c6e-2ebd-4977-8129-d848c1d0bf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4ae881-892c-4fa0-afa0-d7d71a23fde5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24774d15-894a-404f-be19-54ebc185ab99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247341d2-ef04-423f-aa29-431cb0cb5415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10d1f26-8544-4f6a-8ab2-11030083a01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7265e238-3834-420d-a87d-79a583cdd9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec9b150-1cb8-4ac6-b057-895b17e6e0fa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931eb776-2561-4e17-8e8b-6a189ad0c73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c714e8-f5d6-402a-bde1-2ac27a0b0d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91c22c8-de4a-4564-8fe5-7d5aaf94cdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40f16f15-91ea-4afb-9272-cd9f1eb4208d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4a1eef-3a92-42c1-b21b-9d0d07dc6bd7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b89b8b-ab44-4898-a8f0-2ee720c66802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9ab7f0-ebbd-409c-881e-45bd41199355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2029cac1-2c34-4303-88b6-a0f32a9e7a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "483e7c8c-63f1-432e-9629-c02b1a0a5415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4404a06-d194-4c83-803c-15ead29911a3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5c1aea-48b3-41b9-b837-4e0766d92c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efe0aee-3b06-48b6-8780-bde02e9c876b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c7ea9e-1bc4-4570-9d9f-9756b6839a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3562a8f7-a17e-4f40-9ee7-1d422dc47ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2728c9f-af03-4cf5-96c0-f5f0eda90c8c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acff116-bd67-4b51-9f01-a5263dc75af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a6380a-688b-4690-811e-a8610ae376c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bad10a3-0b73-418d-8e3e-01c64e2eade8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a789f60b-b6c6-4c91-ab59-9bfb0737a8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e853e12b-58f9-4dcd-975b-9e3645be2ae9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dcb7f3-23e7-454e-8ff0-e76b7d115aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba12c65b-d285-41ee-a4d5-a759aa200b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f022cead-3809-4699-9b5f-23b3e428e63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02dc8449-5c9d-412d-8b38-fd81b2eac6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbe69be-92fe-46fe-88be-ea45fc703d0b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f2494f-d2f5-43b7-bc66-257054ded6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a857cb-8e57-4e9d-9e77-1a385a709bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38819fd7-544c-4f6b-9092-0e399be47fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb24ec6-dd5e-4b76-a23b-d73078d0f011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984403c7-714d-4ca5-9dce-98ba485667f7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf56834-8269-4f74-a4c6-33cbe73376eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597f31f6-48e5-4611-ae20-5bc1b5c18c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827daf1a-6e9a-44ea-8af7-3c9a177571bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d65826ea-01f4-49f4-bff7-4f599b0b4fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cb04b1-fcbd-47c8-bcd7-8ad53a7d409d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a321436d-7637-48ae-9b83-9c053c725ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed58fba4-0cb2-4555-94a8-02937f73d513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa25a3bf-97dc-4a46-90bc-95dadcce9a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20fe96bf-2e31-4014-a599-62fe25f30766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1657b9f0-55f5-44fd-a69a-91173aee9b04",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d013bdcc-c351-47d7-92d3-cdda1998f22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0593a55c-c1de-429f-a9c4-f03ac80dfc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ee15df-4c93-4519-a4af-5c319c818377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbff4d6-d537-4803-9473-0b4aa92d46c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50a5f35-e508-4fe0-94be-913ad6ae2d47",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26675094-f224-4557-8372-aef62fe0ab5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362b2964-8a54-4b9d-80f4-870a291899fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c531c6fc-0659-420f-8460-bdaee84793fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b948ffc-5e26-4218-a089-15b3a13b54cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f99873-40d3-4d8c-8d54-1c3623b23684",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93632027-ef47-477c-bda3-ba680f570b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e612de70-b93e-4aa3-bb2f-4a1428c59f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1449f9b2-179d-486f-ba05-86758ade9937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0475c5-55ef-4598-a615-c7f5d9908079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e80ef2-379c-40a7-8ff2-f6d583098ae8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3835004d-39fa-4e11-acc3-10833accbc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ece3c4-41f8-45d2-9a87-c31274b20b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128f47fa-1e21-4b91-a2d3-d782aa085b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09a4ec81-c401-4cea-8882-9c9d3fe5a0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f3f49f-1db3-40f1-bac3-be2827b75e6a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a89ce2-ec34-41e9-b5d7-1563e5b4cc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c0cf41-3de6-482e-9c22-37a6633cd1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67295d3a-6dfd-4499-a038-39bde80d63b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "462a4963-10ac-4cc1-bb0a-b4f209e4ed0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c52954c-9e2a-4c80-bfb4-7a0924d44c8f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b65f15-893e-47d4-a200-06ebf011a60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1245342f-e252-4a5c-9685-f0545fb02d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae976bc2-0930-4991-8336-56a20d061613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f24cf17-0153-4627-8366-b3fc916aeed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a50abb3-d3e8-45b0-8cd2-e9c9e4180a83",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c285cd09-8b58-4649-a84d-7f7de59abf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432b84ad-6693-40ce-a36e-49492783fdf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62176917-ed43-405c-85da-4e0acf7fd659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e61a622c-9cb0-4033-9352-d0ade5997f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3136df-c7a9-446e-91c3-2f0fc2e95822",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc373a53-af36-4d34-af01-15ee5d2d0b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69042034-76e8-4919-8334-0e6ae17c43c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66616a68-0374-462c-9cf4-fc8481d246b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "52462e05-302f-4064-a345-978421cfc56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe652df2-db09-48db-bcca-90f5ce446459",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18641dc7-3720-48ac-9574-ba20742adcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c416662-0e4b-40c4-9bec-78c049ed82a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ade9f7-69c9-464d-84ae-052e59cbacca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "49f4c61f-a6e2-46b5-828e-58257ed33e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e19413-fc8b-48bc-9f6a-5613dfc230f3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59ae608-b45e-4afa-b7eb-dfd62cca44cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "16220154-1c44-4797-86ed-d0b03fbb1061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374da096-b6f2-475b-8e10-2c3b14299898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eae884e9-5983-4952-b083-2225f5ed8aeb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "062603a4-e29c-4092-b961-88dd84fbf3a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba5461a6-59a6-4ffc-855b-6d4e9fb36820",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14737d3-8b75-413b-b383-9a13e25eb2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42dfe136-dabe-430d-98e5-ce224633b3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f0c482-f5e4-48c6-915e-5099a4acb057",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4691f35d-02a4-4711-bb4c-987bb28f5ea1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f79f1854-788a-4243-8a72-40838d7cc059",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e335f2b6-97a8-419a-942c-4d0ab573b870"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1afc125-61ee-4372-9d5a-247e69bae30c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad7e7ac4-96fb-476a-aa10-91a46f006fea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a19d881-4b23-4cc0-8257-2de657212eae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b204113-fe27-455a-a936-a6a8ecca834d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "62172149-0fab-49ed-b57a-28d2389e7ec6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8990163d-64af-470f-99fe-3182305fb362"
                }
              }
            ]
          },
          {
            "id": "82faf539-b55f-421c-84f7-906a32e9a817",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f12d0019-6f02-4663-9d6f-703028d76648",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "51404d03-3bb8-4889-b981-462f27777f46",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf56395d-bbbc-482f-a698-e5825cc87351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "66e947f2-058b-4bf3-b467-28683a883840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00e5e2c-eab1-48c9-a36c-74401cae451e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34ca69c-4ebd-4419-93d6-a37e67824997"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "811402cb-ae35-4f38-b30f-d5b39e8feb30",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db928ebb-7b24-4bf9-bfdd-6764e6ac596f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d386d47-7324-4ac8-9161-8928b9d758d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5b021bc-698a-47ff-a407-15e2fed32bca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f53dc3c-78d4-4ca6-9aef-4c69694d78dd"
                    }
                  }
                ]
              },
              {
                "id": "d85366a9-50f2-4863-8d7e-cbaa9393d891",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae523b6e-9ee0-4c02-bcc9-8efd358968df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ba0236b-5264-41df-876a-874d98fa7415"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2acb62b0-ff80-4c85-bd42-3127cfec9a4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7c8389eb-aa8a-4cb3-931d-830c79ce9681"
                    }
                  }
                ]
              },
              {
                "id": "3a8b18d2-552b-4982-b34e-1d9d3da07f32",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e1dfb27-6691-4bf7-85c6-76a92ddc54ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "edb6e22e-1f0f-44a7-b508-a73f16a0b44c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14b12369-af04-4009-add2-111a167e28a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10dc8eff-f462-413a-8321-5590d32e91dd"
                    }
                  }
                ]
              },
              {
                "id": "210b9c79-7bc6-49ea-bc4b-7aa07c77a269",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "986138a2-8285-4281-aa74-50d025a5a395",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acbf0c95-956f-493f-9fd9-dd7cf0a14521"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38516c26-7829-4285-b427-3c9287356645",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3169bba5-e8c0-479c-823a-b8eb5d7943f1"
                    }
                  }
                ]
              },
              {
                "id": "577d0f5e-1274-47d5-a0c5-5edcc896f535",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d33a8455-62a8-45ee-b9af-9e2e9df86443",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5222c2ef-7e42-4959-be1f-0d3f79e5f715"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62d830dd-6048-4a73-a185-8ddd47b252f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d5a3aa0e-f2e6-4365-a976-f752d8beaceb"
                    }
                  }
                ]
              },
              {
                "id": "4c329f4c-af51-4bc8-96c2-c8f602329f8f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d17f0064-205a-4d77-ad90-cf969ec0e70e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "324c713a-745d-4a2e-9551-009fecd27ee8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3c51376-b7c6-4817-b28c-d4678d0edc04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4af93f51-b9af-49e0-adf8-3e3bddbbc735"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58b8df48-607e-4cfa-aa49-e44bbdde87d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94dcb4e2-ca06-4d1a-a960-b71bea1aff0f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81b7c055-64b9-4dbc-9dbb-374aba30dba9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bfaf6b03-0576-466e-adee-d6bba1621f3a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "813a3280-482c-4607-a978-e78ce55d99fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ddf1cca4-97ff-408b-9545-f0b1f1638129"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bf26b12-0b53-4a01-8f28-4a19e110f364",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "681e847c-4df2-4dee-aa2e-ea21ca3d5d71"
            }
          }
        ]
      },
      {
        "id": "e9b92aef-5b46-4178-ae7e-3a164c3ff50f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "deda5d97-9cb6-4853-a0e4-445e703ef96a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f040d04-6efb-49e3-b691-5254302801a4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53d75c76-d8a4-46f7-ba7e-990c367506f0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8c31c1-924c-4caa-8feb-a74fd542a730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8e0aff-e131-4f0b-be46-e957bf72b0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd0fb2f-5a16-48c9-895c-4891e264a278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8f9982-9ce5-4a3a-9144-8d9c49835801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc744c8-28c0-4ef3-814f-dc721d2dc460",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b876f65e-d57c-4d9e-ae61-c66eec95a935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878f5a05-9562-4497-89c9-1b2450999afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d717be-4876-45c5-b237-fb38e148ffd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e011cef-7a83-4151-8d0d-6b63f1983309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dff7cb-dff8-4729-bbb1-598d5807fda7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96f7fcd-3931-4951-be49-6f16003d0a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c035ffc3-3a0a-4784-9ac0-8735770ce688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09eb5ed9-6348-49e9-9958-0ada335d7f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efcb215c-4ae9-403f-9d70-f796360f0b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e567351-720d-4b1c-87e1-d9b9129a7ab5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6248c3-62f5-4a90-9150-411b6567851b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87484b1-2a1c-478c-ab0f-6db66bfe16ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b709f5aa-22e8-408e-857e-6d964e3df705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "641dd6f3-7ed5-4134-8936-e167a93ea100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7168a415-2264-447f-9be1-45715895ac0e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09da323f-1285-42e4-94ef-0aef6cb286e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f88e10-d054-425f-84a2-d165d2af48c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4f69f6-a8a6-4f83-a68c-20d9a4236493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec29bbf-afee-491d-96c0-57d1c3ded8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2281fc54-048d-4bdc-bbb1-0513198dfca2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e8c8f7-f279-4100-be31-de6f577d9ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7a8769-da5b-4b68-ab13-c6c704bf2bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f25854-8606-423c-a6ae-5ff25d670282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83bfa73a-b89c-491a-939e-67e428297420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aba20b2-e49f-4239-bb72-ba7d0a630212",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a59473-a035-4381-a691-f6a3d3590c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a9aba5-ce1b-4e88-a7b3-a9fa78dc141f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4997e34-1750-4343-b2a7-8516bc822184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f907d4-0f69-4c03-a76e-dac0be8b0a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc3fae5-df7d-4d9c-b877-e82627b12c7c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8839e255-68b3-4aa1-85fb-e4753e9481f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d330c0-ba72-434d-913c-3af4978b7341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8e4633-b0ea-4ba6-a97b-e73e9a09872d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0c921b-7047-40db-8419-478fbf3af136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1505fad-edbf-4302-96c5-f24fae89daeb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291ac478-a5b5-4cd4-ab56-61480187fe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af942f38-c0e4-48de-a662-447106cd02ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280c6102-faec-4529-bb2e-1299354c1ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e428454-ba1e-4504-90f7-211e6ec0110c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0641c5fe-6fcc-48a5-8ff9-097f3061e032",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261a697f-9320-4c67-8dad-182b0e687c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d695035-f9bb-4400-a262-a5110017954c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9bd22f-27bb-4888-9a16-d311e9a4fe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "458715ab-de64-4e92-b3bd-56da588fb6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ed855a-cf3f-4b0f-b6c6-76c9047e7cfe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2f5c60-296a-4385-981c-9e4a8c050b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff202c7-6804-4094-bb2a-688b65f82f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c788a0d-3ba9-4a25-9c1f-aaa51b68585d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "70e5a387-368d-4ac1-bdf2-a965a4d001ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1f479f-a188-4f7d-bc64-c857025d67fb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be894b2-77c9-4c74-b19b-83f526969b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef300abb-f984-4058-8326-80ef2488082a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f0e106-af37-4847-a1d7-b18e412acfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8770b05c-6fab-4c3e-aaee-685d1e1c1e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa381c7-63f4-4fed-8e71-b8a0065b793f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d569f9-96c1-4b17-8bbb-5461f0196fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327fc389-9593-4b0a-9016-a558df9d7f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba842c2f-e88f-417f-a398-2e5677483812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae8f47c-1fac-4ece-aed7-0bd32c333f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b9cef4-1b80-445c-b979-823b2c0e0571",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705a3ef2-ddf7-4b19-a2b4-d37537aafe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef9e1a1-9e00-444f-8dbf-b2226962e561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0baf3b-1f1e-4aa5-80ce-eb9c777028b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "91e7e8c4-cccc-4dcd-af6f-84b222edeb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069b348e-73af-4ad8-8d45-e5a04aad9c9e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e701434-972e-4952-b6dd-46628e9ad81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9a3b6b-f2f4-4613-9ae3-f0d0cd718225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e3d419-8271-4381-8a59-1da0537a17a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d79c700a-1c6c-4f87-b0bb-59ef6035b04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ff8a42-6117-4be7-97f8-5cef013525d7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5361cfe-57a7-45e4-b53f-2e9e046ff7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb08c50-f916-4dc5-850f-20bf6640894c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc56933-79ed-46bb-ba4e-13be35e68bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e391f1-2e2b-4153-aa19-0cc4c2fdfef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791b704e-a05c-46a9-ab39-0caf5c982637",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ecc517-c65a-4075-bcea-b1e51b155380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417108f8-ac13-41d7-94b5-c5e386469ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851bcf41-3769-482e-bc2c-0cc2c6f4d230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "07ccaf3c-e386-4e2d-9fa7-db90de17ccc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a09e71-fb5d-471b-80d2-edb53b175da6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7e1b27-4633-49fd-ad98-4b41f1e354ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcc6543-0037-43c2-bba1-f8ced1986798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af15f00-5787-45f8-a93b-a3664dbb7af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee27d91-00de-4100-8065-0e9315bf3c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32195f3-f3e5-4363-a523-a452064b35fc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e494ffb1-c11c-4191-bcc2-318380a1ac8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2283a5f0-4fce-4692-b72e-d144e6a9173a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6855c4-870d-4038-8074-d8198a76388f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c65a7996-2e3a-4d17-b70c-dc433b000abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05429e2-e84b-4c52-87ec-f44247b0aa2e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535f7a72-ee90-4771-ae8e-f7030cef97c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956b142f-71ad-4044-bbeb-d6988bcccb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73459579-e1ca-4e17-8100-14b615bcb941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e6821d-07e1-41b6-9759-0006f9ed2682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb7e8df-82ec-462a-a181-7e4fc2795185",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0093837-07ef-4fbe-be7e-fb707854b92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae66b2e-1902-427c-9c08-b86a9221924a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e452db1-534d-4dda-ae53-4fb484695b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b48ef025-bc1d-48f9-a72e-5c2d49c15bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7170adee-cd5f-4a1d-b738-8db8cb4c1781",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ace126-a27b-4fd7-8c46-e26357e0eee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748b9dee-d576-4d84-93d1-0c0aa6acc25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db13a8fc-b07e-4f63-8b06-c25550cd21f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3f573e-f6ac-49a6-94fa-38b70620c6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5d0111-bad0-4d71-b644-7974ca2840f9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a95de99-2b9b-49e1-8a55-3b38e338832d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b04fbec-0d42-4c9e-980d-63a7d1ce0472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a54b8ae-746e-483e-a926-d398885f6720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70316f51-86b7-4a4a-bb41-6feefdf0b6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b813c87-28a5-4f86-a2c7-cbde747663bd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49007f0-0de6-40db-a60b-8cbafe169883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1053895-7705-492e-9614-9165717c3d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a176f62-971f-4e01-bdde-e39154166074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f56d4c-8149-4a00-b797-ae19c5225351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f26e8b3-0c75-4e75-a693-81c1ad15ce3c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646641e4-f973-45a8-abb2-c4c8cf5ef73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ad191c-655a-4252-812f-a81417d0dfc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a11f60-37f4-4158-af10-48ac41f6da91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08306aca-446c-46f7-836d-159c91263921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84627b6-d673-41e2-a08d-dd953aab41bc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cf0f50-ef5b-4901-81ca-ad390f2e71ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab04495-ac7f-4f15-9802-0ec7e5d03ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243ec61e-3198-4fdb-83c5-75ca950afe4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ab6a8b-07fb-46d6-b26a-beebb9642993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705335a4-44c2-457e-a72a-ca9484792776",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4f2e2d-3c37-445f-afdf-7143af008e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147f5b03-1bf4-4021-8a99-0aa04a2bd0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15f7e05-6de0-438c-8b87-d31ba12ebb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e510c26-78d4-4f21-9b63-ab24b36c1d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01de10d7-0876-4b05-9353-7b376d683804",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b6bada-7dda-4162-9e5b-81607a2c9f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6d6f09-f630-48d2-851d-9d46ec7204d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05df374-1e94-486e-819b-1b8c5cbffdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4bf4989-7ec0-4c7b-8f32-be6b1e936d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda78f8b-c1ab-4d16-8e54-253f1c871aad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e878083-44a3-4d7a-8118-09eb697178d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52537196-9efe-43f0-9120-bcb8c8756a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d91a3d-9095-4437-8a3f-43abf3d9c4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e18c8f-8b95-4080-8f76-22af23d22a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11e538e-a27d-4d55-a7a3-05d8e80284ff",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5045ebd5-ae75-492c-a37d-057375fb1057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f341124-df37-4146-a079-8c75424eb4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c9ecd6-d527-44b9-a591-aff9778a9014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38e23f2d-8111-4269-b0e2-dcadcc54a640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1c7b8d-690d-4575-befe-5c742bc81782",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af600aa-7331-42f9-9ecf-bb1598db56d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb75231a-03c9-44ee-ad22-7f288a1036f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d613c576-32cd-4679-965a-4c806c44dc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e67c67d-6a0b-495b-876a-db9b4beff774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb62514-75fb-4d40-800c-2794223c2fdf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71f3538-65fc-4a31-a964-29c3fe8a0469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7591e5d1-18be-487d-914c-64c82d15efbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005df77f-2005-4a63-8cb2-a3a8c6d4c2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6d43a0-cb90-4096-b2a4-ad4295cb09c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3773d8b6-3290-491e-9e5c-d96a530acc1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f1df66e-3592-4fa9-9882-4424c4dec38a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75c3f7c-4ef4-4c31-a82d-8686e84a632f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "129af87e-b004-4d0b-8a15-6bf7c80e6e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e79230f-b7b3-4ebe-9cd6-30cb41d90418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "098644b5-767b-4971-985a-a0b8be81374e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e254c4be-f4fb-4eff-88f6-9e1ab9475832",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "663f35a5-5142-4712-afcc-d94b421dcc85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dce398a-4dc2-448e-a438-dd57dbb72f3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ec0014f-8913-401e-bb1a-3acc7d009120"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e8d5df5-63d4-4dc9-ae02-3ad196b89eba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d26985d0-15d1-494f-a53c-c738e2cada67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7eb6cf9a-2d05-4278-98c0-8613ac0f5d87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "613764b3-f58a-437d-a596-a3445742dfab"
            }
          }
        ]
      },
      {
        "id": "df18a7d6-30a5-4ba9-85ad-8eb7faf94258",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c4c6b423-2a27-44ef-a4ea-4c46accfb729",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb16c99c-fc3a-4866-b278-9ba8350cdb34",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "def41dec-8390-4551-ab5c-aa47ddaadc76",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c0a46a-88bf-4e94-82fa-a967bc7d2e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a6a25f-7285-4e50-9c0f-ac9422d755a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a000e93-59e9-4367-a2de-488ae3fbed83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1096b408-65a0-470b-947f-4a97f8e262cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456e5b91-ae3e-46da-b574-2b2a05bb7929",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96bb0d7-1f74-43d5-82bf-f748376f4a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19771c29-10ea-4965-a046-27e9aabf6db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251fd0e3-27f4-492c-a8e0-2a92f884db1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81f292c-c936-4365-924f-f2644c90eb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb36e83-8b83-49ff-8f8d-a82b3a7011cd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bb17fb-f8ab-4f59-b79e-20e24aa70694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8cd9ab-36ca-4046-9d7d-83740433ba35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fdfada-5953-4bfd-b52b-053e1470563e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81fe165a-5d79-4a12-bd3b-2caaad4db0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85860b78-97d6-4b7c-a786-b2b811019124",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19632f1-2a21-4839-af37-2dfa25222d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfac4e4-b264-4f7b-951d-ac2f30110235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6f1743-e2d4-4a19-8ace-4b9ea8bce0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d26f3743-45b2-456b-be7d-a5f5abef8897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6eea904-6b10-43b3-9568-f937f7a331e3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f9cd7f-77c7-436c-bb34-1804e52d6575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cc7ffb-f7cd-44ca-8e00-da134f5752bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74f8c63-74a5-4632-88b2-be73a4d80d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da45cc5-f44c-4018-8c66-c23080cac1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050c8961-5496-485c-9a98-1428cdf0427b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00db3c23-0a3e-41c7-8e9e-b5da0dfa3c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa680190-c9d3-44e6-82d1-42d227d7797b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d9d881-c5d9-4b62-b4ca-712881ca2828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcafb66e-5069-4be0-a3bd-5408a1410f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca4cbeb-a541-456e-9791-7c2f36b38aaf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ebad59-3c26-492b-ae6f-62b3e7a6238b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee358ec9-d77e-4f28-bb3c-1d7dec1141f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae50326-8be0-464d-ba4b-99c6fd66b449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f402bf5-e9e9-4737-a244-d6c8efb1230f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40309380-ef01-47d1-9446-c9ba7f9732c6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ffd0b2-a888-4ffe-84e9-dd02c2c50e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672ed1a6-3efa-49fd-8ffb-92cb3826b78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4c12d4-c92a-4633-ba73-eb65d992b1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb1810a-44fc-44bb-9386-afb44399b551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47387df2-5e36-4fa8-85a3-709f7f19f434",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256c54f1-cc11-4876-90cf-37031b34e585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd582c0-7943-4deb-9a07-34872f2160da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3160650a-64f5-4889-bb75-d07abf416598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "029397ce-4e1f-45dd-9fad-97dfefc8ea33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0b2911-6eee-4c2d-be56-47bd5e47fcda",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcefa90-d20e-4cf0-bdb1-121ab0970ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7dc9ef-bf4d-4168-bde1-4e91aa7e918c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfe2ab5-8874-4666-a470-6c3915ecaef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2ea21f-3170-446a-bcf9-1e9448ec536a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e1a56c-a0a5-4b4e-a8e9-050a559dec43",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c178a81-6dc5-4c5c-97ad-64c8b4063590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e2f8bc-0bdb-46d2-9fa1-684af15b0641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9dcbd6-744a-4085-9b50-b06f3fc7eb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "350031ab-9de6-4c8a-b594-30ab5b52258c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df74009-fa65-4a89-8069-2664bc054678",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb0a880-6f66-44d2-a0e6-b5f73e2d2808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f65fcf-b88c-4e87-9898-9e9856d2400f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8052e1-35ae-4415-8fda-29e4b06f0244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c850a349-2b76-4726-aaf3-411e1dbd6d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d31481-9915-4ae3-b82f-22defdfe5b91",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2376d32-15e8-4312-aab8-31e16a7d3686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d17c170-3311-40f0-ac72-a65951fc42bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3557067d-9eeb-4bd2-bb2b-3ef657e97fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb56a11d-4e70-483f-8c24-7d0edaffd5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f29132-d7ec-4826-8bbd-f3b98602abf7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f679679f-5ab7-4779-96e1-b28de4254c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b69949-f0ba-4a80-b8b8-964612c7b213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029e2f99-a7aa-4b49-aa31-016d1e642468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0593e77e-3f7e-4afd-8866-44887c4a18d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4639b5-f1ea-4667-9f42-22d612e6d784",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ccc71d-3bfc-450f-a583-166b25ca4eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2939e6-c6e6-4145-adf8-95122b0d8bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e3db50-35ce-4b16-bbeb-2c4d6b24a712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "41bb4054-cb25-40a4-92f1-1ca1aeb122a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd551a5-9b47-42e6-8ade-728fa1a3565a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9215d7bf-9481-4aaf-a814-d98e471cc615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02014986-14e6-4264-8fef-018ba7534d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712bba2a-96ed-43f9-b359-83967172cdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3132805c-0f35-40a4-82fa-3f4fab12e94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdde957d-402d-4084-8543-9ffa4f535183",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46d5955-7f58-4090-91e0-17774c35ed5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc15c9f8-dfaa-434e-b3e6-22f3b36da718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc4c91e-2a74-4ecb-9e4b-0d01b68e78e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "56196512-3a63-46b3-ae59-01bd7bfa6d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbfaff2-788d-4f2d-a185-dd0c9810535a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f633b9-3062-4c78-80eb-0ebfd706a622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43cc42ec-f0df-40a1-afa6-4866df8d1f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ccc4fa-88f8-493f-b574-7bce6f7da426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5118a24f-f9a8-4322-b1da-0fda65563e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a83841-8f3e-4092-9d9f-1fe754afed7f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6503093-a498-4248-82ab-b741ad7b1f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562c615c-a9da-42f7-814d-768a42a92da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17c21e2-d2f4-4eef-86ca-421f6ba9380d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78a173fe-7121-4970-bbc3-d5c872a6cc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2ea858-e2fa-4319-82ca-da2bea087207",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74267d68-07d9-4cd4-8234-73695ea436bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4b1334-100c-4918-81f1-04853574508e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111caeab-8f67-4dd8-933e-c731a3bb9f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1b10ac-de02-445d-ae81-d7dd984937e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e8b151-6edf-477e-b3eb-ed211b71a043",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1720454e-9b17-4c9d-bd29-33cc7ac43502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce9ef85-dfeb-4ebe-8b12-d308a674cf01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c63a73-5557-4459-abbb-e0d5bff5ccf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90999d5b-e0bd-4652-9631-b10f2d49a337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a698c6d2-400e-4153-8ac2-b87e53488575",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94da5251-d84f-4c40-9570-ae251c0d00ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7156466b-d9ae-4d32-838f-171ae791d31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b88fe9-d4ce-4f96-916c-e868b33352f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffef0a2-ab63-495f-927d-b68720e3a23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94da749-dd91-4a12-b8c8-c58c6a61b5f9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4ceca1-366d-4a41-8d17-5e7f0b7d08f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbce27ef-54c5-4a6b-b0d3-22b3f5ff667c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5517467d-1c69-4925-9960-98dcc3068829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e550d87c-98cc-4012-bff9-d31cbf442559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724ec0ae-ceac-4741-9da4-0070158bc2d5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef741d92-dcdc-4394-9b59-c80e5743a96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c923c7-0856-42ee-a789-9606cf24ead4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b75d2c-0bf1-4550-bc33-888219d30c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1956e2-a49e-4c17-8032-308857df4cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79981a7-ea30-41e0-b550-4a6d1403051e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfeeb7e-5e01-4f74-a5ac-4b3b9d236d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f50e1c-81df-42aa-9063-be944aa2d178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51c3ccc-a05d-45d8-a852-401498aa679e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "448ed6f1-2345-4c5f-a37e-5400106a84b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cbee07-520d-4fa6-aaad-dc724f59b596",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecb7268-eec2-4dc6-8aab-cb1cd4681b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0179ad-1469-4a18-a535-f3d7a5d23e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d347b25-359b-4c0b-a6be-3ae57a077dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26fdb6b5-00aa-45a9-b089-e524284042d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8f25df-ffe8-4945-9283-4b98f90cc029",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dfe604-ef4d-4e91-9dbb-ffdc6f46d3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b7043a-b74a-45cf-90e5-55d77ced4dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d23afc6-5441-436b-8f8c-4579ad941941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d280edf2-69f4-4407-8fd0-8a49c04ee48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd35fc92-c1b5-4329-957c-510c71007c92",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69b939f-e9a4-46d3-b02b-e5403f54256a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86720771-8619-4d73-8cc7-2ce0852c0690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bb3f11-209d-4f8d-8c3b-04cedd543bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2dcd5c-554f-4cc8-967c-d6932c919363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5910baae-dffd-41f7-97e5-52299befaf56",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b22743-c594-4a6b-a22c-c7d0c34293ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecea08e-7ecf-4ada-b172-6c84f06a19eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4569d45-e4c6-4de8-9422-cdeb807c84cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce10e64-786f-4f62-ba51-7f60649aaf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420d8338-4872-4dd6-b5be-6fd5aa7df0cd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aa528a-3c4b-4977-8eae-9fc6b6f61fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199c74f7-3b23-4242-8150-5b146c823d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20916ea-cca4-4e07-812d-170ac459c2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "515d2f7e-1691-480f-96fc-bed3f4ab37e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6d9377-380f-4105-b814-72931886d663",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbdebc9-fbd6-4113-929b-6532f156ce32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3505496c-0926-4017-a56d-e1c44d14bcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2a1cc1-7f4d-4bcd-825d-0c4fc0b15811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb4a8ba-c1d3-49c9-a673-38d502c1b5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a4ef7d-21f4-46e5-93b5-e3479c53e473",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6bb9d3-fc8b-4602-b06a-44738d9de355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd592861-b9e7-46fe-9b7d-443701660d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3948b4e1-f4d1-4779-b9e0-940880f83fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e847a1-5b85-4539-bb59-23f10f2c38e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27940823-6cb9-4ac8-80f4-a5b9d732fec9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b307a9-bd57-4d4f-8bb0-f7fd4ee146a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1613a0e1-373a-4c7d-8640-581145b1fc50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d943ca-2746-4bc5-a913-161474be8c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f682b05a-f6d1-4d77-8e38-a32e0c1067fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65317cdf-8228-4377-8a57-86a2c8a2222a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02774fc3-f464-4080-9407-8095f30bff1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487b702e-50c6-4739-935f-189900d1f23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc4999d-3f0b-4f45-843e-6b2275955020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83420f70-97cd-4d56-984f-aeea4b265428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e99c46-4939-4093-a697-79d9821a7445",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217b1daf-aa52-4c22-9ec0-79775aaad5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9166dbaf-f49b-4f1f-880e-a872903d5c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6b63aa-13b2-44ed-9a3f-4381ecdd10af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d006014f-682a-4680-8326-3e90ac7e28af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a549cee-a83e-4f97-8c64-199086160f24",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50592fc-4a9e-424e-a6bf-0e963bd3c266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9144ff-a12d-41ac-9a6a-4cf7bc0a0dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbfc464-0f27-464c-87b5-3a0f0d72e01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a11597-cb1c-4a33-8a27-63dae1a059f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5f26ae-5ddb-4b7a-9cb3-973f3b9fe2cd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ba5ace-cbf4-4cf0-82d0-8d4365981a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16e053e-dd06-41d4-83c4-0c540c3fd57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01af9e7-56e3-4ead-94d5-b86751eb2701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99fc7aeb-f093-440e-ac66-1086b6c173a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb1fd2c1-368d-48a8-92bd-7bea0fd40dd8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b11f985-1a72-49d8-87bf-e3ecb44bba95",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7884f2-af59-4344-aad5-46aa47094b89",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bec4bd57-5fb4-4b13-8ccf-f25ad62ad82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2605304d-1589-4a6d-bed3-0d43a3f230cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a051924-ee04-4fa4-b393-ea72f2263b9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b5a193d-adb5-481f-acf2-843dfd0e4061",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c03e907f-147b-45d5-b0de-82da65087ea2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd3494a8-968d-4131-b713-715491825cef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4ba3c8d-f9b6-4c38-88da-9fb00468c861"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c00f5a6f-1fae-43cb-9392-105bbafd5158",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3bfc0809-1d62-4045-893a-c070d4dbaa3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "633549e6-7f5d-4455-b590-3d2e8652bcf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50c38a6e-ba08-41ef-9789-dca419b9aad0"
            }
          }
        ]
      },
      {
        "id": "fbdc6407-aa51-49e5-9656-0deeee90b28c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "95afb01c-dde6-40c1-ad1a-d1813abab730",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0eae63e-bae6-4317-987f-2dc7d0769d0a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6dacf624-39e7-4352-b829-e5c77ca858f9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c5d4b9-b424-408e-b4e1-02002d8e3036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe52f0f8-cb77-4808-80fa-f0556db083cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c901a8-ddad-40e6-98de-c5dda6b3bb7a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6c0fb1-c5ad-4a3f-8e48-6de6f44c1455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a787fd-5f66-4418-9101-cfdccad229d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04c77ed-5ad1-4b79-a220-e9173776972a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99bfad3-0964-4f7a-b752-2f058216c05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1110364a-8213-4c37-97ce-2be96d2620a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31a9cbd-1e21-4d8d-a67f-f2aa11671b89",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa397659-9a2e-4e3a-9a5f-df611da3eee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252f5654-f28e-47f7-ab95-f6e0fe78614a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c6366e-9345-4dec-98d6-1cd987674c2b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c17e4c5-c974-47c7-884e-dbf337511abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805fa88a-a887-4d8d-9431-1518e1d18bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd85d60b-e5d5-4d6f-86ed-3b5d1a8e0345",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6e4a18-e19f-4e0e-9183-56776d22e62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2cc9bd9-d7c1-4333-9504-6d6d04d8f348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f758ca-cdd2-473c-9392-d28698e6b234",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0aca00-b6f9-4184-8c5f-d8d7089a8f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fe44a6-f673-4557-a129-d087d1b4326b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18955e5-1ad9-4a1e-8dd8-031dca58635b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c793f20-3f21-4974-9174-c4366902ef76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1e96c8-aff0-41a1-84ac-ddb00b740dda",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526659c1-79db-4405-8dd4-00ba53e978ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4645b29d-44a7-4752-8f94-bd51c6d6eec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89cd544-3fd8-43cc-832e-9e47e399e70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7785ebd4-136c-45d3-8c35-5d91d9608176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99473c4-fd8b-4478-8fad-d63be4e82b2e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f47c29-0e57-4d20-b52b-0eca8c220943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5ccc2fb-832f-4860-b48c-65f436b0a213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d901ecb1-ab28-4db9-af32-f79e2dfad021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e078bf-9981-45b6-bd38-c1b16aa59c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0a147a-08fd-46fb-affb-9b3fa15861dd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1bc2b6-40be-4c80-b2f8-807a9a88ccb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f87ad5-7b9b-4c72-8726-a94a053d85ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6181a544-f4e1-4be5-b5ae-0bdb738e242c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9c5fc6-f954-46b1-a00f-94c8de176001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b00172f-384d-4eb6-a9e0-134daf2c6fce",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6305495b-13a2-4630-917b-1d9bbf953321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6df39e-81de-4a7f-92d2-25f049b8762a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ca1254-708a-4920-b64e-c5c0ed53ef9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d586f9-b945-4f74-893a-de6c6cd41a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbfa0cf-17c1-40f0-8fad-331373f7317e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6088bc97-5acb-4f1a-824a-eca17b6eabf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225f53a5-6ce0-4c06-af3c-67bd9e125c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8685e9b9-a9ef-49d7-ac8a-5da776a57571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1129947-f213-4230-b20e-91e802c22b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153eba50-41c9-48ab-bf9a-33655a8ed530",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6a4019-e011-4856-883d-cca2f26a4d97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "256be937-c8cb-4d87-92ce-1a95c661e39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00abaad-f2f6-4b66-9549-b49c0ddbfb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff7a473-7111-475a-b565-9191ed0e0697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984aaaee-e964-42d3-b4ef-cb670cc3cafb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9af1cd-39b9-49c9-9ffa-01480921ab9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fed6608-45b3-470a-92a7-de5e3963e25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd94a93-89f1-4777-a294-0e1ed6de1b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1a7292-2cab-4dc6-8d82-836c2dad974e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4ac7d0-b4b2-4dfb-bf75-32a200d3c745",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a25e77-4299-40d3-8833-7e60834e792c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "021d7bd9-a3de-4b04-b1d7-a4011a364e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07bbf25-a73a-47f6-add0-59a2cac25e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad62933c-120a-4cd1-8545-e558a01ef67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ef0add-7721-4653-8324-0b22fee841a0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171a7e9f-4837-4ba9-b9f1-bac91e4e382c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7979a7c2-b6e6-4f1f-855f-9fad69302a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1fca60-832c-446f-afde-e9d19a5f0fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54f3cce-2d1b-4c5e-a6a0-e3069d0cdb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644e7000-ff05-44d6-b871-31ba70d5f3f1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b008ec6-f4ee-413b-b516-8d3ab8876095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3911d262-7972-4239-b116-7350e1016336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c14e941-5a2b-40a7-9377-10cc9bef0ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe4d1aa-2f95-4738-aec5-048018639960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c173361-3653-4772-b775-c9f5e52f57bf",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dec61a-4564-47fc-8220-45f5d31a2fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063c758b-03bb-4504-bb31-853f9baf9d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df34848-558c-46ac-9d15-168253e1d50a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cc7a55-f08f-4e08-b5ae-9dd9cb09f5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c68481-28ab-45b8-abe0-e53ecf2b90df",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d76e0f-226a-4ec7-9f76-66c5d2fa19eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f232b40-280d-477e-a3e2-13eeddc2b140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8678d78-372e-41ca-ab60-f8d104adaa5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0627e065-3e88-41ef-a430-a4c20ced68d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c45f296-e4ee-432c-bc95-35961a138522",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4005b2b-06e4-4071-82c9-a43f48f2cb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d443e452-446f-40ba-acd3-a539a28fae89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b956a3-3016-49d2-8e92-8c8acb23f3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204c62a2-a874-4109-8dd7-fd57b22cac3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a214a9-8c59-496a-805a-cc7c4e19cc94",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998937a7-348b-44ee-9425-f6da7b7b40e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec16ce2-d71c-4a3a-86ff-5b2acce61c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4333447-9b85-446b-a249-2ca1705455d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b19c19-5f91-41dd-96c5-5c0474b07bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2b7413-f7d6-42db-8689-6cc86711ec70",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6271e4-ec5d-4252-a534-0e1ba09c0c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418cf0fa-01b1-4071-94a3-b33d50562a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da3c381-6230-48b1-bc3b-86a92de1f282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e013cbae-b22a-4153-9c59-0cf0aad6c0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9e4d97-d281-471e-be6c-d2bfa22a2b43",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29002dc-12ad-4c1c-affd-d2561aee9167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96463ef0-830d-4456-8871-646d4cf6c519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2b6194-1b80-48cb-899f-7c2b4f644fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0bc359-5e30-4496-b700-d29cc7330b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db20935-b90f-4870-a0d8-8984dcb39445",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c57f0b-c45d-4a6e-84ad-87480324bc8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebcc0884-1785-4419-9b1b-097391994e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b8b8aa-24e6-48ae-80d9-69f7fc47374c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46d9b94-699a-48ad-a79d-842791e741e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7127ce-37c7-451d-80b7-f3119811797f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1a66d2-12ff-43e7-9b29-e49b939f2506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2233834-8abd-488c-8ef5-df5dbdf8d4e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb687f7f-afe9-4dae-95b1-b5c8555bcfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2291797-8c8d-4308-9ec5-547146e74f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6cce16-f588-414a-a2ca-9d29c3aaffc9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab56ce9-8635-4cd5-a779-682b0a54cd79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77ec79bf-cc01-40f0-874e-2265b8503d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f835cf-ae41-45ef-bf62-6d0a0a03b529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e9ba48-e53a-47d6-8504-1f4135239430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8172f4-f4e1-497a-874e-b8941367fb4e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c36b55-fe45-41e7-8d62-ccddc93825bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aac9f65d-b615-421f-b7c9-0897288ff68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf80dd3b-5767-4476-9e6e-6cfc6faf51cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e3c929-53b5-4ba6-9781-e09d6d612ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0191f5b8-5ab3-4f28-b535-60feeac4272d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c450ebfe-7450-4385-a2cd-415ba6df85d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959f9e90-fe7c-485c-a026-96c4c88e4d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c328bb28-41f5-480d-8d55-6d8a43dcefcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8071775a-9f7a-428b-a848-828c900b81e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79eb51f-9c62-4dd0-b597-a5181afd36fd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4961ee8-2553-4444-ade0-43b741b317d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a7ac760-1993-4b4e-bea2-42bf6aebf9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5789355-2283-4eb9-a380-8e8653c3b1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5901c8d1-fde8-47b3-9e1b-cfce340644d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dc08f2-5477-40f2-b7a0-56edc617ef45",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ae4fee-a01e-4cf1-9613-64d52b7763ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "912edd3b-5095-4c08-9157-f5ea708886c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "962ecb9c-d88f-429f-b0d7-24b82635795a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62fcfa23-ebd0-4134-b97c-39e3ed636f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422ec7b4-d223-4ed7-b61c-c99c6259c8db",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb12a5f-599b-486b-9200-4a71e4e0dab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd6c0bdc-af2f-4868-b1df-0f76f98aea29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c65c15-a8eb-4816-a318-3252f2a2b33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7564021-dd17-4447-8f8a-6743a544d80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933255cb-2535-467c-a092-a7f081d660f9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55400686-1343-4ee2-9cc6-40a7dbc00a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af66dc73-342a-411e-bbec-27c4b18202ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80021dd-faca-4bc3-902a-3e9effd6d966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61dc6f3-1a81-4342-9893-8b525fe3ebe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c0acd3-6e7f-429d-b6e7-e59cfe7020d7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e76b477-94bb-4fe6-8f1f-dabbe9629b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a83425-f9b1-42af-b7ac-c10936ead400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9c47aa-2c7f-4bf3-bd2a-e7fc96ea4acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f612fc-e8ad-4b5d-8026-7de93bc82832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc2d5ec-91ae-4c2e-ade4-083fb42cecea",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98e0628-df32-4ccb-a1f1-a6136d8e108d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af111dc-1c39-401a-b67d-fd077327f3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9131d66-31f2-4adb-8082-07e5f920378c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dde84e6-493c-4a5e-852f-83ebd344b55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b73cda-c677-4645-aca3-b8e040611335",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1cd0a6-bf28-4630-9a8f-f54b80b7f22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4b98e7-211b-48bb-9ac0-afe77c767f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824a3f18-fdca-439e-a165-5107f9095a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b48749-5e63-4c54-a7df-512b708aa192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fe09d3-7851-49c9-a4ec-3b373d1bdcfb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d802fa56-99cb-4586-939c-e41139e8e94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ca4edb-41f4-47a0-9b30-f144a6248733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07913a4b-f03a-4cf1-ba0c-fc5883b801f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71730428-7bfb-40d1-95c0-17de2f2a1139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8ceb3a-22c6-43f7-ba3f-76ea56720f7c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d59cde8-38cc-400f-9e34-418f15ce0525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e85f7e-2372-41c4-b466-879ca41782b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5efc682-19df-4846-9cec-9948d60744c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0636eae-7b74-4193-892d-d7b2113c0b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab443cb0-a9ba-42fa-8401-146c97ab4bfe",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b6d40f-6802-4000-85b2-5566782fb765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5dd43f-4114-4646-b054-981add67c89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3959b36-3d75-4c43-840b-c5e6b0ee003b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fd75a4-8556-467b-9b26-f98e9392889e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a9c234-9621-45da-bfd5-93553fe04441",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf712be-2f55-473b-aa37-47d093741a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf20a50-1a00-4d77-a235-2ed98a9b4316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119e968e-7c39-46b4-93cb-25b7d49f01e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3ca0a6-d0ae-40e4-86ef-2c49d36565f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138649a4-d8de-47c7-8fcb-9831db4e97c9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cc7b42-4922-4a38-b500-4cbb59f4ffc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf1271b-5c75-4cf8-b6b8-745a13d895ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9359ae66-c2f0-4646-84b6-88fd45045554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2ec2b5-f570-41c0-b67d-981a4af2f824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410986d9-360d-456c-a786-da2ddee5c769",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3c5715-b0a8-4ec3-b160-28cd3f3fe2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66780810-bb3b-41d6-9959-7af7d4589c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935f3792-4c53-4cb1-857a-5725a890e050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b74d38-75f7-490f-9acc-803708aa3c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8443cde1-d799-41a5-af95-b770823c2012",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927f5be7-5872-4f3e-ad59-4a61517cb3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42913d3e-d619-4e6c-9da5-0801a6b9978c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e48255-2949-436d-9040-f7b8a4540d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ff9e24-b4b3-42a1-9e41-e103612381d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7707ed4-8be1-4693-a6dd-856907925615",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b444ebf3-cbc2-4d21-8240-211a0ff20415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7170c44e-ab04-404e-a1c3-80ec7dcfc094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e490b7c2-fb8f-437b-82cb-5d47242285de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7d66af-d899-4ba3-9655-2940ee66814c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30570f2c-912d-4410-8307-79b7f24d7930",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e5446b-8cf3-4911-8501-3f43fea4041a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a86204e-d4df-4f28-9511-b1e783e3b89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e4eb76-86f2-4503-99c9-4353ad960fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61b8e58-9227-42e1-bfb8-d8ae70b221ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d660ff2-5416-4616-a279-41581b527f7f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc48ac8-7847-4efb-ae2a-7aa08361bd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e11ea4d-d3b0-4574-a15e-f17182730f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3f7cad-5414-4022-b7fd-077e384028cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b78720e-a8de-4b99-a8a9-7a774ba35c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a8f8ac-aa4d-4728-adda-9588d65bf5f2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1254fb51-1214-4d1b-9236-a5a62a395479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa31622b-4e60-4695-af86-855825ccbe12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bc4644-c613-4f01-8509-e4f4527becc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accbfd28-331a-4dd6-a4c2-91a2b4a8669d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e953001-728d-4de8-85b7-4de7030035f9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534709df-3e79-4dc1-a7da-8dddbf16f087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c3656d-4d51-40ac-ba05-59ead883b458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a83d62f-ded5-49b6-a0ee-dbffd55bc42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684cafaa-946b-4498-bbce-139f10af43b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a96b69-702e-4352-9b26-860219cc1134",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362b8743-e045-40d5-9e98-6f9b3fb2c18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222e8934-bef9-409f-8b3f-c98408dba115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289b0046-0036-4c3f-936c-0d1d926cd538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f793275-dab2-45ba-8c2d-c56238541ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73e27b6-2298-4313-b3da-0c461c80b864",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9494a0-ff3c-4aac-ab2e-0ab555d1682b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d71228b-a515-4c9b-b3a1-7defb293139d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fe67a2-188e-4cd9-87a6-016eae3b39cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575b1f9f-a9d9-450c-89f2-15e36b6588ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de61310-f861-49c7-8cb0-6daaecc6e649",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3240cf-2d74-4939-8083-ade5eabaa504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aca0b8b-98f9-450a-839a-1239acd90a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a73744-791f-4cb6-9a1f-8e89bbab69be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402139b0-bf96-42f2-b1ea-0a2ccff0f238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bf8619-4f50-429e-a610-fe2a40e9980f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bae5037-e44f-4ce3-81a8-c13158cbf262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0329e2cd-895c-47de-834f-e8dfd7efa6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4111f16c-e437-4a52-a548-d5516f144bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae7ca01-bce3-438b-9e0e-370479a8d1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1caa7b26-850f-4a3b-b618-7af232d11e97",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c46d4e-b3ca-4756-90f2-c71758b78b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae97ebd-962e-4db5-86eb-5a0467a3f729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f708f54-d03d-4737-bff2-0c424349f1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818b5186-c2d3-460d-a1a8-9703f7b8b3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010baa03-717b-4a4d-abd0-05164f9c7802",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c725bab-97a0-48cd-ab89-514051928ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9941dc86-89e9-416e-8a83-55cf46be4711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9417251-891d-4301-b135-f7d077eb8426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5756e4a9-f5ca-4f5d-ad4f-bae13f18f975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae49aa1-34c8-485e-a9d0-b2809733ba8d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebaeaee-ed74-4b27-bcb0-b63afd522ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9e9d7c-6dd3-4cfb-9a7f-cbae2a5fc010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cd548e-e083-445b-a3d5-255d6a7bf2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facb1cb3-558d-4cdb-8efe-4b64b773dd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc3462b-8d99-47a5-8076-0c657baf3616",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a93b960-c923-4f6f-84f6-04ff082ff0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d580eaa4-f7ff-4507-a079-df82dee9fc00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7894598-abc3-4846-906e-61f38a2b4678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8458cd9-32e7-4eca-92eb-cd13f1881e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a673bd-41a0-409c-abbc-4fd8a92e7aeb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5046509e-81b5-4635-bfc6-59ebee5093f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531d8c5f-ed6a-493a-99eb-9665c8f94dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634356e2-c315-4523-a52c-8e4acb1dce36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca71142-6cc6-45e1-9be0-7aa1fa5fdf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa552d5-5d9b-469d-836c-72b96f304d5e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43ad9fa-253d-41eb-91c1-be1dbd05d88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdc9012-2acd-48ee-85dc-93d1a868b7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e93f3af-e35a-44f3-97d4-aaf5173b5a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadd15ce-a6c6-4501-bbb4-05e2909d5d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b759f499-7e9d-4b47-8666-48acfc301c94",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17f7982-7490-49a5-924c-ff501af0673b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2e0fa0-a1e1-4cd5-a541-329a8c63c71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edad2922-f47c-4a4f-a5cc-d4c88913d315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b107eb32-8139-4f24-baee-ae7e578986f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67e0848-f737-45aa-a829-8798f721c8bf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092d6f1a-bda6-4288-abd1-c3b3faa9a61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59a97de-0774-454c-aa2e-5046691a7583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6694b84-1b74-4f98-90cc-353fa259cdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b269c2-7754-48fd-bbd8-e18d594f61d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35576d73-7d67-4d13-88f9-4293e5c514a6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb52812c-09bf-4977-9de4-f5bfd9c5de38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8203c93-6992-4b4e-bd40-137375b220e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476784ab-e852-4bdc-93f7-8a17aaba6a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9c3959-d120-424e-9365-96534f724716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76acf30c-ac8a-4f5d-91f0-6e9c721b751d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0772efa4-6a2f-4aeb-9c9b-c36116d4f5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6e182b-f198-4e17-842b-0b1042b60fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d98354-9f95-46bc-b4fe-ac8f6b2025d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0a80fd-3fbd-4c8e-bcef-d41f2460cc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28093e2-9da5-4edc-b1d4-97b2503ae055",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ae0874-7567-4c7e-a0e5-79ca4687ac2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8497443c-8080-43ec-b78a-b6bcb1372ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e14346-3726-4513-bdcc-4d6b58e4f67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed1c65b-5850-44ba-8292-3925ea32cf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a27d432-580a-4836-b372-d8097838b39a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd1823c-88f4-4587-995b-240c1a2ed8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef696688-c67f-443c-9a54-adf4afe84ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ad7b9c-892d-4618-a6d4-53e823f6b041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0c9427-c9f1-4744-a9f6-d22c5a4e81ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac77051-f08f-4b4b-86f5-5a1b8785ebd6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061ac1bc-2a7a-47ad-8e9c-43e054ca88dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75a9963-6b72-48b9-b0e3-3569d2c76081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2350e496-6fab-40fe-b173-faa4e837f962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de35ab67-0275-4b76-b8ae-1a30a8b3a1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3e2a61-c808-47d2-8f00-538eb0663a3a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9471c2-8c85-45a8-861a-d3e2b6f856fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f0e79c4-7422-42e2-a70a-b9d4f256f745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22a0b31-d000-4a4a-8061-09c72a66e6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e7d0f2-213b-4ae6-bea1-b5461442fee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fe3b86-404b-44b6-a52f-5a7608cf4677",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce47262-41c5-4fc4-a026-463632c07132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28e833f5-a417-4f7a-a3bc-405d41bce869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67279a2f-b0da-4346-9c91-f7fe6bb72b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a68ef3-269c-4560-96f7-fdc30289eb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff90385a-267e-408f-bcdd-75afe954276e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfa4867-a6b7-4093-b38c-13cc76ed6791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25810028-ffa2-4d37-8528-e7878c2f37db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f86f8c-c496-44d5-bf3c-9c4cefd9f3e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cafe40-0c71-4c0f-84e5-e6c6991455e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15aefc8-5e4a-40ad-a72c-92e29339da46",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd63710-b453-4acc-bf6c-1d453aa498fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532360b6-0ec0-40a3-9649-45660fa2b81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7f1b99-1c9a-4a59-9b42-a1ea1765d063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8918c9-3f0f-4c1d-a490-e5573f686a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4ef752-d2be-423c-a1d1-5f25ef9a0bdd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796aa692-76ee-42a7-ad1d-2b09b7859496",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b389aaa-ec23-456e-a365-5530c983251d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94753ba1-5afd-45b9-9a5b-bdb00a25f19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08d598d-3af7-4bee-9f58-6d130687f8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe261b92-1458-43cc-8f00-7deb3b6b2ba7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c1843b-4958-4628-9477-c8b47580abc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac4ce37-b097-4edb-b5f5-78ce36d9a64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9e20d8-44f1-4bf6-8ded-657b33542b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a34a86-d389-44a0-b7e8-93d523f00016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287753c5-8ac2-4c2f-9129-b35e1ab5291d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261d186f-e302-4cc1-a533-9dc54ac2d6ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3940b837-aead-4767-a232-8ac11e8d2650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd840cb-237c-416b-8d52-83b1802f46fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444d9a09-2d74-4367-ad67-973fb9089f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10a21b7-e70f-48dd-a56c-4cd314f84b83",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d3795a-3519-4b46-b960-3b01366c1b8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c4539a-12b5-4062-aa97-aaa8857f25d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb04da17-fa5d-4e35-8379-a06fd5f4aa32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167d9fb5-9b07-49dd-b9c9-65d55f3c2c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3211fe-4f7d-4f5d-9e8e-234a6e537987",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252f81a2-140d-40ad-99db-b96ccc1b79c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8da4ed7c-cb06-4106-96f9-99167893b01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27c6f3f-c27f-4f8d-bfb8-2423106f2395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c5cd39-27d0-48ff-ad73-29832e5dd648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46489f13-19eb-410f-98ca-385a8f1e7091",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e93ca7-29ce-4dfc-b4d6-c0a0e7fc4dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e1eb77-4c85-4905-9225-64bdde50410d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61eafe50-4533-41a5-b6f0-1c3bcc53bd0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c8ba77-7555-481b-8ea4-9ff08f20a4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbe05b4-7154-4414-9314-4cc5e87c927e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d03286-40fa-44cf-8170-53d30604af5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c137b24a-414b-49f3-bab2-d67bbd2fb741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dae4508-9daf-4861-a6c0-0ad820d28b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4e9757-809e-4a11-b945-43abf717cd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb8e1b6-2b60-40e2-8e91-c2f4bb59283a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121c4935-159d-4f44-881f-a9480b4d9190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb150937-6d15-49a6-ba68-2f4fe23f9b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b079411-9e89-4855-9d85-4fecb62ffe30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ada6284-6cc1-493b-940f-6529c754f5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8c6e9a-5927-4761-ad06-b989e7410b62",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98629f14-002a-4021-9f9b-cd3e67d19dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b20ff975-0909-468a-b49b-0cfaecff1c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c5a29d-2204-402f-b0c4-acea6d544b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5f7249-a364-4bf7-ac18-fed05d3a64a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea64f217-86dd-45f6-9f48-c327298a5b59",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a519bd-f69f-4678-8139-845fadf18232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff2b5c39-7443-4cfb-b77b-2d05ae02e5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bce50d-d163-4738-9d91-5e0ee36986e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdd6dc8-752e-45a3-b295-d73d0a18a546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1ca8dd-5799-4fc1-9e80-f702f05ecf11",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6af83e-2116-4435-a260-49480c833d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15910c7b-0341-4a61-bedf-3a5492358888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dc851d-e409-453d-a76b-2842dcf1dbd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece882fd-0f1f-4592-a072-5bf5809559e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d7dc98-6bfe-4653-8375-62fd725b9945",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cccb907-e4e1-4a90-96fa-c23e4cbf5fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8083a66b-804c-47aa-b1fe-097e23bb821e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2504d17b-9127-4ba7-88dd-6a82e72216f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b73cdf-7fcf-453a-b50d-dda0ee658c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50018f1-30c0-44fd-b8c4-7d03a0281cf9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb56b246-38a0-4702-9ec3-e864bd0b0f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f9792f-3ccc-4efc-947d-522b433bd1de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859fb7f7-3fd0-4980-a8d4-1aae00783fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c93f2e9-3e0c-4323-917b-ad8821c2e66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ab098d-9e97-4e27-ac39-b7e1df773e6b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918502f6-de1f-485a-a99a-8e2aeae26c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "403ce567-7503-4d4c-9075-24e81ae2eb1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b984676a-ac8d-4c9c-a865-9a5342125ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3c9116-74b7-4510-8090-bae357af3a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6984a97c-eb44-4649-a20c-e60188d73708",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7af9404-19ac-433f-8215-3ac9723103aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "052a1901-383b-4969-ae95-df77d9af5deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23170d46-c463-415d-9e53-b6a5a1c4bece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a8e1a9-54f6-486e-96ec-89c26b64f202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8302924-4b2c-4bb9-b272-af6da4812331",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629ebdaa-c699-4e5a-8a1b-10fabcb82e3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d045b55c-74ba-4129-9e15-6735ced69922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ccc521-8e58-4d06-b2e9-9024eb725467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09e2520-5155-4a89-8963-33df3b899e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3157dc-97d4-4224-ac9b-ecd3a66576a4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c315af3d-8971-41ce-b37a-e6b2e4c3677c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a635556-07e3-49e6-a523-389f1a015d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0f2447-d868-4ff8-a0d2-bb14390ec4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32e448c-91c4-44e4-b14b-610c6b337c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7600a44e-fbfb-43a7-8c99-a5ca5d122fe2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9205e36f-d3c4-44a3-a3a5-78ae1ff8cc01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73f0c9d-4bde-4882-bd3d-abfe9819deba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848369b5-247d-4d8f-9020-6ab019b08e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef2d67c-9a76-4085-a7d4-84e3f0748060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60540212-9555-491b-8004-af61ff1e3d04",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720a426a-cacd-4c44-b406-7aaa4f61c47b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88956d33-fdcc-4de9-8407-8c2cb3fc9765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f3aac8-7d2d-4e9d-8828-15ac74bdea75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53866853-122c-4ead-af8d-471e8ee66657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a01071-646a-408f-84d0-37648aac3cfc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482bf37e-9925-426e-824c-1b71f22fc89a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d522b91c-b081-4209-8a2d-5ae9b100238e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1b005f-ae60-483d-931b-2680ebd29c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee96067b-b610-49ae-b934-93d0254a414e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4d7b67-b8c5-49e4-b0f2-b3473e5d870c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc4b5e0-ec57-40dc-8d04-08715798f063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec67f15-5596-470a-995d-722de5aa4a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31daa5f7-ad13-4e78-97e1-67528dec161c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82050726-c3ac-49b5-9ad3-c32f1ce0229d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91b04e5-2316-4bdd-8087-320dbdffeba8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255d3565-cd29-4fde-b246-152eb261115d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc832b10-b472-473e-b681-7c4dc144bca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfef605-d01d-4727-afc0-08a0b5214acc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb9c40c-d2c8-4199-8906-e48b4fac7833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09720d7f-0b44-49d4-9d3c-d90111bc2d2e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520d626e-5767-4d2d-b951-7d5d402ae80b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72e58871-3b67-41e7-8aaf-56b22138d69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4feb4d32-2d24-4574-884d-8ec174cc7f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263a8dbc-600b-407c-8738-eb03e1f55b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab0c65b-3865-4971-8982-664a92c9d8ac",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5e750d-6b94-4768-b21b-4bb5f2933422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725cb538-a0c0-48ea-8f5c-be726ad1b3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85959e25-53a0-4edf-98ca-cdb954f72199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e24172-b995-4a1e-b497-da32160223e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c316cc2-8ade-441f-8844-252c1fadf466",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b06c77e-d72f-45f3-8e9d-b1bb0f82bd47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a17e9d7-491f-4192-b12c-0cfccd693d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c79be0b-8970-4e3f-a1ed-227bc39772f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04854d99-095c-46a8-ab58-9ad54887316f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59de024a-22d3-4569-8d5c-c391e2596cc6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb99c51-17a0-4d6a-98a6-bf219bf4420e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "276b3645-31fb-47d7-b289-0b0ba59c40d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41739e7-6ad8-4b6b-8c04-da03265a9cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6992450-e47b-4533-a45b-45a0e431bd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aee394-ca0a-47ef-b69e-0f6ee2b0f0ab",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfed2754-2c11-49be-9bd5-148b0bf499b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46cbd9d2-ed48-4878-b1ba-af97009e321c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37312b4f-70d6-46a6-a400-2f4f1e0ea8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4a3dde-977b-4fc2-9101-c8c43b8eeb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d4b93a-749f-4a4a-8b66-5996decbc983",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef104c5-abab-42fe-9b31-4d89e2435367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf531b1-827d-44b2-ba03-0e509267e116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ec0703-b1ea-4fb5-8a8c-f435d998c866",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603b637c-07d9-4c23-a17a-75ca9fa38cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187ea699-1cea-453f-9a31-a34286c35e62",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2590a43-29cd-4d84-a63e-9f9decd60e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f18aec-2c08-4d45-8823-132c2d68e1e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ec407b-5526-4bb1-a438-cbd9ee4d564b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff769d0f-1c8f-46d4-953c-32425156af3f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b8a2dbd-9963-4d4d-8e89-9fd03a88295f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24c06bbd-2a58-4fd9-a559-84643e3bdaf5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96b6176b-aa19-476c-9459-081c21bc9218",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bfde904-9bc8-4172-9cae-f9aded6aa509"
                    }
                  }
                ]
              },
              {
                "id": "71ad5239-d8ef-45ff-84ef-3e2e4901978a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "250caec6-5255-4514-bfc6-9a96edc023a6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a53da2-15eb-4a31-aef0-40d387895809",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "123c64d8-40db-49da-be44-c195d4d03ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561e04f7-bdc3-4723-a7fc-ae787e594950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e73e5494-ace0-49d3-b825-ecd8d6a46202"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c75e168-08e3-440f-8fc4-ab90688d38fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53cb9e27-28c9-4ea2-8c10-8b862524249f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fba306a5-daa6-41e0-b83b-2b3a5f1959e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b12f366-8ae6-4db1-8b1b-a3d68eb2ef28"
                    }
                  }
                ]
              },
              {
                "id": "7dd10a18-379a-4750-99f7-a7c0d64cdb90",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "76bac5f7-f840-4aa9-b749-3a2548fbdf16",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f6e49d-538c-44ee-b5d6-6401c8728e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b6606f5a-5221-4356-ad74-7ebc743a2384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f604ef9-6366-4a2a-96a6-27c705a9efab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c352d708-6d24-464e-9e6b-5b682d5e9106"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c1a4c740-d2f9-47e8-b187-a844732388fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bfe45fd1-51be-4b4a-b0fa-87c5045df4f1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "773c91ad-d0d5-439d-b223-cdf3b8dc2824",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "627fd7c3-7746-468d-a9b9-0b48508a7e13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "632433c2-b42b-4750-84ab-14c0a6ae553d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c7ce064-a11b-4190-baac-90e2008066ad"
                    }
                  }
                ]
              },
              {
                "id": "a9756ef3-ebbf-4395-a1f1-f28cb1132c7b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b8ae033-922d-41b8-b9af-a8f08e045900",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "992b4968-d70a-478e-ac85-447a3dd76fef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98352583-be28-47e6-94b9-1d1a6d194bd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95816f21-83ac-4b72-a89b-c9607508498d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf4ab9ab-df2a-4e8a-8572-1561794853cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3cbaea6b-f333-40d6-9439-e1bec4d15a68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0233d603-4b46-4f43-b4a0-583858f20dd6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3045ecfc-7e75-472a-bf50-90cfef11dd58"
            }
          }
        ]
      },
      {
        "id": "d4e7592d-25c9-49dd-8430-fa8deaf444eb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c5bfd6d2-13a7-4b7f-842d-d9d2145081ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21f0e75a-0758-473c-945c-c12c78c325b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b115f8d5-5a9a-43f0-be89-f6cf5bec50df",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c51c8eb-eb3b-4db5-87d5-32cbc023113e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fef1878b-4b81-4471-8ff1-f7b5f2095090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370466c4-40c2-4b7e-8e80-15edd7f4f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf2cdbb8-48e4-417e-be44-613f67ef592f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17df5445-01ba-4a8c-8116-d796458c886d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fa6b414-f303-4dee-a09c-a47d5cab467e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea316f87-0bfb-47ac-9990-a1afddad3db9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f71a1c12-f1f7-478b-adca-30dd20017027"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e87bb9a8-e89d-4525-99c5-38f2eca10495",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0f5b42a2-8804-4068-a101-d86397775ed1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "809c6bd1-2523-4903-905f-7817d98695cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1e51ac6-944f-440a-91f3-c1931d14f4cb"
            }
          }
        ]
      },
      {
        "id": "67f7e545-581a-491a-93f5-9b7d70e10712",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "013c5eb5-7d77-4905-83f1-7bd0d5508f63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc796b9f-e23b-4289-9e44-6e0586de9e2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca77fa19-567f-4983-9926-2088ec9d568f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de24a85-55a1-4d7e-9156-00e4b475c050",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc0ba4d6-8732-44b2-9dfd-4cc66ca2ffce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "593591fe-0510-4e9c-823b-b58ee3bce468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3faf05b-9f98-490b-8beb-7c5a35e22c64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f42199a4-2f7f-465f-bdb2-42fae41cb42a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5967fbf3-0935-4aa6-90d6-a661169875c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "929a57a2-6464-4c72-9e87-defeaae3376f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6145bed3-7e15-4906-bc2e-d44c253e9087"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0a25bc1-cf8a-4eee-b0aa-74a87fc1ac53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "530b8969-da30-49b0-8e80-5106defa38b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bdfa50d-1395-4f14-8d5c-27ec33b84dbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d07f3a7e-382c-4a35-b1e2-9c90e49372de"
            }
          }
        ]
      },
      {
        "id": "39dcb449-1cf5-4afc-ad04-f58244607235",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d1529b05-d2a2-42c8-9663-1ca624cb6967",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f908d70b-83a0-4ae9-9d65-736e011786f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7dba2c97-8abb-4a58-9a17-27a09e186c78",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33382083-b72b-4e81-911b-c3b754cb2549",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13501adf-076f-4f83-934c-da8ec1c94d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664ce5c5-d174-4105-8f28-3ce9b92c1c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b38a7d0-a8a5-4689-9d3f-3d865c91ffb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89359091-6235-4ac8-b102-35aa06720241",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fcd0f22-77c0-4d04-8cc4-e683332670b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ba228d4-6ee6-461a-be15-be0e2e69ed2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f0d3990-bda7-4737-8900-4091b30fe096"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebfa5b52-0b08-4c75-a369-b3d789111568",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82ad51b6-6ff3-4c56-a462-d7dbeebf861b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1113354a-1b35-4acf-96e8-b1f9f9a4c4a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26cb7d78-33c5-44a9-874f-fa54031992d5"
            }
          }
        ]
      },
      {
        "id": "682ccc4b-57cd-4740-9c8d-5ea64b32af73",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81a81a77-1721-441f-83dc-b77db732f460",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51431e09-dbc4-4790-9655-7a3f73a0f464",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "08d5615c-fb25-4847-a4d9-77b606dcdb6e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b7fa882-b532-4dfe-8827-ea2ff1dc1ed2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f844f559-8459-4402-aba1-b2f11d268c20",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 86.71929824561401,
      "responseMin": 6,
      "responseMax": 3698,
      "responseSd": 311.6373597846424,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705106165088,
      "completed": 1705106199055
    },
    "executions": [
      {
        "id": "3139b23c-112b-439c-8a99-bc9b0eddd133",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dff07f20-ab39-46e0-a857-7dfcf5af4078",
          "httpRequestId": "72a00dfb-3f1e-4652-a2d3-c16d1a49587a"
        },
        "item": {
          "id": "3139b23c-112b-439c-8a99-bc9b0eddd133",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "33c6a8f1-93ea-45f7-8cd0-6954c5074299",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "f84abd53-2784-42b1-a17e-c35ee783c407",
        "cursor": {
          "ref": "0f81f1d9-ca0d-4393-94d2-d2f6f210e26d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "614f4045-c53c-451e-b5ca-4ee33999049f"
        },
        "item": {
          "id": "f84abd53-2784-42b1-a17e-c35ee783c407",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2fadae21-d7ac-40ab-8cfa-d4d8b0b0715f",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "7593e909-4f5a-4091-8114-4156ed1d2873",
        "cursor": {
          "ref": "0ae1a70f-d0c9-4545-9ea7-f787f797f048",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "286d3db3-9690-48de-8e2c-4b0191742ae3"
        },
        "item": {
          "id": "7593e909-4f5a-4091-8114-4156ed1d2873",
          "name": "did_json"
        },
        "response": {
          "id": "1697df2f-fbdb-4a83-aa22-ebef860c01a4",
          "status": "OK",
          "code": 200,
          "responseTime": 208,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108128eb-86c1-499f-bfa3-ddd803fadb5a",
        "cursor": {
          "ref": "65e25602-e47c-4d20-8d39-055f542ddc12",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f0028e02-3370-452c-a3d6-76cc0c8feb18"
        },
        "item": {
          "id": "108128eb-86c1-499f-bfa3-ddd803fadb5a",
          "name": "did:invalid"
        },
        "response": {
          "id": "59c929af-1879-45d0-b089-86aff03fb97a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 695,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108128eb-86c1-499f-bfa3-ddd803fadb5a",
        "cursor": {
          "ref": "65e25602-e47c-4d20-8d39-055f542ddc12",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f0028e02-3370-452c-a3d6-76cc0c8feb18"
        },
        "item": {
          "id": "108128eb-86c1-499f-bfa3-ddd803fadb5a",
          "name": "did:invalid"
        },
        "response": {
          "id": "59c929af-1879-45d0-b089-86aff03fb97a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 695,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96017e62-f2d1-4eb1-96cc-fa5dcf72991d",
        "cursor": {
          "ref": "c25ef537-1a73-4a93-9d23-161ba6e57d15",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "945ebef0-74e0-45f4-bb59-5918d3cfd6b1"
        },
        "item": {
          "id": "96017e62-f2d1-4eb1-96cc-fa5dcf72991d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f8c56905-c42b-41c6-a0e1-fb45c384e239",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fbd933-fd18-40f8-a3cb-c47e5f9116d1",
        "cursor": {
          "ref": "f548db58-a854-4e1e-968e-d7d5311fc0ea",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4c21aa1d-d16b-499f-a689-1f006cdffb53"
        },
        "item": {
          "id": "21fbd933-fd18-40f8-a3cb-c47e5f9116d1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8b0e1930-7ae2-412d-8cbd-ff1f34591c3b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f84aad-beee-4ca0-9cc8-f1ff31c13052",
        "cursor": {
          "ref": "7d11e876-89e7-4fc8-a29d-f7763b947b30",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8cad2a58-9a27-4e56-8abe-73b06cd0ffea"
        },
        "item": {
          "id": "00f84aad-beee-4ca0-9cc8-f1ff31c13052",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2a4b7985-6776-43cc-b725-a14561f38683",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc72833-7759-4f3d-bf8d-43355b09e065",
        "cursor": {
          "ref": "231f0a5e-6969-4065-b486-7943e30af9b1",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "318b6aec-ce2e-4c54-83f9-3a43ed20f03d"
        },
        "item": {
          "id": "6cc72833-7759-4f3d-bf8d-43355b09e065",
          "name": "identifiers"
        },
        "response": {
          "id": "bdfcac87-277f-424c-97c5-e62dbdf0339d",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2da3a7-0018-434b-8801-06ff03afbb18",
        "cursor": {
          "ref": "191d43a8-41b2-4cad-8397-94e3aab95a2c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0d76fdc5-91f7-4a26-86cb-3bcb0373894c"
        },
        "item": {
          "id": "7f2da3a7-0018-434b-8801-06ff03afbb18",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4d82160d-f152-47f4-ae7d-1c0d278b598e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcb29c9-4cc8-44f2-bdea-1ba924280eb9",
        "cursor": {
          "ref": "4dde7c8e-13d4-4851-a3b6-16706197b3ed",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cc77ea48-3b34-4d6e-8a32-27dc9991f25a"
        },
        "item": {
          "id": "fdcb29c9-4cc8-44f2-bdea-1ba924280eb9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ec4c7713-388b-4c7e-9961-340cb98a9f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009da517-9a72-491b-aa61-6c345776487a",
        "cursor": {
          "ref": "2709e82c-96ee-4b4f-afec-ae4fb670074e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5b0bf808-ee32-47e1-9eae-fc3df927a838"
        },
        "item": {
          "id": "009da517-9a72-491b-aa61-6c345776487a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "aa454bee-aa7a-4b83-b19d-190a7f9cb86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8f7e58-29cb-4d5a-b008-36abe7c23c6f",
        "cursor": {
          "ref": "4981a29d-869e-475e-a8ea-0ea561afff75",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a7ace28e-a398-4a78-88f4-089a0b6f7e10"
        },
        "item": {
          "id": "fb8f7e58-29cb-4d5a-b008-36abe7c23c6f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "45f49d5c-c44c-4402-bba3-84a9659dc23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261ead59-f986-4bb7-aadd-6461a855e1e8",
        "cursor": {
          "ref": "1ab21f83-b854-4add-b996-4622bd083de1",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "490eedac-45cf-4f74-9c87-fc5f12b3e585"
        },
        "item": {
          "id": "261ead59-f986-4bb7-aadd-6461a855e1e8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5a9e5744-f57a-4a4f-9b20-efc48530ebab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa31553f-81a9-490c-934f-4bf742df4dd3",
        "cursor": {
          "ref": "7243152c-c13d-47db-b10f-87e0c531cb32",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c8bde39d-a9a4-4236-b795-9e1f5a1d3da2"
        },
        "item": {
          "id": "aa31553f-81a9-490c-934f-4bf742df4dd3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "63ec7de8-31f7-4788-aa7e-42f889b1267f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1768f411-4dbe-48f2-a2a7-9bfd95b90722",
        "cursor": {
          "ref": "517291f3-ab06-42a3-bca4-bf7d11b61926",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d2de8de4-39dd-4d70-bd22-926f78659b07"
        },
        "item": {
          "id": "1768f411-4dbe-48f2-a2a7-9bfd95b90722",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "61dac755-cbb1-41a2-ac7c-6ddfbfe28a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5116743-f9e9-4416-a27f-fe00a92185b8",
        "cursor": {
          "ref": "55679982-f943-4501-860d-056d63541534",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7fcfd5d0-b3cc-4147-86d3-bc12ab8bb7d9"
        },
        "item": {
          "id": "f5116743-f9e9-4416-a27f-fe00a92185b8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "458bc357-a247-4b6c-9995-b12f74c96ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d346f2f-e672-468c-9729-5aac74def403",
        "cursor": {
          "ref": "1b7646f7-8978-4762-95e6-fcc61a478404",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1cf88feb-a0f0-459d-965e-4e07ca7dd75b"
        },
        "item": {
          "id": "1d346f2f-e672-468c-9729-5aac74def403",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e557f3c9-0e98-4376-8947-ae261e7520bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261e09db-68c1-4ec7-a163-8e58154211f2",
        "cursor": {
          "ref": "398d77e8-7570-42bb-9f53-54ce64ac07d1",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "854e6dec-94f3-41aa-ba31-bb1e4336c6b8"
        },
        "item": {
          "id": "261e09db-68c1-4ec7-a163-8e58154211f2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ad74c1e3-f865-4004-b136-29284567228e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28092822-4665-45e5-ac64-34e5631767f7",
        "cursor": {
          "ref": "cd0e83e5-933d-454b-9822-08c253a3c961",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3a786f0e-716b-4589-b651-9cacafa4574f"
        },
        "item": {
          "id": "28092822-4665-45e5-ac64-34e5631767f7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5b74cb83-fa53-4e84-b3f5-41129e33c47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950c560e-10ec-4b66-8de5-f883b03cc7e5",
        "cursor": {
          "ref": "31e81022-b2d5-4b21-b80b-171b8a2a9604",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8c3906f3-7270-47a7-af85-ff48f2f0ea78"
        },
        "item": {
          "id": "950c560e-10ec-4b66-8de5-f883b03cc7e5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b25630e1-672b-48eb-b2f6-07488e3a795d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3b03c6-789c-4280-9d9c-bd61ba696e02",
        "cursor": {
          "ref": "7feb58db-76af-4324-92c6-6a824ebfa06c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0f754104-400b-4fe3-bd1f-6c29b64f6cf9"
        },
        "item": {
          "id": "cc3b03c6-789c-4280-9d9c-bd61ba696e02",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f57cb4fe-b516-4410-a755-d9c997e511ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66a51b2-3f98-404f-8067-37cef4d541d6",
        "cursor": {
          "ref": "8b102cb3-6d95-42bc-a125-c4799b48bc8f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7d6b0fed-a043-4405-bd85-c2ff5aaa1890"
        },
        "item": {
          "id": "c66a51b2-3f98-404f-8067-37cef4d541d6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e97672e1-f73f-420d-8603-a7992597d39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a874aa-d6e3-497c-9724-d6f38a613cca",
        "cursor": {
          "ref": "5c81025b-3fd4-4b93-8527-8b689c3f7020",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3bc08260-fdc1-4ae6-ab63-9204d78c5717"
        },
        "item": {
          "id": "a5a874aa-d6e3-497c-9724-d6f38a613cca",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "396f3e8d-2259-44ed-9483-f9e34247e8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82226a10-2a43-4213-b3e3-f0e9518eccfc",
        "cursor": {
          "ref": "ab6be3f5-1f45-4529-b1d8-1138671a4fef",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "20fd50bb-c269-4c7c-8b08-cce0481f2cc6"
        },
        "item": {
          "id": "82226a10-2a43-4213-b3e3-f0e9518eccfc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0bf5a1a2-916b-4be9-b372-53deccabaa3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4998e4-42a3-49e5-b7b5-a1d7f11cd566",
        "cursor": {
          "ref": "61061e71-375a-433f-b43f-c00bc42faeff",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0047d9bc-a3dd-4e34-b157-bc6a97ad1a73"
        },
        "item": {
          "id": "9d4998e4-42a3-49e5-b7b5-a1d7f11cd566",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1d51867d-b521-4608-bc46-79188e2d8a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d505da6e-80c8-4ac1-896f-db3502d43269",
        "cursor": {
          "ref": "cee309d4-f0ff-47c3-8752-5cfb77cd97ca",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "96a19fdc-67c8-4681-a40d-b291bccfacfe"
        },
        "item": {
          "id": "d505da6e-80c8-4ac1-896f-db3502d43269",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2c3a7f41-f50b-4c64-946a-7656f280c172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efce714-b2c8-425b-ad00-7ea0c7b322e9",
        "cursor": {
          "ref": "6bc8b8a5-990c-4dd2-9f66-c4a62f39434b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "50a04b99-d70d-4846-98ad-c4c4b1e02b0d"
        },
        "item": {
          "id": "5efce714-b2c8-425b-ad00-7ea0c7b322e9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c63322b7-3782-4a8e-8684-22c4be836ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89342d70-edbd-4ad8-b536-3f138e1ce1ec",
        "cursor": {
          "ref": "12bd4b16-577e-4b01-ab4a-b6e562be6ddb",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3a05fa5a-3605-4f08-8192-f3df34d0fd41"
        },
        "item": {
          "id": "89342d70-edbd-4ad8-b536-3f138e1ce1ec",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7873c885-4889-475a-bb7b-4dffa537dd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edeb7d33-ac7f-44ac-9973-aebfa65c93a0",
        "cursor": {
          "ref": "f45d9156-6e4c-4ca0-a975-c224e8fa9e15",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1a125567-7121-4716-8e12-41c7d72365e3"
        },
        "item": {
          "id": "edeb7d33-ac7f-44ac-9973-aebfa65c93a0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1e83135c-285d-47f4-b58e-3c6f2895f1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bdba84-38cf-45a8-9e30-90c5a15323eb",
        "cursor": {
          "ref": "98a217bc-93b1-426d-acad-eb4d92cf3631",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1774f763-22c5-44ea-b3d0-d3276a94363e"
        },
        "item": {
          "id": "70bdba84-38cf-45a8-9e30-90c5a15323eb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "74bada64-3526-44a5-ba15-99c9bc07415c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354b091c-c4e8-405e-895c-3879059459e1",
        "cursor": {
          "ref": "bbddf470-e084-4edb-b156-21b27de4b612",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f505d8d6-6622-4557-9828-324a31066365"
        },
        "item": {
          "id": "354b091c-c4e8-405e-895c-3879059459e1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ea254023-a10d-4690-8e7b-ab8f4c6bea03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bb59f5-4130-4c57-bf55-e0543b0ae02b",
        "cursor": {
          "ref": "568c1e2a-c84c-4afb-83c1-a6b62a4384ca",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1f9ab7d9-9594-4b1b-89fe-e89167056f0c"
        },
        "item": {
          "id": "08bb59f5-4130-4c57-bf55-e0543b0ae02b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "78846dec-a603-43cc-a515-db3ad9a2408c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbef314-b142-4815-8f93-ce7603f143b2",
        "cursor": {
          "ref": "53179dcf-3624-4cca-b34a-8ce2f74a2ebc",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2dba1973-aa67-49d6-8b09-1ff1736260a2"
        },
        "item": {
          "id": "7cbef314-b142-4815-8f93-ce7603f143b2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9ad8c35f-d222-449a-8ce9-3b7ecc9d4934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369b3a0e-ce9e-4174-97f1-325038d0977d",
        "cursor": {
          "ref": "70a94daf-722c-4026-9054-9d9d3ac17126",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "10287ba6-c32d-4149-86f0-1b41babae79a"
        },
        "item": {
          "id": "369b3a0e-ce9e-4174-97f1-325038d0977d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7c07d199-4254-495d-92c1-27f0dc7c6c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5764453-7bda-41f5-9669-904c42958240",
        "cursor": {
          "ref": "e009eff2-ce87-4d04-bf9f-4d75a1f589fc",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9d6ab5f3-5fd6-4996-b15f-db64288cb18a"
        },
        "item": {
          "id": "c5764453-7bda-41f5-9669-904c42958240",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "392e0383-47e9-4212-a97c-4ac75407aa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8719d707-7d46-4a88-8ca6-291d9991008c",
        "cursor": {
          "ref": "f68f3d1a-cd7a-424b-ac2e-add98a3fe70b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "21a9f128-e81a-4eb8-8d49-2dcee552dd7f"
        },
        "item": {
          "id": "8719d707-7d46-4a88-8ca6-291d9991008c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5ac59b89-8a92-462e-8750-32d055d3797f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368686e5-3b14-4b62-8b26-5ed5231e25fe",
        "cursor": {
          "ref": "ad3fc545-310d-4c10-b14e-dc74837e7459",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "13735d6b-e421-483c-8273-2b3548fe9208"
        },
        "item": {
          "id": "368686e5-3b14-4b62-8b26-5ed5231e25fe",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "746db1a9-b3db-4a17-9e61-97620496d868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35f8f1c-5c88-459b-94fa-028601225bef",
        "cursor": {
          "ref": "bf0eddc5-b79e-48ea-878c-b456d57a487c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "092c3527-548f-4adc-8b1f-24beda841d1a"
        },
        "item": {
          "id": "c35f8f1c-5c88-459b-94fa-028601225bef",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f997e906-6f56-4fb3-9efb-fe9b54b00b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c48cfab-0e50-4819-a666-b5d6f9af6cee",
        "cursor": {
          "ref": "5115afe9-46b6-41ef-b7d2-d8fe86dc0cc0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e35c81ac-d68b-4d73-9ce7-3c24cfab65a2"
        },
        "item": {
          "id": "3c48cfab-0e50-4819-a666-b5d6f9af6cee",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cd97f8b7-f0af-46d9-81dd-6877be122856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb08dd8-f695-4f8c-9154-9d2175535e53",
        "cursor": {
          "ref": "b880e44d-22d4-4f43-93cf-04eceb0acab2",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "98ca1098-bef9-439a-bd4e-fa29f1354dee"
        },
        "item": {
          "id": "bbb08dd8-f695-4f8c-9154-9d2175535e53",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f2814633-acce-436a-ad3a-e5c9135e78c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17494227-8c72-4401-aaa0-1f828e520050",
        "cursor": {
          "ref": "85ef5840-a091-4a57-a8b9-866ca1049998",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "66d747b6-b9b6-4fc7-ae02-ea99514116a1"
        },
        "item": {
          "id": "17494227-8c72-4401-aaa0-1f828e520050",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0b02d924-ec7c-4625-a75e-96b31c276386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0dbd13-7a4f-438b-8533-e31a9a8acc14",
        "cursor": {
          "ref": "e020093b-49d9-47e8-aa59-d0ffdb70c163",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2159a089-cfdc-4dc3-bd37-947b98a6c8d8"
        },
        "item": {
          "id": "0c0dbd13-7a4f-438b-8533-e31a9a8acc14",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "80eddf17-483a-4ba1-a40a-0899eab243f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358cb305-b75d-436b-a32a-5305b2dc187c",
        "cursor": {
          "ref": "f67c8b71-8f65-4c4e-8de2-d6cb36a94b55",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e1692e08-4c65-45c8-a486-d2737d773690"
        },
        "item": {
          "id": "358cb305-b75d-436b-a32a-5305b2dc187c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0af7bb25-7349-470e-93b9-7f5fd8a77e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867888b9-6358-4454-8424-a5711ba41f45",
        "cursor": {
          "ref": "40d43303-1f26-44fe-9436-f42d73bec98a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2d00460d-8ffd-4a0a-886d-1ef6742da097"
        },
        "item": {
          "id": "867888b9-6358-4454-8424-a5711ba41f45",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ac56e8f3-0d19-47df-9f46-30f5c7cb69cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9462f726-b4fd-4149-a1ff-c0aa00d936ce",
        "cursor": {
          "ref": "14761692-9cd3-4e31-ba5e-99259267b02c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "93b62002-9f93-42c3-9fe9-ca9b2490b241"
        },
        "item": {
          "id": "9462f726-b4fd-4149-a1ff-c0aa00d936ce",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "46adf865-3b96-43f6-8c7f-b6fdea1b3ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfabc1bb-eb20-4da6-a9ca-a63ff8f150f0",
        "cursor": {
          "ref": "26bd6bd0-ce8d-4fa3-8510-4d1e4832da7f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e2191b23-667d-47fe-8ba8-4ff3b1633033"
        },
        "item": {
          "id": "dfabc1bb-eb20-4da6-a9ca-a63ff8f150f0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2b211e47-4245-40a0-a6d4-f6492c681528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447fc4b4-cfa8-4b9a-abd0-d42c4251d2f9",
        "cursor": {
          "ref": "138e044d-91b3-4e90-b7c4-e8c16cd6d9f8",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5256c55a-4a1e-47b5-848c-1c27ffead702"
        },
        "item": {
          "id": "447fc4b4-cfa8-4b9a-abd0-d42c4251d2f9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1343fdc0-a8cc-491a-896d-176b36cc2fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3542cd1-1c28-45c3-a152-0f2d0fab8e40",
        "cursor": {
          "ref": "eb196481-a3ac-49a0-ace4-071c29d7f062",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8fdbc6de-ce9f-427f-af64-1d4450a79f5c"
        },
        "item": {
          "id": "e3542cd1-1c28-45c3-a152-0f2d0fab8e40",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "73643271-e79e-4d4d-b00b-1643e51b07fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66d9372-8b52-46a9-8ca8-2d94acfea767",
        "cursor": {
          "ref": "625cb159-c299-4d6c-b9fc-48488d1d967e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c6a838a6-18d3-45d9-bea0-7c6c37e7dea3"
        },
        "item": {
          "id": "a66d9372-8b52-46a9-8ca8-2d94acfea767",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5f1fa38d-22dd-4aa0-91da-594f8e705e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cc3218-0e67-441e-9ac9-ae22c29b9086",
        "cursor": {
          "ref": "e5dc5619-9069-42d9-95a1-b6e31f65a566",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "be67c4ee-9d0c-41d2-89cc-4ff0eb8ff083"
        },
        "item": {
          "id": "d0cc3218-0e67-441e-9ac9-ae22c29b9086",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "287b0204-47b7-424e-a88e-2e6b6cb1d7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbecfa00-13df-4160-b2d5-ecc722ff4dab",
        "cursor": {
          "ref": "92ab2f6b-a3ff-4349-89e6-bcff852dc76d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "00bbe1b5-06c5-4e69-9c3b-5ed31e49db7c"
        },
        "item": {
          "id": "fbecfa00-13df-4160-b2d5-ecc722ff4dab",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0a2a19e5-0d70-4613-a3a7-611bdc0ebb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754082f9-6a16-4c86-be98-331ea4967fab",
        "cursor": {
          "ref": "998fcd24-1749-4f12-b9db-1f8e9eb58436",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cee4b5d7-f194-4cf1-9cb5-ed946d01ca3a"
        },
        "item": {
          "id": "754082f9-6a16-4c86-be98-331ea4967fab",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0c6fa521-1f31-4e41-982f-cd594dbbfccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b776b7ef-b0cf-4be0-8979-89720f428e6e",
        "cursor": {
          "ref": "c393ec13-5888-4969-bd6d-411f2c2c8f14",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "510cf48e-f4bb-487b-9958-2c328df471cb"
        },
        "item": {
          "id": "b776b7ef-b0cf-4be0-8979-89720f428e6e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "07101f67-dbfd-4719-86d4-de4731cfdc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce51817d-74c4-4ad2-8f78-aca31ec6d354",
        "cursor": {
          "ref": "19c1c820-f27c-4a82-8bf5-dae034320ccc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b7a95c0b-cb5a-4fb8-9ba6-9d13e7f43f27"
        },
        "item": {
          "id": "ce51817d-74c4-4ad2-8f78-aca31ec6d354",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2ccc15e5-00fe-4392-8060-c9f44eb3981a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2503c47a-2507-4c11-9312-c7345657e9d0",
        "cursor": {
          "ref": "6c9aef3b-19b2-4566-888c-2034557af62f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "85844520-cfb6-4ab7-a245-fbdbebf9668c"
        },
        "item": {
          "id": "2503c47a-2507-4c11-9312-c7345657e9d0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7dbfbd3c-2a50-49e3-be7b-5c34c9563f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f0bd85-4b48-4cba-85ab-e189bdfc3693",
        "cursor": {
          "ref": "a3b6ffa6-9175-4a62-97a3-89b4f5b1ee10",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dc21c65b-9681-4244-9dc0-24b0d7bcfd9b"
        },
        "item": {
          "id": "22f0bd85-4b48-4cba-85ab-e189bdfc3693",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e7dba174-12f7-496f-9374-182a0dbe93d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7649de-17cb-4343-9384-9d80cd8d7b19",
        "cursor": {
          "ref": "c3616d5b-2710-4b89-80ea-72516ea736db",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1d4f5d7e-1d77-4663-8c3e-b6d205be08c7"
        },
        "item": {
          "id": "1c7649de-17cb-4343-9384-9d80cd8d7b19",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ed9f3c00-af53-451b-8f5e-29f85469ab3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f946a841-540f-4045-89d4-d45abb0b3648",
        "cursor": {
          "ref": "5798328e-9be0-4bff-b59a-ce14e1254d80",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "74e7ffbe-f7c3-45a6-a78e-ae732f5d6282"
        },
        "item": {
          "id": "f946a841-540f-4045-89d4-d45abb0b3648",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b07d89ef-5fd0-4e73-8aef-3555494eed04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782206e2-ab82-4567-b125-d9034b5c5cb4",
        "cursor": {
          "ref": "1b35d18b-1a52-4ebc-8b03-29649444d802",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "59be1bde-87b9-4098-89f2-47e88844d39c"
        },
        "item": {
          "id": "782206e2-ab82-4567-b125-d9034b5c5cb4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "209f554b-4381-4431-9e06-097ea1592385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d6f9da-783f-49d0-b33b-61b42cd8f8a3",
        "cursor": {
          "ref": "25e1749c-0699-4a54-884e-91c65c13d104",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "74ecfdbe-a69d-427e-b0e5-732d91f8ef99"
        },
        "item": {
          "id": "35d6f9da-783f-49d0-b33b-61b42cd8f8a3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b7b3e2fe-5266-426a-8e9f-1c1f2ab0059f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3b1913-d0ec-4a3e-a93a-29cd660b6f8c",
        "cursor": {
          "ref": "abe34906-d926-41e2-9eea-3350a9f970c4",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "39838d19-addf-4e5d-bad0-634cad94aff8"
        },
        "item": {
          "id": "3f3b1913-d0ec-4a3e-a93a-29cd660b6f8c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3860f1c4-1177-45b9-8784-274399914d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f5447f-990a-469c-bb89-495d34518449",
        "cursor": {
          "ref": "41be619c-f87f-49e0-8c73-4a1e7d1b06db",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "08527993-fe70-4cee-9515-7d1b340f359e"
        },
        "item": {
          "id": "71f5447f-990a-469c-bb89-495d34518449",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4b58eaa6-c936-4091-866e-d9dbd8d9a8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1233ca5c-3697-436d-ae8f-39c612ab3fa3",
        "cursor": {
          "ref": "d605cf0f-ded3-49f1-8f49-c5fb047aa7d3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "020dc4d8-d830-4ed7-b5d8-feff14779bd5"
        },
        "item": {
          "id": "1233ca5c-3697-436d-ae8f-39c612ab3fa3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b5d8d97c-1b22-4a63-a9d5-87fe03e79022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0fd7aa-281b-4734-9686-b7ece4c3ad1b",
        "cursor": {
          "ref": "0d79bb84-052f-4c23-8688-c48c2bca617d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "064b70c6-a638-4480-8939-890f7ff3a004"
        },
        "item": {
          "id": "1f0fd7aa-281b-4734-9686-b7ece4c3ad1b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fa6dd45c-c6f4-4882-8ff8-62f752d189fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea446c7-9ec6-41ff-86b1-eeed9b01e5eb",
        "cursor": {
          "ref": "af90b70f-d19e-471c-9efa-8357711c6193",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d7ab02dd-47b8-4f04-9e83-509eaa1b3b3d"
        },
        "item": {
          "id": "eea446c7-9ec6-41ff-86b1-eeed9b01e5eb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "53c98acf-60eb-45b3-ad2c-dcf642417f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebc30c4-ce41-4cae-8fd2-ddfe690ab6f0",
        "cursor": {
          "ref": "ebdc7fa4-dc7d-4fe6-86d4-5a7baac7f748",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "53887bd2-05b0-45f8-8477-ed33611d1c02"
        },
        "item": {
          "id": "0ebc30c4-ce41-4cae-8fd2-ddfe690ab6f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "88886915-0df0-4424-ae32-01429130d382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814d4baf-d21f-4992-8a41-8a39c55eeafa",
        "cursor": {
          "ref": "c1ed20ca-f749-47dd-a3db-0cce18b7e75a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e9c771ec-1cc0-493a-a814-46d2bd9e6f5d"
        },
        "item": {
          "id": "814d4baf-d21f-4992-8a41-8a39c55eeafa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "67f77b0c-05f5-4ef5-a8a0-15200a360eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f0a235-cb43-4700-a0f4-7b78ad0dc8fd",
        "cursor": {
          "ref": "faa51221-90dd-481a-bb7b-ef2d67f37f32",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c42c82fb-c654-4798-872b-d9ad03e08093"
        },
        "item": {
          "id": "54f0a235-cb43-4700-a0f4-7b78ad0dc8fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "992147b1-2fdd-4428-951f-460532e43f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c7eb3c-b5d5-4eb9-8de1-8fa3ba16d8ed",
        "cursor": {
          "ref": "97ccdd53-256c-4f19-a819-33c75adc9d34",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1767949c-0676-4b7d-b38a-1fbb16f04496"
        },
        "item": {
          "id": "b1c7eb3c-b5d5-4eb9-8de1-8fa3ba16d8ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bef6ba7e-0153-4d2e-9495-32096902ae9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1df307-1c13-4f74-8d35-63858429968c",
        "cursor": {
          "ref": "90c70d81-d0b9-4cb5-aac8-dce2a055bd8d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5e24c839-48ea-4a8b-ab42-bcdd9cdbdd5f"
        },
        "item": {
          "id": "9a1df307-1c13-4f74-8d35-63858429968c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d2c2d6ce-a8db-4209-8dd0-cdad6a991612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981994dd-0143-4df5-a95f-69e0adfe6b2a",
        "cursor": {
          "ref": "408f1f56-24ec-444b-85d3-ba4ce1e3068d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d46e7289-73b1-41c2-bcfe-31f4727c45d9"
        },
        "item": {
          "id": "981994dd-0143-4df5-a95f-69e0adfe6b2a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a39791d4-4e00-41f7-83ea-e61b6b46036b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb817cc-6a3b-4849-b8be-8fd211842f29",
        "cursor": {
          "ref": "13e7fe6c-5191-4ad8-94db-709c7b653090",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9ae9e7a1-168b-400e-aea6-0ab55d567a6c"
        },
        "item": {
          "id": "9bb817cc-6a3b-4849-b8be-8fd211842f29",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "db8a4580-e573-448f-876b-537d92c0ea3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c458a5ab-6d0d-4167-a448-50b892ec7552",
        "cursor": {
          "ref": "913f1a36-ac42-4016-802e-17d55ad535db",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "448e393b-0c6b-4047-9e2f-ce0e71faa89c"
        },
        "item": {
          "id": "c458a5ab-6d0d-4167-a448-50b892ec7552",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1749e6b9-1cfa-49b4-90c1-f0d2df35c18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5dfdad-c75a-4845-a934-486324e1178a",
        "cursor": {
          "ref": "5b5594d3-5801-482a-ac09-202f9469d588",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "14d1b7f9-8ea2-4067-8af9-68384ecedc8b"
        },
        "item": {
          "id": "ca5dfdad-c75a-4845-a934-486324e1178a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5e11370b-9e82-4124-919c-7abe042cdb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e692449d-2e41-4568-8dc3-f4fd43688674",
        "cursor": {
          "ref": "163eb7a2-7a18-42fa-917a-b9130fa9a320",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bc92b94f-b08e-4da3-8fee-f70e71f019f7"
        },
        "item": {
          "id": "e692449d-2e41-4568-8dc3-f4fd43688674",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7a7e1765-4195-4395-816a-285f67e38d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9b4208-64d9-4b2b-b80b-77fee4032559",
        "cursor": {
          "ref": "a476196f-e4da-4734-8b2c-953f9c8edee3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b397a955-9678-4ac0-b1fd-6eb4dbbfb83a"
        },
        "item": {
          "id": "ff9b4208-64d9-4b2b-b80b-77fee4032559",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dbf4679c-e768-41f5-8c20-70c54def5937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1a9a8f-2d5b-4203-b282-10f6056da90a",
        "cursor": {
          "ref": "cb655fbb-3b23-4e83-9126-29604894d435",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c185fdbc-8c4b-4f80-ad51-75ef16f9fecf"
        },
        "item": {
          "id": "7c1a9a8f-2d5b-4203-b282-10f6056da90a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8108ccd1-a479-40fc-a693-3f8e2bf7a590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f5758f-2d12-4cd4-8645-7fbd15493074",
        "cursor": {
          "ref": "d9a4c9e7-c830-431c-8abf-a5a30a64a88e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "de777221-0afe-4325-97df-030a51641a1e"
        },
        "item": {
          "id": "11f5758f-2d12-4cd4-8645-7fbd15493074",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "609ab94c-5df2-4f9f-ac0c-cc270fa7eccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba62c88-e8b5-4bd9-bade-cba471d5b436",
        "cursor": {
          "ref": "a15a01d3-0417-419f-8979-895ec7c2d4cc",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "79234c65-6c5b-48fb-a642-4df5ab7f21e3"
        },
        "item": {
          "id": "cba62c88-e8b5-4bd9-bade-cba471d5b436",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "af52fde2-f06e-4e1a-8d0f-106dfd27891a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3c84e5-f8c6-4395-86f3-bc9ce170bc7c",
        "cursor": {
          "ref": "d8b5330c-0e03-47f3-96c6-f70703eb3b24",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "15cea3ff-f359-4456-82aa-f74472d8ac5e"
        },
        "item": {
          "id": "5a3c84e5-f8c6-4395-86f3-bc9ce170bc7c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ccef8906-bf3d-4655-ac5a-1d4ae3274d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b618a04c-beca-4534-b4ba-709900fd4d6b",
        "cursor": {
          "ref": "4d7e2333-9f0a-4469-925e-fee26cb7ea4b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "239493b3-c9b6-4067-9fac-7bd8defe0fa0"
        },
        "item": {
          "id": "b618a04c-beca-4534-b4ba-709900fd4d6b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1c954ecb-bc7a-4802-889f-34c9f193b4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4ae881-892c-4fa0-afa0-d7d71a23fde5",
        "cursor": {
          "ref": "c11a3e6b-845b-4a7c-875a-4d2e8310ebf0",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3db0f44c-4aa5-4567-a0e6-24942c98f45a"
        },
        "item": {
          "id": "ce4ae881-892c-4fa0-afa0-d7d71a23fde5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "30c01fab-3e71-477d-9510-689745b3af0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec9b150-1cb8-4ac6-b057-895b17e6e0fa",
        "cursor": {
          "ref": "f2b3e6e5-b5ca-43ae-b79a-dd7f589a7612",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ec11997c-b9c6-4795-b999-bb6d34b6ebea"
        },
        "item": {
          "id": "dec9b150-1cb8-4ac6-b057-895b17e6e0fa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3e714690-8e17-45d1-9f7c-c27a91e5f0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4a1eef-3a92-42c1-b21b-9d0d07dc6bd7",
        "cursor": {
          "ref": "acde1000-2702-43bb-a278-3b8f5bb08cd1",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ae1e0912-0b56-4940-a6dd-e36eddd9bbe6"
        },
        "item": {
          "id": "5c4a1eef-3a92-42c1-b21b-9d0d07dc6bd7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a3a3fca5-58c0-4032-adf7-8e292242351a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4404a06-d194-4c83-803c-15ead29911a3",
        "cursor": {
          "ref": "97634985-e50d-46a1-8a62-eeee094585c0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e3cfa1bc-2b1d-435d-88fd-2f58b856a7da"
        },
        "item": {
          "id": "e4404a06-d194-4c83-803c-15ead29911a3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "74f424c9-dfc9-4bc7-8656-1274604dd285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2728c9f-af03-4cf5-96c0-f5f0eda90c8c",
        "cursor": {
          "ref": "ede6eab1-53e5-4281-9911-f28632ad12e5",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2b3d4438-dee8-4066-bc24-e19bf7495353"
        },
        "item": {
          "id": "f2728c9f-af03-4cf5-96c0-f5f0eda90c8c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a3b3dac7-6ab1-4de9-92d9-13371ad97ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e853e12b-58f9-4dcd-975b-9e3645be2ae9",
        "cursor": {
          "ref": "2dd840ff-d87a-40e2-8071-9a45d30a7766",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "95db9dff-42f3-4d58-8b61-d8dc2c5cb4e8"
        },
        "item": {
          "id": "e853e12b-58f9-4dcd-975b-9e3645be2ae9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c0fb35fe-a0b6-4029-9157-5b7d77c03f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbe69be-92fe-46fe-88be-ea45fc703d0b",
        "cursor": {
          "ref": "833d0c3f-3826-4815-be04-f29887bdfba1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "39c91ccf-02d5-4d05-acef-0c5d4c3b2f03"
        },
        "item": {
          "id": "9dbe69be-92fe-46fe-88be-ea45fc703d0b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ccd1afe5-ccd9-4bf1-b3ec-7521e7e0e083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984403c7-714d-4ca5-9dce-98ba485667f7",
        "cursor": {
          "ref": "d47aee81-13c9-4fd6-9525-223808dfea4e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "28243666-7bda-4573-bbfb-e02bd62ec4a1"
        },
        "item": {
          "id": "984403c7-714d-4ca5-9dce-98ba485667f7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "db11e4aa-3bce-49ce-b4cc-2cf1cc236530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cb04b1-fcbd-47c8-bcd7-8ad53a7d409d",
        "cursor": {
          "ref": "dd1b0f22-58c4-46bc-955f-66019a07c9c9",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fafa4b7b-3822-491e-acdc-4aaee1a118d1"
        },
        "item": {
          "id": "f9cb04b1-fcbd-47c8-bcd7-8ad53a7d409d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bf415c32-f80e-48f0-9d4f-1907aa66d28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1657b9f0-55f5-44fd-a69a-91173aee9b04",
        "cursor": {
          "ref": "f286082e-510c-4bc8-9a82-b51aac282d63",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a23e14b8-1db2-48c6-9d44-acc26b16d4c4"
        },
        "item": {
          "id": "1657b9f0-55f5-44fd-a69a-91173aee9b04",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a66e3aad-4e85-4a37-9e41-56c617496ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50a5f35-e508-4fe0-94be-913ad6ae2d47",
        "cursor": {
          "ref": "f2cfaa29-8161-49cd-a6ab-1ee9a0124f96",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "12ed2ed7-7129-445a-bf73-5c07181bfe9a"
        },
        "item": {
          "id": "f50a5f35-e508-4fe0-94be-913ad6ae2d47",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6ecb0593-0682-4bae-9dd9-869cf76cee11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f99873-40d3-4d8c-8d54-1c3623b23684",
        "cursor": {
          "ref": "3a0921d5-d262-46cf-84e0-fe78c6b195c0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d94e33b2-4156-44ee-be0a-2c62285091ed"
        },
        "item": {
          "id": "85f99873-40d3-4d8c-8d54-1c3623b23684",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2a4b00ba-adc2-4c5c-b5fc-fbc39de04aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e80ef2-379c-40a7-8ff2-f6d583098ae8",
        "cursor": {
          "ref": "b40c0fbe-ef28-457f-8584-1e305dbf6623",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2ce0fab4-83dc-446f-abc6-7064442590fe"
        },
        "item": {
          "id": "b0e80ef2-379c-40a7-8ff2-f6d583098ae8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1fd42345-d6f7-4507-a954-d1af6b0d1b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f3f49f-1db3-40f1-bac3-be2827b75e6a",
        "cursor": {
          "ref": "d96690b9-2866-44d7-86b9-791e9d4462ec",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "15f37447-b21f-4ea4-ae25-d9cb4771d563"
        },
        "item": {
          "id": "33f3f49f-1db3-40f1-bac3-be2827b75e6a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e985db3d-b731-4da8-9399-874ee0e4a1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c52954c-9e2a-4c80-bfb4-7a0924d44c8f",
        "cursor": {
          "ref": "b22c7951-b728-4d71-b730-d13d9fdc5405",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "841f438a-6c30-4231-90fb-0970996c7412"
        },
        "item": {
          "id": "2c52954c-9e2a-4c80-bfb4-7a0924d44c8f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a0519e0c-e2db-4938-a1c6-277e4cf31aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a50abb3-d3e8-45b0-8cd2-e9c9e4180a83",
        "cursor": {
          "ref": "c7b6d125-4027-4065-a3b7-3466553ae241",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6f02d37d-dff6-4a2d-8a45-d381cc9f4316"
        },
        "item": {
          "id": "0a50abb3-d3e8-45b0-8cd2-e9c9e4180a83",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5250a4db-10ee-461f-be5a-be1b9ef41b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3136df-c7a9-446e-91c3-2f0fc2e95822",
        "cursor": {
          "ref": "2cb57451-f37f-49f6-a6c6-2425e5ac00f6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "09326ca6-f955-4213-9806-c6d614132fee"
        },
        "item": {
          "id": "cd3136df-c7a9-446e-91c3-2f0fc2e95822",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3270cae2-adf2-4d62-a1b7-c773af8713ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe652df2-db09-48db-bcca-90f5ce446459",
        "cursor": {
          "ref": "28e6dba0-2f8f-41b0-8d24-706148c0125a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4ab57b18-1325-452a-8784-a5f9f69b3ac0"
        },
        "item": {
          "id": "fe652df2-db09-48db-bcca-90f5ce446459",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b80fa945-df77-4a5c-b4c4-794f95cecb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e19413-fc8b-48bc-9f6a-5613dfc230f3",
        "cursor": {
          "ref": "596d2e86-cd00-4269-a523-a8ef2a855402",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8bd53d87-2da3-4be8-a115-a7a6a44bc0e5"
        },
        "item": {
          "id": "d1e19413-fc8b-48bc-9f6a-5613dfc230f3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6736b502-c9f0-46ab-b14d-aca3831ccc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5461a6-59a6-4ffc-855b-6d4e9fb36820",
        "cursor": {
          "ref": "8b9e5178-a209-43b6-924c-a14c09dff95e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7efd38a9-1d15-4a22-9158-44702c5cf6d2"
        },
        "item": {
          "id": "ba5461a6-59a6-4ffc-855b-6d4e9fb36820",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b907ff89-694e-4ad2-8e64-9a1b905537fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51404d03-3bb8-4889-b981-462f27777f46",
        "cursor": {
          "ref": "5b0e33ad-3e91-4ecb-9993-fb201690f72a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "18e06256-086d-4761-bfde-165d27eb39f8"
        },
        "item": {
          "id": "51404d03-3bb8-4889-b981-462f27777f46",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0770f88d-8b22-4c05-999d-2c839adcf176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "811402cb-ae35-4f38-b30f-d5b39e8feb30",
        "cursor": {
          "ref": "4caee744-6b31-42bc-8738-8005c05dc44a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "29cbc980-ca9f-4745-a61a-8118cae3bfff"
        },
        "item": {
          "id": "811402cb-ae35-4f38-b30f-d5b39e8feb30",
          "name": "credentials_issue"
        },
        "response": {
          "id": "00bc5bb2-8b7e-407d-b0bf-3df053258a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d85366a9-50f2-4863-8d7e-cbaa9393d891",
        "cursor": {
          "ref": "3d12339d-6758-4ca9-9c97-c519831d6861",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1966540f-2622-42ee-8eca-f84b4882d670"
        },
        "item": {
          "id": "d85366a9-50f2-4863-8d7e-cbaa9393d891",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f1e153ac-e000-49bd-8e39-6f0135c6566a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3a8b18d2-552b-4982-b34e-1d9d3da07f32",
        "cursor": {
          "ref": "bd9dfbe0-4a87-4ffb-906d-dd3a640a79b6",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "db590506-ff00-4ae2-ab11-ac01ae44e269"
        },
        "item": {
          "id": "3a8b18d2-552b-4982-b34e-1d9d3da07f32",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "548374b2-fd71-4e70-bb24-c2b745c1b723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "210b9c79-7bc6-49ea-bc4b-7aa07c77a269",
        "cursor": {
          "ref": "400ad84c-aeb3-438b-8a2c-5f27025dace1",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "64f76ed3-e2c5-4c4c-8d42-35d71890b81d"
        },
        "item": {
          "id": "210b9c79-7bc6-49ea-bc4b-7aa07c77a269",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "22c584fc-694e-4d7b-9293-63f2dd982321",
          "status": "Created",
          "code": 201,
          "responseTime": 3698,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "577d0f5e-1274-47d5-a0c5-5edcc896f535",
        "cursor": {
          "ref": "621d96da-dfc3-4f7b-87c8-1edb37b57023",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3b82dd65-1574-4ab9-a3e6-ef3c2dc242ff"
        },
        "item": {
          "id": "577d0f5e-1274-47d5-a0c5-5edcc896f535",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4b9cb023-ab4a-4b7e-844e-bc55a8718e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4c329f4c-af51-4bc8-96c2-c8f602329f8f",
        "cursor": {
          "ref": "d22d23ff-3833-4bb4-bfeb-acb261606a7f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b89b823e-1ae8-4246-a9c3-50a37821e043"
        },
        "item": {
          "id": "4c329f4c-af51-4bc8-96c2-c8f602329f8f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "98a36f7d-2f2d-43fb-aa19-b95fae59f274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "53d75c76-d8a4-46f7-ba7e-990c367506f0",
        "cursor": {
          "ref": "2fb281bd-a580-49d6-aa03-c3f83685c6c9",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "18851b6a-fc96-45d9-880b-3b1aa4f068de"
        },
        "item": {
          "id": "53d75c76-d8a4-46f7-ba7e-990c367506f0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b83d9f99-f34f-4e5c-aa01-219fce0d9988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc744c8-28c0-4ef3-814f-dc721d2dc460",
        "cursor": {
          "ref": "5e690dca-5cae-4dc1-a597-2749e155100d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2ad731cc-e438-489b-b438-606a12278244"
        },
        "item": {
          "id": "5bc744c8-28c0-4ef3-814f-dc721d2dc460",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2d492f3b-c73d-4ce9-8e15-c37af0d067d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dff7cb-dff8-4729-bbb1-598d5807fda7",
        "cursor": {
          "ref": "cfc8182d-972e-4259-ada5-e47c21ccf9b3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f103358c-229e-4be5-bfd1-486cd2d5c792"
        },
        "item": {
          "id": "f3dff7cb-dff8-4729-bbb1-598d5807fda7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b1e48ac2-9e48-4036-bd00-63082042d6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e567351-720d-4b1c-87e1-d9b9129a7ab5",
        "cursor": {
          "ref": "65a118bb-a024-4464-940f-c6fad1c612c6",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "af8cf0bc-56b6-441b-b7cc-ca1c4f43819c"
        },
        "item": {
          "id": "1e567351-720d-4b1c-87e1-d9b9129a7ab5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fd9d5715-3348-45f6-b1c6-d084f0594d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7168a415-2264-447f-9be1-45715895ac0e",
        "cursor": {
          "ref": "94495ef7-976d-48fa-b303-62edc97ddc2c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a08544b3-476b-4be4-a938-ebdc46089497"
        },
        "item": {
          "id": "7168a415-2264-447f-9be1-45715895ac0e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "77615b74-53ed-45c5-8bae-86e805242393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2281fc54-048d-4bdc-bbb1-0513198dfca2",
        "cursor": {
          "ref": "2b04d369-f036-42c0-bad5-4f45dc577116",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a8ffef13-a72b-4775-a2e2-db174d056c09"
        },
        "item": {
          "id": "2281fc54-048d-4bdc-bbb1-0513198dfca2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5ff4559f-ccc4-4a29-972c-a1ef1799878f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aba20b2-e49f-4239-bb72-ba7d0a630212",
        "cursor": {
          "ref": "54822aa1-46cf-4700-802a-fdb65ed9562c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "08d301d3-3dbb-44ea-bdd3-e11c8b61dabc"
        },
        "item": {
          "id": "9aba20b2-e49f-4239-bb72-ba7d0a630212",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "473d2bea-ec88-4666-a3a4-d3b485ff3054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc3fae5-df7d-4d9c-b877-e82627b12c7c",
        "cursor": {
          "ref": "c77a4f44-3f52-49ba-ba99-45992e9307d9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "54e120dd-d623-4ebd-8bbd-aa50f5285156"
        },
        "item": {
          "id": "9bc3fae5-df7d-4d9c-b877-e82627b12c7c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "62878a4c-188a-4b9a-9624-d0bb73bcbca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1505fad-edbf-4302-96c5-f24fae89daeb",
        "cursor": {
          "ref": "c67d1abb-8f3c-4701-b93d-82f8d5b9723f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4c5e00f6-f6ae-4444-b8f3-51552b5a2128"
        },
        "item": {
          "id": "e1505fad-edbf-4302-96c5-f24fae89daeb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "283eaeb6-0148-4054-8827-1b95158ffaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0641c5fe-6fcc-48a5-8ff9-097f3061e032",
        "cursor": {
          "ref": "fc051fe5-f424-43a3-816f-8be9e5de0d23",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a53ea903-2bf5-43e1-946a-f43a2595ca51"
        },
        "item": {
          "id": "0641c5fe-6fcc-48a5-8ff9-097f3061e032",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aabdb63d-8977-433a-b2cf-9aec90c9e29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ed855a-cf3f-4b0f-b6c6-76c9047e7cfe",
        "cursor": {
          "ref": "933caae7-16a0-4f30-9c25-701014964015",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "50e74bdc-e2a8-4029-8b12-b1312e88b8cd"
        },
        "item": {
          "id": "61ed855a-cf3f-4b0f-b6c6-76c9047e7cfe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e3ef2f2f-cc6b-42ec-82cf-503c33cfe8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1f479f-a188-4f7d-bc64-c857025d67fb",
        "cursor": {
          "ref": "0607d0f3-9334-4d2e-8600-78ba3e4b60f5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cb925d83-bac7-47c7-a9b3-5f0a3ae45a9d"
        },
        "item": {
          "id": "9b1f479f-a188-4f7d-bc64-c857025d67fb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bdb7feb3-c046-486a-b149-8973d30b7272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa381c7-63f4-4fed-8e71-b8a0065b793f",
        "cursor": {
          "ref": "4daa41f9-6643-477b-a04f-598d25631f97",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9d84d801-c90e-45eb-97c6-33e22d515402"
        },
        "item": {
          "id": "afa381c7-63f4-4fed-8e71-b8a0065b793f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "99ae1c37-ddb8-4ddf-b2db-3a24e3de1a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b9cef4-1b80-445c-b979-823b2c0e0571",
        "cursor": {
          "ref": "be66af6e-8bc4-4403-9c7b-acf187f38edf",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a8ee430e-a547-4fdc-970c-27f7f8ef143d"
        },
        "item": {
          "id": "f9b9cef4-1b80-445c-b979-823b2c0e0571",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2b861009-6c91-4789-8d06-948f4b169bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069b348e-73af-4ad8-8d45-e5a04aad9c9e",
        "cursor": {
          "ref": "7c1d063c-06d0-485b-8c0f-ccb32465702f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "94a687e3-539d-4380-beb6-41d91bddf9a8"
        },
        "item": {
          "id": "069b348e-73af-4ad8-8d45-e5a04aad9c9e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8413ef0a-7a14-4df7-a432-ddfcf0cea8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ff8a42-6117-4be7-97f8-5cef013525d7",
        "cursor": {
          "ref": "4aa0b9ae-1aa5-4458-9b0b-454f198f7b10",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1e9dcc29-f0ce-4a8f-814b-87ed197994e0"
        },
        "item": {
          "id": "d8ff8a42-6117-4be7-97f8-5cef013525d7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "751b81fa-6955-4373-9f43-8a831f4899eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791b704e-a05c-46a9-ab39-0caf5c982637",
        "cursor": {
          "ref": "5f3744b1-5895-4f47-b659-9084c383f658",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b21c68d7-7587-4a4e-9f81-aa4b9a6b6559"
        },
        "item": {
          "id": "791b704e-a05c-46a9-ab39-0caf5c982637",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8291b4dc-e44a-450e-b5ed-77e191ac7b8e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "42a09e71-fb5d-471b-80d2-edb53b175da6",
        "cursor": {
          "ref": "3ca564b5-8962-4e95-8036-e46ce0d69739",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5df1b1f0-e24b-4ef9-81ef-7b256e45d901"
        },
        "item": {
          "id": "42a09e71-fb5d-471b-80d2-edb53b175da6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "52876682-8825-41b4-b9af-c56b1f98542b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32195f3-f3e5-4363-a523-a452064b35fc",
        "cursor": {
          "ref": "de713d58-9154-4bba-9445-cddf84b3c57f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "143a2a0b-e4ec-4583-9854-787cabdbf752"
        },
        "item": {
          "id": "e32195f3-f3e5-4363-a523-a452064b35fc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "81d22da7-1cae-4026-b69d-b0aa0a7b3137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05429e2-e84b-4c52-87ec-f44247b0aa2e",
        "cursor": {
          "ref": "c35d1285-cbfa-4091-995d-841876e3ffe4",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "15538f49-f1ce-4256-b94d-c68be09b709e"
        },
        "item": {
          "id": "f05429e2-e84b-4c52-87ec-f44247b0aa2e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "488f88bc-9120-4ce2-9748-2bdfdce72a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb7e8df-82ec-462a-a181-7e4fc2795185",
        "cursor": {
          "ref": "8ea7c784-236e-4db5-b2fb-98b82a647d14",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b3f70731-3597-46e9-8308-ba32e48da8fa"
        },
        "item": {
          "id": "deb7e8df-82ec-462a-a181-7e4fc2795185",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "705f9c48-c912-4043-916c-b228db54c91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7170adee-cd5f-4a1d-b738-8db8cb4c1781",
        "cursor": {
          "ref": "3a7defdb-d900-4848-93ed-ede90e506722",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a954b190-4da9-4d1a-9506-d7cae250e8be"
        },
        "item": {
          "id": "7170adee-cd5f-4a1d-b738-8db8cb4c1781",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "343b2ae8-1d68-4ba2-a4f4-1e5bb9259ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5d0111-bad0-4d71-b644-7974ca2840f9",
        "cursor": {
          "ref": "03f57fa7-a96f-4a58-9ecd-a5f4034711b4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5ec8c289-beae-4045-96d1-087f1d1a62db"
        },
        "item": {
          "id": "5a5d0111-bad0-4d71-b644-7974ca2840f9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0f1c90d7-d649-40fc-90a3-c601c6210fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b813c87-28a5-4f86-a2c7-cbde747663bd",
        "cursor": {
          "ref": "c2fc9590-c585-4411-a418-593976213a6f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7ed6209f-bb29-4856-a9d1-2d6f851ce95c"
        },
        "item": {
          "id": "6b813c87-28a5-4f86-a2c7-cbde747663bd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ca24309d-50b5-4b88-9176-bb052d7524c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f26e8b3-0c75-4e75-a693-81c1ad15ce3c",
        "cursor": {
          "ref": "e1ce71f4-8f84-4cfe-9541-7077045e6177",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c57f5cf8-be6c-4070-9ecd-2d08ce517ab5"
        },
        "item": {
          "id": "8f26e8b3-0c75-4e75-a693-81c1ad15ce3c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "508f4f37-52f2-4108-a04c-13ef2f1f57c7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "f84627b6-d673-41e2-a08d-dd953aab41bc",
        "cursor": {
          "ref": "1ec2e46b-55b8-44a5-86f4-87b445c64692",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "da23cc14-82eb-4e2c-86c6-4452f7bcb67c"
        },
        "item": {
          "id": "f84627b6-d673-41e2-a08d-dd953aab41bc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "780bd82e-54a5-456d-ba46-7355b8977a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705335a4-44c2-457e-a72a-ca9484792776",
        "cursor": {
          "ref": "62d240eb-c36a-438b-99cf-514883efcb1a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bcb1e3cb-73b7-4b61-8be1-904966f76784"
        },
        "item": {
          "id": "705335a4-44c2-457e-a72a-ca9484792776",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "657b4822-8b5e-4328-94e7-276bb6bb0bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01de10d7-0876-4b05-9353-7b376d683804",
        "cursor": {
          "ref": "130e08e8-1116-4647-a9df-bd9f980c6821",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "46762a31-c253-4508-89e6-102574c48195"
        },
        "item": {
          "id": "01de10d7-0876-4b05-9353-7b376d683804",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "72629379-7f85-41d2-9d66-f74bd54383d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda78f8b-c1ab-4d16-8e54-253f1c871aad",
        "cursor": {
          "ref": "b307236d-df06-4879-b008-38ac3e5a6c3c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "10d1307b-99c0-4ca5-9e39-67f714b349f5"
        },
        "item": {
          "id": "dda78f8b-c1ab-4d16-8e54-253f1c871aad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e4518489-e31f-4c9d-a119-a7f403983309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11e538e-a27d-4d55-a7a3-05d8e80284ff",
        "cursor": {
          "ref": "901a8321-265b-45c7-9a81-c3fa8c57b7ab",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "37551011-63ec-4f19-80a1-cbedc3ff5fce"
        },
        "item": {
          "id": "b11e538e-a27d-4d55-a7a3-05d8e80284ff",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "eb6e5f0b-fb33-4f0b-9e68-5dbb94be6f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1c7b8d-690d-4575-befe-5c742bc81782",
        "cursor": {
          "ref": "5cfce69e-763a-4e23-afea-4ad2a39047e3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "40360e9b-f892-4729-bcef-354170f8d7e3"
        },
        "item": {
          "id": "bc1c7b8d-690d-4575-befe-5c742bc81782",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "baa0712f-d9e7-4dfa-adc3-4712247988cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb62514-75fb-4d40-800c-2794223c2fdf",
        "cursor": {
          "ref": "89e36756-901b-4606-a19c-b136d4308c3e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e2448ab5-4207-4a5f-a23a-b79f1f859312"
        },
        "item": {
          "id": "4fb62514-75fb-4d40-800c-2794223c2fdf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "114143cf-6157-402e-819f-3bf1368f38d7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "5f1df66e-3592-4fa9-9882-4424c4dec38a",
        "cursor": {
          "ref": "0935a5a8-b22a-48fb-9682-ad4e6198a339",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a0c1170b-35eb-48fd-9696-51b15dcb28ec"
        },
        "item": {
          "id": "5f1df66e-3592-4fa9-9882-4424c4dec38a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "297a1676-153c-47c5-8492-aa176ff664d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def41dec-8390-4551-ab5c-aa47ddaadc76",
        "cursor": {
          "ref": "6f5bd9ad-1f1b-43f4-8520-e8f4bee71f51",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d319aaa8-6ac7-4ff5-9a8a-a8b5d4bce79f"
        },
        "item": {
          "id": "def41dec-8390-4551-ab5c-aa47ddaadc76",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "958e95bc-4118-409d-a035-33f15194133b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456e5b91-ae3e-46da-b574-2b2a05bb7929",
        "cursor": {
          "ref": "15205c9f-11c6-4add-84dc-f0d9836ec10b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7cfb25aa-c758-495f-8445-84f657f2550a"
        },
        "item": {
          "id": "456e5b91-ae3e-46da-b574-2b2a05bb7929",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "15896b19-c0f5-4cfa-b273-e7442060ed1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb36e83-8b83-49ff-8f8d-a82b3a7011cd",
        "cursor": {
          "ref": "fefc25f1-3207-40eb-a5d1-7fc4669c3b28",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "32db23e7-c1be-42d9-b4fd-81131540b606"
        },
        "item": {
          "id": "ecb36e83-8b83-49ff-8f8d-a82b3a7011cd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5f594377-18da-43a4-a52d-91be327095b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85860b78-97d6-4b7c-a786-b2b811019124",
        "cursor": {
          "ref": "3497a843-7ec0-4506-a361-e2a15f3c1f24",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6039ecaa-42e3-45b5-8e2e-8160ee345c54"
        },
        "item": {
          "id": "85860b78-97d6-4b7c-a786-b2b811019124",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bd60ec3c-db8a-48d7-87c7-9f2c5cedf1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6eea904-6b10-43b3-9568-f937f7a331e3",
        "cursor": {
          "ref": "6f00c9c8-b190-439a-af79-3073fd1c8e1b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c1de2ea6-0d5d-4915-96eb-0038f5bcf4e1"
        },
        "item": {
          "id": "a6eea904-6b10-43b3-9568-f937f7a331e3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "febc2d1b-28ab-4b65-a2a0-ee19207e7e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050c8961-5496-485c-9a98-1428cdf0427b",
        "cursor": {
          "ref": "77b422f3-0266-4ee3-9bf0-774e9dc50971",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9ad50bc3-ba39-4e01-9e78-3a9c4564eb16"
        },
        "item": {
          "id": "050c8961-5496-485c-9a98-1428cdf0427b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "58831208-0b86-4a86-9066-3eabc6cb66f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca4cbeb-a541-456e-9791-7c2f36b38aaf",
        "cursor": {
          "ref": "6cfcb903-683b-4e2c-ad84-22ec3a33c8f6",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "674eb645-6b57-4ee4-a246-131fa792883b"
        },
        "item": {
          "id": "aca4cbeb-a541-456e-9791-7c2f36b38aaf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ac4fee6c-1f83-433c-813d-07d1e5ac08ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40309380-ef01-47d1-9446-c9ba7f9732c6",
        "cursor": {
          "ref": "6f9f0b05-bce7-4a15-ad44-e8f1a2aa7de8",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1ec2d96d-9349-460e-ad29-56d5f6fd7378"
        },
        "item": {
          "id": "40309380-ef01-47d1-9446-c9ba7f9732c6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a5fe694d-827a-45da-9cdf-28eaf413e639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47387df2-5e36-4fa8-85a3-709f7f19f434",
        "cursor": {
          "ref": "6e77d9f9-5ec0-4d18-8c5d-23e13a67a1a9",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "48a16132-0e3d-4f79-b3ee-bbd8301831a1"
        },
        "item": {
          "id": "47387df2-5e36-4fa8-85a3-709f7f19f434",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "69e4dc71-94e9-409b-973a-648d7aeeb753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0b2911-6eee-4c2d-be56-47bd5e47fcda",
        "cursor": {
          "ref": "aa16cc41-7d15-4ebc-9f52-5c43cfc90d3e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ffd69631-08c0-4dd3-ab18-37abd8bfc7be"
        },
        "item": {
          "id": "8e0b2911-6eee-4c2d-be56-47bd5e47fcda",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "30c666c5-5abe-409e-bce6-6b4507ed6086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e1a56c-a0a5-4b4e-a8e9-050a559dec43",
        "cursor": {
          "ref": "efaf776d-8cc4-47b3-b047-e0db097f1102",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "29fce72c-882c-4e45-96c5-9119d83dff59"
        },
        "item": {
          "id": "54e1a56c-a0a5-4b4e-a8e9-050a559dec43",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1d7bd9a6-7598-4ffb-bc86-7e0ed0f2fded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df74009-fa65-4a89-8069-2664bc054678",
        "cursor": {
          "ref": "80c42777-add6-404d-83a6-e22949a466dd",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ee6ac85c-16d4-493f-8fb2-970bbbb6a627"
        },
        "item": {
          "id": "3df74009-fa65-4a89-8069-2664bc054678",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "243eb258-ff92-49fa-af8f-449c5d5bcfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d31481-9915-4ae3-b82f-22defdfe5b91",
        "cursor": {
          "ref": "94227b21-3221-4b3a-8181-fdfbe1a7b550",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "91eefbaa-276c-42da-874c-a8ecb47623c8"
        },
        "item": {
          "id": "c3d31481-9915-4ae3-b82f-22defdfe5b91",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ed7c0ab1-1790-4931-a7e6-58ad67ddd794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f29132-d7ec-4826-8bbd-f3b98602abf7",
        "cursor": {
          "ref": "479be8fd-d1c2-4728-b767-87ed0aefc372",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1c8f4033-373c-436e-a62a-bfd15c6383ee"
        },
        "item": {
          "id": "36f29132-d7ec-4826-8bbd-f3b98602abf7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aaf560af-2111-436e-8543-29e191a3e1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4639b5-f1ea-4667-9f42-22d612e6d784",
        "cursor": {
          "ref": "be85fe4f-ff3f-46ff-aeb0-9403a911b6da",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bdd11b6f-44e5-460c-ab87-6526fcddf470"
        },
        "item": {
          "id": "df4639b5-f1ea-4667-9f42-22d612e6d784",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "57166db4-8804-41cd-8d6d-441a60456be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd551a5-9b47-42e6-8ade-728fa1a3565a",
        "cursor": {
          "ref": "45ade463-13f3-44e9-bc9e-20919655227e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4f8a642c-7860-4171-9661-f0d0afb6b4bc"
        },
        "item": {
          "id": "efd551a5-9b47-42e6-8ade-728fa1a3565a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "11772d04-4675-4ecb-bbca-3cb38acfe2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdde957d-402d-4084-8543-9ffa4f535183",
        "cursor": {
          "ref": "fe07bfe9-30bd-49ae-8cdb-73bf9a3b6ae5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "33b3e074-17e2-4249-89a6-b59041f23a74"
        },
        "item": {
          "id": "bdde957d-402d-4084-8543-9ffa4f535183",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1d9cc952-1fc5-4d70-b3c1-08683454133b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "4dbfaff2-788d-4f2d-a185-dd0c9810535a",
        "cursor": {
          "ref": "ed58e32c-b4d4-4f29-b5ed-a8ade995d43a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d32588c0-2c0f-400c-b74f-13b32b52491d"
        },
        "item": {
          "id": "4dbfaff2-788d-4f2d-a185-dd0c9810535a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2ff95757-7643-4d0f-aa82-910aed0a772f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a83841-8f3e-4092-9d9f-1fe754afed7f",
        "cursor": {
          "ref": "cffb3801-039c-4176-8646-dd7cb8077a1e",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f4e44053-e740-4c0d-bb94-7f84b449fb72"
        },
        "item": {
          "id": "11a83841-8f3e-4092-9d9f-1fe754afed7f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "152a0bf8-68b3-41ff-a7fc-2a68ce510945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2ea858-e2fa-4319-82ca-da2bea087207",
        "cursor": {
          "ref": "24a5a001-de73-4bc8-a128-9e28f487379e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "02ff33d0-ccec-4531-88d2-3fc61c5a10b3"
        },
        "item": {
          "id": "eb2ea858-e2fa-4319-82ca-da2bea087207",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "40538187-cd74-4932-bba1-b552521334d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e8b151-6edf-477e-b3eb-ed211b71a043",
        "cursor": {
          "ref": "669eb42a-4d1e-4de9-9596-4458078d871c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "21d51487-6f7c-4e88-acfd-df052fc5bf0b"
        },
        "item": {
          "id": "d9e8b151-6edf-477e-b3eb-ed211b71a043",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "827ce04f-8133-46a9-93ed-0fee8442b20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a698c6d2-400e-4153-8ac2-b87e53488575",
        "cursor": {
          "ref": "f1987570-60cc-498d-9dfd-50ea9cbb30ad",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "52ddc494-e0dc-4125-847d-5f84f03ac8f3"
        },
        "item": {
          "id": "a698c6d2-400e-4153-8ac2-b87e53488575",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a3815a52-84bd-4725-a8b4-e37d4bd8deae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94da749-dd91-4a12-b8c8-c58c6a61b5f9",
        "cursor": {
          "ref": "0140f582-2578-4be6-9201-05646a17332f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8d78beb7-2657-48f7-ab4b-46b3b1c54c61"
        },
        "item": {
          "id": "b94da749-dd91-4a12-b8c8-c58c6a61b5f9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "559dc52c-e721-4098-a7f4-c56fc9e89c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724ec0ae-ceac-4741-9da4-0070158bc2d5",
        "cursor": {
          "ref": "0668aae7-6d48-4f32-90b5-a4472bb07fe6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f2922427-33e0-4923-aa8c-673b65aefd4b"
        },
        "item": {
          "id": "724ec0ae-ceac-4741-9da4-0070158bc2d5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "65e6a183-aae8-4c8a-bf63-fef4aa38de88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79981a7-ea30-41e0-b550-4a6d1403051e",
        "cursor": {
          "ref": "5caafe3c-f7cf-477a-a442-cbed1da27e6f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3b18a555-faa6-411a-8498-3821414a4371"
        },
        "item": {
          "id": "e79981a7-ea30-41e0-b550-4a6d1403051e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27bb9bab-0888-4158-99b6-3471f6a985d3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "24cbee07-520d-4fa6-aaad-dc724f59b596",
        "cursor": {
          "ref": "7d56372a-adba-4457-b7ca-abe7568bc33b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4fd01a13-5cf6-41d6-be7d-45bdf0281ff4"
        },
        "item": {
          "id": "24cbee07-520d-4fa6-aaad-dc724f59b596",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9becc1b2-47ae-4d0d-adf0-5ef44d2932c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8f25df-ffe8-4945-9283-4b98f90cc029",
        "cursor": {
          "ref": "b8f633bc-99ea-42c4-a590-486cc79d86df",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "48aa0d5d-144e-42d7-bd7a-00072153f921"
        },
        "item": {
          "id": "cc8f25df-ffe8-4945-9283-4b98f90cc029",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3ebde54e-6af3-4555-a07e-37ef761e51f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd35fc92-c1b5-4329-957c-510c71007c92",
        "cursor": {
          "ref": "a5a025ff-9920-44fa-a59c-34143d328bda",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0b7dfc6b-04a1-4ab9-a4e8-3ccc6bef8d47"
        },
        "item": {
          "id": "bd35fc92-c1b5-4329-957c-510c71007c92",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bcd6e762-46b7-49da-ba3d-d0b10d90b0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5910baae-dffd-41f7-97e5-52299befaf56",
        "cursor": {
          "ref": "c83e275e-adc8-469c-b99e-c1b58a32edc8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c3f7a7fa-45d0-4a60-9178-c1ff27032854"
        },
        "item": {
          "id": "5910baae-dffd-41f7-97e5-52299befaf56",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "df2c45b8-86e8-4e4e-aee6-6544a92d29c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420d8338-4872-4dd6-b5be-6fd5aa7df0cd",
        "cursor": {
          "ref": "f82afeef-8891-411a-94b4-b81fd3a7bfc5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d9df533a-9abd-4bed-a09b-a39d84b15d01"
        },
        "item": {
          "id": "420d8338-4872-4dd6-b5be-6fd5aa7df0cd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3b311748-a91f-471c-b08a-dcf40bea2a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6d9377-380f-4105-b814-72931886d663",
        "cursor": {
          "ref": "029eb352-3a0e-490d-82a1-a0ad28331fe3",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "845bb977-f81c-470f-9306-221f9fdb7186"
        },
        "item": {
          "id": "9c6d9377-380f-4105-b814-72931886d663",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ea8ad7df-de4b-4075-aa7b-0f3a0d031d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a4ef7d-21f4-46e5-93b5-e3479c53e473",
        "cursor": {
          "ref": "3c0b0bc6-6e5c-4551-b2e5-6aeff9d89646",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ef7cb8ae-0488-4f75-adcd-ef27b7a37857"
        },
        "item": {
          "id": "c2a4ef7d-21f4-46e5-93b5-e3479c53e473",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8e51ea8e-3c67-4de0-90fd-645f1eefdee6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "27940823-6cb9-4ac8-80f4-a5b9d732fec9",
        "cursor": {
          "ref": "7900e38a-c4c0-48bd-8fc6-0aca41df7f6d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "22a005aa-d95e-4c1d-901b-ee28d9becddb"
        },
        "item": {
          "id": "27940823-6cb9-4ac8-80f4-a5b9d732fec9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a97d84c6-13d4-40fa-97b4-ca95b83c0fcf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "65317cdf-8228-4377-8a57-86a2c8a2222a",
        "cursor": {
          "ref": "b88f45d4-6f4a-42e5-9e1a-c0ee60923781",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b7cc9593-aa7c-4336-9677-c2cf1ea3ff85"
        },
        "item": {
          "id": "65317cdf-8228-4377-8a57-86a2c8a2222a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9e89a58f-1f55-4b2f-9134-816472127ec3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "e4e99c46-4939-4093-a697-79d9821a7445",
        "cursor": {
          "ref": "85c10a2f-47c1-4a76-8266-d94a9138b5ef",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "71cdd577-13fd-446f-ad5d-56682d146085"
        },
        "item": {
          "id": "e4e99c46-4939-4093-a697-79d9821a7445",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a088efcf-802c-488d-a775-b0bc43afbfcc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "0a549cee-a83e-4f97-8c64-199086160f24",
        "cursor": {
          "ref": "38ee1feb-9e47-4cd9-88e0-44cca65262a3",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a2305f94-dc42-4fa0-a83f-ee7a65ab55ba"
        },
        "item": {
          "id": "0a549cee-a83e-4f97-8c64-199086160f24",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5fba3fa1-a4d3-4b25-a9bc-99ddb9bc673d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "df5f26ae-5ddb-4b7a-9cb3-973f3b9fe2cd",
        "cursor": {
          "ref": "16b68d7b-1772-4d6c-ab07-cb2b9aeee1db",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2241f008-160c-48c4-9b97-8a8b96022f76"
        },
        "item": {
          "id": "df5f26ae-5ddb-4b7a-9cb3-973f3b9fe2cd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4b3a6570-d31c-465f-8efa-b78e4fe5e884",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "1b11f985-1a72-49d8-87bf-e3ecb44bba95",
        "cursor": {
          "ref": "4fffa6ca-aa59-45eb-a163-3897266c9060",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "57e06867-33c9-4a74-bbcd-761b30cd706e"
        },
        "item": {
          "id": "1b11f985-1a72-49d8-87bf-e3ecb44bba95",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b016a370-9169-485a-a7f2-5d560287c71d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dacf624-39e7-4352-b829-e5c77ca858f9",
        "cursor": {
          "ref": "de69a2d3-bf86-434f-aa29-80427d5fa81d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7484c5a3-4632-4fa8-9f90-99419b322645"
        },
        "item": {
          "id": "6dacf624-39e7-4352-b829-e5c77ca858f9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "777e202f-dbbd-4a90-aa93-1d5dbab0a382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c901a8-ddad-40e6-98de-c5dda6b3bb7a",
        "cursor": {
          "ref": "18e06950-d456-44b5-9615-9542ee5b5f39",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f5f8cbbb-06c5-4679-882f-8f1772604f1e"
        },
        "item": {
          "id": "57c901a8-ddad-40e6-98de-c5dda6b3bb7a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "523c6a47-e5e8-43ee-a998-5822d15345a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04c77ed-5ad1-4b79-a220-e9173776972a",
        "cursor": {
          "ref": "7b60772d-eb7e-4e2b-b378-bd4f0619fc5b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "17253b33-b134-45ba-88b8-556d6b08c2fc"
        },
        "item": {
          "id": "f04c77ed-5ad1-4b79-a220-e9173776972a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "84096c26-27ef-4c16-a3f0-2c469c9ccd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31a9cbd-1e21-4d8d-a67f-f2aa11671b89",
        "cursor": {
          "ref": "0bf35549-2258-46d8-9adc-fb0df78b5cbf",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "40846d0d-82cf-4d20-8532-887b00693b28"
        },
        "item": {
          "id": "e31a9cbd-1e21-4d8d-a67f-f2aa11671b89",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d09031a6-a921-412d-a037-a39fac80ce9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c6366e-9345-4dec-98d6-1cd987674c2b",
        "cursor": {
          "ref": "c631111c-96f7-4eb9-8c50-16de184a5934",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c2d89749-b095-4ed0-8a51-c940ddb6db30"
        },
        "item": {
          "id": "27c6366e-9345-4dec-98d6-1cd987674c2b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3fda1818-12ea-4ade-ae7f-92c0cfb20ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd85d60b-e5d5-4d6f-86ed-3b5d1a8e0345",
        "cursor": {
          "ref": "8d7fd27a-8af1-4180-b52e-0bc6a96ceb3f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "65c42de8-2aa9-4178-8835-9fe1515b3fb4"
        },
        "item": {
          "id": "cd85d60b-e5d5-4d6f-86ed-3b5d1a8e0345",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "111bdd5f-6dab-4622-8df8-a1488fed00b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f758ca-cdd2-473c-9392-d28698e6b234",
        "cursor": {
          "ref": "9b062d7a-5e8d-43a4-b6a6-22385c9a67e1",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "31b176e1-8a66-4635-8077-5b7078be9f0e"
        },
        "item": {
          "id": "b0f758ca-cdd2-473c-9392-d28698e6b234",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f07ae998-c0de-486a-89ff-3ce9d28866e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1e96c8-aff0-41a1-84ac-ddb00b740dda",
        "cursor": {
          "ref": "5508cfcf-0c54-4b67-88c8-9c53abebe187",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b644c0a3-8bf7-484c-899c-7e258dfe3f84"
        },
        "item": {
          "id": "ad1e96c8-aff0-41a1-84ac-ddb00b740dda",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7797c31d-80b8-42f1-ad3c-0cad4b2b35fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99473c4-fd8b-4478-8fad-d63be4e82b2e",
        "cursor": {
          "ref": "6d44342b-1d51-49a6-ae0d-904c00795614",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "090de061-6ed0-495d-b5b5-5cc596d31153"
        },
        "item": {
          "id": "e99473c4-fd8b-4478-8fad-d63be4e82b2e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d6e2eb1d-fbf6-4a73-ab4e-75fb29825f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0a147a-08fd-46fb-affb-9b3fa15861dd",
        "cursor": {
          "ref": "996e1edc-4ec7-44b1-82e4-0c85be3e8c16",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "10601d77-7b55-4458-b577-a149197189bb"
        },
        "item": {
          "id": "3f0a147a-08fd-46fb-affb-9b3fa15861dd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2a31d6cf-b4f2-4a73-a84e-598d411756ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b00172f-384d-4eb6-a9e0-134daf2c6fce",
        "cursor": {
          "ref": "06f60bb3-5153-4a4e-9279-ded6c4dc1e90",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a354c45e-bdf3-4038-892c-dee9af0e609b"
        },
        "item": {
          "id": "6b00172f-384d-4eb6-a9e0-134daf2c6fce",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2413d68e-ea08-4dd4-bf8d-145d1517e36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbfa0cf-17c1-40f0-8fad-331373f7317e",
        "cursor": {
          "ref": "19aa3753-f234-44d2-946e-691a9cffa501",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c6768ec8-0324-4911-9f39-638061821f63"
        },
        "item": {
          "id": "4fbfa0cf-17c1-40f0-8fad-331373f7317e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ceb06386-d631-4df5-806c-7be5ac075b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153eba50-41c9-48ab-bf9a-33655a8ed530",
        "cursor": {
          "ref": "81cc018c-6ff4-4f1e-8192-ff26318de756",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "93a4ac30-3313-4225-9bbd-8165a7956f6a"
        },
        "item": {
          "id": "153eba50-41c9-48ab-bf9a-33655a8ed530",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "06b9c2cd-c812-4f0d-80c2-815df530a2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984aaaee-e964-42d3-b4ef-cb670cc3cafb",
        "cursor": {
          "ref": "fe734eb4-21f9-42ca-8e54-bdcd4fd8c91a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "90d5836f-de98-4431-9c4e-7ca875e29988"
        },
        "item": {
          "id": "984aaaee-e964-42d3-b4ef-cb670cc3cafb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3cad334f-691a-4975-ad0e-7de0ceac9b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4ac7d0-b4b2-4dfb-bf75-32a200d3c745",
        "cursor": {
          "ref": "7ec35f0b-155d-4337-88d0-edf17f1367ff",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cb304aa3-14cc-4270-bbd2-feab238c1c79"
        },
        "item": {
          "id": "2f4ac7d0-b4b2-4dfb-bf75-32a200d3c745",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e2b8b3e3-e37a-4725-9afb-7f0e82a315c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ef0add-7721-4653-8324-0b22fee841a0",
        "cursor": {
          "ref": "3efc9fb1-664f-4688-90c3-49130defed20",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "09801ae0-51b1-48ae-9067-bd2f55c41edd"
        },
        "item": {
          "id": "71ef0add-7721-4653-8324-0b22fee841a0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "72891876-8971-47e8-ba51-5f6b9aa1f951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644e7000-ff05-44d6-b871-31ba70d5f3f1",
        "cursor": {
          "ref": "4e80789c-db04-43cf-a67d-7bbe1c7871ef",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b7cb9b83-ad07-4139-99ea-a958057ccaeb"
        },
        "item": {
          "id": "644e7000-ff05-44d6-b871-31ba70d5f3f1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0d4519e8-01f3-4613-9f0d-8c09bb8c9626",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "8c173361-3653-4772-b775-c9f5e52f57bf",
        "cursor": {
          "ref": "5998c24f-1018-44b0-a48d-f8a1d428ca03",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dc051552-9b0b-457e-8642-43801528baac"
        },
        "item": {
          "id": "8c173361-3653-4772-b775-c9f5e52f57bf",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fbbba1b6-4f01-4b09-ac9f-03f730bc203e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c68481-28ab-45b8-abe0-e53ecf2b90df",
        "cursor": {
          "ref": "3f037386-17e4-4886-9f0a-77037f2bdb28",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "62c02f3c-8a4d-4f41-8886-52b94efdc8f3"
        },
        "item": {
          "id": "f3c68481-28ab-45b8-abe0-e53ecf2b90df",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "97a8fbb9-8b77-4452-b63d-ef8e1abb9479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c45f296-e4ee-432c-bc95-35961a138522",
        "cursor": {
          "ref": "a3c7bf1d-bf27-42fd-b6fd-1bced1757bac",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cce1127e-e784-4bd8-a77f-e8a5ebc9bb94"
        },
        "item": {
          "id": "0c45f296-e4ee-432c-bc95-35961a138522",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fd4881ce-b2c6-4db8-b287-866c7f203631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a214a9-8c59-496a-805a-cc7c4e19cc94",
        "cursor": {
          "ref": "08acf7ce-668d-4112-a236-85518b86333b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "81821531-3470-4ed9-a558-6708f13cd933"
        },
        "item": {
          "id": "18a214a9-8c59-496a-805a-cc7c4e19cc94",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ae1771c6-4f79-42b1-bc77-643221940cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2b7413-f7d6-42db-8689-6cc86711ec70",
        "cursor": {
          "ref": "a01ea1de-d969-480c-9b1b-9d19496cf2a3",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "002383d2-5dca-4e6e-aab3-cf501129333a"
        },
        "item": {
          "id": "db2b7413-f7d6-42db-8689-6cc86711ec70",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b34d5d74-f949-4177-a071-0771c9ae1f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9e4d97-d281-471e-be6c-d2bfa22a2b43",
        "cursor": {
          "ref": "5d9c5954-a600-4080-92f4-084653ebad48",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2a0058e4-5595-42ee-8077-4475e55fa96a"
        },
        "item": {
          "id": "9d9e4d97-d281-471e-be6c-d2bfa22a2b43",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3a9eb72e-bddf-483c-b675-7e596306d227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db20935-b90f-4870-a0d8-8984dcb39445",
        "cursor": {
          "ref": "590494cb-d9c4-482a-98de-a6d13f4dcfb5",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3542ab02-f999-4306-ad72-c2e111e7949e"
        },
        "item": {
          "id": "7db20935-b90f-4870-a0d8-8984dcb39445",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fbb01593-bf98-4dc2-b2a6-7a8bf122cfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7127ce-37c7-451d-80b7-f3119811797f",
        "cursor": {
          "ref": "4246560b-e728-4a58-b9c5-4aa2e77bb2d6",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cee2ff1e-7c99-4aab-86ea-69d6e2c22dfc"
        },
        "item": {
          "id": "aa7127ce-37c7-451d-80b7-f3119811797f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c5ca9be3-8c6d-4c2e-acab-b6f67f64f545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6cce16-f588-414a-a2ca-9d29c3aaffc9",
        "cursor": {
          "ref": "2313086d-1a69-461d-849e-e53cbc335fcf",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e7fe6264-eda4-43ae-aade-28de4b1b64b4"
        },
        "item": {
          "id": "2d6cce16-f588-414a-a2ca-9d29c3aaffc9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2330daab-3728-473e-be8a-aac10120e151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8172f4-f4e1-497a-874e-b8941367fb4e",
        "cursor": {
          "ref": "063efe49-b74f-475f-a7f2-eb86b3f981c7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f65576e7-1ded-4e59-a909-18803d72a53b"
        },
        "item": {
          "id": "6e8172f4-f4e1-497a-874e-b8941367fb4e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9dbdf9e7-611b-4374-afe5-3715bb57dafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0191f5b8-5ab3-4f28-b535-60feeac4272d",
        "cursor": {
          "ref": "02c8aea1-4bbf-4274-bb91-1aec371744de",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b2529201-61e6-46cb-8974-251e4243a603"
        },
        "item": {
          "id": "0191f5b8-5ab3-4f28-b535-60feeac4272d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8d22fc76-fb44-4c45-b131-18d84acfb728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79eb51f-9c62-4dd0-b597-a5181afd36fd",
        "cursor": {
          "ref": "6f3a19c1-9267-4d6d-aac6-1939fc695f7b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7eba77c6-2183-4800-8f06-36dd05d5b3fb"
        },
        "item": {
          "id": "d79eb51f-9c62-4dd0-b597-a5181afd36fd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7b46b8c2-9451-4bb5-88d2-0740b8101766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dc08f2-5477-40f2-b7a0-56edc617ef45",
        "cursor": {
          "ref": "fc51ddcc-9fb0-44ff-b03d-f74875ab4063",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ab25e713-8110-4e87-b89d-acadf3aa51f3"
        },
        "item": {
          "id": "f5dc08f2-5477-40f2-b7a0-56edc617ef45",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "45483ecd-2e7a-49bc-a0ed-7650e51f8463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422ec7b4-d223-4ed7-b61c-c99c6259c8db",
        "cursor": {
          "ref": "608b59b0-87d9-4505-ab5f-ef26f0e5b0c0",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "88057b46-f99a-4694-bd4d-693ff9b42653"
        },
        "item": {
          "id": "422ec7b4-d223-4ed7-b61c-c99c6259c8db",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "865c6d12-edc3-41ba-bfec-40637bbad265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933255cb-2535-467c-a092-a7f081d660f9",
        "cursor": {
          "ref": "ff480d16-0ae7-4bb5-82b6-80cf46d9a60f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1dd9ac1d-4428-4c29-8972-f01e2bb05474"
        },
        "item": {
          "id": "933255cb-2535-467c-a092-a7f081d660f9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e63d8bc8-0e71-43e0-b997-1c8492d20966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c0acd3-6e7f-429d-b6e7-e59cfe7020d7",
        "cursor": {
          "ref": "bcf48ec7-215e-46fa-9cd1-f8fc8b31df82",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "da80eccc-014f-4621-a409-3751e3086b59"
        },
        "item": {
          "id": "92c0acd3-6e7f-429d-b6e7-e59cfe7020d7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "845285a8-fb6e-4bc7-9cfe-c3d0fcc1f57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc2d5ec-91ae-4c2e-ade4-083fb42cecea",
        "cursor": {
          "ref": "3b0a9198-e07b-474c-bf28-e54301ee5a5d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a0f15490-906d-4266-b96f-51b9028db1e7"
        },
        "item": {
          "id": "7cc2d5ec-91ae-4c2e-ade4-083fb42cecea",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b5ba4978-4a2d-4940-99f9-857ed7727014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b73cda-c677-4645-aca3-b8e040611335",
        "cursor": {
          "ref": "c6227f47-a042-4c3e-9e38-1558da44a747",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "654e1758-f3dd-45a2-8c6c-e09c00b1f5f6"
        },
        "item": {
          "id": "53b73cda-c677-4645-aca3-b8e040611335",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bb3666d9-3e2e-4fcf-8890-8a0d19cf764b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fe09d3-7851-49c9-a4ec-3b373d1bdcfb",
        "cursor": {
          "ref": "e50098d0-b5a7-4c07-84a3-cf741c257094",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0a73a2be-8613-4999-a2a8-7e93e88b33bf"
        },
        "item": {
          "id": "05fe09d3-7851-49c9-a4ec-3b373d1bdcfb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f4043225-5fc4-4658-b85a-bb8e22f183cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8ceb3a-22c6-43f7-ba3f-76ea56720f7c",
        "cursor": {
          "ref": "22d752a1-c5ec-44ab-8147-1def1046fedf",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f5ae93ea-c7bb-4847-ae5f-2380e0bf00a4"
        },
        "item": {
          "id": "3f8ceb3a-22c6-43f7-ba3f-76ea56720f7c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2f14c9e5-c87e-47ce-b966-fb33b605c620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab443cb0-a9ba-42fa-8401-146c97ab4bfe",
        "cursor": {
          "ref": "9de35b74-82c7-4df1-a312-cbab9f5b162f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b6354e0-a6e1-4046-9983-ae8f25ce0352"
        },
        "item": {
          "id": "ab443cb0-a9ba-42fa-8401-146c97ab4bfe",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6a6316a5-b49b-4c82-a9f7-862a14f16f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a9c234-9621-45da-bfd5-93553fe04441",
        "cursor": {
          "ref": "e770a783-d785-4e11-9016-8f0e1f83b3fc",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9058577b-a44d-4f2f-9675-0206a78d4f92"
        },
        "item": {
          "id": "02a9c234-9621-45da-bfd5-93553fe04441",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "308c8b5b-c5eb-4e4a-ba68-a0829a198b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138649a4-d8de-47c7-8fcb-9831db4e97c9",
        "cursor": {
          "ref": "958e38a9-c711-4b46-86be-ab8320000904",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e27ba412-0d0d-48c3-864a-a9c4c88ed5a5"
        },
        "item": {
          "id": "138649a4-d8de-47c7-8fcb-9831db4e97c9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "829ab550-7cb5-40fa-98f7-bb3b48d32b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410986d9-360d-456c-a786-da2ddee5c769",
        "cursor": {
          "ref": "285186c1-a706-4bab-b47e-6af58a30610e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b125d0cf-1e87-4c78-b507-d8bc66ad47e3"
        },
        "item": {
          "id": "410986d9-360d-456c-a786-da2ddee5c769",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b9b0ea25-ccf3-4dce-9430-0f7623a0fb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8443cde1-d799-41a5-af95-b770823c2012",
        "cursor": {
          "ref": "5337b3f5-3cd2-4df6-8707-bafc1353f31b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eed17290-57b1-4eb7-bbe6-f3fceab5a33a"
        },
        "item": {
          "id": "8443cde1-d799-41a5-af95-b770823c2012",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "059b574d-df86-474a-8de2-8c0d17898c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7707ed4-8be1-4693-a6dd-856907925615",
        "cursor": {
          "ref": "47344e99-8b58-4d42-b92e-b34aae64043e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a87773f9-33e4-4d25-a6d5-dc5222ef1ae8"
        },
        "item": {
          "id": "a7707ed4-8be1-4693-a6dd-856907925615",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e4e09a2c-ef10-4388-b1f9-1365c5717903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30570f2c-912d-4410-8307-79b7f24d7930",
        "cursor": {
          "ref": "3b4d87e0-091f-4e25-bb99-c59b36ee309e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d4c813d3-3131-4a50-8e38-9e4de162518a"
        },
        "item": {
          "id": "30570f2c-912d-4410-8307-79b7f24d7930",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0a5d4f72-306c-4cf9-8e94-ef9342ea6693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d660ff2-5416-4616-a279-41581b527f7f",
        "cursor": {
          "ref": "fb59cf84-3e58-430d-ba46-a58b07d70add",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b22f1a9b-d4e6-4c8a-ba6f-c91e216a1fbe"
        },
        "item": {
          "id": "3d660ff2-5416-4616-a279-41581b527f7f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ef2370ab-74e1-42da-aa3a-a39954e68c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a8f8ac-aa4d-4728-adda-9588d65bf5f2",
        "cursor": {
          "ref": "94fa2876-1faf-4362-b952-9222c4f718d0",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4c59b8ec-0e95-47a0-af3b-7ce72bee8afa"
        },
        "item": {
          "id": "66a8f8ac-aa4d-4728-adda-9588d65bf5f2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4ff4add8-1c3c-4bfa-bc0d-535a91910429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e953001-728d-4de8-85b7-4de7030035f9",
        "cursor": {
          "ref": "49290b44-92c9-4b3f-9966-0d3c2f8df412",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fcaa98d8-8efe-4b2c-97aa-7d97f541c79e"
        },
        "item": {
          "id": "3e953001-728d-4de8-85b7-4de7030035f9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "290994bf-b0a0-4d6e-8811-5210d00a6cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a96b69-702e-4352-9b26-860219cc1134",
        "cursor": {
          "ref": "00ec2052-6883-455a-9430-fa6067a0a73f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d782c7c7-36ab-4a71-9c48-c870d2706091"
        },
        "item": {
          "id": "31a96b69-702e-4352-9b26-860219cc1134",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0e4823fa-a887-47d7-b2f1-bd32cad811b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73e27b6-2298-4313-b3da-0c461c80b864",
        "cursor": {
          "ref": "fb60aeb6-174a-43de-88fa-fb2c4257a768",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f569b38c-949f-437a-b749-dddb02449ec4"
        },
        "item": {
          "id": "d73e27b6-2298-4313-b3da-0c461c80b864",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2cc13b65-298c-4447-ad90-c440c719354d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de61310-f861-49c7-8cb0-6daaecc6e649",
        "cursor": {
          "ref": "d4a9910c-f091-4ace-8fc3-e079ca899b5a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b5d4a629-c026-49e6-9b1a-e1d66b06f826"
        },
        "item": {
          "id": "4de61310-f861-49c7-8cb0-6daaecc6e649",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "aded2387-8e8c-4c02-87b9-7b9d895f6e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bf8619-4f50-429e-a610-fe2a40e9980f",
        "cursor": {
          "ref": "d76c36f7-ebdf-4ef3-97eb-d1cdcd268fd8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0c851093-c328-4bf3-a4c0-e452baebfa09"
        },
        "item": {
          "id": "71bf8619-4f50-429e-a610-fe2a40e9980f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ee57f20c-90a9-4857-8cee-1d7792d94f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caa7b26-850f-4a3b-b618-7af232d11e97",
        "cursor": {
          "ref": "b2f0dea0-8343-4c27-a2d3-d36f87f59417",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "74bafe7e-96e5-4ac7-8471-8318158a7427"
        },
        "item": {
          "id": "1caa7b26-850f-4a3b-b618-7af232d11e97",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "02db4a0d-205c-4343-b050-44786a2ca3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010baa03-717b-4a4d-abd0-05164f9c7802",
        "cursor": {
          "ref": "d34aaa48-8117-4d11-83e7-576d2c11c637",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d8c480d5-1bc9-4f4a-9856-857ee75f6f0b"
        },
        "item": {
          "id": "010baa03-717b-4a4d-abd0-05164f9c7802",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "93b6bdd6-e502-44a1-b9d6-2658be789b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae49aa1-34c8-485e-a9d0-b2809733ba8d",
        "cursor": {
          "ref": "9c2e9ebe-363b-4e66-b973-be833c52193c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c130eb48-7560-4e8d-963a-ae475759ab58"
        },
        "item": {
          "id": "bae49aa1-34c8-485e-a9d0-b2809733ba8d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cc97818b-c156-4d1f-a91c-f7db8afc71bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc3462b-8d99-47a5-8076-0c657baf3616",
        "cursor": {
          "ref": "9adfbfb7-c29c-43a7-b6dc-8f145c707ef2",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "392c4666-0e1c-46a1-b943-2a547e127378"
        },
        "item": {
          "id": "2fc3462b-8d99-47a5-8076-0c657baf3616",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5831b9fa-2f75-440a-981d-1d2d130df758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a673bd-41a0-409c-abbc-4fd8a92e7aeb",
        "cursor": {
          "ref": "ad0538f5-c326-478a-813c-d10677e01254",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d2cf4390-d407-4dc5-a14e-c0e922d825b3"
        },
        "item": {
          "id": "b5a673bd-41a0-409c-abbc-4fd8a92e7aeb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "09baa0c1-ea41-486a-be62-417744bd1c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa552d5-5d9b-469d-836c-72b96f304d5e",
        "cursor": {
          "ref": "87d13e7d-0bfe-4d47-b233-ee8814060177",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b7bf2d4a-51b8-4c63-a384-a3f0962d095b"
        },
        "item": {
          "id": "7aa552d5-5d9b-469d-836c-72b96f304d5e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d2011e73-a099-4c10-83fa-10e91e0fdada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b759f499-7e9d-4b47-8666-48acfc301c94",
        "cursor": {
          "ref": "a4b3df2d-db59-4043-b28a-89afaa935c5f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5e10b720-b72e-41f1-a399-afe78b107128"
        },
        "item": {
          "id": "b759f499-7e9d-4b47-8666-48acfc301c94",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c899a79d-994e-46cf-b0b1-77cf6a0aea3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67e0848-f737-45aa-a829-8798f721c8bf",
        "cursor": {
          "ref": "6328061c-1178-4dff-bc0f-e9b2be455b8e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b38f8a49-4eac-412c-bf29-a6d01208c8a4"
        },
        "item": {
          "id": "d67e0848-f737-45aa-a829-8798f721c8bf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a9f172f2-c8d6-4b47-84e9-c6f5648c6163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35576d73-7d67-4d13-88f9-4293e5c514a6",
        "cursor": {
          "ref": "25bb72d9-f83a-4484-91b3-352a7631006e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c78f18f2-f6c1-490f-b423-0def16678d85"
        },
        "item": {
          "id": "35576d73-7d67-4d13-88f9-4293e5c514a6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a953b79e-af24-472c-8e0b-374380864997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76acf30c-ac8a-4f5d-91f0-6e9c721b751d",
        "cursor": {
          "ref": "8f6b2d1f-cddc-46cb-92d8-df1120378fc9",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ee685371-301d-4b19-b691-53a184319acf"
        },
        "item": {
          "id": "76acf30c-ac8a-4f5d-91f0-6e9c721b751d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "69b15de5-0a14-4f6d-9fab-3bb84377dd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28093e2-9da5-4edc-b1d4-97b2503ae055",
        "cursor": {
          "ref": "80f4950b-bc92-456c-8ced-43e77115618b",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "53ae532d-1949-4fdc-a6d9-ed9851d2a5e3"
        },
        "item": {
          "id": "f28093e2-9da5-4edc-b1d4-97b2503ae055",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f8f63c9a-356f-474d-b68c-58d54b785807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a27d432-580a-4836-b372-d8097838b39a",
        "cursor": {
          "ref": "1e6f7a38-cd75-4a95-ad2c-ad0ffb2cb61f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7e1c8fc9-50b6-4bff-8640-0ff8c95cca5c"
        },
        "item": {
          "id": "8a27d432-580a-4836-b372-d8097838b39a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fa724206-f55f-4967-8fbc-960c315afb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac77051-f08f-4b4b-86f5-5a1b8785ebd6",
        "cursor": {
          "ref": "bf18999f-ead4-4115-8929-60d4e01217b1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bb37f5da-e17d-4f91-ba69-c2b06a32397d"
        },
        "item": {
          "id": "dac77051-f08f-4b4b-86f5-5a1b8785ebd6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7c3596f8-42b8-47d7-9618-0607773aac1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3e2a61-c808-47d2-8f00-538eb0663a3a",
        "cursor": {
          "ref": "fd2a59b9-626e-45f5-bfbe-86c6a919ee79",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "362ac463-f5e1-425f-85df-cd0cb0f457e6"
        },
        "item": {
          "id": "eb3e2a61-c808-47d2-8f00-538eb0663a3a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6ba58306-c261-4dbd-b9bd-fd55f51b09f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fe3b86-404b-44b6-a52f-5a7608cf4677",
        "cursor": {
          "ref": "0779a9dc-44b5-41bb-92e5-ebe1414ac266",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d6faf0e9-88e1-44d1-908c-8b7437572e0b"
        },
        "item": {
          "id": "64fe3b86-404b-44b6-a52f-5a7608cf4677",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fbf52577-fb47-46a8-b7fc-9b3d7a8e3276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff90385a-267e-408f-bcdd-75afe954276e",
        "cursor": {
          "ref": "0f0bbf44-02f0-475d-8a2b-9703ff6575d6",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9e33958b-ebd2-4ab3-81fa-d65eaade5704"
        },
        "item": {
          "id": "ff90385a-267e-408f-bcdd-75afe954276e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "97ddb4e1-8469-4c1a-b8b6-c3df072f6a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15aefc8-5e4a-40ad-a72c-92e29339da46",
        "cursor": {
          "ref": "eb71f7ef-0850-46bc-b176-1c99dc24aeb6",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a374cb37-6ca9-4788-9276-aee06b13c3b4"
        },
        "item": {
          "id": "a15aefc8-5e4a-40ad-a72c-92e29339da46",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e4f4156d-10fd-483b-871a-d95db1d1ad4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4ef752-d2be-423c-a1d1-5f25ef9a0bdd",
        "cursor": {
          "ref": "f696478a-b92f-4606-9958-e855889c673e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b5a6f7be-9c31-4a03-af28-058477941419"
        },
        "item": {
          "id": "7c4ef752-d2be-423c-a1d1-5f25ef9a0bdd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8dc5e6cc-9e8e-4a18-a18f-3a742cb4c55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe261b92-1458-43cc-8f00-7deb3b6b2ba7",
        "cursor": {
          "ref": "c0ea8c57-2937-479f-95aa-5bf16361240c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "70279090-422b-45df-99b1-b4fc5481040f"
        },
        "item": {
          "id": "fe261b92-1458-43cc-8f00-7deb3b6b2ba7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9c95ce64-1d03-4d44-8bed-7af493888b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287753c5-8ac2-4c2f-9129-b35e1ab5291d",
        "cursor": {
          "ref": "8e30a5b5-c91b-410d-bf4d-88d78a1016c9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3360d0ee-69d2-4ecc-9673-947748ef5ce7"
        },
        "item": {
          "id": "287753c5-8ac2-4c2f-9129-b35e1ab5291d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7eb6b164-e0d0-4e4f-bf8d-f6ba6d835a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10a21b7-e70f-48dd-a56c-4cd314f84b83",
        "cursor": {
          "ref": "cec6b69d-b097-40b2-a37f-0ae4b1149d53",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "65f28a56-f246-446b-a070-d3a5bdc50342"
        },
        "item": {
          "id": "d10a21b7-e70f-48dd-a56c-4cd314f84b83",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9c689907-1cd3-49f4-8cc9-5b90e2f45552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3211fe-4f7d-4f5d-9e8e-234a6e537987",
        "cursor": {
          "ref": "b141d3ba-9b7c-4808-aa39-17bc16be77b9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "05ce0dba-f8b6-4b83-8445-5713f4f21d1d"
        },
        "item": {
          "id": "1c3211fe-4f7d-4f5d-9e8e-234a6e537987",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1699632f-6bc0-4566-be25-13f2f6f1169c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46489f13-19eb-410f-98ca-385a8f1e7091",
        "cursor": {
          "ref": "21432c6c-fb13-4f7f-b0e9-598133d8b4ac",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c04aab84-ec3e-4360-bc07-c5514ad3bda5"
        },
        "item": {
          "id": "46489f13-19eb-410f-98ca-385a8f1e7091",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "61d758e9-8032-4342-92d9-7ce493411a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbe05b4-7154-4414-9314-4cc5e87c927e",
        "cursor": {
          "ref": "79d88f2f-4312-4a89-8298-98b1af28f761",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "666216b0-dba1-4401-b0cc-5c692892e71f"
        },
        "item": {
          "id": "dbbe05b4-7154-4414-9314-4cc5e87c927e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1b350a4c-c10b-4679-b269-bf7002a950b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb8e1b6-2b60-40e2-8e91-c2f4bb59283a",
        "cursor": {
          "ref": "7bca13ea-ef87-4595-ac0c-42985c55c502",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f8b23e00-e327-46dd-8b03-33f72f62f08f"
        },
        "item": {
          "id": "ceb8e1b6-2b60-40e2-8e91-c2f4bb59283a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "92e46f06-1014-4a0d-8871-17836f5340b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8c6e9a-5927-4761-ad06-b989e7410b62",
        "cursor": {
          "ref": "3a824d00-4719-4751-8b49-93282031cd31",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2f2210fd-d7b7-422b-a281-98f18432b519"
        },
        "item": {
          "id": "7c8c6e9a-5927-4761-ad06-b989e7410b62",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "40f896b8-da2b-4706-bf8a-ff452c5c582d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea64f217-86dd-45f6-9f48-c327298a5b59",
        "cursor": {
          "ref": "2aa9ac61-46a3-416a-b2e6-f043cb4492cf",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a465fa8f-263b-4b38-aa2e-b28052879965"
        },
        "item": {
          "id": "ea64f217-86dd-45f6-9f48-c327298a5b59",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8c3240f7-64ff-4884-91aa-8cccf820aa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1ca8dd-5799-4fc1-9e80-f702f05ecf11",
        "cursor": {
          "ref": "c72f6b3c-00ce-4a64-a452-84a0c675f8e1",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fae2c4f0-8d24-4df7-a312-c9389d4ee591"
        },
        "item": {
          "id": "ba1ca8dd-5799-4fc1-9e80-f702f05ecf11",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cba27b29-216a-452c-b0db-c23c046d63d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d7dc98-6bfe-4653-8375-62fd725b9945",
        "cursor": {
          "ref": "09938da4-afdf-4109-a36b-c3a5f418cae9",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0be5b240-cd3e-450b-a97c-2d618bec7fb4"
        },
        "item": {
          "id": "e0d7dc98-6bfe-4653-8375-62fd725b9945",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3f52d3fb-e689-4446-9c66-373998e67f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50018f1-30c0-44fd-b8c4-7d03a0281cf9",
        "cursor": {
          "ref": "a5476e02-8e2a-44a5-aafd-ece7d8f2862c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ab5e9bb4-2878-4421-8f7d-4367c68535d8"
        },
        "item": {
          "id": "e50018f1-30c0-44fd-b8c4-7d03a0281cf9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2dbe7caa-3c2a-4b80-aea3-8198d6d2f1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ab098d-9e97-4e27-ac39-b7e1df773e6b",
        "cursor": {
          "ref": "fb7cdb7e-5ad7-4cea-945e-4cac7ac38ece",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "231d384a-a475-473d-ab20-69b2f7abda68"
        },
        "item": {
          "id": "42ab098d-9e97-4e27-ac39-b7e1df773e6b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "52e4a8c5-1433-4e52-8156-9d43e434d382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6984a97c-eb44-4649-a20c-e60188d73708",
        "cursor": {
          "ref": "0dce7524-6c0a-4203-a61d-4556d206862b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "40d7ed46-613c-482f-b579-addef80128ad"
        },
        "item": {
          "id": "6984a97c-eb44-4649-a20c-e60188d73708",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "51ee9a52-af47-4e0c-9440-6bba4fdfed2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8302924-4b2c-4bb9-b272-af6da4812331",
        "cursor": {
          "ref": "25309ea5-2659-4027-a7e0-d26e8ecfc3c4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3b28ef6f-9a6b-4b62-a47a-b336c303d37f"
        },
        "item": {
          "id": "a8302924-4b2c-4bb9-b272-af6da4812331",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9addfbe2-e161-49cb-bcc0-d6f90e3a54ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3157dc-97d4-4224-ac9b-ecd3a66576a4",
        "cursor": {
          "ref": "a736f737-1dc9-4256-b007-34639791bfdf",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "66c64a77-bd48-4a74-b7f7-0a672e78bcd8"
        },
        "item": {
          "id": "0a3157dc-97d4-4224-ac9b-ecd3a66576a4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "196823d2-25ea-4a9c-9326-4bac343678d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7600a44e-fbfb-43a7-8c99-a5ca5d122fe2",
        "cursor": {
          "ref": "482bcd90-2cf8-4f15-9671-c1d679cae9b8",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "55e0c95b-af4f-406b-8f1a-3bfdf61c7c32"
        },
        "item": {
          "id": "7600a44e-fbfb-43a7-8c99-a5ca5d122fe2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e6937e6b-3cc8-4561-b297-0ba412f17a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60540212-9555-491b-8004-af61ff1e3d04",
        "cursor": {
          "ref": "d0b3c120-d211-4e81-a27b-268d189290cb",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ca3706fd-be29-4491-ae9c-55565ac15639"
        },
        "item": {
          "id": "60540212-9555-491b-8004-af61ff1e3d04",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7e378122-1c48-4948-adf3-e01171819a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a01071-646a-408f-84d0-37648aac3cfc",
        "cursor": {
          "ref": "59853549-aced-4c02-ba0d-0826c7c19b27",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "519d621f-03e0-4170-b882-33dace853350"
        },
        "item": {
          "id": "92a01071-646a-408f-84d0-37648aac3cfc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7d4623fa-5842-4f07-8d37-9b17d4aa3f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4d7b67-b8c5-49e4-b0f2-b3473e5d870c",
        "cursor": {
          "ref": "e95f6b94-cd3a-4743-af6b-8e324ddc92fe",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "010a690e-8e52-4155-a6fe-568adaa52f12"
        },
        "item": {
          "id": "5a4d7b67-b8c5-49e4-b0f2-b3473e5d870c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6ecd738e-4a16-496b-a7ef-e72b307602bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91b04e5-2316-4bdd-8087-320dbdffeba8",
        "cursor": {
          "ref": "8a10c0ca-ed6f-4f9f-b6a4-09d95a031b95",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "540e5400-83fb-44f6-ae34-7fd09d1bffa6"
        },
        "item": {
          "id": "b91b04e5-2316-4bdd-8087-320dbdffeba8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b76a3256-553f-4f02-b61a-fff7dfe358b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09720d7f-0b44-49d4-9d3c-d90111bc2d2e",
        "cursor": {
          "ref": "e3c0a9dc-23ec-403d-86e7-162336cab86d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a37ad0df-19fa-4789-acb3-df6d1cf7e009"
        },
        "item": {
          "id": "09720d7f-0b44-49d4-9d3c-d90111bc2d2e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "963cd303-46bf-4b81-a0d8-dcecd1f52971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab0c65b-3865-4971-8982-664a92c9d8ac",
        "cursor": {
          "ref": "2697ed4b-45b4-491e-b7c1-b7a551215c52",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "055100e1-36f0-4a24-a4d7-1a6e3e45ace8"
        },
        "item": {
          "id": "8ab0c65b-3865-4971-8982-664a92c9d8ac",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "87c9ee9f-d29e-4d30-bda3-e3b221643eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c316cc2-8ade-441f-8844-252c1fadf466",
        "cursor": {
          "ref": "4758772e-5ccd-4e32-a99f-301a28b82a4c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "656af000-f387-4d87-ac06-e30dc9f13e63"
        },
        "item": {
          "id": "9c316cc2-8ade-441f-8844-252c1fadf466",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a9dae2d7-44ff-46d2-b2f0-1f6745f513bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59de024a-22d3-4569-8d5c-c391e2596cc6",
        "cursor": {
          "ref": "cbb5fc7a-990c-485a-a2a9-a645d9a8a456",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "96fa7a22-26e3-4dda-a37a-d0cdb35be2d0"
        },
        "item": {
          "id": "59de024a-22d3-4569-8d5c-c391e2596cc6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fe259b45-d1d5-41a7-a28f-49c83bc50826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aee394-ca0a-47ef-b69e-0f6ee2b0f0ab",
        "cursor": {
          "ref": "51346f14-cf23-40d2-86b3-c7decf0c4c58",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6f00fa9a-0c74-4217-a40a-81644cc18d34"
        },
        "item": {
          "id": "28aee394-ca0a-47ef-b69e-0f6ee2b0f0ab",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4c472377-1ad9-4813-b629-51c972c91ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d4b93a-749f-4a4a-8b66-5996decbc983",
        "cursor": {
          "ref": "08f8c3d2-0056-4949-b388-543478fd896f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4013a95f-b1c2-4089-900c-a495d8355f4b"
        },
        "item": {
          "id": "c4d4b93a-749f-4a4a-8b66-5996decbc983",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e6db504d-8b7a-48ac-837c-efd04025f2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187ea699-1cea-453f-9a31-a34286c35e62",
        "cursor": {
          "ref": "c14f9728-6da0-4c84-8f63-a3472d3542e4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6031179b-84b9-4074-8d6c-ac9b373b3184"
        },
        "item": {
          "id": "187ea699-1cea-453f-9a31-a34286c35e62",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "542c13c7-9e59-4f0b-8eef-ec59af9660e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250caec6-5255-4514-bfc6-9a96edc023a6",
        "cursor": {
          "ref": "155d0ba9-f339-4b4d-8a48-81c49f7d1be1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "282db5a9-f1c1-4c15-904d-41b3907365ec"
        },
        "item": {
          "id": "250caec6-5255-4514-bfc6-9a96edc023a6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4dca5fd6-1d9f-4299-b211-dd21a8e12fdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bac5f7-f840-4aa9-b749-3a2548fbdf16",
        "cursor": {
          "ref": "01997739-74a5-4a7d-a95c-13fc487e28f3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "93aef60c-63a8-492f-82b1-15cadfae4270"
        },
        "item": {
          "id": "76bac5f7-f840-4aa9-b749-3a2548fbdf16",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "798c9a6e-9730-4de7-b7b0-7cf8ac1f5fd3",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe45fd1-51be-4b4a-b0fa-87c5045df4f1",
        "cursor": {
          "ref": "50303ae3-bcb3-4da4-b805-b4ae3d546be5",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "81c8eb5c-60c2-4983-86ec-d9fe5749cbfa"
        },
        "item": {
          "id": "bfe45fd1-51be-4b4a-b0fa-87c5045df4f1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "18d497ad-f286-4a89-8747-21a7bc028fbf",
          "status": "OK",
          "code": 200,
          "responseTime": 2367,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9756ef3-ebbf-4395-a1f1-f28cb1132c7b",
        "cursor": {
          "ref": "86aef55c-948a-4274-a790-80a4d0470a34",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "72108c4b-0890-42f1-8ca1-228ee090cba9"
        },
        "item": {
          "id": "a9756ef3-ebbf-4395-a1f1-f28cb1132c7b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fc09d522-5a20-420f-aef3-017431eee83e",
          "status": "OK",
          "code": 200,
          "responseTime": 2475,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b115f8d5-5a9a-43f0-be89-f6cf5bec50df",
        "cursor": {
          "ref": "6eaf81b6-8914-4e9f-893c-5327408f2d53",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "43eae264-be05-42ee-bf2c-5da50f203f37"
        },
        "item": {
          "id": "b115f8d5-5a9a-43f0-be89-f6cf5bec50df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0ab8a544-30ce-458d-b9e2-94c4f3712d47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b115f8d5-5a9a-43f0-be89-f6cf5bec50df",
        "cursor": {
          "ref": "6eaf81b6-8914-4e9f-893c-5327408f2d53",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "43eae264-be05-42ee-bf2c-5da50f203f37"
        },
        "item": {
          "id": "b115f8d5-5a9a-43f0-be89-f6cf5bec50df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0ab8a544-30ce-458d-b9e2-94c4f3712d47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca77fa19-567f-4983-9926-2088ec9d568f",
        "cursor": {
          "ref": "beb91a3c-4ade-43f8-bc7b-c4d9012faaae",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "52265ed7-a860-4108-b54d-fc5e95403beb"
        },
        "item": {
          "id": "ca77fa19-567f-4983-9926-2088ec9d568f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "679d574d-2506-44f2-b755-24ec83d81cfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dba2c97-8abb-4a58-9a17-27a09e186c78",
        "cursor": {
          "ref": "338a14bf-9003-4bf2-8bb8-80d4a0997509",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "28df908e-d4bb-42b6-931c-33686b0a5e9a"
        },
        "item": {
          "id": "7dba2c97-8abb-4a58-9a17-27a09e186c78",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "489bc77f-57df-4bef-bbef-ec4c83b2e728",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}